{
  "type": "Program",
  "start": 0,
  "end": 946,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 319,
      "end": 325,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 323,
          "end": 324,
          "id": {
            "type": "Identifier",
            "start": 323,
            "end": 324,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 337,
      "end": 346,
      "expression": {
        "type": "AssignmentExpression",
        "start": 337,
        "end": 345,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 337,
          "end": 338,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 341,
          "end": 345,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 347,
      "end": 358,
      "expression": {
        "type": "AssignmentExpression",
        "start": 347,
        "end": 357,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 347,
          "end": 348,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 353,
          "end": 357,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 359,
      "end": 454,
      "test": {
        "type": "BinaryExpression",
        "start": 363,
        "end": 370,
        "left": {
          "type": "Identifier",
          "start": 363,
          "end": 364,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 369,
          "end": 370,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 372,
        "end": 454,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 376,
            "end": 452,
            "argument": {
              "type": "NewExpression",
              "start": 382,
              "end": 451,
              "callee": {
                "type": "Identifier",
                "start": 386,
                "end": 398,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 399,
                  "end": 450,
                  "left": {
                    "type": "Literal",
                    "start": 399,
                    "end": 444,
                    "value": "#1: x = true; x <<= true; x === 2. Actual: ",
                    "raw": "'#1: x = true; x <<= true; x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 447,
                    "end": 450,
                    "expression": {
                      "type": "Identifier",
                      "start": 448,
                      "end": 449,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 466,
      "end": 488,
      "expression": {
        "type": "AssignmentExpression",
        "start": 466,
        "end": 487,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 466,
          "end": 467,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 470,
          "end": 487,
          "callee": {
            "type": "Identifier",
            "start": 474,
            "end": 481,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 482,
              "end": 486,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 489,
      "end": 500,
      "expression": {
        "type": "AssignmentExpression",
        "start": 489,
        "end": 499,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 489,
          "end": 490,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 495,
          "end": 499,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 501,
      "end": 609,
      "test": {
        "type": "BinaryExpression",
        "start": 505,
        "end": 512,
        "left": {
          "type": "Identifier",
          "start": 505,
          "end": 506,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 511,
          "end": 512,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 514,
        "end": 609,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 518,
            "end": 607,
            "argument": {
              "type": "NewExpression",
              "start": 524,
              "end": 606,
              "callee": {
                "type": "Identifier",
                "start": 528,
                "end": 540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 541,
                  "end": 605,
                  "left": {
                    "type": "Literal",
                    "start": 541,
                    "end": 599,
                    "value": "#2: x = new Boolean(true); x <<= true; x === 2. Actual: ",
                    "raw": "'#2: x = new Boolean(true); x <<= true; x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 602,
                    "end": 605,
                    "expression": {
                      "type": "Identifier",
                      "start": 603,
                      "end": 604,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 621,
      "end": 630,
      "expression": {
        "type": "AssignmentExpression",
        "start": 621,
        "end": 629,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 621,
          "end": 622,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 625,
          "end": 629,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 631,
      "end": 655,
      "expression": {
        "type": "AssignmentExpression",
        "start": 631,
        "end": 654,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 631,
          "end": 632,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 637,
          "end": 654,
          "callee": {
            "type": "Identifier",
            "start": 641,
            "end": 648,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 649,
              "end": 653,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 656,
      "end": 764,
      "test": {
        "type": "BinaryExpression",
        "start": 660,
        "end": 667,
        "left": {
          "type": "Identifier",
          "start": 660,
          "end": 661,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 666,
          "end": 667,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 669,
        "end": 764,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 673,
            "end": 762,
            "argument": {
              "type": "NewExpression",
              "start": 679,
              "end": 761,
              "callee": {
                "type": "Identifier",
                "start": 683,
                "end": 695,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 696,
                  "end": 760,
                  "left": {
                    "type": "Literal",
                    "start": 696,
                    "end": 754,
                    "value": "#3: x = true; x <<= new Boolean(true); x === 2. Actual: ",
                    "raw": "'#3: x = true; x <<= new Boolean(true); x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 757,
                    "end": 760,
                    "expression": {
                      "type": "Identifier",
                      "start": 758,
                      "end": 759,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 776,
      "end": 798,
      "expression": {
        "type": "AssignmentExpression",
        "start": 776,
        "end": 797,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 776,
          "end": 777,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 780,
          "end": 797,
          "callee": {
            "type": "Identifier",
            "start": 784,
            "end": 791,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 792,
              "end": 796,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 799,
      "end": 823,
      "expression": {
        "type": "AssignmentExpression",
        "start": 799,
        "end": 822,
        "operator": "<<=",
        "left": {
          "type": "Identifier",
          "start": 799,
          "end": 800,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 805,
          "end": 822,
          "callee": {
            "type": "Identifier",
            "start": 809,
            "end": 816,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 817,
              "end": 821,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 824,
      "end": 945,
      "test": {
        "type": "BinaryExpression",
        "start": 828,
        "end": 835,
        "left": {
          "type": "Identifier",
          "start": 828,
          "end": 829,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 834,
          "end": 835,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 837,
        "end": 945,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 841,
            "end": 943,
            "argument": {
              "type": "NewExpression",
              "start": 847,
              "end": 942,
              "callee": {
                "type": "Identifier",
                "start": 851,
                "end": 863,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 864,
                  "end": 941,
                  "left": {
                    "type": "Literal",
                    "start": 864,
                    "end": 935,
                    "value": "#4: x = new Boolean(true); x <<= new Boolean(true); x === 2. Actual: ",
                    "raw": "'#4: x = new Boolean(true); x <<= new Boolean(true); x === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 938,
                    "end": 941,
                    "expression": {
                      "type": "Identifier",
                      "start": 939,
                      "end": 940,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}