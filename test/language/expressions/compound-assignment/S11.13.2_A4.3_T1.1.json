{
  "type": "Program",
  "start": 0,
  "end": 936,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 317,
      "end": 323,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 321,
          "end": 322,
          "id": {
            "type": "Identifier",
            "start": 321,
            "end": 322,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 335,
      "end": 344,
      "expression": {
        "type": "AssignmentExpression",
        "start": 335,
        "end": 343,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 335,
          "end": 336,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 339,
          "end": 343,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 345,
      "end": 355,
      "expression": {
        "type": "AssignmentExpression",
        "start": 345,
        "end": 354,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 345,
          "end": 346,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 350,
          "end": 354,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 356,
      "end": 450,
      "test": {
        "type": "BinaryExpression",
        "start": 360,
        "end": 367,
        "left": {
          "type": "Identifier",
          "start": 360,
          "end": 361,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 366,
          "end": 367,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 369,
        "end": 450,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 373,
            "end": 448,
            "argument": {
              "type": "NewExpression",
              "start": 379,
              "end": 447,
              "callee": {
                "type": "Identifier",
                "start": 383,
                "end": 395,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 396,
                  "end": 446,
                  "left": {
                    "type": "Literal",
                    "start": 396,
                    "end": 440,
                    "value": "#1: x = true; x %= true; x === 0. Actual: ",
                    "raw": "'#1: x = true; x %= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 443,
                    "end": 446,
                    "expression": {
                      "type": "Identifier",
                      "start": 444,
                      "end": 445,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 462,
      "end": 484,
      "expression": {
        "type": "AssignmentExpression",
        "start": 462,
        "end": 483,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 462,
          "end": 463,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 466,
          "end": 483,
          "callee": {
            "type": "Identifier",
            "start": 470,
            "end": 477,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 478,
              "end": 482,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 485,
      "end": 495,
      "expression": {
        "type": "AssignmentExpression",
        "start": 485,
        "end": 494,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 485,
          "end": 486,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 490,
          "end": 494,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 496,
      "end": 603,
      "test": {
        "type": "BinaryExpression",
        "start": 500,
        "end": 507,
        "left": {
          "type": "Identifier",
          "start": 500,
          "end": 501,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 506,
          "end": 507,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 509,
        "end": 603,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 513,
            "end": 601,
            "argument": {
              "type": "NewExpression",
              "start": 519,
              "end": 600,
              "callee": {
                "type": "Identifier",
                "start": 523,
                "end": 535,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 536,
                  "end": 599,
                  "left": {
                    "type": "Literal",
                    "start": 536,
                    "end": 593,
                    "value": "#2: x = new Boolean(true); x %= true; x === 0. Actual: ",
                    "raw": "'#2: x = new Boolean(true); x %= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 596,
                    "end": 599,
                    "expression": {
                      "type": "Identifier",
                      "start": 597,
                      "end": 598,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 615,
      "end": 624,
      "expression": {
        "type": "AssignmentExpression",
        "start": 615,
        "end": 623,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 615,
          "end": 616,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 619,
          "end": 623,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 625,
      "end": 648,
      "expression": {
        "type": "AssignmentExpression",
        "start": 625,
        "end": 647,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 625,
          "end": 626,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 630,
          "end": 647,
          "callee": {
            "type": "Identifier",
            "start": 634,
            "end": 641,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 642,
              "end": 646,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 649,
      "end": 756,
      "test": {
        "type": "BinaryExpression",
        "start": 653,
        "end": 660,
        "left": {
          "type": "Identifier",
          "start": 653,
          "end": 654,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 659,
          "end": 660,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 662,
        "end": 756,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 666,
            "end": 754,
            "argument": {
              "type": "NewExpression",
              "start": 672,
              "end": 753,
              "callee": {
                "type": "Identifier",
                "start": 676,
                "end": 688,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 689,
                  "end": 752,
                  "left": {
                    "type": "Literal",
                    "start": 689,
                    "end": 746,
                    "value": "#3: x = true; x %= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#3: x = true; x %= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 749,
                    "end": 752,
                    "expression": {
                      "type": "Identifier",
                      "start": 750,
                      "end": 751,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 768,
      "end": 790,
      "expression": {
        "type": "AssignmentExpression",
        "start": 768,
        "end": 789,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 768,
          "end": 769,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 772,
          "end": 789,
          "callee": {
            "type": "Identifier",
            "start": 776,
            "end": 783,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 784,
              "end": 788,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 791,
      "end": 814,
      "expression": {
        "type": "AssignmentExpression",
        "start": 791,
        "end": 813,
        "operator": "%=",
        "left": {
          "type": "Identifier",
          "start": 791,
          "end": 792,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 796,
          "end": 813,
          "callee": {
            "type": "Identifier",
            "start": 800,
            "end": 807,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 808,
              "end": 812,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 815,
      "end": 935,
      "test": {
        "type": "BinaryExpression",
        "start": 819,
        "end": 826,
        "left": {
          "type": "Identifier",
          "start": 819,
          "end": 820,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 825,
          "end": 826,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 828,
        "end": 935,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 832,
            "end": 933,
            "argument": {
              "type": "NewExpression",
              "start": 838,
              "end": 932,
              "callee": {
                "type": "Identifier",
                "start": 842,
                "end": 854,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 855,
                  "end": 931,
                  "left": {
                    "type": "Literal",
                    "start": 855,
                    "end": 925,
                    "value": "#4: x = new Boolean(true); x %= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = new Boolean(true); x %= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 928,
                    "end": 931,
                    "expression": {
                      "type": "Identifier",
                      "start": 929,
                      "end": 930,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}