{
  "type": "Program",
  "start": 0,
  "end": 1566,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 375,
      "end": 381,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 379,
          "end": 380,
          "id": {
            "type": "Identifier",
            "start": 379,
            "end": 380,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 393,
      "end": 402,
      "expression": {
        "type": "AssignmentExpression",
        "start": 393,
        "end": 401,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 393,
          "end": 394,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 397,
          "end": 401,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 403,
      "end": 411,
      "expression": {
        "type": "AssignmentExpression",
        "start": 403,
        "end": 410,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 403,
          "end": 404,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 409,
          "end": 410,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 412,
      "end": 504,
      "test": {
        "type": "BinaryExpression",
        "start": 416,
        "end": 423,
        "left": {
          "type": "Identifier",
          "start": 416,
          "end": 417,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 422,
          "end": 423,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 425,
        "end": 504,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 429,
            "end": 502,
            "argument": {
              "type": "NewExpression",
              "start": 435,
              "end": 501,
              "callee": {
                "type": "Identifier",
                "start": 439,
                "end": 451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 452,
                  "end": 500,
                  "left": {
                    "type": "Literal",
                    "start": 452,
                    "end": 494,
                    "value": "#1: x = true; x >>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>= 1; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 497,
                    "end": 500,
                    "expression": {
                      "type": "Identifier",
                      "start": 498,
                      "end": 499,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 516,
      "end": 522,
      "expression": {
        "type": "AssignmentExpression",
        "start": 516,
        "end": 521,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 516,
          "end": 517,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 520,
          "end": 521,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 523,
      "end": 534,
      "expression": {
        "type": "AssignmentExpression",
        "start": 523,
        "end": 533,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 523,
          "end": 524,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 529,
          "end": 533,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 535,
      "end": 627,
      "test": {
        "type": "BinaryExpression",
        "start": 539,
        "end": 546,
        "left": {
          "type": "Identifier",
          "start": 539,
          "end": 540,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 545,
          "end": 546,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 548,
        "end": 627,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 552,
            "end": 625,
            "argument": {
              "type": "NewExpression",
              "start": 558,
              "end": 624,
              "callee": {
                "type": "Identifier",
                "start": 562,
                "end": 574,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 575,
                  "end": 623,
                  "left": {
                    "type": "Literal",
                    "start": 575,
                    "end": 617,
                    "value": "#2: x = 1; x >>= true; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x >>= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 620,
                    "end": 623,
                    "expression": {
                      "type": "Identifier",
                      "start": 621,
                      "end": 622,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 639,
      "end": 661,
      "expression": {
        "type": "AssignmentExpression",
        "start": 639,
        "end": 660,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 639,
          "end": 640,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 643,
          "end": 660,
          "callee": {
            "type": "Identifier",
            "start": 647,
            "end": 654,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 655,
              "end": 659,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 662,
      "end": 670,
      "expression": {
        "type": "AssignmentExpression",
        "start": 662,
        "end": 669,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 662,
          "end": 663,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 668,
          "end": 669,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 671,
      "end": 776,
      "test": {
        "type": "BinaryExpression",
        "start": 675,
        "end": 682,
        "left": {
          "type": "Identifier",
          "start": 675,
          "end": 676,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 681,
          "end": 682,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 684,
        "end": 776,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 688,
            "end": 774,
            "argument": {
              "type": "NewExpression",
              "start": 694,
              "end": 773,
              "callee": {
                "type": "Identifier",
                "start": 698,
                "end": 710,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 711,
                  "end": 772,
                  "left": {
                    "type": "Literal",
                    "start": 711,
                    "end": 766,
                    "value": "#3: x = new Boolean(true); x >>= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x >>= 1; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 769,
                    "end": 772,
                    "expression": {
                      "type": "Identifier",
                      "start": 770,
                      "end": 771,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 788,
      "end": 794,
      "expression": {
        "type": "AssignmentExpression",
        "start": 788,
        "end": 793,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 788,
          "end": 789,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 792,
          "end": 793,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 795,
      "end": 819,
      "expression": {
        "type": "AssignmentExpression",
        "start": 795,
        "end": 818,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 795,
          "end": 796,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 801,
          "end": 818,
          "callee": {
            "type": "Identifier",
            "start": 805,
            "end": 812,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 813,
              "end": 817,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 820,
      "end": 925,
      "test": {
        "type": "BinaryExpression",
        "start": 824,
        "end": 831,
        "left": {
          "type": "Identifier",
          "start": 824,
          "end": 825,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 830,
          "end": 831,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 833,
        "end": 925,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 837,
            "end": 923,
            "argument": {
              "type": "NewExpression",
              "start": 843,
              "end": 922,
              "callee": {
                "type": "Identifier",
                "start": 847,
                "end": 859,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 860,
                  "end": 921,
                  "left": {
                    "type": "Literal",
                    "start": 860,
                    "end": 915,
                    "value": "#4: x = 1; x >>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x >>= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 918,
                    "end": 921,
                    "expression": {
                      "type": "Identifier",
                      "start": 919,
                      "end": 920,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 937,
      "end": 946,
      "expression": {
        "type": "AssignmentExpression",
        "start": 937,
        "end": 945,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 937,
          "end": 938,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 941,
          "end": 945,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 947,
      "end": 967,
      "expression": {
        "type": "AssignmentExpression",
        "start": 947,
        "end": 966,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 947,
          "end": 948,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 953,
          "end": 966,
          "callee": {
            "type": "Identifier",
            "start": 957,
            "end": 963,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 964,
              "end": 965,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 968,
      "end": 1072,
      "test": {
        "type": "BinaryExpression",
        "start": 972,
        "end": 979,
        "left": {
          "type": "Identifier",
          "start": 972,
          "end": 973,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 978,
          "end": 979,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 981,
        "end": 1072,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 985,
            "end": 1070,
            "argument": {
              "type": "NewExpression",
              "start": 991,
              "end": 1069,
              "callee": {
                "type": "Identifier",
                "start": 995,
                "end": 1007,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1008,
                  "end": 1068,
                  "left": {
                    "type": "Literal",
                    "start": 1008,
                    "end": 1062,
                    "value": "#5: x = true; x >>= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = true; x >>= new Number(1); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1065,
                    "end": 1068,
                    "expression": {
                      "type": "Identifier",
                      "start": 1066,
                      "end": 1067,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1084,
      "end": 1102,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1084,
        "end": 1101,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1084,
          "end": 1085,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1088,
          "end": 1101,
          "callee": {
            "type": "Identifier",
            "start": 1092,
            "end": 1098,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1099,
              "end": 1100,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1103,
      "end": 1114,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1103,
        "end": 1113,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1103,
          "end": 1104,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1109,
          "end": 1113,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1115,
      "end": 1219,
      "test": {
        "type": "BinaryExpression",
        "start": 1119,
        "end": 1126,
        "left": {
          "type": "Identifier",
          "start": 1119,
          "end": 1120,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1125,
          "end": 1126,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1128,
        "end": 1219,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1132,
            "end": 1217,
            "argument": {
              "type": "NewExpression",
              "start": 1138,
              "end": 1216,
              "callee": {
                "type": "Identifier",
                "start": 1142,
                "end": 1154,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1155,
                  "end": 1215,
                  "left": {
                    "type": "Literal",
                    "start": 1155,
                    "end": 1209,
                    "value": "#6: x = new Number(1); x >>= true; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x >>= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1212,
                    "end": 1215,
                    "expression": {
                      "type": "Identifier",
                      "start": 1213,
                      "end": 1214,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1231,
      "end": 1253,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1231,
        "end": 1252,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1231,
          "end": 1232,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1235,
          "end": 1252,
          "callee": {
            "type": "Identifier",
            "start": 1239,
            "end": 1246,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1247,
              "end": 1251,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1254,
      "end": 1274,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1254,
        "end": 1273,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1254,
          "end": 1255,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1260,
          "end": 1273,
          "callee": {
            "type": "Identifier",
            "start": 1264,
            "end": 1270,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1271,
              "end": 1272,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1275,
      "end": 1392,
      "test": {
        "type": "BinaryExpression",
        "start": 1279,
        "end": 1286,
        "left": {
          "type": "Identifier",
          "start": 1279,
          "end": 1280,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1285,
          "end": 1286,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1288,
        "end": 1392,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1292,
            "end": 1390,
            "argument": {
              "type": "NewExpression",
              "start": 1298,
              "end": 1389,
              "callee": {
                "type": "Identifier",
                "start": 1302,
                "end": 1314,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1315,
                  "end": 1388,
                  "left": {
                    "type": "Literal",
                    "start": 1315,
                    "end": 1382,
                    "value": "#7: x = new Boolean(true); x >>= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x >>= new Number(1); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1385,
                    "end": 1388,
                    "expression": {
                      "type": "Identifier",
                      "start": 1386,
                      "end": 1387,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1404,
      "end": 1422,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1404,
        "end": 1421,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1404,
          "end": 1405,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1408,
          "end": 1421,
          "callee": {
            "type": "Identifier",
            "start": 1412,
            "end": 1418,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1419,
              "end": 1420,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1423,
      "end": 1447,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1423,
        "end": 1446,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1423,
          "end": 1424,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1429,
          "end": 1446,
          "callee": {
            "type": "Identifier",
            "start": 1433,
            "end": 1440,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1441,
              "end": 1445,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1448,
      "end": 1565,
      "test": {
        "type": "BinaryExpression",
        "start": 1452,
        "end": 1459,
        "left": {
          "type": "Identifier",
          "start": 1452,
          "end": 1453,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1458,
          "end": 1459,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1461,
        "end": 1565,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1465,
            "end": 1563,
            "argument": {
              "type": "NewExpression",
              "start": 1471,
              "end": 1562,
              "callee": {
                "type": "Identifier",
                "start": 1475,
                "end": 1487,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1488,
                  "end": 1561,
                  "left": {
                    "type": "Literal",
                    "start": 1488,
                    "end": 1555,
                    "value": "#8: x = new Number(1); x >>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x >>= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1558,
                    "end": 1561,
                    "expression": {
                      "type": "Identifier",
                      "start": 1559,
                      "end": 1560,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}