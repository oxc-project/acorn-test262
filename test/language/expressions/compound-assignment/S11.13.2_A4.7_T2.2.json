{
  "type": "Program",
  "start": 0,
  "end": 1785,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 374,
      "end": 380,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 378,
          "end": 379,
          "id": {
            "type": "Identifier",
            "start": 378,
            "end": 379,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 392,
      "end": 400,
      "expression": {
        "type": "AssignmentExpression",
        "start": 392,
        "end": 399,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 392,
          "end": 393,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 396,
          "end": 399,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 401,
      "end": 409,
      "expression": {
        "type": "AssignmentExpression",
        "start": 401,
        "end": 408,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 401,
          "end": 402,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 407,
          "end": 408,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 410,
      "end": 501,
      "test": {
        "type": "BinaryExpression",
        "start": 414,
        "end": 421,
        "left": {
          "type": "Identifier",
          "start": 414,
          "end": 415,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 420,
          "end": 421,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 423,
        "end": 501,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 427,
            "end": 499,
            "argument": {
              "type": "NewExpression",
              "start": 433,
              "end": 498,
              "callee": {
                "type": "Identifier",
                "start": 437,
                "end": 449,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 450,
                  "end": 497,
                  "left": {
                    "type": "Literal",
                    "start": 450,
                    "end": 491,
                    "value": "#1: x = \"1\"; x >>= 1; x === 0. Actual: ",
                    "raw": "'#1: x = \"1\"; x >>= 1; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 494,
                    "end": 497,
                    "expression": {
                      "type": "Identifier",
                      "start": 495,
                      "end": 496,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 513,
      "end": 519,
      "expression": {
        "type": "AssignmentExpression",
        "start": 513,
        "end": 518,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 513,
          "end": 514,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 517,
          "end": 518,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 520,
      "end": 530,
      "expression": {
        "type": "AssignmentExpression",
        "start": 520,
        "end": 529,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 520,
          "end": 521,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 526,
          "end": 529,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 531,
      "end": 622,
      "test": {
        "type": "BinaryExpression",
        "start": 535,
        "end": 542,
        "left": {
          "type": "Identifier",
          "start": 535,
          "end": 536,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 541,
          "end": 542,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 544,
        "end": 622,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 548,
            "end": 620,
            "argument": {
              "type": "NewExpression",
              "start": 554,
              "end": 619,
              "callee": {
                "type": "Identifier",
                "start": 558,
                "end": 570,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 571,
                  "end": 618,
                  "left": {
                    "type": "Literal",
                    "start": 571,
                    "end": 612,
                    "value": "#2: x = 1; x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x >>= \"1\"; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 615,
                    "end": 618,
                    "expression": {
                      "type": "Identifier",
                      "start": 616,
                      "end": 617,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 634,
      "end": 654,
      "expression": {
        "type": "AssignmentExpression",
        "start": 634,
        "end": 653,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 634,
          "end": 635,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 638,
          "end": 653,
          "callee": {
            "type": "Identifier",
            "start": 642,
            "end": 648,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 649,
              "end": 652,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 655,
      "end": 663,
      "expression": {
        "type": "AssignmentExpression",
        "start": 655,
        "end": 662,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 655,
          "end": 656,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 661,
          "end": 662,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 664,
      "end": 767,
      "test": {
        "type": "BinaryExpression",
        "start": 668,
        "end": 675,
        "left": {
          "type": "Identifier",
          "start": 668,
          "end": 669,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 674,
          "end": 675,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 677,
        "end": 767,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 681,
            "end": 765,
            "argument": {
              "type": "NewExpression",
              "start": 687,
              "end": 764,
              "callee": {
                "type": "Identifier",
                "start": 691,
                "end": 703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 704,
                  "end": 763,
                  "left": {
                    "type": "Literal",
                    "start": 704,
                    "end": 757,
                    "value": "#3: x = new String(\"1\"); x >>= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x >>= 1; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 760,
                    "end": 763,
                    "expression": {
                      "type": "Identifier",
                      "start": 761,
                      "end": 762,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 779,
      "end": 785,
      "expression": {
        "type": "AssignmentExpression",
        "start": 779,
        "end": 784,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 779,
          "end": 780,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 783,
          "end": 784,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 786,
      "end": 808,
      "expression": {
        "type": "AssignmentExpression",
        "start": 786,
        "end": 807,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 786,
          "end": 787,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 792,
          "end": 807,
          "callee": {
            "type": "Identifier",
            "start": 796,
            "end": 802,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 803,
              "end": 806,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 809,
      "end": 912,
      "test": {
        "type": "BinaryExpression",
        "start": 813,
        "end": 820,
        "left": {
          "type": "Identifier",
          "start": 813,
          "end": 814,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 819,
          "end": 820,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 822,
        "end": 912,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 826,
            "end": 910,
            "argument": {
              "type": "NewExpression",
              "start": 832,
              "end": 909,
              "callee": {
                "type": "Identifier",
                "start": 836,
                "end": 848,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 849,
                  "end": 908,
                  "left": {
                    "type": "Literal",
                    "start": 849,
                    "end": 902,
                    "value": "#4: x = 1; x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x >>= new String(\"1\"); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 905,
                    "end": 908,
                    "expression": {
                      "type": "Identifier",
                      "start": 906,
                      "end": 907,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 924,
      "end": 932,
      "expression": {
        "type": "AssignmentExpression",
        "start": 924,
        "end": 931,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 924,
          "end": 925,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 928,
          "end": 931,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 933,
      "end": 953,
      "expression": {
        "type": "AssignmentExpression",
        "start": 933,
        "end": 952,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 933,
          "end": 934,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 939,
          "end": 952,
          "callee": {
            "type": "Identifier",
            "start": 943,
            "end": 949,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 950,
              "end": 951,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 954,
      "end": 1057,
      "test": {
        "type": "BinaryExpression",
        "start": 958,
        "end": 965,
        "left": {
          "type": "Identifier",
          "start": 958,
          "end": 959,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 964,
          "end": 965,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 967,
        "end": 1057,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 971,
            "end": 1055,
            "argument": {
              "type": "NewExpression",
              "start": 977,
              "end": 1054,
              "callee": {
                "type": "Identifier",
                "start": 981,
                "end": 993,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 994,
                  "end": 1053,
                  "left": {
                    "type": "Literal",
                    "start": 994,
                    "end": 1047,
                    "value": "#5: x = \"1\"; x >>= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = \"1\"; x >>= new Number(1); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1050,
                    "end": 1053,
                    "expression": {
                      "type": "Identifier",
                      "start": 1051,
                      "end": 1052,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1069,
      "end": 1087,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1069,
        "end": 1086,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1069,
          "end": 1070,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1073,
          "end": 1086,
          "callee": {
            "type": "Identifier",
            "start": 1077,
            "end": 1083,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1084,
              "end": 1085,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1088,
      "end": 1098,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1088,
        "end": 1097,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1088,
          "end": 1089,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1094,
          "end": 1097,
          "value": "1",
          "raw": "\"1\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1099,
      "end": 1202,
      "test": {
        "type": "BinaryExpression",
        "start": 1103,
        "end": 1110,
        "left": {
          "type": "Identifier",
          "start": 1103,
          "end": 1104,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1109,
          "end": 1110,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1112,
        "end": 1202,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1116,
            "end": 1200,
            "argument": {
              "type": "NewExpression",
              "start": 1122,
              "end": 1199,
              "callee": {
                "type": "Identifier",
                "start": 1126,
                "end": 1138,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1139,
                  "end": 1198,
                  "left": {
                    "type": "Literal",
                    "start": 1139,
                    "end": 1192,
                    "value": "#6: x = new Number(1); x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x >>= \"1\"; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1195,
                    "end": 1198,
                    "expression": {
                      "type": "Identifier",
                      "start": 1196,
                      "end": 1197,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1214,
      "end": 1234,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1214,
        "end": 1233,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1214,
          "end": 1215,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1218,
          "end": 1233,
          "callee": {
            "type": "Identifier",
            "start": 1222,
            "end": 1228,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1229,
              "end": 1232,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1235,
      "end": 1255,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1235,
        "end": 1254,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1235,
          "end": 1236,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1241,
          "end": 1254,
          "callee": {
            "type": "Identifier",
            "start": 1245,
            "end": 1251,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1252,
              "end": 1253,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1256,
      "end": 1371,
      "test": {
        "type": "BinaryExpression",
        "start": 1260,
        "end": 1267,
        "left": {
          "type": "Identifier",
          "start": 1260,
          "end": 1261,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1266,
          "end": 1267,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1269,
        "end": 1371,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1273,
            "end": 1369,
            "argument": {
              "type": "NewExpression",
              "start": 1279,
              "end": 1368,
              "callee": {
                "type": "Identifier",
                "start": 1283,
                "end": 1295,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1296,
                  "end": 1367,
                  "left": {
                    "type": "Literal",
                    "start": 1296,
                    "end": 1361,
                    "value": "#7: x = new String(\"1\"); x >>= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x >>= new Number(1); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1364,
                    "end": 1367,
                    "expression": {
                      "type": "Identifier",
                      "start": 1365,
                      "end": 1366,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1383,
      "end": 1401,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1383,
        "end": 1400,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1383,
          "end": 1384,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1387,
          "end": 1400,
          "callee": {
            "type": "Identifier",
            "start": 1391,
            "end": 1397,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1398,
              "end": 1399,
              "value": 1,
              "raw": "1"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1402,
      "end": 1424,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1402,
        "end": 1423,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1402,
          "end": 1403,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1408,
          "end": 1423,
          "callee": {
            "type": "Identifier",
            "start": 1412,
            "end": 1418,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1419,
              "end": 1422,
              "value": "1",
              "raw": "\"1\""
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1425,
      "end": 1540,
      "test": {
        "type": "BinaryExpression",
        "start": 1429,
        "end": 1436,
        "left": {
          "type": "Identifier",
          "start": 1429,
          "end": 1430,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1435,
          "end": 1436,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1438,
        "end": 1540,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1442,
            "end": 1538,
            "argument": {
              "type": "NewExpression",
              "start": 1448,
              "end": 1537,
              "callee": {
                "type": "Identifier",
                "start": 1452,
                "end": 1464,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1465,
                  "end": 1536,
                  "left": {
                    "type": "Literal",
                    "start": 1465,
                    "end": 1530,
                    "value": "#8: x = new Number(1); x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x >>= new String(\"1\"); x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1533,
                    "end": 1536,
                    "expression": {
                      "type": "Identifier",
                      "start": 1534,
                      "end": 1535,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1552,
      "end": 1560,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1552,
        "end": 1559,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1552,
          "end": 1553,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1556,
          "end": 1559,
          "value": "x",
          "raw": "\"x\""
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1561,
      "end": 1569,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1561,
        "end": 1568,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1561,
          "end": 1562,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1567,
          "end": 1568,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1570,
      "end": 1661,
      "test": {
        "type": "BinaryExpression",
        "start": 1574,
        "end": 1581,
        "left": {
          "type": "Identifier",
          "start": 1574,
          "end": 1575,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1580,
          "end": 1581,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1583,
        "end": 1661,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1587,
            "end": 1659,
            "argument": {
              "type": "NewExpression",
              "start": 1593,
              "end": 1658,
              "callee": {
                "type": "Identifier",
                "start": 1597,
                "end": 1609,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1610,
                  "end": 1657,
                  "left": {
                    "type": "Literal",
                    "start": 1610,
                    "end": 1651,
                    "value": "#9: x = \"x\"; x >>= 1; x === 0. Actual: ",
                    "raw": "'#9: x = \"x\"; x >>= 1; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1654,
                    "end": 1657,
                    "expression": {
                      "type": "Identifier",
                      "start": 1655,
                      "end": 1656,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1674,
      "end": 1680,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1674,
        "end": 1679,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1674,
          "end": 1675,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1678,
          "end": 1679,
          "value": 1,
          "raw": "1"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1681,
      "end": 1691,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1681,
        "end": 1690,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1681,
          "end": 1682,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1687,
          "end": 1690,
          "value": "x",
          "raw": "\"x\""
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1692,
      "end": 1784,
      "test": {
        "type": "BinaryExpression",
        "start": 1696,
        "end": 1703,
        "left": {
          "type": "Identifier",
          "start": 1696,
          "end": 1697,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1702,
          "end": 1703,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1705,
        "end": 1784,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1709,
            "end": 1782,
            "argument": {
              "type": "NewExpression",
              "start": 1715,
              "end": 1781,
              "callee": {
                "type": "Identifier",
                "start": 1719,
                "end": 1731,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1732,
                  "end": 1780,
                  "left": {
                    "type": "Literal",
                    "start": 1732,
                    "end": 1774,
                    "value": "#10: x = 1; x >>= \"x\"; x === 1. Actual: ",
                    "raw": "'#10: x = 1; x >>= \"x\"; x === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1777,
                    "end": 1780,
                    "expression": {
                      "type": "Identifier",
                      "start": 1778,
                      "end": 1779,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}