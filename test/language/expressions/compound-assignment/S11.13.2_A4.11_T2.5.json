{
  "type": "Program",
  "start": 0,
  "end": 1581,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 374,
      "end": 380,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 378,
          "end": 379,
          "id": {
            "type": "Identifier",
            "start": 378,
            "end": 379,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 392,
      "end": 401,
      "expression": {
        "type": "AssignmentExpression",
        "start": 392,
        "end": 400,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 392,
          "end": 393,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 396,
          "end": 400,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 402,
      "end": 411,
      "expression": {
        "type": "AssignmentExpression",
        "start": 402,
        "end": 410,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 402,
          "end": 403,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 407,
          "end": 410,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 412,
      "end": 505,
      "test": {
        "type": "BinaryExpression",
        "start": 416,
        "end": 423,
        "left": {
          "type": "Identifier",
          "start": 416,
          "end": 417,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 422,
          "end": 423,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 425,
        "end": 505,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 429,
            "end": 503,
            "argument": {
              "type": "NewExpression",
              "start": 435,
              "end": 502,
              "callee": {
                "type": "Identifier",
                "start": 439,
                "end": 451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 452,
                  "end": 501,
                  "left": {
                    "type": "Literal",
                    "start": 452,
                    "end": 495,
                    "value": "#1: x = true; x |= \"1\"; x === 1. Actual: ",
                    "raw": "'#1: x = true; x |= \"1\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 498,
                    "end": 501,
                    "expression": {
                      "type": "Identifier",
                      "start": 499,
                      "end": 500,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 517,
      "end": 525,
      "expression": {
        "type": "AssignmentExpression",
        "start": 517,
        "end": 524,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 517,
          "end": 518,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 521,
          "end": 524,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 526,
      "end": 536,
      "expression": {
        "type": "AssignmentExpression",
        "start": 526,
        "end": 535,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 526,
          "end": 527,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 531,
          "end": 535,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 537,
      "end": 630,
      "test": {
        "type": "BinaryExpression",
        "start": 541,
        "end": 548,
        "left": {
          "type": "Identifier",
          "start": 541,
          "end": 542,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 547,
          "end": 548,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 550,
        "end": 630,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 554,
            "end": 628,
            "argument": {
              "type": "NewExpression",
              "start": 560,
              "end": 627,
              "callee": {
                "type": "Identifier",
                "start": 564,
                "end": 576,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 577,
                  "end": 626,
                  "left": {
                    "type": "Literal",
                    "start": 577,
                    "end": 620,
                    "value": "#2: x = \"1\"; x |= true; x === 1. Actual: ",
                    "raw": "'#2: x = \"1\"; x |= true; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 623,
                    "end": 626,
                    "expression": {
                      "type": "Identifier",
                      "start": 624,
                      "end": 625,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 642,
      "end": 664,
      "expression": {
        "type": "AssignmentExpression",
        "start": 642,
        "end": 663,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 642,
          "end": 643,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 646,
          "end": 663,
          "callee": {
            "type": "Identifier",
            "start": 650,
            "end": 657,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 658,
              "end": 662,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 665,
      "end": 674,
      "expression": {
        "type": "AssignmentExpression",
        "start": 665,
        "end": 673,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 665,
          "end": 666,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 670,
          "end": 673,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 675,
      "end": 781,
      "test": {
        "type": "BinaryExpression",
        "start": 679,
        "end": 686,
        "left": {
          "type": "Identifier",
          "start": 679,
          "end": 680,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 685,
          "end": 686,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 688,
        "end": 781,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 692,
            "end": 779,
            "argument": {
              "type": "NewExpression",
              "start": 698,
              "end": 778,
              "callee": {
                "type": "Identifier",
                "start": 702,
                "end": 714,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 715,
                  "end": 777,
                  "left": {
                    "type": "Literal",
                    "start": 715,
                    "end": 771,
                    "value": "#3: x = new Boolean(true); x |= \"1\"; x === 1. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x |= \"1\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 774,
                    "end": 777,
                    "expression": {
                      "type": "Identifier",
                      "start": 775,
                      "end": 776,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 793,
      "end": 801,
      "expression": {
        "type": "AssignmentExpression",
        "start": 793,
        "end": 800,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 793,
          "end": 794,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 797,
          "end": 800,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 802,
      "end": 825,
      "expression": {
        "type": "AssignmentExpression",
        "start": 802,
        "end": 824,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 802,
          "end": 803,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 807,
          "end": 824,
          "callee": {
            "type": "Identifier",
            "start": 811,
            "end": 818,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 819,
              "end": 823,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 826,
      "end": 932,
      "test": {
        "type": "BinaryExpression",
        "start": 830,
        "end": 837,
        "left": {
          "type": "Identifier",
          "start": 830,
          "end": 831,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 836,
          "end": 837,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 839,
        "end": 932,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 843,
            "end": 930,
            "argument": {
              "type": "NewExpression",
              "start": 849,
              "end": 929,
              "callee": {
                "type": "Identifier",
                "start": 853,
                "end": 865,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 866,
                  "end": 928,
                  "left": {
                    "type": "Literal",
                    "start": 866,
                    "end": 922,
                    "value": "#4: x = \"1\"; x |= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#4: x = \"1\"; x |= new Boolean(true); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 925,
                    "end": 928,
                    "expression": {
                      "type": "Identifier",
                      "start": 926,
                      "end": 927,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 944,
      "end": 953,
      "expression": {
        "type": "AssignmentExpression",
        "start": 944,
        "end": 952,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 944,
          "end": 945,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 948,
          "end": 952,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 954,
      "end": 975,
      "expression": {
        "type": "AssignmentExpression",
        "start": 954,
        "end": 974,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 954,
          "end": 955,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 959,
          "end": 974,
          "callee": {
            "type": "Identifier",
            "start": 963,
            "end": 969,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 970,
              "end": 973,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 976,
      "end": 1081,
      "test": {
        "type": "BinaryExpression",
        "start": 980,
        "end": 987,
        "left": {
          "type": "Identifier",
          "start": 980,
          "end": 981,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 986,
          "end": 987,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 989,
        "end": 1081,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 993,
            "end": 1079,
            "argument": {
              "type": "NewExpression",
              "start": 999,
              "end": 1078,
              "callee": {
                "type": "Identifier",
                "start": 1003,
                "end": 1015,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1016,
                  "end": 1077,
                  "left": {
                    "type": "Literal",
                    "start": 1016,
                    "end": 1071,
                    "value": "#5: x = true; x |= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#5: x = true; x |= new String(\"1\"); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1074,
                    "end": 1077,
                    "expression": {
                      "type": "Identifier",
                      "start": 1075,
                      "end": 1076,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1093,
      "end": 1113,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1093,
        "end": 1112,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1093,
          "end": 1094,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1097,
          "end": 1112,
          "callee": {
            "type": "Identifier",
            "start": 1101,
            "end": 1107,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1108,
              "end": 1111,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1114,
      "end": 1124,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1114,
        "end": 1123,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 1114,
          "end": 1115,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1119,
          "end": 1123,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1125,
      "end": 1230,
      "test": {
        "type": "BinaryExpression",
        "start": 1129,
        "end": 1136,
        "left": {
          "type": "Identifier",
          "start": 1129,
          "end": 1130,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1135,
          "end": 1136,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1138,
        "end": 1230,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1142,
            "end": 1228,
            "argument": {
              "type": "NewExpression",
              "start": 1148,
              "end": 1227,
              "callee": {
                "type": "Identifier",
                "start": 1152,
                "end": 1164,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1165,
                  "end": 1226,
                  "left": {
                    "type": "Literal",
                    "start": 1165,
                    "end": 1220,
                    "value": "#6: x = new String(\"1\"); x |= true; x === 1. Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x |= true; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1223,
                    "end": 1226,
                    "expression": {
                      "type": "Identifier",
                      "start": 1224,
                      "end": 1225,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1242,
      "end": 1264,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1242,
        "end": 1263,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1242,
          "end": 1243,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1246,
          "end": 1263,
          "callee": {
            "type": "Identifier",
            "start": 1250,
            "end": 1257,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1258,
              "end": 1262,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1265,
      "end": 1286,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1265,
        "end": 1285,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 1265,
          "end": 1266,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1270,
          "end": 1285,
          "callee": {
            "type": "Identifier",
            "start": 1274,
            "end": 1280,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1281,
              "end": 1284,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1287,
      "end": 1405,
      "test": {
        "type": "BinaryExpression",
        "start": 1291,
        "end": 1298,
        "left": {
          "type": "Identifier",
          "start": 1291,
          "end": 1292,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1297,
          "end": 1298,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1300,
        "end": 1405,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1304,
            "end": 1403,
            "argument": {
              "type": "NewExpression",
              "start": 1310,
              "end": 1402,
              "callee": {
                "type": "Identifier",
                "start": 1314,
                "end": 1326,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1327,
                  "end": 1401,
                  "left": {
                    "type": "Literal",
                    "start": 1327,
                    "end": 1395,
                    "value": "#7: x = new Boolean(true); x |= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x |= new String(\"1\"); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1398,
                    "end": 1401,
                    "expression": {
                      "type": "Identifier",
                      "start": 1399,
                      "end": 1400,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1417,
      "end": 1437,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1417,
        "end": 1436,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1417,
          "end": 1418,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1421,
          "end": 1436,
          "callee": {
            "type": "Identifier",
            "start": 1425,
            "end": 1431,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1432,
              "end": 1435,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1438,
      "end": 1461,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1438,
        "end": 1460,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 1438,
          "end": 1439,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1443,
          "end": 1460,
          "callee": {
            "type": "Identifier",
            "start": 1447,
            "end": 1454,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1455,
              "end": 1459,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1462,
      "end": 1580,
      "test": {
        "type": "BinaryExpression",
        "start": 1466,
        "end": 1473,
        "left": {
          "type": "Identifier",
          "start": 1466,
          "end": 1467,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1472,
          "end": 1473,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1475,
        "end": 1580,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1479,
            "end": 1578,
            "argument": {
              "type": "NewExpression",
              "start": 1485,
              "end": 1577,
              "callee": {
                "type": "Identifier",
                "start": 1489,
                "end": 1501,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1502,
                  "end": 1576,
                  "left": {
                    "type": "Literal",
                    "start": 1502,
                    "end": 1570,
                    "value": "#8: x = new String(\"1\"); x |= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x |= new Boolean(true); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1573,
                    "end": 1576,
                    "expression": {
                      "type": "Identifier",
                      "start": 1574,
                      "end": 1575,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}