{
  "type": "Program",
  "start": 0,
  "end": 1764,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 373,
      "end": 379,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 377,
          "end": 378,
          "id": {
            "type": "Identifier",
            "start": 377,
            "end": 378,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 391,
      "end": 399,
      "expression": {
        "type": "AssignmentExpression",
        "start": 391,
        "end": 398,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 391,
          "end": 392,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 395,
          "end": 398,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 400,
      "end": 407,
      "expression": {
        "type": "AssignmentExpression",
        "start": 400,
        "end": 406,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 400,
          "end": 401,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 405,
          "end": 406,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 408,
      "end": 498,
      "test": {
        "type": "BinaryExpression",
        "start": 412,
        "end": 419,
        "left": {
          "type": "Identifier",
          "start": 412,
          "end": 413,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 418,
          "end": 419,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 421,
        "end": 498,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 425,
            "end": 496,
            "argument": {
              "type": "NewExpression",
              "start": 431,
              "end": 495,
              "callee": {
                "type": "Identifier",
                "start": 435,
                "end": 447,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 448,
                  "end": 494,
                  "left": {
                    "type": "Literal",
                    "start": 448,
                    "end": 488,
                    "value": "#1: x = \"1\"; x ^= 1; x === 0. Actual: ",
                    "raw": "'#1: x = \"1\"; x ^= 1; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 491,
                    "end": 494,
                    "expression": {
                      "type": "Identifier",
                      "start": 492,
                      "end": 493,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 510,
      "end": 516,
      "expression": {
        "type": "AssignmentExpression",
        "start": 510,
        "end": 515,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 510,
          "end": 511,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 514,
          "end": 515,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 517,
      "end": 526,
      "expression": {
        "type": "AssignmentExpression",
        "start": 517,
        "end": 525,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 517,
          "end": 518,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 522,
          "end": 525,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 527,
      "end": 617,
      "test": {
        "type": "BinaryExpression",
        "start": 531,
        "end": 538,
        "left": {
          "type": "Identifier",
          "start": 531,
          "end": 532,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 537,
          "end": 538,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 540,
        "end": 617,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 544,
            "end": 615,
            "argument": {
              "type": "NewExpression",
              "start": 550,
              "end": 614,
              "callee": {
                "type": "Identifier",
                "start": 554,
                "end": 566,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 567,
                  "end": 613,
                  "left": {
                    "type": "Literal",
                    "start": 567,
                    "end": 607,
                    "value": "#2: x = 1; x ^= \"1\"; x === 0. Actual: ",
                    "raw": "'#2: x = 1; x ^= \"1\"; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 610,
                    "end": 613,
                    "expression": {
                      "type": "Identifier",
                      "start": 611,
                      "end": 612,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 629,
      "end": 649,
      "expression": {
        "type": "AssignmentExpression",
        "start": 629,
        "end": 648,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 629,
          "end": 630,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 633,
          "end": 648,
          "callee": {
            "type": "Identifier",
            "start": 637,
            "end": 643,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 644,
              "end": 647,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 650,
      "end": 657,
      "expression": {
        "type": "AssignmentExpression",
        "start": 650,
        "end": 656,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 650,
          "end": 651,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 655,
          "end": 656,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 658,
      "end": 760,
      "test": {
        "type": "BinaryExpression",
        "start": 662,
        "end": 669,
        "left": {
          "type": "Identifier",
          "start": 662,
          "end": 663,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 668,
          "end": 669,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 671,
        "end": 760,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 675,
            "end": 758,
            "argument": {
              "type": "NewExpression",
              "start": 681,
              "end": 757,
              "callee": {
                "type": "Identifier",
                "start": 685,
                "end": 697,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 698,
                  "end": 756,
                  "left": {
                    "type": "Literal",
                    "start": 698,
                    "end": 750,
                    "value": "#3: x = new String(\"1\"); x ^= 1; x === 0. Actual: ",
                    "raw": "'#3: x = new String(\"1\"); x ^= 1; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 753,
                    "end": 756,
                    "expression": {
                      "type": "Identifier",
                      "start": 754,
                      "end": 755,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 772,
      "end": 778,
      "expression": {
        "type": "AssignmentExpression",
        "start": 772,
        "end": 777,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 772,
          "end": 773,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 776,
          "end": 777,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 779,
      "end": 800,
      "expression": {
        "type": "AssignmentExpression",
        "start": 779,
        "end": 799,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 779,
          "end": 780,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 784,
          "end": 799,
          "callee": {
            "type": "Identifier",
            "start": 788,
            "end": 794,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 795,
              "end": 798,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 801,
      "end": 903,
      "test": {
        "type": "BinaryExpression",
        "start": 805,
        "end": 812,
        "left": {
          "type": "Identifier",
          "start": 805,
          "end": 806,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 811,
          "end": 812,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 814,
        "end": 903,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 818,
            "end": 901,
            "argument": {
              "type": "NewExpression",
              "start": 824,
              "end": 900,
              "callee": {
                "type": "Identifier",
                "start": 828,
                "end": 840,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 841,
                  "end": 899,
                  "left": {
                    "type": "Literal",
                    "start": 841,
                    "end": 893,
                    "value": "#4: x = 1; x ^= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#4: x = 1; x ^= new String(\"1\"); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 896,
                    "end": 899,
                    "expression": {
                      "type": "Identifier",
                      "start": 897,
                      "end": 898,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 915,
      "end": 923,
      "expression": {
        "type": "AssignmentExpression",
        "start": 915,
        "end": 922,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 915,
          "end": 916,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 919,
          "end": 922,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 924,
      "end": 943,
      "expression": {
        "type": "AssignmentExpression",
        "start": 924,
        "end": 942,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 924,
          "end": 925,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 929,
          "end": 942,
          "callee": {
            "type": "Identifier",
            "start": 933,
            "end": 939,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 940,
              "end": 941,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 944,
      "end": 1046,
      "test": {
        "type": "BinaryExpression",
        "start": 948,
        "end": 955,
        "left": {
          "type": "Identifier",
          "start": 948,
          "end": 949,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 954,
          "end": 955,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 957,
        "end": 1046,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 961,
            "end": 1044,
            "argument": {
              "type": "NewExpression",
              "start": 967,
              "end": 1043,
              "callee": {
                "type": "Identifier",
                "start": 971,
                "end": 983,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 984,
                  "end": 1042,
                  "left": {
                    "type": "Literal",
                    "start": 984,
                    "end": 1036,
                    "value": "#5: x = \"1\"; x ^= new Number(1); x === 0. Actual: ",
                    "raw": "'#5: x = \"1\"; x ^= new Number(1); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1039,
                    "end": 1042,
                    "expression": {
                      "type": "Identifier",
                      "start": 1040,
                      "end": 1041,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1058,
      "end": 1076,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1058,
        "end": 1075,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1058,
          "end": 1059,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1062,
          "end": 1075,
          "callee": {
            "type": "Identifier",
            "start": 1066,
            "end": 1072,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1073,
              "end": 1074,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1077,
      "end": 1086,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1077,
        "end": 1085,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 1077,
          "end": 1078,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1082,
          "end": 1085,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1087,
      "end": 1189,
      "test": {
        "type": "BinaryExpression",
        "start": 1091,
        "end": 1098,
        "left": {
          "type": "Identifier",
          "start": 1091,
          "end": 1092,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1097,
          "end": 1098,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1100,
        "end": 1189,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1104,
            "end": 1187,
            "argument": {
              "type": "NewExpression",
              "start": 1110,
              "end": 1186,
              "callee": {
                "type": "Identifier",
                "start": 1114,
                "end": 1126,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1127,
                  "end": 1185,
                  "left": {
                    "type": "Literal",
                    "start": 1127,
                    "end": 1179,
                    "value": "#6: x = new Number(1); x ^= \"1\"; x === 0. Actual: ",
                    "raw": "'#6: x = new Number(1); x ^= \"1\"; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1182,
                    "end": 1185,
                    "expression": {
                      "type": "Identifier",
                      "start": 1183,
                      "end": 1184,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1201,
      "end": 1221,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1201,
        "end": 1220,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1201,
          "end": 1202,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1205,
          "end": 1220,
          "callee": {
            "type": "Identifier",
            "start": 1209,
            "end": 1215,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1216,
              "end": 1219,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1222,
      "end": 1241,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1222,
        "end": 1240,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 1222,
          "end": 1223,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1227,
          "end": 1240,
          "callee": {
            "type": "Identifier",
            "start": 1231,
            "end": 1237,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1238,
              "end": 1239,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1242,
      "end": 1356,
      "test": {
        "type": "BinaryExpression",
        "start": 1246,
        "end": 1253,
        "left": {
          "type": "Identifier",
          "start": 1246,
          "end": 1247,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1252,
          "end": 1253,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1255,
        "end": 1356,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1259,
            "end": 1354,
            "argument": {
              "type": "NewExpression",
              "start": 1265,
              "end": 1353,
              "callee": {
                "type": "Identifier",
                "start": 1269,
                "end": 1281,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1282,
                  "end": 1352,
                  "left": {
                    "type": "Literal",
                    "start": 1282,
                    "end": 1346,
                    "value": "#7: x = new String(\"1\"); x ^= new Number(1); x === 0. Actual: ",
                    "raw": "'#7: x = new String(\"1\"); x ^= new Number(1); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1349,
                    "end": 1352,
                    "expression": {
                      "type": "Identifier",
                      "start": 1350,
                      "end": 1351,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1368,
      "end": 1386,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1368,
        "end": 1385,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1368,
          "end": 1369,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1372,
          "end": 1385,
          "callee": {
            "type": "Identifier",
            "start": 1376,
            "end": 1382,
            "name": "Number"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1383,
              "end": 1384,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1387,
      "end": 1408,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1387,
        "end": 1407,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 1387,
          "end": 1388,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1392,
          "end": 1407,
          "callee": {
            "type": "Identifier",
            "start": 1396,
            "end": 1402,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1403,
              "end": 1406,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1409,
      "end": 1523,
      "test": {
        "type": "BinaryExpression",
        "start": 1413,
        "end": 1420,
        "left": {
          "type": "Identifier",
          "start": 1413,
          "end": 1414,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1419,
          "end": 1420,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1422,
        "end": 1523,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1426,
            "end": 1521,
            "argument": {
              "type": "NewExpression",
              "start": 1432,
              "end": 1520,
              "callee": {
                "type": "Identifier",
                "start": 1436,
                "end": 1448,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1449,
                  "end": 1519,
                  "left": {
                    "type": "Literal",
                    "start": 1449,
                    "end": 1513,
                    "value": "#8: x = new Number(1); x ^= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#8: x = new Number(1); x ^= new String(\"1\"); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1516,
                    "end": 1519,
                    "expression": {
                      "type": "Identifier",
                      "start": 1517,
                      "end": 1518,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1535,
      "end": 1543,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1535,
        "end": 1542,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1535,
          "end": 1536,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1539,
          "end": 1542,
          "value": "x",
          "raw": "\"x\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1544,
      "end": 1551,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1544,
        "end": 1550,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 1544,
          "end": 1545,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1549,
          "end": 1550,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1552,
      "end": 1642,
      "test": {
        "type": "BinaryExpression",
        "start": 1556,
        "end": 1563,
        "left": {
          "type": "Identifier",
          "start": 1556,
          "end": 1557,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1562,
          "end": 1563,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1565,
        "end": 1642,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1569,
            "end": 1640,
            "argument": {
              "type": "NewExpression",
              "start": 1575,
              "end": 1639,
              "callee": {
                "type": "Identifier",
                "start": 1579,
                "end": 1591,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1592,
                  "end": 1638,
                  "left": {
                    "type": "Literal",
                    "start": 1592,
                    "end": 1632,
                    "value": "#9: x = \"x\"; x ^= 1; x === 1. Actual: ",
                    "raw": "'#9: x = \"x\"; x ^= 1; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1635,
                    "end": 1638,
                    "expression": {
                      "type": "Identifier",
                      "start": 1636,
                      "end": 1637,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1655,
      "end": 1661,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1655,
        "end": 1660,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1655,
          "end": 1656,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1659,
          "end": 1660,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1662,
      "end": 1671,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1662,
        "end": 1670,
        "operator": "^=",
        "left": {
          "type": "Identifier",
          "start": 1662,
          "end": 1663,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1667,
          "end": 1670,
          "value": "x",
          "raw": "\"x\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1672,
      "end": 1763,
      "test": {
        "type": "BinaryExpression",
        "start": 1676,
        "end": 1683,
        "left": {
          "type": "Identifier",
          "start": 1676,
          "end": 1677,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1682,
          "end": 1683,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1685,
        "end": 1763,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1689,
            "end": 1761,
            "argument": {
              "type": "NewExpression",
              "start": 1695,
              "end": 1760,
              "callee": {
                "type": "Identifier",
                "start": 1699,
                "end": 1711,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1712,
                  "end": 1759,
                  "left": {
                    "type": "Literal",
                    "start": 1712,
                    "end": 1753,
                    "value": "#10: x = 1; x ^= \"x\"; x === 1. Actual: ",
                    "raw": "'#10: x = 1; x ^= \"x\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1756,
                    "end": 1759,
                    "expression": {
                      "type": "Identifier",
                      "start": 1757,
                      "end": 1758,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}