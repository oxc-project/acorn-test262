{
  "type": "Program",
  "start": 0,
  "end": 615,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 314,
      "end": 324,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 318,
          "end": 323,
          "id": {
            "type": "Identifier",
            "start": 318,
            "end": 319,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 322,
            "end": 323,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 325,
      "end": 343,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 329,
          "end": 342,
          "id": {
            "type": "Identifier",
            "start": 329,
            "end": 330,
            "name": "z"
          },
          "init": {
            "type": "ParenthesizedExpression",
            "start": 333,
            "end": 342,
            "expression": {
              "type": "AssignmentExpression",
              "start": 334,
              "end": 341,
              "operator": "<<=",
              "left": {
                "type": "Identifier",
                "start": 334,
                "end": 335,
                "name": "x"
              },
              "right": {
                "type": "Literal",
                "start": 340,
                "end": 341,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 344,
      "end": 447,
      "test": {
        "type": "BinaryExpression",
        "start": 348,
        "end": 355,
        "left": {
          "type": "Identifier",
          "start": 348,
          "end": 349,
          "name": "z"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 354,
          "end": 355,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 357,
        "end": 447,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 361,
            "end": 445,
            "argument": {
              "type": "NewExpression",
              "start": 367,
              "end": 444,
              "callee": {
                "type": "Identifier",
                "start": 371,
                "end": 383,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 384,
                  "end": 443,
                  "left": {
                    "type": "Literal",
                    "start": 384,
                    "end": 437,
                    "value": "#1: var x = 1; var z = (x <<= 1); z === 2. Actual: ",
                    "raw": "'#1: var x = 1; var z = (x <<= 1); z === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 440,
                    "end": 443,
                    "expression": {
                      "type": "Identifier",
                      "start": 441,
                      "end": 442,
                      "name": "z"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 459,
      "end": 469,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 463,
          "end": 468,
          "id": {
            "type": "Identifier",
            "start": 463,
            "end": 464,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 467,
            "end": 468,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 470,
      "end": 480,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 474,
          "end": 479,
          "id": {
            "type": "Identifier",
            "start": 474,
            "end": 475,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 478,
            "end": 479,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 481,
      "end": 499,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 485,
          "end": 498,
          "id": {
            "type": "Identifier",
            "start": 485,
            "end": 486,
            "name": "z"
          },
          "init": {
            "type": "ParenthesizedExpression",
            "start": 489,
            "end": 498,
            "expression": {
              "type": "AssignmentExpression",
              "start": 490,
              "end": 497,
              "operator": "<<=",
              "left": {
                "type": "Identifier",
                "start": 490,
                "end": 491,
                "name": "x"
              },
              "right": {
                "type": "Identifier",
                "start": 496,
                "end": 497,
                "name": "y"
              }
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 500,
      "end": 614,
      "test": {
        "type": "BinaryExpression",
        "start": 504,
        "end": 511,
        "left": {
          "type": "Identifier",
          "start": 504,
          "end": 505,
          "name": "z"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 510,
          "end": 511,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 513,
        "end": 614,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 517,
            "end": 612,
            "argument": {
              "type": "NewExpression",
              "start": 523,
              "end": 611,
              "callee": {
                "type": "Identifier",
                "start": 527,
                "end": 539,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 540,
                  "end": 610,
                  "left": {
                    "type": "Literal",
                    "start": 540,
                    "end": 604,
                    "value": "#2: var x = 1; var y = 1; var z = (x <<= y); z === 2. Actual: ",
                    "raw": "'#2: var x = 1; var y = 1; var z = (x <<= y); z === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 607,
                    "end": 610,
                    "expression": {
                      "type": "Identifier",
                      "start": 608,
                      "end": 609,
                      "name": "z"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}