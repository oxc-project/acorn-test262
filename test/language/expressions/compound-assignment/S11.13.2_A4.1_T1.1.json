{
  "type": "Program",
  "start": 0,
  "end": 951,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 332,
      "end": 338,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 336,
          "end": 337,
          "id": {
            "type": "Identifier",
            "start": 336,
            "end": 337,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 350,
      "end": 359,
      "expression": {
        "type": "AssignmentExpression",
        "start": 350,
        "end": 358,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 350,
          "end": 351,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 354,
          "end": 358,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 360,
      "end": 370,
      "expression": {
        "type": "AssignmentExpression",
        "start": 360,
        "end": 369,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 360,
          "end": 361,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 365,
          "end": 369,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 371,
      "end": 465,
      "test": {
        "type": "BinaryExpression",
        "start": 375,
        "end": 382,
        "left": {
          "type": "Identifier",
          "start": 375,
          "end": 376,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 381,
          "end": 382,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 384,
        "end": 465,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 388,
            "end": 463,
            "argument": {
              "type": "NewExpression",
              "start": 394,
              "end": 462,
              "callee": {
                "type": "Identifier",
                "start": 398,
                "end": 410,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 411,
                  "end": 461,
                  "left": {
                    "type": "Literal",
                    "start": 411,
                    "end": 455,
                    "value": "#1: x = true; x *= true; x === 1. Actual: ",
                    "raw": "'#1: x = true; x *= true; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 458,
                    "end": 461,
                    "expression": {
                      "type": "Identifier",
                      "start": 459,
                      "end": 460,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 477,
      "end": 499,
      "expression": {
        "type": "AssignmentExpression",
        "start": 477,
        "end": 498,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 477,
          "end": 478,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 481,
          "end": 498,
          "callee": {
            "type": "Identifier",
            "start": 485,
            "end": 492,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 493,
              "end": 497,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 500,
      "end": 510,
      "expression": {
        "type": "AssignmentExpression",
        "start": 500,
        "end": 509,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 500,
          "end": 501,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 505,
          "end": 509,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 511,
      "end": 618,
      "test": {
        "type": "BinaryExpression",
        "start": 515,
        "end": 522,
        "left": {
          "type": "Identifier",
          "start": 515,
          "end": 516,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 521,
          "end": 522,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 524,
        "end": 618,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 528,
            "end": 616,
            "argument": {
              "type": "NewExpression",
              "start": 534,
              "end": 615,
              "callee": {
                "type": "Identifier",
                "start": 538,
                "end": 550,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 551,
                  "end": 614,
                  "left": {
                    "type": "Literal",
                    "start": 551,
                    "end": 608,
                    "value": "#2: x = new Boolean(true); x *= true; x === 1. Actual: ",
                    "raw": "'#2: x = new Boolean(true); x *= true; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 611,
                    "end": 614,
                    "expression": {
                      "type": "Identifier",
                      "start": 612,
                      "end": 613,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 630,
      "end": 639,
      "expression": {
        "type": "AssignmentExpression",
        "start": 630,
        "end": 638,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 630,
          "end": 631,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 634,
          "end": 638,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 640,
      "end": 663,
      "expression": {
        "type": "AssignmentExpression",
        "start": 640,
        "end": 662,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 640,
          "end": 641,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 645,
          "end": 662,
          "callee": {
            "type": "Identifier",
            "start": 649,
            "end": 656,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 657,
              "end": 661,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 664,
      "end": 771,
      "test": {
        "type": "BinaryExpression",
        "start": 668,
        "end": 675,
        "left": {
          "type": "Identifier",
          "start": 668,
          "end": 669,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 674,
          "end": 675,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 677,
        "end": 771,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 681,
            "end": 769,
            "argument": {
              "type": "NewExpression",
              "start": 687,
              "end": 768,
              "callee": {
                "type": "Identifier",
                "start": 691,
                "end": 703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 704,
                  "end": 767,
                  "left": {
                    "type": "Literal",
                    "start": 704,
                    "end": 761,
                    "value": "#3: x = true; x *= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#3: x = true; x *= new Boolean(true); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 764,
                    "end": 767,
                    "expression": {
                      "type": "Identifier",
                      "start": 765,
                      "end": 766,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 783,
      "end": 805,
      "expression": {
        "type": "AssignmentExpression",
        "start": 783,
        "end": 804,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 783,
          "end": 784,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 787,
          "end": 804,
          "callee": {
            "type": "Identifier",
            "start": 791,
            "end": 798,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 799,
              "end": 803,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 806,
      "end": 829,
      "expression": {
        "type": "AssignmentExpression",
        "start": 806,
        "end": 828,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 806,
          "end": 807,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 811,
          "end": 828,
          "callee": {
            "type": "Identifier",
            "start": 815,
            "end": 822,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 823,
              "end": 827,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 830,
      "end": 950,
      "test": {
        "type": "BinaryExpression",
        "start": 834,
        "end": 841,
        "left": {
          "type": "Identifier",
          "start": 834,
          "end": 835,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 840,
          "end": 841,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 843,
        "end": 950,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 847,
            "end": 948,
            "argument": {
              "type": "NewExpression",
              "start": 853,
              "end": 947,
              "callee": {
                "type": "Identifier",
                "start": 857,
                "end": 869,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 870,
                  "end": 946,
                  "left": {
                    "type": "Literal",
                    "start": 870,
                    "end": 940,
                    "value": "#4: x = new Boolean(true); x *= new Boolean(true); x === 1. Actual: ",
                    "raw": "'#4: x = new Boolean(true); x *= new Boolean(true); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 943,
                    "end": 946,
                    "expression": {
                      "type": "Identifier",
                      "start": 944,
                      "end": 945,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}