{
  "type": "Program",
  "start": 0,
  "end": 922,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 304,
      "end": 310,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 308,
          "end": 309,
          "id": {
            "type": "Identifier",
            "start": 308,
            "end": 309,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 322,
      "end": 331,
      "expression": {
        "type": "AssignmentExpression",
        "start": 322,
        "end": 330,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 322,
          "end": 323,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 326,
          "end": 330,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 332,
      "end": 347,
      "expression": {
        "type": "AssignmentExpression",
        "start": 332,
        "end": 346,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 332,
          "end": 333,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 337,
          "end": 346,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 348,
      "end": 468,
      "test": {
        "type": "BinaryExpression",
        "start": 352,
        "end": 369,
        "left": {
          "type": "CallExpression",
          "start": 352,
          "end": 360,
          "callee": {
            "type": "Identifier",
            "start": 352,
            "end": 357,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 358,
              "end": 359,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 365,
          "end": 369,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 371,
        "end": 468,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 375,
            "end": 466,
            "argument": {
              "type": "NewExpression",
              "start": 381,
              "end": 465,
              "callee": {
                "type": "Identifier",
                "start": 385,
                "end": 397,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 398,
                  "end": 464,
                  "left": {
                    "type": "Literal",
                    "start": 398,
                    "end": 458,
                    "value": "#1: x = null; x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#1: x = null; x *= undefined; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 461,
                    "end": 464,
                    "expression": {
                      "type": "Identifier",
                      "start": 462,
                      "end": 463,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 480,
      "end": 494,
      "expression": {
        "type": "AssignmentExpression",
        "start": 480,
        "end": 493,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 480,
          "end": 481,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 484,
          "end": 493,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 495,
      "end": 505,
      "expression": {
        "type": "AssignmentExpression",
        "start": 495,
        "end": 504,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 495,
          "end": 496,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 500,
          "end": 504,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 506,
      "end": 626,
      "test": {
        "type": "BinaryExpression",
        "start": 510,
        "end": 527,
        "left": {
          "type": "CallExpression",
          "start": 510,
          "end": 518,
          "callee": {
            "type": "Identifier",
            "start": 510,
            "end": 515,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 516,
              "end": 517,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 523,
          "end": 527,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 529,
        "end": 626,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 533,
            "end": 624,
            "argument": {
              "type": "NewExpression",
              "start": 539,
              "end": 623,
              "callee": {
                "type": "Identifier",
                "start": 543,
                "end": 555,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 556,
                  "end": 622,
                  "left": {
                    "type": "Literal",
                    "start": 556,
                    "end": 616,
                    "value": "#2: x = undefined; x *= null; x === Not-a-Number. Actual: ",
                    "raw": "'#2: x = undefined; x *= null; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 619,
                    "end": 622,
                    "expression": {
                      "type": "Identifier",
                      "start": 620,
                      "end": 621,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 638,
      "end": 652,
      "expression": {
        "type": "AssignmentExpression",
        "start": 638,
        "end": 651,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 638,
          "end": 639,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 642,
          "end": 651,
          "name": "undefined"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 653,
      "end": 668,
      "expression": {
        "type": "AssignmentExpression",
        "start": 653,
        "end": 667,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 653,
          "end": 654,
          "name": "x"
        },
        "right": {
          "type": "Identifier",
          "start": 658,
          "end": 667,
          "name": "undefined"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 669,
      "end": 794,
      "test": {
        "type": "BinaryExpression",
        "start": 673,
        "end": 690,
        "left": {
          "type": "CallExpression",
          "start": 673,
          "end": 681,
          "callee": {
            "type": "Identifier",
            "start": 673,
            "end": 678,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 679,
              "end": 680,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 686,
          "end": 690,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 692,
        "end": 794,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 696,
            "end": 792,
            "argument": {
              "type": "NewExpression",
              "start": 702,
              "end": 791,
              "callee": {
                "type": "Identifier",
                "start": 706,
                "end": 718,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 719,
                  "end": 790,
                  "left": {
                    "type": "Literal",
                    "start": 719,
                    "end": 784,
                    "value": "#3: x = undefined; x *= undefined; x === Not-a-Number. Actual: ",
                    "raw": "'#3: x = undefined; x *= undefined; x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 787,
                    "end": 790,
                    "expression": {
                      "type": "Identifier",
                      "start": 788,
                      "end": 789,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 806,
      "end": 815,
      "expression": {
        "type": "AssignmentExpression",
        "start": 806,
        "end": 814,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 806,
          "end": 807,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 810,
          "end": 814,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 816,
      "end": 826,
      "expression": {
        "type": "AssignmentExpression",
        "start": 816,
        "end": 825,
        "operator": "*=",
        "left": {
          "type": "Identifier",
          "start": 816,
          "end": 817,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 821,
          "end": 825,
          "value": null,
          "raw": "null"
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 827,
      "end": 921,
      "test": {
        "type": "BinaryExpression",
        "start": 831,
        "end": 838,
        "left": {
          "type": "Identifier",
          "start": 831,
          "end": 832,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 837,
          "end": 838,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 840,
        "end": 921,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 844,
            "end": 919,
            "argument": {
              "type": "NewExpression",
              "start": 850,
              "end": 918,
              "callee": {
                "type": "Identifier",
                "start": 854,
                "end": 866,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 867,
                  "end": 917,
                  "left": {
                    "type": "Literal",
                    "start": 867,
                    "end": 911,
                    "value": "#4: x = null; x *= null; x === 0. Actual: ",
                    "raw": "'#4: x = null; x *= null; x === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 914,
                    "end": 917,
                    "expression": {
                      "type": "Identifier",
                      "start": 915,
                      "end": 916,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}