{
  "type": "Program",
  "start": 0,
  "end": 1598,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 375,
      "end": 381,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 379,
          "end": 380,
          "id": {
            "type": "Identifier",
            "start": 379,
            "end": 380,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 393,
      "end": 402,
      "expression": {
        "type": "AssignmentExpression",
        "start": 393,
        "end": 401,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 393,
          "end": 394,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 397,
          "end": 401,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 403,
      "end": 413,
      "expression": {
        "type": "AssignmentExpression",
        "start": 403,
        "end": 412,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 403,
          "end": 404,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 409,
          "end": 412,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 414,
      "end": 508,
      "test": {
        "type": "BinaryExpression",
        "start": 418,
        "end": 425,
        "left": {
          "type": "Identifier",
          "start": 418,
          "end": 419,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 424,
          "end": 425,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 427,
        "end": 508,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 431,
            "end": 506,
            "argument": {
              "type": "NewExpression",
              "start": 437,
              "end": 505,
              "callee": {
                "type": "Identifier",
                "start": 441,
                "end": 453,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 454,
                  "end": 504,
                  "left": {
                    "type": "Literal",
                    "start": 454,
                    "end": 498,
                    "value": "#1: x = true; x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#1: x = true; x >>= \"1\"; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 501,
                    "end": 504,
                    "expression": {
                      "type": "Identifier",
                      "start": 502,
                      "end": 503,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 520,
      "end": 528,
      "expression": {
        "type": "AssignmentExpression",
        "start": 520,
        "end": 527,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 520,
          "end": 521,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 524,
          "end": 527,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 529,
      "end": 540,
      "expression": {
        "type": "AssignmentExpression",
        "start": 529,
        "end": 539,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 529,
          "end": 530,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 535,
          "end": 539,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 541,
      "end": 635,
      "test": {
        "type": "BinaryExpression",
        "start": 545,
        "end": 552,
        "left": {
          "type": "Identifier",
          "start": 545,
          "end": 546,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 551,
          "end": 552,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 554,
        "end": 635,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 558,
            "end": 633,
            "argument": {
              "type": "NewExpression",
              "start": 564,
              "end": 632,
              "callee": {
                "type": "Identifier",
                "start": 568,
                "end": 580,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 581,
                  "end": 631,
                  "left": {
                    "type": "Literal",
                    "start": 581,
                    "end": 625,
                    "value": "#2: x = \"1\"; x >>= true; x === 0. Actual: ",
                    "raw": "'#2: x = \"1\"; x >>= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 628,
                    "end": 631,
                    "expression": {
                      "type": "Identifier",
                      "start": 629,
                      "end": 630,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 647,
      "end": 669,
      "expression": {
        "type": "AssignmentExpression",
        "start": 647,
        "end": 668,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 647,
          "end": 648,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 651,
          "end": 668,
          "callee": {
            "type": "Identifier",
            "start": 655,
            "end": 662,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 663,
              "end": 667,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 670,
      "end": 680,
      "expression": {
        "type": "AssignmentExpression",
        "start": 670,
        "end": 679,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 670,
          "end": 671,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 676,
          "end": 679,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 681,
      "end": 788,
      "test": {
        "type": "BinaryExpression",
        "start": 685,
        "end": 692,
        "left": {
          "type": "Identifier",
          "start": 685,
          "end": 686,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 691,
          "end": 692,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 694,
        "end": 788,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 698,
            "end": 786,
            "argument": {
              "type": "NewExpression",
              "start": 704,
              "end": 785,
              "callee": {
                "type": "Identifier",
                "start": 708,
                "end": 720,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 721,
                  "end": 784,
                  "left": {
                    "type": "Literal",
                    "start": 721,
                    "end": 778,
                    "value": "#3: x = new Boolean(true); x >>= \"1\"; x === 0. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x >>= \"1\"; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 781,
                    "end": 784,
                    "expression": {
                      "type": "Identifier",
                      "start": 782,
                      "end": 783,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 800,
      "end": 808,
      "expression": {
        "type": "AssignmentExpression",
        "start": 800,
        "end": 807,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 800,
          "end": 801,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 804,
          "end": 807,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 809,
      "end": 833,
      "expression": {
        "type": "AssignmentExpression",
        "start": 809,
        "end": 832,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 809,
          "end": 810,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 815,
          "end": 832,
          "callee": {
            "type": "Identifier",
            "start": 819,
            "end": 826,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 827,
              "end": 831,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 834,
      "end": 941,
      "test": {
        "type": "BinaryExpression",
        "start": 838,
        "end": 845,
        "left": {
          "type": "Identifier",
          "start": 838,
          "end": 839,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 844,
          "end": 845,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 847,
        "end": 941,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 851,
            "end": 939,
            "argument": {
              "type": "NewExpression",
              "start": 857,
              "end": 938,
              "callee": {
                "type": "Identifier",
                "start": 861,
                "end": 873,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 874,
                  "end": 937,
                  "left": {
                    "type": "Literal",
                    "start": 874,
                    "end": 931,
                    "value": "#4: x = \"1\"; x >>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = \"1\"; x >>= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 934,
                    "end": 937,
                    "expression": {
                      "type": "Identifier",
                      "start": 935,
                      "end": 936,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 953,
      "end": 962,
      "expression": {
        "type": "AssignmentExpression",
        "start": 953,
        "end": 961,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 953,
          "end": 954,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 957,
          "end": 961,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 963,
      "end": 985,
      "expression": {
        "type": "AssignmentExpression",
        "start": 963,
        "end": 984,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 963,
          "end": 964,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 969,
          "end": 984,
          "callee": {
            "type": "Identifier",
            "start": 973,
            "end": 979,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 980,
              "end": 983,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 986,
      "end": 1092,
      "test": {
        "type": "BinaryExpression",
        "start": 990,
        "end": 997,
        "left": {
          "type": "Identifier",
          "start": 990,
          "end": 991,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 996,
          "end": 997,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 999,
        "end": 1092,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1003,
            "end": 1090,
            "argument": {
              "type": "NewExpression",
              "start": 1009,
              "end": 1089,
              "callee": {
                "type": "Identifier",
                "start": 1013,
                "end": 1025,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1026,
                  "end": 1088,
                  "left": {
                    "type": "Literal",
                    "start": 1026,
                    "end": 1082,
                    "value": "#5: x = true; x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#5: x = true; x >>= new String(\"1\"); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1085,
                    "end": 1088,
                    "expression": {
                      "type": "Identifier",
                      "start": 1086,
                      "end": 1087,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1104,
      "end": 1124,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1104,
        "end": 1123,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1104,
          "end": 1105,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1108,
          "end": 1123,
          "callee": {
            "type": "Identifier",
            "start": 1112,
            "end": 1118,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1119,
              "end": 1122,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1125,
      "end": 1136,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1125,
        "end": 1135,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1125,
          "end": 1126,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1131,
          "end": 1135,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1137,
      "end": 1243,
      "test": {
        "type": "BinaryExpression",
        "start": 1141,
        "end": 1148,
        "left": {
          "type": "Identifier",
          "start": 1141,
          "end": 1142,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1147,
          "end": 1148,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1150,
        "end": 1243,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1154,
            "end": 1241,
            "argument": {
              "type": "NewExpression",
              "start": 1160,
              "end": 1240,
              "callee": {
                "type": "Identifier",
                "start": 1164,
                "end": 1176,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1177,
                  "end": 1239,
                  "left": {
                    "type": "Literal",
                    "start": 1177,
                    "end": 1233,
                    "value": "#6: x = new String(\"1\"); x >>= true; x === 0. Actual: ",
                    "raw": "'#6: x = new String(\"1\"); x >>= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1236,
                    "end": 1239,
                    "expression": {
                      "type": "Identifier",
                      "start": 1237,
                      "end": 1238,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1255,
      "end": 1277,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1255,
        "end": 1276,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1255,
          "end": 1256,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1259,
          "end": 1276,
          "callee": {
            "type": "Identifier",
            "start": 1263,
            "end": 1270,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1271,
              "end": 1275,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1278,
      "end": 1300,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1278,
        "end": 1299,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1278,
          "end": 1279,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1284,
          "end": 1299,
          "callee": {
            "type": "Identifier",
            "start": 1288,
            "end": 1294,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1295,
              "end": 1298,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1301,
      "end": 1420,
      "test": {
        "type": "BinaryExpression",
        "start": 1305,
        "end": 1312,
        "left": {
          "type": "Identifier",
          "start": 1305,
          "end": 1306,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1311,
          "end": 1312,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1314,
        "end": 1420,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1318,
            "end": 1418,
            "argument": {
              "type": "NewExpression",
              "start": 1324,
              "end": 1417,
              "callee": {
                "type": "Identifier",
                "start": 1328,
                "end": 1340,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1341,
                  "end": 1416,
                  "left": {
                    "type": "Literal",
                    "start": 1341,
                    "end": 1410,
                    "value": "#7: x = new Boolean(true); x >>= new String(\"1\"); x === 0. Actual: ",
                    "raw": "'#7: x = new Boolean(true); x >>= new String(\"1\"); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1413,
                    "end": 1416,
                    "expression": {
                      "type": "Identifier",
                      "start": 1414,
                      "end": 1415,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1432,
      "end": 1452,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1432,
        "end": 1451,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1432,
          "end": 1433,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1436,
          "end": 1451,
          "callee": {
            "type": "Identifier",
            "start": 1440,
            "end": 1446,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1447,
              "end": 1450,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1453,
      "end": 1477,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1453,
        "end": 1476,
        "operator": ">>=",
        "left": {
          "type": "Identifier",
          "start": 1453,
          "end": 1454,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 1459,
          "end": 1476,
          "callee": {
            "type": "Identifier",
            "start": 1463,
            "end": 1470,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1471,
              "end": 1475,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1478,
      "end": 1597,
      "test": {
        "type": "BinaryExpression",
        "start": 1482,
        "end": 1489,
        "left": {
          "type": "Identifier",
          "start": 1482,
          "end": 1483,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1488,
          "end": 1489,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1491,
        "end": 1597,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1495,
            "end": 1595,
            "argument": {
              "type": "NewExpression",
              "start": 1501,
              "end": 1594,
              "callee": {
                "type": "Identifier",
                "start": 1505,
                "end": 1517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1518,
                  "end": 1593,
                  "left": {
                    "type": "Literal",
                    "start": 1518,
                    "end": 1587,
                    "value": "#8: x = new String(\"1\"); x >>= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#8: x = new String(\"1\"); x >>= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1590,
                    "end": 1593,
                    "expression": {
                      "type": "Identifier",
                      "start": 1591,
                      "end": 1592,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}