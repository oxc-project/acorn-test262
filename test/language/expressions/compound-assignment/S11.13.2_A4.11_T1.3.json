{
  "type": "Program",
  "start": 0,
  "end": 1147,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 306,
      "end": 312,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 310,
          "end": 311,
          "id": {
            "type": "Identifier",
            "start": 310,
            "end": 311,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 324,
      "end": 332,
      "expression": {
        "type": "AssignmentExpression",
        "start": 324,
        "end": 331,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 324,
          "end": 325,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 328,
          "end": 331,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 333,
      "end": 342,
      "expression": {
        "type": "AssignmentExpression",
        "start": 333,
        "end": 341,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 333,
          "end": 334,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 338,
          "end": 341,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 343,
      "end": 435,
      "test": {
        "type": "BinaryExpression",
        "start": 347,
        "end": 354,
        "left": {
          "type": "Identifier",
          "start": 347,
          "end": 348,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 353,
          "end": 354,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 356,
        "end": 435,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 360,
            "end": 433,
            "argument": {
              "type": "NewExpression",
              "start": 366,
              "end": 432,
              "callee": {
                "type": "Identifier",
                "start": 370,
                "end": 382,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 383,
                  "end": 431,
                  "left": {
                    "type": "Literal",
                    "start": 383,
                    "end": 425,
                    "value": "#1: x = \"1\"; x |= \"1\"; x === 1. Actual: ",
                    "raw": "'#1: x = \"1\"; x |= \"1\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 428,
                    "end": 431,
                    "expression": {
                      "type": "Identifier",
                      "start": 429,
                      "end": 430,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 447,
      "end": 467,
      "expression": {
        "type": "AssignmentExpression",
        "start": 447,
        "end": 466,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 447,
          "end": 448,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 451,
          "end": 466,
          "callee": {
            "type": "Identifier",
            "start": 455,
            "end": 461,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 462,
              "end": 465,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 468,
      "end": 477,
      "expression": {
        "type": "AssignmentExpression",
        "start": 468,
        "end": 476,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 468,
          "end": 469,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 473,
          "end": 476,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 478,
      "end": 582,
      "test": {
        "type": "BinaryExpression",
        "start": 482,
        "end": 489,
        "left": {
          "type": "Identifier",
          "start": 482,
          "end": 483,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 488,
          "end": 489,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 491,
        "end": 582,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 495,
            "end": 580,
            "argument": {
              "type": "NewExpression",
              "start": 501,
              "end": 579,
              "callee": {
                "type": "Identifier",
                "start": 505,
                "end": 517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 518,
                  "end": 578,
                  "left": {
                    "type": "Literal",
                    "start": 518,
                    "end": 572,
                    "value": "#2: x = new String(\"1\"); x |= \"1\"; x === 1. Actual: ",
                    "raw": "'#2: x = new String(\"1\"); x |= \"1\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 575,
                    "end": 578,
                    "expression": {
                      "type": "Identifier",
                      "start": 576,
                      "end": 577,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 594,
      "end": 602,
      "expression": {
        "type": "AssignmentExpression",
        "start": 594,
        "end": 601,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 594,
          "end": 595,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 598,
          "end": 601,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 603,
      "end": 624,
      "expression": {
        "type": "AssignmentExpression",
        "start": 603,
        "end": 623,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 603,
          "end": 604,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 608,
          "end": 623,
          "callee": {
            "type": "Identifier",
            "start": 612,
            "end": 618,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 619,
              "end": 622,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 625,
      "end": 729,
      "test": {
        "type": "BinaryExpression",
        "start": 629,
        "end": 636,
        "left": {
          "type": "Identifier",
          "start": 629,
          "end": 630,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 635,
          "end": 636,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 638,
        "end": 729,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 642,
            "end": 727,
            "argument": {
              "type": "NewExpression",
              "start": 648,
              "end": 726,
              "callee": {
                "type": "Identifier",
                "start": 652,
                "end": 664,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 665,
                  "end": 725,
                  "left": {
                    "type": "Literal",
                    "start": 665,
                    "end": 719,
                    "value": "#3: x = \"1\"; x |= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#3: x = \"1\"; x |= new String(\"1\"); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 722,
                    "end": 725,
                    "expression": {
                      "type": "Identifier",
                      "start": 723,
                      "end": 724,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 741,
      "end": 761,
      "expression": {
        "type": "AssignmentExpression",
        "start": 741,
        "end": 760,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 741,
          "end": 742,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 745,
          "end": 760,
          "callee": {
            "type": "Identifier",
            "start": 749,
            "end": 755,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 756,
              "end": 759,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 762,
      "end": 783,
      "expression": {
        "type": "AssignmentExpression",
        "start": 762,
        "end": 782,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 762,
          "end": 763,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 767,
          "end": 782,
          "callee": {
            "type": "Identifier",
            "start": 771,
            "end": 777,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 778,
              "end": 781,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 784,
      "end": 900,
      "test": {
        "type": "BinaryExpression",
        "start": 788,
        "end": 795,
        "left": {
          "type": "Identifier",
          "start": 788,
          "end": 789,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 794,
          "end": 795,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 797,
        "end": 900,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 801,
            "end": 898,
            "argument": {
              "type": "NewExpression",
              "start": 807,
              "end": 897,
              "callee": {
                "type": "Identifier",
                "start": 811,
                "end": 823,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 824,
                  "end": 896,
                  "left": {
                    "type": "Literal",
                    "start": 824,
                    "end": 890,
                    "value": "#4: x = new String(\"1\"); x |= new String(\"1\"); x === 1. Actual: ",
                    "raw": "'#4: x = new String(\"1\"); x |= new String(\"1\"); x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 893,
                    "end": 896,
                    "expression": {
                      "type": "Identifier",
                      "start": 894,
                      "end": 895,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 912,
      "end": 920,
      "expression": {
        "type": "AssignmentExpression",
        "start": 912,
        "end": 919,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 912,
          "end": 913,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 916,
          "end": 919,
          "value": "x",
          "raw": "\"x\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 921,
      "end": 930,
      "expression": {
        "type": "AssignmentExpression",
        "start": 921,
        "end": 929,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 921,
          "end": 922,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 926,
          "end": 929,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 931,
      "end": 1023,
      "test": {
        "type": "BinaryExpression",
        "start": 935,
        "end": 942,
        "left": {
          "type": "Identifier",
          "start": 935,
          "end": 936,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 941,
          "end": 942,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 944,
        "end": 1023,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 948,
            "end": 1021,
            "argument": {
              "type": "NewExpression",
              "start": 954,
              "end": 1020,
              "callee": {
                "type": "Identifier",
                "start": 958,
                "end": 970,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 971,
                  "end": 1019,
                  "left": {
                    "type": "Literal",
                    "start": 971,
                    "end": 1013,
                    "value": "#5: x = \"x\"; x |= \"1\"; x === 1. Actual: ",
                    "raw": "'#5: x = \"x\"; x |= \"1\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1016,
                    "end": 1019,
                    "expression": {
                      "type": "Identifier",
                      "start": 1017,
                      "end": 1018,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1035,
      "end": 1043,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1035,
        "end": 1042,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1035,
          "end": 1036,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1039,
          "end": 1042,
          "value": "1",
          "raw": "\"1\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1044,
      "end": 1053,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1044,
        "end": 1052,
        "operator": "|=",
        "left": {
          "type": "Identifier",
          "start": 1044,
          "end": 1045,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 1049,
          "end": 1052,
          "value": "x",
          "raw": "\"x\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 1054,
      "end": 1146,
      "test": {
        "type": "BinaryExpression",
        "start": 1058,
        "end": 1065,
        "left": {
          "type": "Identifier",
          "start": 1058,
          "end": 1059,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1064,
          "end": 1065,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1067,
        "end": 1146,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1071,
            "end": 1144,
            "argument": {
              "type": "NewExpression",
              "start": 1077,
              "end": 1143,
              "callee": {
                "type": "Identifier",
                "start": 1081,
                "end": 1093,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1094,
                  "end": 1142,
                  "left": {
                    "type": "Literal",
                    "start": 1094,
                    "end": 1136,
                    "value": "#6: x = \"1\"; x |= \"x\"; x === 1. Actual: ",
                    "raw": "'#6: x = \"1\"; x |= \"x\"; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1139,
                    "end": 1142,
                    "expression": {
                      "type": "Identifier",
                      "start": 1140,
                      "end": 1141,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}