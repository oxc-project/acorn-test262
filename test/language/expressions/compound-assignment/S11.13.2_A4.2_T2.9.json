{
  "type": "Program",
  "start": 0,
  "end": 977,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 348,
      "end": 354,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 352,
          "end": 353,
          "id": {
            "type": "Identifier",
            "start": 352,
            "end": 353,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 366,
      "end": 375,
      "expression": {
        "type": "AssignmentExpression",
        "start": 366,
        "end": 374,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 366,
          "end": 367,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 370,
          "end": 374,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 376,
      "end": 386,
      "expression": {
        "type": "AssignmentExpression",
        "start": 376,
        "end": 385,
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "start": 376,
          "end": 377,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 381,
          "end": 385,
          "value": null,
          "raw": "null",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 387,
      "end": 512,
      "test": {
        "type": "BinaryExpression",
        "start": 391,
        "end": 421,
        "left": {
          "type": "Identifier",
          "start": 391,
          "end": 392,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 397,
          "end": 421,
          "object": {
            "type": "Identifier",
            "start": 397,
            "end": 403,
            "name": "Number"
          },
          "property": {
            "type": "Identifier",
            "start": 404,
            "end": 421,
            "name": "POSITIVE_INFINITY"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 423,
        "end": 512,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 427,
            "end": 510,
            "argument": {
              "type": "NewExpression",
              "start": 433,
              "end": 509,
              "callee": {
                "type": "Identifier",
                "start": 437,
                "end": 449,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 450,
                  "end": 508,
                  "left": {
                    "type": "Literal",
                    "start": 450,
                    "end": 502,
                    "value": "#1: x = true; x /= null; x === +Infinity. Actual: ",
                    "raw": "'#1: x = true; x /= null; x === +Infinity. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 505,
                    "end": 508,
                    "expression": {
                      "type": "Identifier",
                      "start": 506,
                      "end": 507,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 524,
      "end": 533,
      "expression": {
        "type": "AssignmentExpression",
        "start": 524,
        "end": 532,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 524,
          "end": 525,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 528,
          "end": 532,
          "value": null,
          "raw": "null",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 534,
      "end": 544,
      "expression": {
        "type": "AssignmentExpression",
        "start": 534,
        "end": 543,
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "start": 534,
          "end": 535,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 539,
          "end": 543,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 545,
      "end": 639,
      "test": {
        "type": "BinaryExpression",
        "start": 549,
        "end": 556,
        "left": {
          "type": "Identifier",
          "start": 549,
          "end": 550,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 555,
          "end": 556,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 558,
        "end": 639,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 562,
            "end": 637,
            "argument": {
              "type": "NewExpression",
              "start": 568,
              "end": 636,
              "callee": {
                "type": "Identifier",
                "start": 572,
                "end": 584,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 585,
                  "end": 635,
                  "left": {
                    "type": "Literal",
                    "start": 585,
                    "end": 629,
                    "value": "#2: x = null; x /= true; x === 0. Actual: ",
                    "raw": "'#2: x = null; x /= true; x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 632,
                    "end": 635,
                    "expression": {
                      "type": "Identifier",
                      "start": 633,
                      "end": 634,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 651,
      "end": 673,
      "expression": {
        "type": "AssignmentExpression",
        "start": 651,
        "end": 672,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 651,
          "end": 652,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 655,
          "end": 672,
          "callee": {
            "type": "Identifier",
            "start": 659,
            "end": 666,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 667,
              "end": 671,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 674,
      "end": 684,
      "expression": {
        "type": "AssignmentExpression",
        "start": 674,
        "end": 683,
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "start": 674,
          "end": 675,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 679,
          "end": 683,
          "value": null,
          "raw": "null",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 685,
      "end": 823,
      "test": {
        "type": "BinaryExpression",
        "start": 689,
        "end": 719,
        "left": {
          "type": "Identifier",
          "start": 689,
          "end": 690,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 695,
          "end": 719,
          "object": {
            "type": "Identifier",
            "start": 695,
            "end": 701,
            "name": "Number"
          },
          "property": {
            "type": "Identifier",
            "start": 702,
            "end": 719,
            "name": "POSITIVE_INFINITY"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 721,
        "end": 823,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 725,
            "end": 821,
            "argument": {
              "type": "NewExpression",
              "start": 731,
              "end": 820,
              "callee": {
                "type": "Identifier",
                "start": 735,
                "end": 747,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 748,
                  "end": 819,
                  "left": {
                    "type": "Literal",
                    "start": 748,
                    "end": 813,
                    "value": "#3: x = new Boolean(true); x /= null; x === +Infinity. Actual: ",
                    "raw": "'#3: x = new Boolean(true); x /= null; x === +Infinity. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 816,
                    "end": 819,
                    "expression": {
                      "type": "Identifier",
                      "start": 817,
                      "end": 818,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 835,
      "end": 844,
      "expression": {
        "type": "AssignmentExpression",
        "start": 835,
        "end": 843,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 835,
          "end": 836,
          "name": "x"
        },
        "right": {
          "type": "Literal",
          "start": 839,
          "end": 843,
          "value": null,
          "raw": "null",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 845,
      "end": 868,
      "expression": {
        "type": "AssignmentExpression",
        "start": 845,
        "end": 867,
        "operator": "/=",
        "left": {
          "type": "Identifier",
          "start": 845,
          "end": 846,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 850,
          "end": 867,
          "callee": {
            "type": "Identifier",
            "start": 854,
            "end": 861,
            "name": "Boolean"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 862,
              "end": 866,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 869,
      "end": 976,
      "test": {
        "type": "BinaryExpression",
        "start": 873,
        "end": 880,
        "left": {
          "type": "Identifier",
          "start": 873,
          "end": 874,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 879,
          "end": 880,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 882,
        "end": 976,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 886,
            "end": 974,
            "argument": {
              "type": "NewExpression",
              "start": 892,
              "end": 973,
              "callee": {
                "type": "Identifier",
                "start": 896,
                "end": 908,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 909,
                  "end": 972,
                  "left": {
                    "type": "Literal",
                    "start": 909,
                    "end": 966,
                    "value": "#4: x = null; x /= new Boolean(true); x === 0. Actual: ",
                    "raw": "'#4: x = null; x /= new Boolean(true); x === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 969,
                    "end": 972,
                    "expression": {
                      "type": "Identifier",
                      "start": 970,
                      "end": 971,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}