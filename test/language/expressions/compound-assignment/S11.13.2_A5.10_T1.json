{
  "type": "Program",
  "start": 0,
  "end": 1003,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 655,
      "end": 986,
      "id": {
        "type": "Identifier",
        "start": 664,
        "end": 676,
        "name": "testFunction"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 679,
        "end": 986,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 683,
            "end": 693,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 687,
                "end": 692,
                "id": {
                  "type": "Identifier",
                  "start": 687,
                  "end": 688,
                  "name": "x"
                },
                "init": {
                  "type": "Literal",
                  "start": 691,
                  "end": 692,
                  "value": 0,
                  "raw": "0"
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "start": 696,
            "end": 771,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 700,
                "end": 770,
                "id": {
                  "type": "Identifier",
                  "start": 700,
                  "end": 705,
                  "name": "scope"
                },
                "init": {
                  "type": "ObjectExpression",
                  "start": 708,
                  "end": 770,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 714,
                      "end": 766,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 718,
                        "end": 719,
                        "name": "x"
                      },
                      "kind": "get",
                      "value": {
                        "type": "FunctionExpression",
                        "start": 719,
                        "end": 766,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 722,
                          "end": 766,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 730,
                              "end": 744,
                              "expression": {
                                "type": "UnaryExpression",
                                "start": 730,
                                "end": 743,
                                "operator": "delete",
                                "prefix": true,
                                "argument": {
                                  "type": "MemberExpression",
                                  "start": 737,
                                  "end": 743,
                                  "object": {
                                    "type": "ThisExpression",
                                    "start": 737,
                                    "end": 741
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 742,
                                    "end": 743,
                                    "name": "x"
                                  },
                                  "computed": false,
                                  "optional": false
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "start": 751,
                              "end": 760,
                              "argument": {
                                "type": "Literal",
                                "start": 758,
                                "end": 759,
                                "value": 2,
                                "raw": "2"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "WithStatement",
            "start": 775,
            "end": 805,
            "object": {
              "type": "Identifier",
              "start": 781,
              "end": 786,
              "name": "scope"
            },
            "body": {
              "type": "BlockStatement",
              "start": 788,
              "end": 805,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 794,
                  "end": 801,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 794,
                    "end": 800,
                    "operator": "^=",
                    "left": {
                      "type": "Identifier",
                      "start": 794,
                      "end": 795,
                      "name": "x"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 799,
                      "end": 800,
                      "value": 3,
                      "raw": "3"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "IfStatement",
            "start": 809,
            "end": 904,
            "test": {
              "type": "BinaryExpression",
              "start": 813,
              "end": 826,
              "left": {
                "type": "MemberExpression",
                "start": 813,
                "end": 820,
                "object": {
                  "type": "Identifier",
                  "start": 813,
                  "end": 818,
                  "name": "scope"
                },
                "property": {
                  "type": "Identifier",
                  "start": 819,
                  "end": 820,
                  "name": "x"
                },
                "computed": false,
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 825,
                "end": 826,
                "value": 1,
                "raw": "1"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 828,
              "end": 904,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 834,
                  "end": 900,
                  "argument": {
                    "type": "NewExpression",
                    "start": 840,
                    "end": 899,
                    "callee": {
                      "type": "Identifier",
                      "start": 844,
                      "end": 856,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 857,
                        "end": 898,
                        "left": {
                          "type": "Literal",
                          "start": 857,
                          "end": 886,
                          "value": "#1: scope.x === 1. Actual: ",
                          "raw": "'#1: scope.x === 1. Actual: '"
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 889,
                          "end": 898,
                          "expression": {
                            "type": "MemberExpression",
                            "start": 890,
                            "end": 897,
                            "object": {
                              "type": "Identifier",
                              "start": 890,
                              "end": 895,
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 896,
                              "end": 897,
                              "name": "x"
                            },
                            "computed": false,
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "start": 907,
            "end": 984,
            "test": {
              "type": "BinaryExpression",
              "start": 911,
              "end": 918,
              "left": {
                "type": "Identifier",
                "start": 911,
                "end": 912,
                "name": "x"
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 917,
                "end": 918,
                "value": 0,
                "raw": "0"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 920,
              "end": 984,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 926,
                  "end": 980,
                  "argument": {
                    "type": "NewExpression",
                    "start": 932,
                    "end": 979,
                    "callee": {
                      "type": "Identifier",
                      "start": 936,
                      "end": 948,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 949,
                        "end": 978,
                        "left": {
                          "type": "Literal",
                          "start": 949,
                          "end": 972,
                          "value": "#2: x === 0. Actual: ",
                          "raw": "'#2: x === 0. Actual: '"
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 975,
                          "end": 978,
                          "expression": {
                            "type": "Identifier",
                            "start": 976,
                            "end": 977,
                            "name": "x"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 987,
      "end": 1002,
      "expression": {
        "type": "CallExpression",
        "start": 987,
        "end": 1001,
        "callee": {
          "type": "Identifier",
          "start": 987,
          "end": 999,
          "name": "testFunction"
        },
        "arguments": [],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}