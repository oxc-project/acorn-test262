{
  "type": "Program",
  "start": 0,
  "end": 3362,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 330,
      "end": 401,
      "expression": {
        "type": "CallExpression",
        "start": 330,
        "end": 400,
        "callee": {
          "type": "MemberExpression",
          "start": 330,
          "end": 346,
          "object": {
            "type": "Identifier",
            "start": 330,
            "end": 336,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 337,
            "end": 346,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 347,
            "end": 356,
            "left": {
              "type": "Literal",
              "start": 347,
              "end": 349,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 354,
              "end": 356,
              "value": "",
              "raw": "''",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 358,
            "end": 362,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 364,
            "end": 399,
            "value": "The result of (0n !== \"\") is true",
            "raw": "'The result of (0n !== \"\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 402,
      "end": 473,
      "expression": {
        "type": "CallExpression",
        "start": 402,
        "end": 472,
        "callee": {
          "type": "MemberExpression",
          "start": 402,
          "end": 418,
          "object": {
            "type": "Identifier",
            "start": 402,
            "end": 408,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 409,
            "end": 418,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 419,
            "end": 428,
            "left": {
              "type": "Literal",
              "start": 419,
              "end": 421,
              "value": "",
              "raw": "''",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 426,
              "end": 428,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 430,
            "end": 434,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 436,
            "end": 471,
            "value": "The result of (\"\" !== 0n) is true",
            "raw": "'The result of (\"\" !== 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 474,
      "end": 549,
      "expression": {
        "type": "CallExpression",
        "start": 474,
        "end": 548,
        "callee": {
          "type": "MemberExpression",
          "start": 474,
          "end": 490,
          "object": {
            "type": "Identifier",
            "start": 474,
            "end": 480,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 481,
            "end": 490,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 491,
            "end": 502,
            "left": {
              "type": "Literal",
              "start": 491,
              "end": 493,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 498,
              "end": 502,
              "value": "-0",
              "raw": "'-0'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 504,
            "end": 508,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 510,
            "end": 547,
            "value": "The result of (0n !== \"-0\") is true",
            "raw": "'The result of (0n !== \"-0\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 550,
      "end": 625,
      "expression": {
        "type": "CallExpression",
        "start": 550,
        "end": 624,
        "callee": {
          "type": "MemberExpression",
          "start": 550,
          "end": 566,
          "object": {
            "type": "Identifier",
            "start": 550,
            "end": 556,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 557,
            "end": 566,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 567,
            "end": 578,
            "left": {
              "type": "Literal",
              "start": 567,
              "end": 571,
              "value": "-0",
              "raw": "'-0'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 576,
              "end": 578,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 580,
            "end": 584,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 586,
            "end": 623,
            "value": "The result of (\"-0\" !== 0n) is true",
            "raw": "'The result of (\"-0\" !== 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 626,
      "end": 699,
      "expression": {
        "type": "CallExpression",
        "start": 626,
        "end": 698,
        "callee": {
          "type": "MemberExpression",
          "start": 626,
          "end": 642,
          "object": {
            "type": "Identifier",
            "start": 626,
            "end": 632,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 633,
            "end": 642,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 643,
            "end": 653,
            "left": {
              "type": "Literal",
              "start": 643,
              "end": 645,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 650,
              "end": 653,
              "value": "0",
              "raw": "'0'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 655,
            "end": 659,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 661,
            "end": 697,
            "value": "The result of (0n !== \"0\") is true",
            "raw": "'The result of (0n !== \"0\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 700,
      "end": 773,
      "expression": {
        "type": "CallExpression",
        "start": 700,
        "end": 772,
        "callee": {
          "type": "MemberExpression",
          "start": 700,
          "end": 716,
          "object": {
            "type": "Identifier",
            "start": 700,
            "end": 706,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 707,
            "end": 716,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 717,
            "end": 727,
            "left": {
              "type": "Literal",
              "start": 717,
              "end": 720,
              "value": "0",
              "raw": "'0'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 725,
              "end": 727,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 729,
            "end": 733,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 735,
            "end": 771,
            "value": "The result of (\"0\" !== 0n) is true",
            "raw": "'The result of (\"0\" !== 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 774,
      "end": 849,
      "expression": {
        "type": "CallExpression",
        "start": 774,
        "end": 848,
        "callee": {
          "type": "MemberExpression",
          "start": 774,
          "end": 790,
          "object": {
            "type": "Identifier",
            "start": 774,
            "end": 780,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 781,
            "end": 790,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 791,
            "end": 802,
            "left": {
              "type": "Literal",
              "start": 791,
              "end": 793,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 798,
              "end": 802,
              "value": "-1",
              "raw": "'-1'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 804,
            "end": 808,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 810,
            "end": 847,
            "value": "The result of (0n !== \"-1\") is true",
            "raw": "'The result of (0n !== \"-1\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 850,
      "end": 925,
      "expression": {
        "type": "CallExpression",
        "start": 850,
        "end": 924,
        "callee": {
          "type": "MemberExpression",
          "start": 850,
          "end": 866,
          "object": {
            "type": "Identifier",
            "start": 850,
            "end": 856,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 857,
            "end": 866,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 867,
            "end": 878,
            "left": {
              "type": "Literal",
              "start": 867,
              "end": 871,
              "value": "-1",
              "raw": "'-1'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 876,
              "end": 878,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 880,
            "end": 884,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 886,
            "end": 923,
            "value": "The result of (\"-1\" !== 0n) is true",
            "raw": "'The result of (\"-1\" !== 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 926,
      "end": 999,
      "expression": {
        "type": "CallExpression",
        "start": 926,
        "end": 998,
        "callee": {
          "type": "MemberExpression",
          "start": 926,
          "end": 942,
          "object": {
            "type": "Identifier",
            "start": 926,
            "end": 932,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 933,
            "end": 942,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 943,
            "end": 953,
            "left": {
              "type": "Literal",
              "start": 943,
              "end": 945,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 950,
              "end": 953,
              "value": "1",
              "raw": "'1'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 955,
            "end": 959,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 961,
            "end": 997,
            "value": "The result of (0n !== \"1\") is true",
            "raw": "'The result of (0n !== \"1\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1000,
      "end": 1073,
      "expression": {
        "type": "CallExpression",
        "start": 1000,
        "end": 1072,
        "callee": {
          "type": "MemberExpression",
          "start": 1000,
          "end": 1016,
          "object": {
            "type": "Identifier",
            "start": 1000,
            "end": 1006,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1007,
            "end": 1016,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1017,
            "end": 1027,
            "left": {
              "type": "Literal",
              "start": 1017,
              "end": 1020,
              "value": "1",
              "raw": "'1'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1025,
              "end": 1027,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1029,
            "end": 1033,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1035,
            "end": 1071,
            "value": "The result of (\"1\" !== 0n) is true",
            "raw": "'The result of (\"1\" !== 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1074,
      "end": 1151,
      "expression": {
        "type": "CallExpression",
        "start": 1074,
        "end": 1150,
        "callee": {
          "type": "MemberExpression",
          "start": 1074,
          "end": 1090,
          "object": {
            "type": "Identifier",
            "start": 1074,
            "end": 1080,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1081,
            "end": 1090,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1091,
            "end": 1103,
            "left": {
              "type": "Literal",
              "start": 1091,
              "end": 1093,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1098,
              "end": 1103,
              "value": "foo",
              "raw": "'foo'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1105,
            "end": 1109,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1111,
            "end": 1149,
            "value": "The result of (0n !== \"foo\") is true",
            "raw": "'The result of (0n !== \"foo\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1152,
      "end": 1229,
      "expression": {
        "type": "CallExpression",
        "start": 1152,
        "end": 1228,
        "callee": {
          "type": "MemberExpression",
          "start": 1152,
          "end": 1168,
          "object": {
            "type": "Identifier",
            "start": 1152,
            "end": 1158,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1159,
            "end": 1168,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1169,
            "end": 1181,
            "left": {
              "type": "Literal",
              "start": 1169,
              "end": 1174,
              "value": "foo",
              "raw": "'foo'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1179,
              "end": 1181,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1183,
            "end": 1187,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1189,
            "end": 1227,
            "value": "The result of (\"foo\" !== 0n) is true",
            "raw": "'The result of (\"foo\" !== 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1230,
      "end": 1301,
      "expression": {
        "type": "CallExpression",
        "start": 1230,
        "end": 1300,
        "callee": {
          "type": "MemberExpression",
          "start": 1230,
          "end": 1246,
          "object": {
            "type": "Identifier",
            "start": 1230,
            "end": 1236,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1237,
            "end": 1246,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1247,
            "end": 1256,
            "left": {
              "type": "Literal",
              "start": 1247,
              "end": 1249,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1254,
              "end": 1256,
              "value": "",
              "raw": "''",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1258,
            "end": 1262,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1264,
            "end": 1299,
            "value": "The result of (1n !== \"\") is true",
            "raw": "'The result of (1n !== \"\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1302,
      "end": 1373,
      "expression": {
        "type": "CallExpression",
        "start": 1302,
        "end": 1372,
        "callee": {
          "type": "MemberExpression",
          "start": 1302,
          "end": 1318,
          "object": {
            "type": "Identifier",
            "start": 1302,
            "end": 1308,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1309,
            "end": 1318,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1319,
            "end": 1328,
            "left": {
              "type": "Literal",
              "start": 1319,
              "end": 1321,
              "value": "",
              "raw": "''",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1326,
              "end": 1328,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1330,
            "end": 1334,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1336,
            "end": 1371,
            "value": "The result of (\"\" !== 1n) is true",
            "raw": "'The result of (\"\" !== 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1374,
      "end": 1449,
      "expression": {
        "type": "CallExpression",
        "start": 1374,
        "end": 1448,
        "callee": {
          "type": "MemberExpression",
          "start": 1374,
          "end": 1390,
          "object": {
            "type": "Identifier",
            "start": 1374,
            "end": 1380,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1381,
            "end": 1390,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1391,
            "end": 1402,
            "left": {
              "type": "Literal",
              "start": 1391,
              "end": 1393,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1398,
              "end": 1402,
              "value": "-0",
              "raw": "'-0'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1404,
            "end": 1408,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1410,
            "end": 1447,
            "value": "The result of (1n !== \"-0\") is true",
            "raw": "'The result of (1n !== \"-0\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1450,
      "end": 1525,
      "expression": {
        "type": "CallExpression",
        "start": 1450,
        "end": 1524,
        "callee": {
          "type": "MemberExpression",
          "start": 1450,
          "end": 1466,
          "object": {
            "type": "Identifier",
            "start": 1450,
            "end": 1456,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1457,
            "end": 1466,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1467,
            "end": 1478,
            "left": {
              "type": "Literal",
              "start": 1467,
              "end": 1471,
              "value": "-0",
              "raw": "'-0'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1476,
              "end": 1478,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1480,
            "end": 1484,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1486,
            "end": 1523,
            "value": "The result of (\"-0\" !== 1n) is true",
            "raw": "'The result of (\"-0\" !== 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1526,
      "end": 1599,
      "expression": {
        "type": "CallExpression",
        "start": 1526,
        "end": 1598,
        "callee": {
          "type": "MemberExpression",
          "start": 1526,
          "end": 1542,
          "object": {
            "type": "Identifier",
            "start": 1526,
            "end": 1532,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1533,
            "end": 1542,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1543,
            "end": 1553,
            "left": {
              "type": "Literal",
              "start": 1543,
              "end": 1545,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1550,
              "end": 1553,
              "value": "0",
              "raw": "'0'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1555,
            "end": 1559,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1561,
            "end": 1597,
            "value": "The result of (1n !== \"0\") is true",
            "raw": "'The result of (1n !== \"0\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1600,
      "end": 1673,
      "expression": {
        "type": "CallExpression",
        "start": 1600,
        "end": 1672,
        "callee": {
          "type": "MemberExpression",
          "start": 1600,
          "end": 1616,
          "object": {
            "type": "Identifier",
            "start": 1600,
            "end": 1606,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1607,
            "end": 1616,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1617,
            "end": 1627,
            "left": {
              "type": "Literal",
              "start": 1617,
              "end": 1620,
              "value": "0",
              "raw": "'0'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1625,
              "end": 1627,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1629,
            "end": 1633,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1635,
            "end": 1671,
            "value": "The result of (\"0\" !== 1n) is true",
            "raw": "'The result of (\"0\" !== 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1674,
      "end": 1749,
      "expression": {
        "type": "CallExpression",
        "start": 1674,
        "end": 1748,
        "callee": {
          "type": "MemberExpression",
          "start": 1674,
          "end": 1690,
          "object": {
            "type": "Identifier",
            "start": 1674,
            "end": 1680,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1681,
            "end": 1690,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1691,
            "end": 1702,
            "left": {
              "type": "Literal",
              "start": 1691,
              "end": 1693,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1698,
              "end": 1702,
              "value": "-1",
              "raw": "'-1'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1704,
            "end": 1708,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1710,
            "end": 1747,
            "value": "The result of (1n !== \"-1\") is true",
            "raw": "'The result of (1n !== \"-1\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1750,
      "end": 1825,
      "expression": {
        "type": "CallExpression",
        "start": 1750,
        "end": 1824,
        "callee": {
          "type": "MemberExpression",
          "start": 1750,
          "end": 1766,
          "object": {
            "type": "Identifier",
            "start": 1750,
            "end": 1756,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1757,
            "end": 1766,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1767,
            "end": 1778,
            "left": {
              "type": "Literal",
              "start": 1767,
              "end": 1771,
              "value": "-1",
              "raw": "'-1'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1776,
              "end": 1778,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1780,
            "end": 1784,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1786,
            "end": 1823,
            "value": "The result of (\"-1\" !== 1n) is true",
            "raw": "'The result of (\"-1\" !== 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1826,
      "end": 1899,
      "expression": {
        "type": "CallExpression",
        "start": 1826,
        "end": 1898,
        "callee": {
          "type": "MemberExpression",
          "start": 1826,
          "end": 1842,
          "object": {
            "type": "Identifier",
            "start": 1826,
            "end": 1832,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1833,
            "end": 1842,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1843,
            "end": 1853,
            "left": {
              "type": "Literal",
              "start": 1843,
              "end": 1845,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1850,
              "end": 1853,
              "value": "1",
              "raw": "'1'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1855,
            "end": 1859,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1861,
            "end": 1897,
            "value": "The result of (1n !== \"1\") is true",
            "raw": "'The result of (1n !== \"1\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1900,
      "end": 1973,
      "expression": {
        "type": "CallExpression",
        "start": 1900,
        "end": 1972,
        "callee": {
          "type": "MemberExpression",
          "start": 1900,
          "end": 1916,
          "object": {
            "type": "Identifier",
            "start": 1900,
            "end": 1906,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1907,
            "end": 1916,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1917,
            "end": 1927,
            "left": {
              "type": "Literal",
              "start": 1917,
              "end": 1920,
              "value": "1",
              "raw": "'1'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1925,
              "end": 1927,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1929,
            "end": 1933,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1935,
            "end": 1971,
            "value": "The result of (\"1\" !== 1n) is true",
            "raw": "'The result of (\"1\" !== 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1974,
      "end": 2051,
      "expression": {
        "type": "CallExpression",
        "start": 1974,
        "end": 2050,
        "callee": {
          "type": "MemberExpression",
          "start": 1974,
          "end": 1990,
          "object": {
            "type": "Identifier",
            "start": 1974,
            "end": 1980,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1981,
            "end": 1990,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1991,
            "end": 2003,
            "left": {
              "type": "Literal",
              "start": 1991,
              "end": 1993,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 1998,
              "end": 2003,
              "value": "foo",
              "raw": "'foo'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 2005,
            "end": 2009,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2011,
            "end": 2049,
            "value": "The result of (1n !== \"foo\") is true",
            "raw": "'The result of (1n !== \"foo\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2052,
      "end": 2129,
      "expression": {
        "type": "CallExpression",
        "start": 2052,
        "end": 2128,
        "callee": {
          "type": "MemberExpression",
          "start": 2052,
          "end": 2068,
          "object": {
            "type": "Identifier",
            "start": 2052,
            "end": 2058,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2059,
            "end": 2068,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2069,
            "end": 2081,
            "left": {
              "type": "Literal",
              "start": 2069,
              "end": 2074,
              "value": "foo",
              "raw": "'foo'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2079,
              "end": 2081,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 2083,
            "end": 2087,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2089,
            "end": 2127,
            "value": "The result of (\"foo\" !== 1n) is true",
            "raw": "'The result of (\"foo\" !== 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2130,
      "end": 2205,
      "expression": {
        "type": "CallExpression",
        "start": 2130,
        "end": 2204,
        "callee": {
          "type": "MemberExpression",
          "start": 2130,
          "end": 2146,
          "object": {
            "type": "Identifier",
            "start": 2130,
            "end": 2136,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2137,
            "end": 2146,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2147,
            "end": 2158,
            "left": {
              "type": "UnaryExpression",
              "start": 2147,
              "end": 2150,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2148,
                "end": 2150,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2155,
              "end": 2158,
              "value": "-",
              "raw": "'-'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 2160,
            "end": 2164,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2166,
            "end": 2203,
            "value": "The result of (-1n !== \"-\") is true",
            "raw": "'The result of (-1n !== \"-\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2206,
      "end": 2281,
      "expression": {
        "type": "CallExpression",
        "start": 2206,
        "end": 2280,
        "callee": {
          "type": "MemberExpression",
          "start": 2206,
          "end": 2222,
          "object": {
            "type": "Identifier",
            "start": 2206,
            "end": 2212,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2213,
            "end": 2222,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2223,
            "end": 2234,
            "left": {
              "type": "Literal",
              "start": 2223,
              "end": 2226,
              "value": "-",
              "raw": "'-'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "UnaryExpression",
              "start": 2231,
              "end": 2234,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2232,
                "end": 2234,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2236,
            "end": 2240,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2242,
            "end": 2279,
            "value": "The result of (\"-\" !== -1n) is true",
            "raw": "'The result of (\"-\" !== -1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2282,
      "end": 2359,
      "expression": {
        "type": "CallExpression",
        "start": 2282,
        "end": 2358,
        "callee": {
          "type": "MemberExpression",
          "start": 2282,
          "end": 2298,
          "object": {
            "type": "Identifier",
            "start": 2282,
            "end": 2288,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2289,
            "end": 2298,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2299,
            "end": 2311,
            "left": {
              "type": "UnaryExpression",
              "start": 2299,
              "end": 2302,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2300,
                "end": 2302,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2307,
              "end": 2311,
              "value": "-0",
              "raw": "'-0'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 2313,
            "end": 2317,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2319,
            "end": 2357,
            "value": "The result of (-1n !== \"-0\") is true",
            "raw": "'The result of (-1n !== \"-0\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2360,
      "end": 2437,
      "expression": {
        "type": "CallExpression",
        "start": 2360,
        "end": 2436,
        "callee": {
          "type": "MemberExpression",
          "start": 2360,
          "end": 2376,
          "object": {
            "type": "Identifier",
            "start": 2360,
            "end": 2366,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2367,
            "end": 2376,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2377,
            "end": 2389,
            "left": {
              "type": "Literal",
              "start": 2377,
              "end": 2381,
              "value": "-0",
              "raw": "'-0'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "UnaryExpression",
              "start": 2386,
              "end": 2389,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2387,
                "end": 2389,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2391,
            "end": 2395,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2397,
            "end": 2435,
            "value": "The result of (\"-0\" !== -1n) is true",
            "raw": "'The result of (\"-0\" !== -1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2438,
      "end": 2515,
      "expression": {
        "type": "CallExpression",
        "start": 2438,
        "end": 2514,
        "callee": {
          "type": "MemberExpression",
          "start": 2438,
          "end": 2454,
          "object": {
            "type": "Identifier",
            "start": 2438,
            "end": 2444,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2445,
            "end": 2454,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2455,
            "end": 2467,
            "left": {
              "type": "UnaryExpression",
              "start": 2455,
              "end": 2458,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2456,
                "end": 2458,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2463,
              "end": 2467,
              "value": "-1",
              "raw": "'-1'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 2469,
            "end": 2473,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2475,
            "end": 2513,
            "value": "The result of (-1n !== \"-1\") is true",
            "raw": "'The result of (-1n !== \"-1\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2516,
      "end": 2593,
      "expression": {
        "type": "CallExpression",
        "start": 2516,
        "end": 2592,
        "callee": {
          "type": "MemberExpression",
          "start": 2516,
          "end": 2532,
          "object": {
            "type": "Identifier",
            "start": 2516,
            "end": 2522,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2523,
            "end": 2532,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2533,
            "end": 2545,
            "left": {
              "type": "Literal",
              "start": 2533,
              "end": 2537,
              "value": "-1",
              "raw": "'-1'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "UnaryExpression",
              "start": 2542,
              "end": 2545,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2543,
                "end": 2545,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2547,
            "end": 2551,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2553,
            "end": 2591,
            "value": "The result of (\"-1\" !== -1n) is true",
            "raw": "'The result of (\"-1\" !== -1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2594,
      "end": 2675,
      "expression": {
        "type": "CallExpression",
        "start": 2594,
        "end": 2674,
        "callee": {
          "type": "MemberExpression",
          "start": 2594,
          "end": 2610,
          "object": {
            "type": "Identifier",
            "start": 2594,
            "end": 2600,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2601,
            "end": 2610,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2611,
            "end": 2625,
            "left": {
              "type": "UnaryExpression",
              "start": 2611,
              "end": 2614,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2612,
                "end": 2614,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2619,
              "end": 2625,
              "value": "-foo",
              "raw": "'-foo'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 2627,
            "end": 2631,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2633,
            "end": 2673,
            "value": "The result of (-1n !== \"-foo\") is true",
            "raw": "'The result of (-1n !== \"-foo\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2676,
      "end": 2757,
      "expression": {
        "type": "CallExpression",
        "start": 2676,
        "end": 2756,
        "callee": {
          "type": "MemberExpression",
          "start": 2676,
          "end": 2692,
          "object": {
            "type": "Identifier",
            "start": 2676,
            "end": 2682,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2683,
            "end": 2692,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2693,
            "end": 2707,
            "left": {
              "type": "Literal",
              "start": 2693,
              "end": 2699,
              "value": "-foo",
              "raw": "'-foo'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "UnaryExpression",
              "start": 2704,
              "end": 2707,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2705,
                "end": 2707,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2709,
            "end": 2713,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2715,
            "end": 2755,
            "value": "The result of (\"-foo\" !== -1n) is true",
            "raw": "'The result of (\"-foo\" !== -1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2759,
      "end": 2908,
      "expression": {
        "type": "CallExpression",
        "start": 2759,
        "end": 2907,
        "callee": {
          "type": "MemberExpression",
          "start": 2759,
          "end": 2775,
          "object": {
            "type": "Identifier",
            "start": 2759,
            "end": 2765,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2766,
            "end": 2775,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2779,
            "end": 2823,
            "left": {
              "type": "Literal",
              "start": 2779,
              "end": 2798,
              "value": null,
              "raw": "900719925474099101n",
              "regex": null,
              "bigint": "900719925474099101"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2803,
              "end": 2823,
              "value": "900719925474099101",
              "raw": "'900719925474099101'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 2827,
            "end": 2831,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2835,
            "end": 2905,
            "value": "The result of (900719925474099101n !== \"900719925474099101\") is true",
            "raw": "'The result of (900719925474099101n !== \"900719925474099101\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2910,
      "end": 3059,
      "expression": {
        "type": "CallExpression",
        "start": 2910,
        "end": 3058,
        "callee": {
          "type": "MemberExpression",
          "start": 2910,
          "end": 2926,
          "object": {
            "type": "Identifier",
            "start": 2910,
            "end": 2916,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2917,
            "end": 2926,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2930,
            "end": 2974,
            "left": {
              "type": "Literal",
              "start": 2930,
              "end": 2950,
              "value": "900719925474099101",
              "raw": "'900719925474099101'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 2955,
              "end": 2974,
              "value": null,
              "raw": "900719925474099101n",
              "regex": null,
              "bigint": "900719925474099101"
            }
          },
          {
            "type": "Literal",
            "start": 2978,
            "end": 2982,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2986,
            "end": 3056,
            "value": "The result of (\"900719925474099101\" !== 900719925474099101n) is true",
            "raw": "'The result of (\"900719925474099101\" !== 900719925474099101n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3061,
      "end": 3210,
      "expression": {
        "type": "CallExpression",
        "start": 3061,
        "end": 3209,
        "callee": {
          "type": "MemberExpression",
          "start": 3061,
          "end": 3077,
          "object": {
            "type": "Identifier",
            "start": 3061,
            "end": 3067,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3068,
            "end": 3077,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3081,
            "end": 3125,
            "left": {
              "type": "Literal",
              "start": 3081,
              "end": 3100,
              "value": null,
              "raw": "900719925474099102n",
              "regex": null,
              "bigint": "900719925474099102"
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 3105,
              "end": 3125,
              "value": "900719925474099101",
              "raw": "'900719925474099101'",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 3129,
            "end": 3133,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3137,
            "end": 3207,
            "value": "The result of (900719925474099102n !== \"900719925474099101\") is true",
            "raw": "'The result of (900719925474099102n !== \"900719925474099101\") is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3212,
      "end": 3361,
      "expression": {
        "type": "CallExpression",
        "start": 3212,
        "end": 3360,
        "callee": {
          "type": "MemberExpression",
          "start": 3212,
          "end": 3228,
          "object": {
            "type": "Identifier",
            "start": 3212,
            "end": 3218,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3219,
            "end": 3228,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3232,
            "end": 3276,
            "left": {
              "type": "Literal",
              "start": 3232,
              "end": 3252,
              "value": "900719925474099101",
              "raw": "'900719925474099101'",
              "regex": null,
              "bigint": null
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 3257,
              "end": 3276,
              "value": null,
              "raw": "900719925474099102n",
              "regex": null,
              "bigint": "900719925474099102"
            }
          },
          {
            "type": "Literal",
            "start": 3280,
            "end": 3284,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3288,
            "end": 3358,
            "value": "The result of (\"900719925474099101\" !== 900719925474099102n) is true",
            "raw": "'The result of (\"900719925474099101\" !== 900719925474099102n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}