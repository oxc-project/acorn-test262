{
  "type": "Program",
  "start": 0,
  "end": 1155,
  "body": [
    {
      "type": "IfStatement",
      "start": 302,
      "end": 403,
      "test": {
        "type": "BinaryExpression",
        "start": 306,
        "end": 335,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 306,
          "end": 325,
          "expression": {
            "type": "BinaryExpression",
            "start": 307,
            "end": 324,
            "left": {
              "type": "Identifier",
              "start": 307,
              "end": 316,
              "name": "undefined"
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 320,
              "end": 324,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 330,
          "end": 335,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 337,
        "end": 403,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 341,
            "end": 401,
            "argument": {
              "type": "NewExpression",
              "start": 347,
              "end": 400,
              "callee": {
                "type": "Identifier",
                "start": 351,
                "end": 363,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 364,
                  "end": 399,
                  "value": "#1: (undefined == true) === false",
                  "raw": "'#1: (undefined == true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 415,
      "end": 510,
      "test": {
        "type": "BinaryExpression",
        "start": 419,
        "end": 445,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 419,
          "end": 435,
          "expression": {
            "type": "BinaryExpression",
            "start": 420,
            "end": 434,
            "left": {
              "type": "Identifier",
              "start": 420,
              "end": 429,
              "name": "undefined"
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 433,
              "end": 434,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 440,
          "end": 445,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 447,
        "end": 510,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 451,
            "end": 508,
            "argument": {
              "type": "NewExpression",
              "start": 457,
              "end": 507,
              "callee": {
                "type": "Identifier",
                "start": 461,
                "end": 473,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 474,
                  "end": 506,
                  "value": "#2: (undefined == 0) === false",
                  "raw": "'#2: (undefined == 0) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 522,
      "end": 637,
      "test": {
        "type": "BinaryExpression",
        "start": 526,
        "end": 562,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 526,
          "end": 552,
          "expression": {
            "type": "BinaryExpression",
            "start": 527,
            "end": 551,
            "left": {
              "type": "Identifier",
              "start": 527,
              "end": 536,
              "name": "undefined"
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 540,
              "end": 551,
              "value": "undefined",
              "raw": "\"undefined\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 557,
          "end": 562,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 564,
        "end": 637,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 568,
            "end": 635,
            "argument": {
              "type": "NewExpression",
              "start": 574,
              "end": 634,
              "callee": {
                "type": "Identifier",
                "start": 578,
                "end": 590,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 591,
                  "end": 633,
                  "value": "#3: (undefined == \"undefined\") === false",
                  "raw": "'#3: (undefined == \"undefined\") === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 649,
      "end": 746,
      "test": {
        "type": "BinaryExpression",
        "start": 653,
        "end": 680,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 653,
          "end": 670,
          "expression": {
            "type": "BinaryExpression",
            "start": 654,
            "end": 669,
            "left": {
              "type": "Identifier",
              "start": 654,
              "end": 663,
              "name": "undefined"
            },
            "operator": "==",
            "right": {
              "type": "ObjectExpression",
              "start": 667,
              "end": 669,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 675,
          "end": 680,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 682,
        "end": 746,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 686,
            "end": 744,
            "argument": {
              "type": "NewExpression",
              "start": 692,
              "end": 743,
              "callee": {
                "type": "Identifier",
                "start": 696,
                "end": 708,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 709,
                  "end": 742,
                  "value": "#4: (undefined == {}) === false",
                  "raw": "'#4: (undefined == {}) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 758,
      "end": 851,
      "test": {
        "type": "BinaryExpression",
        "start": 762,
        "end": 787,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 762,
          "end": 777,
          "expression": {
            "type": "BinaryExpression",
            "start": 763,
            "end": 776,
            "left": {
              "type": "Literal",
              "start": 763,
              "end": 767,
              "value": null,
              "raw": "null",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 771,
              "end": 776,
              "value": false,
              "raw": "false",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 782,
          "end": 787,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 789,
        "end": 851,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 793,
            "end": 849,
            "argument": {
              "type": "NewExpression",
              "start": 799,
              "end": 848,
              "callee": {
                "type": "Identifier",
                "start": 803,
                "end": 815,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 816,
                  "end": 847,
                  "value": "#5: (null == false) === false",
                  "raw": "'#5: (null == false) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 863,
      "end": 948,
      "test": {
        "type": "BinaryExpression",
        "start": 867,
        "end": 888,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 867,
          "end": 878,
          "expression": {
            "type": "BinaryExpression",
            "start": 868,
            "end": 877,
            "left": {
              "type": "Literal",
              "start": 868,
              "end": 872,
              "value": null,
              "raw": "null",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 876,
              "end": 877,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 883,
          "end": 888,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 890,
        "end": 948,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 894,
            "end": 946,
            "argument": {
              "type": "NewExpression",
              "start": 900,
              "end": 945,
              "callee": {
                "type": "Identifier",
                "start": 904,
                "end": 916,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 917,
                  "end": 944,
                  "value": "#6: (null == 0) === false",
                  "raw": "'#6: (null == 0) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 960,
      "end": 1055,
      "test": {
        "type": "BinaryExpression",
        "start": 964,
        "end": 990,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 964,
          "end": 980,
          "expression": {
            "type": "BinaryExpression",
            "start": 965,
            "end": 979,
            "left": {
              "type": "Literal",
              "start": 965,
              "end": 969,
              "value": null,
              "raw": "null",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 973,
              "end": 979,
              "value": "null",
              "raw": "\"null\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 985,
          "end": 990,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 992,
        "end": 1055,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 996,
            "end": 1053,
            "argument": {
              "type": "NewExpression",
              "start": 1002,
              "end": 1052,
              "callee": {
                "type": "Identifier",
                "start": 1006,
                "end": 1018,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1019,
                  "end": 1051,
                  "value": "#7: (null == \"null\") === false",
                  "raw": "'#7: (null == \"null\") === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1067,
      "end": 1154,
      "test": {
        "type": "BinaryExpression",
        "start": 1071,
        "end": 1093,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1071,
          "end": 1083,
          "expression": {
            "type": "BinaryExpression",
            "start": 1072,
            "end": 1082,
            "left": {
              "type": "Literal",
              "start": 1072,
              "end": 1076,
              "value": null,
              "raw": "null",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "ObjectExpression",
              "start": 1080,
              "end": 1082,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1088,
          "end": 1093,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1095,
        "end": 1154,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1099,
            "end": 1152,
            "argument": {
              "type": "NewExpression",
              "start": 1105,
              "end": 1151,
              "callee": {
                "type": "Identifier",
                "start": 1109,
                "end": 1121,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1122,
                  "end": 1150,
                  "value": "#8: (null == {}) === false",
                  "raw": "'#8: (null == {}) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}