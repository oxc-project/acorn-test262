{
  "type": "Program",
  "start": 0,
  "end": 1321,
  "body": [
    {
      "type": "IfStatement",
      "start": 237,
      "end": 333,
      "test": {
        "type": "BinaryExpression",
        "start": 241,
        "end": 271,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 241,
          "end": 261,
          "expression": {
            "type": "BinaryExpression",
            "start": 242,
            "end": 260,
            "left": {
              "type": "Literal",
              "start": 242,
              "end": 246,
              "value": true,
              "raw": "true"
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 250,
              "end": 260,
              "object": {
                "type": "Identifier",
                "start": 250,
                "end": 256,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 257,
                "end": 260,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 266,
          "end": 271,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 273,
        "end": 333,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 277,
            "end": 331,
            "argument": {
              "type": "NewExpression",
              "start": 283,
              "end": 330,
              "callee": {
                "type": "Identifier",
                "start": 287,
                "end": 299,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 300,
                  "end": 329,
                  "value": "#1: (true == NaN) === false",
                  "raw": "'#1: (true == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 345,
      "end": 437,
      "test": {
        "type": "BinaryExpression",
        "start": 349,
        "end": 377,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 349,
          "end": 367,
          "expression": {
            "type": "BinaryExpression",
            "start": 350,
            "end": 366,
            "left": {
              "type": "UnaryExpression",
              "start": 350,
              "end": 352,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 351,
                "end": 352,
                "value": 1,
                "raw": "1"
              }
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 356,
              "end": 366,
              "object": {
                "type": "Identifier",
                "start": 356,
                "end": 362,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 363,
                "end": 366,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 372,
          "end": 377,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 379,
        "end": 437,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 383,
            "end": 435,
            "argument": {
              "type": "NewExpression",
              "start": 389,
              "end": 434,
              "callee": {
                "type": "Identifier",
                "start": 393,
                "end": 405,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 406,
                  "end": 433,
                  "value": "#2: (-1 == NaN) === false",
                  "raw": "'#2: (-1 == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 449,
      "end": 550,
      "test": {
        "type": "BinaryExpression",
        "start": 453,
        "end": 489,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 453,
          "end": 479,
          "expression": {
            "type": "BinaryExpression",
            "start": 454,
            "end": 478,
            "left": {
              "type": "MemberExpression",
              "start": 454,
              "end": 464,
              "object": {
                "type": "Identifier",
                "start": 454,
                "end": 460,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 461,
                "end": 464,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 468,
              "end": 478,
              "object": {
                "type": "Identifier",
                "start": 468,
                "end": 474,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 475,
                "end": 478,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 484,
          "end": 489,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 491,
        "end": 550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 495,
            "end": 548,
            "argument": {
              "type": "NewExpression",
              "start": 501,
              "end": 547,
              "callee": {
                "type": "Identifier",
                "start": 505,
                "end": 517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 518,
                  "end": 546,
                  "value": "#3: (NaN == NaN) === false",
                  "raw": "'#3: (NaN == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 562,
      "end": 683,
      "test": {
        "type": "BinaryExpression",
        "start": 566,
        "end": 616,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 566,
          "end": 606,
          "expression": {
            "type": "BinaryExpression",
            "start": 567,
            "end": 605,
            "left": {
              "type": "MemberExpression",
              "start": 567,
              "end": 591,
              "object": {
                "type": "Identifier",
                "start": 567,
                "end": 573,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 574,
                "end": 591,
                "name": "POSITIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 595,
              "end": 605,
              "object": {
                "type": "Identifier",
                "start": 595,
                "end": 601,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 602,
                "end": 605,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 611,
          "end": 616,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 618,
        "end": 683,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 622,
            "end": 681,
            "argument": {
              "type": "NewExpression",
              "start": 628,
              "end": 680,
              "callee": {
                "type": "Identifier",
                "start": 632,
                "end": 644,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 645,
                  "end": 679,
                  "value": "#4: (+Infinity == NaN) === false",
                  "raw": "'#4: (+Infinity == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 695,
      "end": 816,
      "test": {
        "type": "BinaryExpression",
        "start": 699,
        "end": 749,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 699,
          "end": 739,
          "expression": {
            "type": "BinaryExpression",
            "start": 700,
            "end": 738,
            "left": {
              "type": "MemberExpression",
              "start": 700,
              "end": 724,
              "object": {
                "type": "Identifier",
                "start": 700,
                "end": 706,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 707,
                "end": 724,
                "name": "NEGATIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 728,
              "end": 738,
              "object": {
                "type": "Identifier",
                "start": 728,
                "end": 734,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 735,
                "end": 738,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 744,
          "end": 749,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 751,
        "end": 816,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 755,
            "end": 814,
            "argument": {
              "type": "NewExpression",
              "start": 761,
              "end": 813,
              "callee": {
                "type": "Identifier",
                "start": 765,
                "end": 777,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 778,
                  "end": 812,
                  "value": "#5: (-Infinity == NaN) === false",
                  "raw": "'#5: (-Infinity == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 828,
      "end": 948,
      "test": {
        "type": "BinaryExpression",
        "start": 832,
        "end": 874,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 832,
          "end": 864,
          "expression": {
            "type": "BinaryExpression",
            "start": 833,
            "end": 863,
            "left": {
              "type": "MemberExpression",
              "start": 833,
              "end": 849,
              "object": {
                "type": "Identifier",
                "start": 833,
                "end": 839,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 840,
                "end": 849,
                "name": "MAX_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 853,
              "end": 863,
              "object": {
                "type": "Identifier",
                "start": 853,
                "end": 859,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 860,
                "end": 863,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 869,
          "end": 874,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 876,
        "end": 948,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 880,
            "end": 946,
            "argument": {
              "type": "NewExpression",
              "start": 886,
              "end": 945,
              "callee": {
                "type": "Identifier",
                "start": 890,
                "end": 902,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 903,
                  "end": 944,
                  "value": "#6: (Number.MAX_VALUE == NaN) === false",
                  "raw": "'#6: (Number.MAX_VALUE == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 960,
      "end": 1080,
      "test": {
        "type": "BinaryExpression",
        "start": 964,
        "end": 1006,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 964,
          "end": 996,
          "expression": {
            "type": "BinaryExpression",
            "start": 965,
            "end": 995,
            "left": {
              "type": "MemberExpression",
              "start": 965,
              "end": 981,
              "object": {
                "type": "Identifier",
                "start": 965,
                "end": 971,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 972,
                "end": 981,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 985,
              "end": 995,
              "object": {
                "type": "Identifier",
                "start": 985,
                "end": 991,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 992,
                "end": 995,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1001,
          "end": 1006,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1008,
        "end": 1080,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1012,
            "end": 1078,
            "argument": {
              "type": "NewExpression",
              "start": 1018,
              "end": 1077,
              "callee": {
                "type": "Identifier",
                "start": 1022,
                "end": 1034,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1035,
                  "end": 1076,
                  "value": "#7: (Number.MIN_VALUE == NaN) === false",
                  "raw": "'#7: (Number.MIN_VALUE == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1092,
      "end": 1196,
      "test": {
        "type": "BinaryExpression",
        "start": 1096,
        "end": 1130,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1096,
          "end": 1120,
          "expression": {
            "type": "BinaryExpression",
            "start": 1097,
            "end": 1119,
            "left": {
              "type": "Literal",
              "start": 1097,
              "end": 1105,
              "value": "string",
              "raw": "\"string\""
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 1109,
              "end": 1119,
              "object": {
                "type": "Identifier",
                "start": 1109,
                "end": 1115,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1116,
                "end": 1119,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1125,
          "end": 1130,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1132,
        "end": 1196,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1136,
            "end": 1194,
            "argument": {
              "type": "NewExpression",
              "start": 1142,
              "end": 1193,
              "callee": {
                "type": "Identifier",
                "start": 1146,
                "end": 1158,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1159,
                  "end": 1192,
                  "value": "#8: (\"string\" == NaN) === false",
                  "raw": "'#8: (\"string\" == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1208,
      "end": 1320,
      "test": {
        "type": "BinaryExpression",
        "start": 1212,
        "end": 1250,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1212,
          "end": 1240,
          "expression": {
            "type": "BinaryExpression",
            "start": 1213,
            "end": 1239,
            "left": {
              "type": "NewExpression",
              "start": 1213,
              "end": 1225,
              "callee": {
                "type": "Identifier",
                "start": 1217,
                "end": 1223,
                "name": "Object"
              },
              "arguments": []
            },
            "operator": "==",
            "right": {
              "type": "MemberExpression",
              "start": 1229,
              "end": 1239,
              "object": {
                "type": "Identifier",
                "start": 1229,
                "end": 1235,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1236,
                "end": 1239,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1245,
          "end": 1250,
          "value": false,
          "raw": "false"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1252,
        "end": 1320,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1256,
            "end": 1318,
            "argument": {
              "type": "NewExpression",
              "start": 1262,
              "end": 1317,
              "callee": {
                "type": "Identifier",
                "start": 1266,
                "end": 1278,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1279,
                  "end": 1316,
                  "value": "#9: (new Object() == NaN) === false",
                  "raw": "'#9: (new Object() == NaN) === false'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}