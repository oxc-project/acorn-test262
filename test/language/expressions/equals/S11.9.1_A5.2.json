{
  "type": "Program",
  "start": 0,
  "end": 828,
  "body": [
    {
      "type": "IfStatement",
      "start": 342,
      "end": 423,
      "test": {
        "type": "BinaryExpression",
        "start": 346,
        "end": 365,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 346,
          "end": 356,
          "expression": {
            "type": "BinaryExpression",
            "start": 347,
            "end": 355,
            "left": {
              "type": "Literal",
              "start": 347,
              "end": 348,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 352,
              "end": 355,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 361,
          "end": 365,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 367,
        "end": 423,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 371,
            "end": 421,
            "argument": {
              "type": "NewExpression",
              "start": 377,
              "end": 420,
              "callee": {
                "type": "Identifier",
                "start": 381,
                "end": 393,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 394,
                  "end": 419,
                  "value": "#1: (1 == \"1\") === true",
                  "raw": "'#1: (1 == \"1\") === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 435,
      "end": 532,
      "test": {
        "type": "BinaryExpression",
        "start": 439,
        "end": 466,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 439,
          "end": 457,
          "expression": {
            "type": "BinaryExpression",
            "start": 440,
            "end": 456,
            "left": {
              "type": "Literal",
              "start": 440,
              "end": 445,
              "value": 1.1,
              "raw": "1.100",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 449,
              "end": 456,
              "value": "+1.10",
              "raw": "\"+1.10\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 462,
          "end": 466,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 468,
        "end": 532,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 472,
            "end": 530,
            "argument": {
              "type": "NewExpression",
              "start": 478,
              "end": 529,
              "callee": {
                "type": "Identifier",
                "start": 482,
                "end": 494,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 495,
                  "end": 528,
                  "value": "#2: (1.100 == \"+1.10\") === true",
                  "raw": "'#2: (1.100 == \"+1.10\") === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 544,
      "end": 633,
      "test": {
        "type": "BinaryExpression",
        "start": 548,
        "end": 571,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 548,
          "end": 561,
          "expression": {
            "type": "BinaryExpression",
            "start": 549,
            "end": 560,
            "left": {
              "type": "Literal",
              "start": 549,
              "end": 550,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 554,
              "end": 560,
              "value": "true",
              "raw": "\"true\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 566,
          "end": 571,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 573,
        "end": 633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 577,
            "end": 631,
            "argument": {
              "type": "NewExpression",
              "start": 583,
              "end": 630,
              "callee": {
                "type": "Identifier",
                "start": 587,
                "end": 599,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 600,
                  "end": 629,
                  "value": "#3: (1 == \"true\") === false",
                  "raw": "'#3: (1 == \"true\") === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 645,
      "end": 736,
      "test": {
        "type": "BinaryExpression",
        "start": 649,
        "end": 673,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 649,
          "end": 664,
          "expression": {
            "type": "BinaryExpression",
            "start": 650,
            "end": 663,
            "left": {
              "type": "Literal",
              "start": 650,
              "end": 653,
              "value": 255,
              "raw": "255",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 657,
              "end": 663,
              "value": "0xff",
              "raw": "\"0xff\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 669,
          "end": 673,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 675,
        "end": 736,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 679,
            "end": 734,
            "argument": {
              "type": "NewExpression",
              "start": 685,
              "end": 733,
              "callee": {
                "type": "Identifier",
                "start": 689,
                "end": 701,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 702,
                  "end": 732,
                  "value": "#4: (255 == \"0xff\") === true",
                  "raw": "'#4: (255 == \"0xff\") === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 748,
      "end": 827,
      "test": {
        "type": "BinaryExpression",
        "start": 752,
        "end": 770,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 752,
          "end": 761,
          "expression": {
            "type": "BinaryExpression",
            "start": 753,
            "end": 760,
            "left": {
              "type": "Literal",
              "start": 753,
              "end": 754,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            },
            "operator": "==",
            "right": {
              "type": "Literal",
              "start": 758,
              "end": 760,
              "value": "",
              "raw": "\"\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 766,
          "end": 770,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 772,
        "end": 827,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 776,
            "end": 825,
            "argument": {
              "type": "NewExpression",
              "start": 782,
              "end": 824,
              "callee": {
                "type": "Identifier",
                "start": 786,
                "end": 798,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 799,
                  "end": 823,
                  "value": "#5: (0 == \"\") === true",
                  "raw": "'#5: (0 == \"\") === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}