{
  "type": "Program",
  "start": 0,
  "end": 513,
  "body": [
    {
      "type": "IfStatement",
      "start": 236,
      "end": 369,
      "test": {
        "type": "BinaryExpression",
        "start": 240,
        "end": 267,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 240,
          "end": 261,
          "expression": {
            "type": "BinaryExpression",
            "start": 241,
            "end": 260,
            "left": {
              "type": "NewExpression",
              "start": 241,
              "end": 254,
              "callee": {
                "type": "Identifier",
                "start": 245,
                "end": 251,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 252,
                  "end": 253,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "start": 259,
              "end": 260,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 266,
          "end": 267,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 269,
        "end": 369,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 273,
            "end": 367,
            "argument": {
              "type": "NewExpression",
              "start": 279,
              "end": 366,
              "callee": {
                "type": "Identifier",
                "start": 283,
                "end": 295,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 296,
                  "end": 365,
                  "left": {
                    "type": "Literal",
                    "start": 296,
                    "end": 339,
                    "value": "#1: (new Number(1) >>> 0) === 1. Actual: ",
                    "raw": "'#1: (new Number(1) >>> 0) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 342,
                    "end": 365,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 343,
                      "end": 364,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 344,
                        "end": 363,
                        "left": {
                          "type": "NewExpression",
                          "start": 344,
                          "end": 357,
                          "callee": {
                            "type": "Identifier",
                            "start": 348,
                            "end": 354,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 355,
                              "end": 356,
                              "value": 1,
                              "raw": "1",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "Literal",
                          "start": 362,
                          "end": 363,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 382,
      "end": 512,
      "test": {
        "type": "BinaryExpression",
        "start": 386,
        "end": 415,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 386,
          "end": 400,
          "expression": {
            "type": "BinaryExpression",
            "start": 387,
            "end": 399,
            "left": {
              "type": "UnaryExpression",
              "start": 387,
              "end": 393,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 388,
                "end": 393,
                "value": 1.234,
                "raw": "1.234",
                "regex": null,
                "bigint": null
              }
            },
            "operator": ">>>",
            "right": {
              "type": "Literal",
              "start": 398,
              "end": 399,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 405,
          "end": 415,
          "value": 4294967295,
          "raw": "4294967295",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 417,
        "end": 512,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 421,
            "end": 510,
            "argument": {
              "type": "NewExpression",
              "start": 427,
              "end": 509,
              "callee": {
                "type": "Identifier",
                "start": 431,
                "end": 443,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 444,
                  "end": 508,
                  "left": {
                    "type": "Literal",
                    "start": 444,
                    "end": 489,
                    "value": "#2: (-1.234 >>> 0) === 4294967295. Actual: ",
                    "raw": "'#2: (-1.234 >>> 0) === 4294967295. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 492,
                    "end": 508,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 493,
                      "end": 507,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 494,
                        "end": 506,
                        "left": {
                          "type": "UnaryExpression",
                          "start": 494,
                          "end": 500,
                          "operator": "-",
                          "prefix": true,
                          "argument": {
                            "type": "Literal",
                            "start": 495,
                            "end": 500,
                            "value": 1.234,
                            "raw": "1.234",
                            "regex": null,
                            "bigint": null
                          }
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "Literal",
                          "start": 505,
                          "end": 506,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}