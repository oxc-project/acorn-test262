{
  "type": "Program",
  "start": 0,
  "end": 982,
  "body": [
    {
      "type": "IfStatement",
      "start": 317,
      "end": 474,
      "test": {
        "type": "BinaryExpression",
        "start": 321,
        "end": 356,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 321,
          "end": 350,
          "expression": {
            "type": "BinaryExpression",
            "start": 322,
            "end": 349,
            "left": {
              "type": "ObjectExpression",
              "start": 322,
              "end": 324,
              "properties": []
            },
            "operator": ">>>",
            "right": {
              "type": "FunctionExpression",
              "start": 329,
              "end": 349,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 339,
                "end": 349,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 340,
                    "end": 348,
                    "argument": {
                      "type": "Literal",
                      "start": 347,
                      "end": 348,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 355,
          "end": 356,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 358,
        "end": 474,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 362,
            "end": 472,
            "argument": {
              "type": "NewExpression",
              "start": 368,
              "end": 471,
              "callee": {
                "type": "Identifier",
                "start": 372,
                "end": 384,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 385,
                  "end": 470,
                  "left": {
                    "type": "Literal",
                    "start": 385,
                    "end": 436,
                    "value": "#1: ({} >>> function(){return 1}) === 0. Actual: ",
                    "raw": "'#1: ({} >>> function(){return 1}) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 439,
                    "end": 470,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 440,
                      "end": 469,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 441,
                        "end": 468,
                        "left": {
                          "type": "ObjectExpression",
                          "start": 441,
                          "end": 443,
                          "properties": []
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "FunctionExpression",
                          "start": 448,
                          "end": 468,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 458,
                            "end": 468,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 459,
                                "end": 467,
                                "argument": {
                                  "type": "Literal",
                                  "start": 466,
                                  "end": 467,
                                  "value": 1,
                                  "raw": "1",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 486,
      "end": 643,
      "test": {
        "type": "BinaryExpression",
        "start": 490,
        "end": 525,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 490,
          "end": 519,
          "expression": {
            "type": "BinaryExpression",
            "start": 491,
            "end": 518,
            "left": {
              "type": "FunctionExpression",
              "start": 491,
              "end": 511,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 501,
                "end": 511,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 502,
                    "end": 510,
                    "argument": {
                      "type": "Literal",
                      "start": 509,
                      "end": 510,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            },
            "operator": ">>>",
            "right": {
              "type": "ObjectExpression",
              "start": 516,
              "end": 518,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 524,
          "end": 525,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 527,
        "end": 643,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 531,
            "end": 641,
            "argument": {
              "type": "NewExpression",
              "start": 537,
              "end": 640,
              "callee": {
                "type": "Identifier",
                "start": 541,
                "end": 553,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 554,
                  "end": 639,
                  "left": {
                    "type": "Literal",
                    "start": 554,
                    "end": 605,
                    "value": "#2: (function(){return 1} >>> {}) === 0. Actual: ",
                    "raw": "'#2: (function(){return 1} >>> {}) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 608,
                    "end": 639,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 609,
                      "end": 638,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 610,
                        "end": 637,
                        "left": {
                          "type": "FunctionExpression",
                          "start": 610,
                          "end": 630,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 620,
                            "end": 630,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 621,
                                "end": 629,
                                "argument": {
                                  "type": "Literal",
                                  "start": 628,
                                  "end": 629,
                                  "value": 1,
                                  "raw": "1",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ]
                          }
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "ObjectExpression",
                          "start": 635,
                          "end": 637,
                          "properties": []
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 655,
      "end": 866,
      "test": {
        "type": "BinaryExpression",
        "start": 659,
        "end": 712,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 659,
          "end": 706,
          "expression": {
            "type": "BinaryExpression",
            "start": 660,
            "end": 705,
            "left": {
              "type": "FunctionExpression",
              "start": 660,
              "end": 680,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 670,
                "end": 680,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 671,
                    "end": 679,
                    "argument": {
                      "type": "Literal",
                      "start": 678,
                      "end": 679,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            },
            "operator": ">>>",
            "right": {
              "type": "FunctionExpression",
              "start": 685,
              "end": 705,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 695,
                "end": 705,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 696,
                    "end": 704,
                    "argument": {
                      "type": "Literal",
                      "start": 703,
                      "end": 704,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 711,
          "end": 712,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 714,
        "end": 866,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 718,
            "end": 864,
            "argument": {
              "type": "NewExpression",
              "start": 724,
              "end": 863,
              "callee": {
                "type": "Identifier",
                "start": 728,
                "end": 740,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 741,
                  "end": 862,
                  "left": {
                    "type": "Literal",
                    "start": 741,
                    "end": 810,
                    "value": "#3: (function(){return 1} >>> function(){return 1}) === 0. Actual: ",
                    "raw": "'#3: (function(){return 1} >>> function(){return 1}) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 813,
                    "end": 862,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 814,
                      "end": 861,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 815,
                        "end": 860,
                        "left": {
                          "type": "FunctionExpression",
                          "start": 815,
                          "end": 835,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 825,
                            "end": 835,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 826,
                                "end": 834,
                                "argument": {
                                  "type": "Literal",
                                  "start": 833,
                                  "end": 834,
                                  "value": 1,
                                  "raw": "1",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ]
                          }
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "FunctionExpression",
                          "start": 840,
                          "end": 860,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 850,
                            "end": 860,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 851,
                                "end": 859,
                                "argument": {
                                  "type": "Literal",
                                  "start": 858,
                                  "end": 859,
                                  "value": 1,
                                  "raw": "1",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 878,
      "end": 981,
      "test": {
        "type": "BinaryExpression",
        "start": 882,
        "end": 899,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 882,
          "end": 893,
          "expression": {
            "type": "BinaryExpression",
            "start": 883,
            "end": 892,
            "left": {
              "type": "ObjectExpression",
              "start": 883,
              "end": 885,
              "properties": []
            },
            "operator": ">>>",
            "right": {
              "type": "ObjectExpression",
              "start": 890,
              "end": 892,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 898,
          "end": 899,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 901,
        "end": 981,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 905,
            "end": 979,
            "argument": {
              "type": "NewExpression",
              "start": 911,
              "end": 978,
              "callee": {
                "type": "Identifier",
                "start": 915,
                "end": 927,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 928,
                  "end": 977,
                  "left": {
                    "type": "Literal",
                    "start": 928,
                    "end": 961,
                    "value": "#4: ({} >>> {}) === 0. Actual: ",
                    "raw": "'#4: ({} >>> {}) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 964,
                    "end": 977,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 965,
                      "end": 976,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 966,
                        "end": 975,
                        "left": {
                          "type": "ObjectExpression",
                          "start": 966,
                          "end": 968,
                          "properties": []
                        },
                        "operator": ">>>",
                        "right": {
                          "type": "ObjectExpression",
                          "start": 973,
                          "end": 975,
                          "properties": []
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}