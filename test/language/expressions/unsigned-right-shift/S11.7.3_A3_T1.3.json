{
  "type": "Program",
  "start": 0,
  "end": 1141,
  "body": [
    {
      "type": "IfStatement",
      "start": 318,
      "end": 421,
      "test": {
        "type": "BinaryExpression",
        "start": 322,
        "end": 339,
        "left": {
          "type": "BinaryExpression",
          "start": 322,
          "end": 333,
          "left": {
            "type": "Literal",
            "start": 322,
            "end": 325,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": ">>>",
          "right": {
            "type": "Literal",
            "start": 330,
            "end": 333,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 338,
          "end": 339,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 341,
        "end": 421,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 345,
            "end": 419,
            "argument": {
              "type": "NewExpression",
              "start": 351,
              "end": 418,
              "callee": {
                "type": "Identifier",
                "start": 355,
                "end": 367,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 368,
                  "end": 417,
                  "left": {
                    "type": "Literal",
                    "start": 368,
                    "end": 401,
                    "value": "#1: \"1\" >>> \"1\" === 0. Actual: ",
                    "raw": "'#1: \"1\" >>> \"1\" === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 404,
                    "end": 417,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 405,
                      "end": 416,
                      "left": {
                        "type": "Literal",
                        "start": 405,
                        "end": 408,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>>",
                      "right": {
                        "type": "Literal",
                        "start": 413,
                        "end": 416,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 433,
      "end": 572,
      "test": {
        "type": "BinaryExpression",
        "start": 437,
        "end": 466,
        "left": {
          "type": "BinaryExpression",
          "start": 437,
          "end": 460,
          "left": {
            "type": "NewExpression",
            "start": 437,
            "end": 452,
            "callee": {
              "type": "Identifier",
              "start": 441,
              "end": 447,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 448,
                "end": 451,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">>>",
          "right": {
            "type": "Literal",
            "start": 457,
            "end": 460,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 465,
          "end": 466,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 468,
        "end": 572,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 472,
            "end": 570,
            "argument": {
              "type": "NewExpression",
              "start": 478,
              "end": 569,
              "callee": {
                "type": "Identifier",
                "start": 482,
                "end": 494,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 495,
                  "end": 568,
                  "left": {
                    "type": "Literal",
                    "start": 495,
                    "end": 540,
                    "value": "#2: new String(\"1\") >>> \"1\" === 0. Actual: ",
                    "raw": "'#2: new String(\"1\") >>> \"1\" === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 543,
                    "end": 568,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 544,
                      "end": 567,
                      "left": {
                        "type": "NewExpression",
                        "start": 544,
                        "end": 559,
                        "callee": {
                          "type": "Identifier",
                          "start": 548,
                          "end": 554,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 555,
                            "end": 558,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": ">>>",
                      "right": {
                        "type": "Literal",
                        "start": 564,
                        "end": 567,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 584,
      "end": 723,
      "test": {
        "type": "BinaryExpression",
        "start": 588,
        "end": 617,
        "left": {
          "type": "BinaryExpression",
          "start": 588,
          "end": 611,
          "left": {
            "type": "Literal",
            "start": 588,
            "end": 591,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": ">>>",
          "right": {
            "type": "NewExpression",
            "start": 596,
            "end": 611,
            "callee": {
              "type": "Identifier",
              "start": 600,
              "end": 606,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 607,
                "end": 610,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 616,
          "end": 617,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 619,
        "end": 723,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 623,
            "end": 721,
            "argument": {
              "type": "NewExpression",
              "start": 629,
              "end": 720,
              "callee": {
                "type": "Identifier",
                "start": 633,
                "end": 645,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 646,
                  "end": 719,
                  "left": {
                    "type": "Literal",
                    "start": 646,
                    "end": 691,
                    "value": "#3: \"1\" >>> new String(\"1\") === 0. Actual: ",
                    "raw": "'#3: \"1\" >>> new String(\"1\") === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 694,
                    "end": 719,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 695,
                      "end": 718,
                      "left": {
                        "type": "Literal",
                        "start": 695,
                        "end": 698,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>>",
                      "right": {
                        "type": "NewExpression",
                        "start": 703,
                        "end": 718,
                        "callee": {
                          "type": "Identifier",
                          "start": 707,
                          "end": 713,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 714,
                            "end": 717,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 735,
      "end": 910,
      "test": {
        "type": "BinaryExpression",
        "start": 739,
        "end": 780,
        "left": {
          "type": "BinaryExpression",
          "start": 739,
          "end": 774,
          "left": {
            "type": "NewExpression",
            "start": 739,
            "end": 754,
            "callee": {
              "type": "Identifier",
              "start": 743,
              "end": 749,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 750,
                "end": 753,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">>>",
          "right": {
            "type": "NewExpression",
            "start": 759,
            "end": 774,
            "callee": {
              "type": "Identifier",
              "start": 763,
              "end": 769,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 770,
                "end": 773,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 779,
          "end": 780,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 782,
        "end": 910,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 786,
            "end": 908,
            "argument": {
              "type": "NewExpression",
              "start": 792,
              "end": 907,
              "callee": {
                "type": "Identifier",
                "start": 796,
                "end": 808,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 809,
                  "end": 906,
                  "left": {
                    "type": "Literal",
                    "start": 809,
                    "end": 866,
                    "value": "#4: new String(\"1\") >>> new String(\"1\") === 0. Actual: ",
                    "raw": "'#4: new String(\"1\") >>> new String(\"1\") === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 869,
                    "end": 906,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 870,
                      "end": 905,
                      "left": {
                        "type": "NewExpression",
                        "start": 870,
                        "end": 885,
                        "callee": {
                          "type": "Identifier",
                          "start": 874,
                          "end": 880,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 881,
                            "end": 884,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": ">>>",
                      "right": {
                        "type": "NewExpression",
                        "start": 890,
                        "end": 905,
                        "callee": {
                          "type": "Identifier",
                          "start": 894,
                          "end": 900,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 901,
                            "end": 904,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 922,
      "end": 1025,
      "test": {
        "type": "BinaryExpression",
        "start": 926,
        "end": 943,
        "left": {
          "type": "BinaryExpression",
          "start": 926,
          "end": 937,
          "left": {
            "type": "Literal",
            "start": 926,
            "end": 929,
            "value": "x",
            "raw": "\"x\"",
            "regex": null,
            "bigint": null
          },
          "operator": ">>>",
          "right": {
            "type": "Literal",
            "start": 934,
            "end": 937,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 942,
          "end": 943,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 945,
        "end": 1025,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 949,
            "end": 1023,
            "argument": {
              "type": "NewExpression",
              "start": 955,
              "end": 1022,
              "callee": {
                "type": "Identifier",
                "start": 959,
                "end": 971,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 972,
                  "end": 1021,
                  "left": {
                    "type": "Literal",
                    "start": 972,
                    "end": 1005,
                    "value": "#5: \"x\" >>> \"1\" === 0. Actual: ",
                    "raw": "'#5: \"x\" >>> \"1\" === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1008,
                    "end": 1021,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1009,
                      "end": 1020,
                      "left": {
                        "type": "Literal",
                        "start": 1009,
                        "end": 1012,
                        "value": "x",
                        "raw": "\"x\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>>",
                      "right": {
                        "type": "Literal",
                        "start": 1017,
                        "end": 1020,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1037,
      "end": 1140,
      "test": {
        "type": "BinaryExpression",
        "start": 1041,
        "end": 1058,
        "left": {
          "type": "BinaryExpression",
          "start": 1041,
          "end": 1052,
          "left": {
            "type": "Literal",
            "start": 1041,
            "end": 1044,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          },
          "operator": ">>>",
          "right": {
            "type": "Literal",
            "start": 1049,
            "end": 1052,
            "value": "x",
            "raw": "\"x\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1057,
          "end": 1058,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1060,
        "end": 1140,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1064,
            "end": 1138,
            "argument": {
              "type": "NewExpression",
              "start": 1070,
              "end": 1137,
              "callee": {
                "type": "Identifier",
                "start": 1074,
                "end": 1086,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1087,
                  "end": 1136,
                  "left": {
                    "type": "Literal",
                    "start": 1087,
                    "end": 1120,
                    "value": "#6: \"1\" >>> \"x\" === 1. Actual: ",
                    "raw": "'#6: \"1\" >>> \"x\" === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1123,
                    "end": 1136,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1124,
                      "end": 1135,
                      "left": {
                        "type": "Literal",
                        "start": 1124,
                        "end": 1127,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>>",
                      "right": {
                        "type": "Literal",
                        "start": 1132,
                        "end": 1135,
                        "value": "x",
                        "raw": "\"x\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}