{
  "type": "Program",
  "start": 0,
  "end": 537,
  "body": [
    {
      "type": "TryStatement",
      "start": 272,
      "end": 536,
      "block": {
        "type": "BlockStatement",
        "start": 276,
        "end": 384,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 280,
            "end": 290,
            "expression": {
              "type": "LogicalExpression",
              "start": 280,
              "end": 289,
              "left": {
                "type": "Identifier",
                "start": 280,
                "end": 281,
                "name": "x"
              },
              "operator": "&&",
              "right": {
                "type": "Literal",
                "start": 285,
                "end": 289,
                "value": true,
                "raw": "true"
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 293,
            "end": 380,
            "argument": {
              "type": "NewExpression",
              "start": 299,
              "end": 379,
              "callee": {
                "type": "Identifier",
                "start": 303,
                "end": 315,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 316,
                  "end": 378,
                  "left": {
                    "type": "Literal",
                    "start": 316,
                    "end": 364,
                    "value": "#1.1: x && true throw ReferenceError. Actual: ",
                    "raw": "'#1.1: x && true throw ReferenceError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 367,
                    "end": 378,
                    "expression": {
                      "type": "LogicalExpression",
                      "start": 368,
                      "end": 377,
                      "left": {
                        "type": "Identifier",
                        "start": 368,
                        "end": 369,
                        "name": "x"
                      },
                      "operator": "&&",
                      "right": {
                        "type": "Literal",
                        "start": 373,
                        "end": 377,
                        "value": true,
                        "raw": "true"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 385,
        "end": 536,
        "param": {
          "type": "Identifier",
          "start": 392,
          "end": 393,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 395,
          "end": 536,
          "body": [
            {
              "type": "IfStatement",
              "start": 399,
              "end": 534,
              "test": {
                "type": "BinaryExpression",
                "start": 403,
                "end": 441,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 403,
                  "end": 432,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 404,
                    "end": 431,
                    "left": {
                      "type": "Identifier",
                      "start": 404,
                      "end": 405,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 417,
                      "end": 431,
                      "name": "ReferenceError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 437,
                  "end": 441,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 443,
                "end": 534,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 449,
                    "end": 528,
                    "argument": {
                      "type": "NewExpression",
                      "start": 455,
                      "end": 527,
                      "callee": {
                        "type": "Identifier",
                        "start": 459,
                        "end": 471,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 472,
                          "end": 526,
                          "left": {
                            "type": "Literal",
                            "start": 472,
                            "end": 520,
                            "value": "#1.2: x && true throw ReferenceError. Actual: ",
                            "raw": "'#1.2: x && true throw ReferenceError. Actual: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 523,
                            "end": 526,
                            "expression": {
                              "type": "Identifier",
                              "start": 524,
                              "end": 525,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}