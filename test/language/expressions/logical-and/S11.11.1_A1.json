{
  "type": "Program",
  "start": 0,
  "end": 1862,
  "body": [
    {
      "type": "IfStatement",
      "start": 348,
      "end": 467,
      "test": {
        "type": "BinaryExpression",
        "start": 352,
        "end": 393,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 352,
          "end": 384,
          "expression": {
            "type": "CallExpression",
            "start": 353,
            "end": 383,
            "callee": {
              "type": "Identifier",
              "start": 353,
              "end": 357,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 358,
                "end": 382,
                "value": "true\t&&\ttrue",
                "raw": "\"true\\u0009&&\\u0009true\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 389,
          "end": 393,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 395,
        "end": 467,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 399,
            "end": 465,
            "argument": {
              "type": "NewExpression",
              "start": 405,
              "end": 464,
              "callee": {
                "type": "Identifier",
                "start": 409,
                "end": 421,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 422,
                  "end": 463,
                  "value": "#1: (true\\u0009&&\\u0009true) === true",
                  "raw": "'#1: (true\\\\u0009&&\\\\u0009true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 479,
      "end": 600,
      "test": {
        "type": "BinaryExpression",
        "start": 483,
        "end": 524,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 483,
          "end": 515,
          "expression": {
            "type": "CallExpression",
            "start": 484,
            "end": 514,
            "callee": {
              "type": "Identifier",
              "start": 484,
              "end": 488,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 489,
                "end": 513,
                "value": "true\u000b&&\u000btrue",
                "raw": "\"true\\u000B&&\\u000Btrue\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 520,
          "end": 524,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 526,
        "end": 600,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 530,
            "end": 596,
            "argument": {
              "type": "NewExpression",
              "start": 536,
              "end": 595,
              "callee": {
                "type": "Identifier",
                "start": 540,
                "end": 552,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 553,
                  "end": 594,
                  "value": "#2: (true\\u000B&&\\u000Btrue) === true",
                  "raw": "'#2: (true\\\\u000B&&\\\\u000Btrue) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 612,
      "end": 731,
      "test": {
        "type": "BinaryExpression",
        "start": 616,
        "end": 657,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 616,
          "end": 648,
          "expression": {
            "type": "CallExpression",
            "start": 617,
            "end": 647,
            "callee": {
              "type": "Identifier",
              "start": 617,
              "end": 621,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 622,
                "end": 646,
                "value": "true\f&&\ftrue",
                "raw": "\"true\\u000C&&\\u000Ctrue\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 653,
          "end": 657,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 659,
        "end": 731,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 663,
            "end": 729,
            "argument": {
              "type": "NewExpression",
              "start": 669,
              "end": 728,
              "callee": {
                "type": "Identifier",
                "start": 673,
                "end": 685,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 686,
                  "end": 727,
                  "value": "#3: (true\\u000C&&\\u000Ctrue) === true",
                  "raw": "'#3: (true\\\\u000C&&\\\\u000Ctrue) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 743,
      "end": 862,
      "test": {
        "type": "BinaryExpression",
        "start": 747,
        "end": 788,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 747,
          "end": 779,
          "expression": {
            "type": "CallExpression",
            "start": 748,
            "end": 778,
            "callee": {
              "type": "Identifier",
              "start": 748,
              "end": 752,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 753,
                "end": 777,
                "value": "true && true",
                "raw": "\"true\\u0020&&\\u0020true\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 784,
          "end": 788,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 790,
        "end": 862,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 794,
            "end": 860,
            "argument": {
              "type": "NewExpression",
              "start": 800,
              "end": 859,
              "callee": {
                "type": "Identifier",
                "start": 804,
                "end": 816,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 817,
                  "end": 858,
                  "value": "#4: (true\\u0020&&\\u0020true) === true",
                  "raw": "'#4: (true\\\\u0020&&\\\\u0020true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 874,
      "end": 993,
      "test": {
        "type": "BinaryExpression",
        "start": 878,
        "end": 919,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 878,
          "end": 910,
          "expression": {
            "type": "CallExpression",
            "start": 879,
            "end": 909,
            "callee": {
              "type": "Identifier",
              "start": 879,
              "end": 883,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 884,
                "end": 908,
                "value": "true && true",
                "raw": "\"true\\u00A0&&\\u00A0true\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 915,
          "end": 919,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 921,
        "end": 993,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 925,
            "end": 991,
            "argument": {
              "type": "NewExpression",
              "start": 931,
              "end": 990,
              "callee": {
                "type": "Identifier",
                "start": 935,
                "end": 947,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 948,
                  "end": 989,
                  "value": "#5: (true\\u00A0&&\\u00A0true) === true",
                  "raw": "'#5: (true\\\\u00A0&&\\\\u00A0true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1005,
      "end": 1126,
      "test": {
        "type": "BinaryExpression",
        "start": 1009,
        "end": 1050,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1009,
          "end": 1041,
          "expression": {
            "type": "CallExpression",
            "start": 1010,
            "end": 1040,
            "callee": {
              "type": "Identifier",
              "start": 1010,
              "end": 1014,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1015,
                "end": 1039,
                "value": "true\n&&\ntrue",
                "raw": "\"true\\u000A&&\\u000Atrue\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1046,
          "end": 1050,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1052,
        "end": 1126,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1056,
            "end": 1122,
            "argument": {
              "type": "NewExpression",
              "start": 1062,
              "end": 1121,
              "callee": {
                "type": "Identifier",
                "start": 1066,
                "end": 1078,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1079,
                  "end": 1120,
                  "value": "#6: (true\\u000A&&\\u000Atrue) === true",
                  "raw": "'#6: (true\\\\u000A&&\\\\u000Atrue) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1138,
      "end": 1257,
      "test": {
        "type": "BinaryExpression",
        "start": 1142,
        "end": 1183,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1142,
          "end": 1174,
          "expression": {
            "type": "CallExpression",
            "start": 1143,
            "end": 1173,
            "callee": {
              "type": "Identifier",
              "start": 1143,
              "end": 1147,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1148,
                "end": 1172,
                "value": "true\r&&\rtrue",
                "raw": "\"true\\u000D&&\\u000Dtrue\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1179,
          "end": 1183,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1185,
        "end": 1257,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1189,
            "end": 1255,
            "argument": {
              "type": "NewExpression",
              "start": 1195,
              "end": 1254,
              "callee": {
                "type": "Identifier",
                "start": 1199,
                "end": 1211,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1212,
                  "end": 1253,
                  "value": "#7: (true\\u000D&&\\u000Dtrue) === true",
                  "raw": "'#7: (true\\\\u000D&&\\\\u000Dtrue) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1269,
      "end": 1388,
      "test": {
        "type": "BinaryExpression",
        "start": 1273,
        "end": 1314,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1273,
          "end": 1305,
          "expression": {
            "type": "CallExpression",
            "start": 1274,
            "end": 1304,
            "callee": {
              "type": "Identifier",
              "start": 1274,
              "end": 1278,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1279,
                "end": 1303,
                "value": "true && true",
                "raw": "\"true\\u2028&&\\u2028true\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1310,
          "end": 1314,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1316,
        "end": 1388,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1320,
            "end": 1386,
            "argument": {
              "type": "NewExpression",
              "start": 1326,
              "end": 1385,
              "callee": {
                "type": "Identifier",
                "start": 1330,
                "end": 1342,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1343,
                  "end": 1384,
                  "value": "#8: (true\\u2028&&\\u2028true) === true",
                  "raw": "'#8: (true\\\\u2028&&\\\\u2028true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1400,
      "end": 1519,
      "test": {
        "type": "BinaryExpression",
        "start": 1404,
        "end": 1445,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1404,
          "end": 1436,
          "expression": {
            "type": "CallExpression",
            "start": 1405,
            "end": 1435,
            "callee": {
              "type": "Identifier",
              "start": 1405,
              "end": 1409,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1410,
                "end": 1434,
                "value": "true && true",
                "raw": "\"true\\u2029&&\\u2029true\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1441,
          "end": 1445,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1447,
        "end": 1519,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1451,
            "end": 1517,
            "argument": {
              "type": "NewExpression",
              "start": 1457,
              "end": 1516,
              "callee": {
                "type": "Identifier",
                "start": 1461,
                "end": 1473,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1474,
                  "end": 1515,
                  "value": "#9: (true\\u2029&&\\u2029true) === true",
                  "raw": "'#9: (true\\\\u2029&&\\\\u2029true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1533,
      "end": 1861,
      "test": {
        "type": "BinaryExpression",
        "start": 1537,
        "end": 1674,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1537,
          "end": 1665,
          "expression": {
            "type": "CallExpression",
            "start": 1538,
            "end": 1664,
            "callee": {
              "type": "Identifier",
              "start": 1538,
              "end": 1542,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1543,
                "end": 1663,
                "value": "true\t\u000b\f  \n\r  &&\t\u000b\f  \n\r  true",
                "raw": "\"true\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029&&\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1670,
          "end": 1674,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1676,
        "end": 1861,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1680,
            "end": 1859,
            "argument": {
              "type": "NewExpression",
              "start": 1686,
              "end": 1858,
              "callee": {
                "type": "Identifier",
                "start": 1690,
                "end": 1702,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1703,
                  "end": 1857,
                  "value": "#10: (true\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029&&\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029true) === true",
                  "raw": "'#10: (true\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029&&\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}