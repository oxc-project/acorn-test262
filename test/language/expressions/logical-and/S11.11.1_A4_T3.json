{
  "type": "Program",
  "start": 0,
  "end": 1132,
  "body": [
    {
      "type": "IfStatement",
      "start": 298,
      "end": 386,
      "test": {
        "type": "BinaryExpression",
        "start": 302,
        "end": 324,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 302,
          "end": 315,
          "expression": {
            "type": "LogicalExpression",
            "start": 303,
            "end": 314,
            "left": {
              "type": "Literal",
              "start": 303,
              "end": 306,
              "value": "0",
              "raw": "\"0\""
            },
            "operator": "&&",
            "right": {
              "type": "Literal",
              "start": 310,
              "end": 314,
              "value": "-1",
              "raw": "\"-1\""
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 320,
          "end": 324,
          "value": "-1",
          "raw": "\"-1\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 326,
        "end": 386,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 330,
            "end": 384,
            "argument": {
              "type": "NewExpression",
              "start": 336,
              "end": 383,
              "callee": {
                "type": "Identifier",
                "start": 340,
                "end": 352,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 353,
                  "end": 382,
                  "value": "#-1: (\"0\" && \"-1\") === \"-1\"",
                  "raw": "'#-1: (\"0\" && \"-1\") === \"-1\"'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 398,
      "end": 483,
      "test": {
        "type": "BinaryExpression",
        "start": 402,
        "end": 423,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 402,
          "end": 415,
          "expression": {
            "type": "LogicalExpression",
            "start": 403,
            "end": 414,
            "left": {
              "type": "Literal",
              "start": 403,
              "end": 407,
              "value": "-1",
              "raw": "\"-1\""
            },
            "operator": "&&",
            "right": {
              "type": "Literal",
              "start": 411,
              "end": 414,
              "value": "x",
              "raw": "\"x\""
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 420,
          "end": 423,
          "value": "x",
          "raw": "\"x\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 425,
        "end": 483,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 429,
            "end": 481,
            "argument": {
              "type": "NewExpression",
              "start": 435,
              "end": 480,
              "callee": {
                "type": "Identifier",
                "start": 439,
                "end": 451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 452,
                  "end": 479,
                  "value": "#2: (\"-1\" && \"x\") === \"x\"",
                  "raw": "'#2: (\"-1\" && \"x\") === \"x\"'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 495,
      "end": 518,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 499,
          "end": 517,
          "id": {
            "type": "Identifier",
            "start": 499,
            "end": 500,
            "name": "y"
          },
          "init": {
            "type": "NewExpression",
            "start": 503,
            "end": 517,
            "callee": {
              "type": "Identifier",
              "start": 507,
              "end": 513,
              "name": "String"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 514,
                "end": 516,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 515,
                  "end": 516,
                  "value": 1,
                  "raw": "1"
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 519,
      "end": 645,
      "test": {
        "type": "BinaryExpression",
        "start": 523,
        "end": 552,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 523,
          "end": 546,
          "expression": {
            "type": "LogicalExpression",
            "start": 524,
            "end": 545,
            "left": {
              "type": "NewExpression",
              "start": 524,
              "end": 540,
              "callee": {
                "type": "Identifier",
                "start": 528,
                "end": 534,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 535,
                  "end": 539,
                  "value": "-1",
                  "raw": "\"-1\""
                }
              ]
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "start": 544,
              "end": 545,
              "name": "y"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 551,
          "end": 552,
          "name": "y"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 554,
        "end": 645,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 558,
            "end": 643,
            "argument": {
              "type": "NewExpression",
              "start": 564,
              "end": 642,
              "callee": {
                "type": "Identifier",
                "start": 568,
                "end": 580,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 581,
                  "end": 641,
                  "value": "#3: (var y = new String(-1); (new String(\"-1\") && y) === y",
                  "raw": "'#3: (var y = new String(-1); (new String(\"-1\") && y) === y'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 657,
      "end": 681,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 661,
          "end": 680,
          "id": {
            "type": "Identifier",
            "start": 661,
            "end": 662,
            "name": "y"
          },
          "init": {
            "type": "NewExpression",
            "start": 665,
            "end": 680,
            "callee": {
              "type": "Identifier",
              "start": 669,
              "end": 675,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 676,
                "end": 679,
                "name": "NaN"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 682,
      "end": 807,
      "test": {
        "type": "BinaryExpression",
        "start": 686,
        "end": 714,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 686,
          "end": 708,
          "expression": {
            "type": "LogicalExpression",
            "start": 687,
            "end": 707,
            "left": {
              "type": "NewExpression",
              "start": 687,
              "end": 702,
              "callee": {
                "type": "Identifier",
                "start": 691,
                "end": 697,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 698,
                  "end": 701,
                  "value": "0",
                  "raw": "\"0\""
                }
              ]
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "start": 706,
              "end": 707,
              "name": "y"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 713,
          "end": 714,
          "name": "y"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 716,
        "end": 807,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 720,
            "end": 805,
            "argument": {
              "type": "NewExpression",
              "start": 726,
              "end": 804,
              "callee": {
                "type": "Identifier",
                "start": 730,
                "end": 742,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 743,
                  "end": 803,
                  "value": "#4: (var y = new String(NaN); (new String(\"0\") && y) === y",
                  "raw": "'#4: (var y = new String(NaN); (new String(\"0\") && y) === y'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 819,
      "end": 844,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 823,
          "end": 843,
          "id": {
            "type": "Identifier",
            "start": 823,
            "end": 824,
            "name": "y"
          },
          "init": {
            "type": "NewExpression",
            "start": 827,
            "end": 843,
            "callee": {
              "type": "Identifier",
              "start": 831,
              "end": 837,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 838,
                "end": 842,
                "value": "-x",
                "raw": "\"-x\""
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 845,
      "end": 971,
      "test": {
        "type": "BinaryExpression",
        "start": 849,
        "end": 877,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 849,
          "end": 871,
          "expression": {
            "type": "LogicalExpression",
            "start": 850,
            "end": 870,
            "left": {
              "type": "NewExpression",
              "start": 850,
              "end": 865,
              "callee": {
                "type": "Identifier",
                "start": 854,
                "end": 860,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 861,
                  "end": 864,
                  "value": "x",
                  "raw": "\"x\""
                }
              ]
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "start": 869,
              "end": 870,
              "name": "y"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 876,
          "end": 877,
          "name": "y"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 879,
        "end": 971,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 883,
            "end": 969,
            "argument": {
              "type": "NewExpression",
              "start": 889,
              "end": 968,
              "callee": {
                "type": "Identifier",
                "start": 893,
                "end": 905,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 906,
                  "end": 967,
                  "value": "#5: (var y = new String(\"-x\"); (new String(\"x\") && y) === y",
                  "raw": "'#5: (var y = new String(\"-x\"); (new String(\"x\") && y) === y'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 983,
      "end": 1006,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 987,
          "end": 1005,
          "id": {
            "type": "Identifier",
            "start": 987,
            "end": 988,
            "name": "y"
          },
          "init": {
            "type": "NewExpression",
            "start": 991,
            "end": 1005,
            "callee": {
              "type": "Identifier",
              "start": 995,
              "end": 1001,
              "name": "String"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 1002,
                "end": 1004,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 1003,
                  "end": 1004,
                  "value": 1,
                  "raw": "1"
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 1007,
      "end": 1131,
      "test": {
        "type": "BinaryExpression",
        "start": 1011,
        "end": 1039,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1011,
          "end": 1033,
          "expression": {
            "type": "LogicalExpression",
            "start": 1012,
            "end": 1032,
            "left": {
              "type": "NewExpression",
              "start": 1012,
              "end": 1027,
              "callee": {
                "type": "Identifier",
                "start": 1016,
                "end": 1022,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1023,
                  "end": 1026,
                  "name": "NaN"
                }
              ]
            },
            "operator": "&&",
            "right": {
              "type": "Identifier",
              "start": 1031,
              "end": 1032,
              "name": "y"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1038,
          "end": 1039,
          "name": "y"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1041,
        "end": 1131,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1045,
            "end": 1129,
            "argument": {
              "type": "NewExpression",
              "start": 1051,
              "end": 1128,
              "callee": {
                "type": "Identifier",
                "start": 1055,
                "end": 1067,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1068,
                  "end": 1127,
                  "value": "#6: (var y = new String(-1); (new String(NaN) && y) === y",
                  "raw": "'#6: (var y = new String(-1); (new String(NaN) && y) === y'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}