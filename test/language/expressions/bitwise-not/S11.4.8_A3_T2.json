{
  "type": "Program",
  "start": 0,
  "end": 1048,
  "body": [
    {
      "type": "IfStatement",
      "start": 272,
      "end": 356,
      "test": {
        "type": "BinaryExpression",
        "start": 276,
        "end": 287,
        "left": {
          "type": "UnaryExpression",
          "start": 276,
          "end": 280,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 277,
            "end": 280,
            "value": 0.1,
            "raw": "0.1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 285,
          "end": 287,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 286,
            "end": 287,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 289,
        "end": 356,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 293,
            "end": 354,
            "argument": {
              "type": "NewExpression",
              "start": 299,
              "end": 353,
              "callee": {
                "type": "Identifier",
                "start": 303,
                "end": 315,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 316,
                  "end": 352,
                  "left": {
                    "type": "Literal",
                    "start": 316,
                    "end": 343,
                    "value": "#1: ~0.1 === -1. Actual: ",
                    "raw": "'#1: ~0.1 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 346,
                    "end": 352,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 347,
                      "end": 351,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 348,
                        "end": 351,
                        "value": 0.1,
                        "raw": "0.1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 368,
      "end": 491,
      "test": {
        "type": "BinaryExpression",
        "start": 372,
        "end": 396,
        "left": {
          "type": "UnaryExpression",
          "start": 372,
          "end": 389,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "NewExpression",
            "start": 373,
            "end": 389,
            "callee": {
              "type": "Identifier",
              "start": 377,
              "end": 383,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 384,
                "end": 388,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 385,
                  "end": 388,
                  "value": 0.1,
                  "raw": "0.1",
                  "regex": null,
                  "bigint": null
                }
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 394,
          "end": 396,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 395,
            "end": 396,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 398,
        "end": 491,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 402,
            "end": 489,
            "argument": {
              "type": "NewExpression",
              "start": 408,
              "end": 488,
              "callee": {
                "type": "Identifier",
                "start": 412,
                "end": 424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 425,
                  "end": 487,
                  "left": {
                    "type": "Literal",
                    "start": 425,
                    "end": 465,
                    "value": "#2: ~new Number(-0.1) === -1. Actual: ",
                    "raw": "'#2: ~new Number(-0.1) === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 468,
                    "end": 487,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 469,
                      "end": 486,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "NewExpression",
                        "start": 470,
                        "end": 486,
                        "callee": {
                          "type": "Identifier",
                          "start": 474,
                          "end": 480,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "start": 481,
                            "end": 485,
                            "operator": "-",
                            "prefix": true,
                            "argument": {
                              "type": "Literal",
                              "start": 482,
                              "end": 485,
                              "value": 0.1,
                              "raw": "0.1",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 503,
      "end": 587,
      "test": {
        "type": "BinaryExpression",
        "start": 507,
        "end": 518,
        "left": {
          "type": "UnaryExpression",
          "start": 507,
          "end": 511,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 508,
            "end": 511,
            "name": "NaN"
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 516,
          "end": 518,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 517,
            "end": 518,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 520,
        "end": 587,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 524,
            "end": 585,
            "argument": {
              "type": "NewExpression",
              "start": 530,
              "end": 584,
              "callee": {
                "type": "Identifier",
                "start": 534,
                "end": 546,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 547,
                  "end": 583,
                  "left": {
                    "type": "Literal",
                    "start": 547,
                    "end": 574,
                    "value": "#3: ~NaN === -1. Actual: ",
                    "raw": "'#3: ~NaN === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 577,
                    "end": 583,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 578,
                      "end": 582,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 579,
                        "end": 582,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 599,
      "end": 719,
      "test": {
        "type": "BinaryExpression",
        "start": 603,
        "end": 626,
        "left": {
          "type": "UnaryExpression",
          "start": 603,
          "end": 619,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "NewExpression",
            "start": 604,
            "end": 619,
            "callee": {
              "type": "Identifier",
              "start": 608,
              "end": 614,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 615,
                "end": 618,
                "name": "NaN"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 624,
          "end": 626,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 625,
            "end": 626,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 628,
        "end": 719,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 632,
            "end": 717,
            "argument": {
              "type": "NewExpression",
              "start": 638,
              "end": 716,
              "callee": {
                "type": "Identifier",
                "start": 642,
                "end": 654,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 655,
                  "end": 715,
                  "left": {
                    "type": "Literal",
                    "start": 655,
                    "end": 694,
                    "value": "#4: ~new Number(NaN) === -1. Actual: ",
                    "raw": "'#4: ~new Number(NaN) === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 697,
                    "end": 715,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 698,
                      "end": 714,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "NewExpression",
                        "start": 699,
                        "end": 714,
                        "callee": {
                          "type": "Identifier",
                          "start": 703,
                          "end": 709,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 710,
                            "end": 713,
                            "name": "NaN"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 731,
      "end": 809,
      "test": {
        "type": "BinaryExpression",
        "start": 735,
        "end": 744,
        "left": {
          "type": "UnaryExpression",
          "start": 735,
          "end": 737,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 736,
            "end": 737,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 742,
          "end": 744,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 743,
            "end": 744,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 746,
        "end": 809,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 750,
            "end": 807,
            "argument": {
              "type": "NewExpression",
              "start": 756,
              "end": 806,
              "callee": {
                "type": "Identifier",
                "start": 760,
                "end": 772,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 773,
                  "end": 805,
                  "left": {
                    "type": "Literal",
                    "start": 773,
                    "end": 798,
                    "value": "#5: ~1 === -2. Actual: ",
                    "raw": "'#5: ~1 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 801,
                    "end": 805,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 802,
                      "end": 804,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 803,
                        "end": 804,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 821,
      "end": 936,
      "test": {
        "type": "BinaryExpression",
        "start": 825,
        "end": 846,
        "left": {
          "type": "UnaryExpression",
          "start": 825,
          "end": 840,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "NewExpression",
            "start": 826,
            "end": 840,
            "callee": {
              "type": "Identifier",
              "start": 830,
              "end": 836,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 837,
                "end": 839,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 838,
                  "end": 839,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 845,
          "end": 846,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 848,
        "end": 936,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 852,
            "end": 934,
            "argument": {
              "type": "NewExpression",
              "start": 858,
              "end": 933,
              "callee": {
                "type": "Identifier",
                "start": 862,
                "end": 874,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 875,
                  "end": 932,
                  "left": {
                    "type": "Literal",
                    "start": 875,
                    "end": 912,
                    "value": "#6: ~new Number(-2) === 1. Actual: ",
                    "raw": "'#6: ~new Number(-2) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 915,
                    "end": 932,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 916,
                      "end": 931,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "NewExpression",
                        "start": 917,
                        "end": 931,
                        "callee": {
                          "type": "Identifier",
                          "start": 921,
                          "end": 927,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "start": 928,
                            "end": 930,
                            "operator": "-",
                            "prefix": true,
                            "argument": {
                              "type": "Literal",
                              "start": 929,
                              "end": 930,
                              "value": 2,
                              "raw": "2",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 948,
      "end": 1047,
      "test": {
        "type": "BinaryExpression",
        "start": 952,
        "end": 968,
        "left": {
          "type": "UnaryExpression",
          "start": 952,
          "end": 961,
          "operator": "~",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 953,
            "end": 961,
            "name": "Infinity"
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 966,
          "end": 968,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 967,
            "end": 968,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 970,
        "end": 1047,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 974,
            "end": 1045,
            "argument": {
              "type": "NewExpression",
              "start": 980,
              "end": 1044,
              "callee": {
                "type": "Identifier",
                "start": 984,
                "end": 996,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 997,
                  "end": 1043,
                  "left": {
                    "type": "Literal",
                    "start": 997,
                    "end": 1029,
                    "value": "#7: ~Infinity === -1. Actual: ",
                    "raw": "'#7: ~Infinity === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1032,
                    "end": 1043,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 1033,
                      "end": 1042,
                      "operator": "~",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 1034,
                        "end": 1042,
                        "name": "Infinity"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}