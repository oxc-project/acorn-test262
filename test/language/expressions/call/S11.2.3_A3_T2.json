{
  "type": "Program",
  "start": 0,
  "end": 777,
  "body": [
    {
      "type": "TryStatement",
      "start": 279,
      "end": 504,
      "block": {
        "type": "BlockStatement",
        "start": 283,
        "end": 369,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 287,
            "end": 291,
            "expression": {
              "type": "CallExpression",
              "start": 287,
              "end": 290,
              "callee": {
                "type": "Literal",
                "start": 287,
                "end": 288,
                "value": 1,
                "raw": "1"
              },
              "arguments": [],
              "optional": false
            }
          },
          {
            "type": "ThrowStatement",
            "start": 296,
            "end": 366,
            "argument": {
              "type": "NewExpression",
              "start": 302,
              "end": 365,
              "callee": {
                "type": "Identifier",
                "start": 306,
                "end": 318,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 319,
                  "end": 364,
                  "left": {
                    "type": "Literal",
                    "start": 319,
                    "end": 356,
                    "value": "#1.1: 1() throw TypeError. Actual: ",
                    "raw": "'#1.1: 1() throw TypeError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 359,
                    "end": 364,
                    "expression": {
                      "type": "CallExpression",
                      "start": 360,
                      "end": 363,
                      "callee": {
                        "type": "Literal",
                        "start": 360,
                        "end": 361,
                        "value": 1,
                        "raw": "1"
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 370,
        "end": 504,
        "param": {
          "type": "Identifier",
          "start": 377,
          "end": 378,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 380,
          "end": 504,
          "body": [
            {
              "type": "IfStatement",
              "start": 384,
              "end": 502,
              "test": {
                "type": "BinaryExpression",
                "start": 388,
                "end": 421,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 388,
                  "end": 412,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 389,
                    "end": 411,
                    "left": {
                      "type": "Identifier",
                      "start": 389,
                      "end": 390,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 402,
                      "end": 411,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 417,
                  "end": 421,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 423,
                "end": 502,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 429,
                    "end": 497,
                    "argument": {
                      "type": "NewExpression",
                      "start": 435,
                      "end": 496,
                      "callee": {
                        "type": "Identifier",
                        "start": 439,
                        "end": 451,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 452,
                          "end": 495,
                          "left": {
                            "type": "Literal",
                            "start": 452,
                            "end": 489,
                            "value": "#1.2: 1() throw TypeError. Actual: ",
                            "raw": "'#1.2: 1() throw TypeError. Actual: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 492,
                            "end": 495,
                            "expression": {
                              "type": "Identifier",
                              "start": 493,
                              "end": 494,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 516,
      "end": 776,
      "block": {
        "type": "BlockStatement",
        "start": 520,
        "end": 630,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 524,
            "end": 534,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 528,
                "end": 533,
                "id": {
                  "type": "Identifier",
                  "start": 528,
                  "end": 529,
                  "name": "x"
                },
                "init": {
                  "type": "Literal",
                  "start": 532,
                  "end": 533,
                  "value": 1,
                  "raw": "1"
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 537,
            "end": 541,
            "expression": {
              "type": "CallExpression",
              "start": 537,
              "end": 540,
              "callee": {
                "type": "Identifier",
                "start": 537,
                "end": 538,
                "name": "x"
              },
              "arguments": [],
              "optional": false
            }
          },
          {
            "type": "ThrowStatement",
            "start": 546,
            "end": 627,
            "argument": {
              "type": "NewExpression",
              "start": 552,
              "end": 626,
              "callee": {
                "type": "Identifier",
                "start": 556,
                "end": 568,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 569,
                  "end": 625,
                  "left": {
                    "type": "Literal",
                    "start": 569,
                    "end": 617,
                    "value": "#2.1: var x = 1; x() throw TypeError. Actual: ",
                    "raw": "'#2.1: var x = 1; x() throw TypeError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 620,
                    "end": 625,
                    "expression": {
                      "type": "CallExpression",
                      "start": 621,
                      "end": 624,
                      "callee": {
                        "type": "Identifier",
                        "start": 621,
                        "end": 622,
                        "name": "x"
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 631,
        "end": 776,
        "param": {
          "type": "Identifier",
          "start": 638,
          "end": 639,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 641,
          "end": 776,
          "body": [
            {
              "type": "IfStatement",
              "start": 645,
              "end": 774,
              "test": {
                "type": "BinaryExpression",
                "start": 649,
                "end": 682,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 649,
                  "end": 673,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 650,
                    "end": 672,
                    "left": {
                      "type": "Identifier",
                      "start": 650,
                      "end": 651,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 663,
                      "end": 672,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 678,
                  "end": 682,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 684,
                "end": 774,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 690,
                    "end": 769,
                    "argument": {
                      "type": "NewExpression",
                      "start": 696,
                      "end": 768,
                      "callee": {
                        "type": "Identifier",
                        "start": 700,
                        "end": 712,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 713,
                          "end": 767,
                          "left": {
                            "type": "Literal",
                            "start": 713,
                            "end": 761,
                            "value": "#2.2: var x = 1; x() throw TypeError. Actual: ",
                            "raw": "'#2.2: var x = 1; x() throw TypeError. Actual: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 764,
                            "end": 767,
                            "expression": {
                              "type": "Identifier",
                              "start": 765,
                              "end": 766,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}