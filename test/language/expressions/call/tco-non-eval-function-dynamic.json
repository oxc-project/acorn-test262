{
  "type": "Program",
  "start": 0,
  "end": 1164,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 920,
      "end": 938,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 924,
          "end": 937,
          "id": {
            "type": "Identifier",
            "start": 924,
            "end": 933,
            "name": "callCount"
          },
          "init": {
            "type": "Literal",
            "start": 936,
            "end": 937,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 940,
      "end": 1130,
      "expression": {
        "type": "CallExpression",
        "start": 940,
        "end": 1129,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 940,
          "end": 1127,
          "expression": {
            "type": "FunctionExpression",
            "start": 941,
            "end": 1126,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 952,
              "end": 1126,
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "start": 956,
                  "end": 1077,
                  "id": {
                    "type": "Identifier",
                    "start": 965,
                    "end": 966,
                    "name": "f"
                  },
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 967,
                      "end": 968,
                      "name": "n"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 970,
                    "end": 1077,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 976,
                        "end": 989,
                        "expression": {
                          "type": "Literal",
                          "start": 976,
                          "end": 988,
                          "value": "use strict",
                          "raw": "\"use strict\"",
                          "regex": null,
                          "bigint": null
                        },
                        "directive": "use strict"
                      },
                      {
                        "type": "IfStatement",
                        "start": 994,
                        "end": 1049,
                        "test": {
                          "type": "BinaryExpression",
                          "start": 998,
                          "end": 1005,
                          "left": {
                            "type": "Identifier",
                            "start": 998,
                            "end": 999,
                            "name": "n"
                          },
                          "operator": "===",
                          "right": {
                            "type": "Literal",
                            "start": 1004,
                            "end": 1005,
                            "value": 0,
                            "raw": "0",
                            "regex": null,
                            "bigint": null
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "start": 1007,
                          "end": 1049,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1015,
                              "end": 1029,
                              "expression": {
                                "type": "AssignmentExpression",
                                "start": 1015,
                                "end": 1029,
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "start": 1015,
                                  "end": 1024,
                                  "name": "callCount"
                                },
                                "right": {
                                  "type": "Literal",
                                  "start": 1028,
                                  "end": 1029,
                                  "value": 1,
                                  "raw": "1",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "start": 1036,
                              "end": 1043,
                              "argument": null
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1054,
                        "end": 1073,
                        "argument": {
                          "type": "CallExpression",
                          "start": 1061,
                          "end": 1072,
                          "callee": {
                            "type": "Identifier",
                            "start": 1061,
                            "end": 1065,
                            "name": "eval"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 1066,
                              "end": 1071,
                              "left": {
                                "type": "Identifier",
                                "start": 1066,
                                "end": 1067,
                                "name": "n"
                              },
                              "operator": "-",
                              "right": {
                                "type": "Literal",
                                "start": 1070,
                                "end": 1071,
                                "value": 1,
                                "raw": "1",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1080,
                  "end": 1102,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1080,
                    "end": 1101,
                    "callee": {
                      "type": "Identifier",
                      "start": 1080,
                      "end": 1084,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1085,
                        "end": 1100,
                        "value": "var eval = f;",
                        "raw": "\"var eval = f;\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1105,
                  "end": 1124,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1105,
                    "end": 1123,
                    "callee": {
                      "type": "Identifier",
                      "start": 1105,
                      "end": 1106,
                      "name": "f"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1107,
                        "end": 1122,
                        "name": "$MAX_ITERATIONS"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1132,
      "end": 1163,
      "expression": {
        "type": "CallExpression",
        "start": 1132,
        "end": 1162,
        "callee": {
          "type": "MemberExpression",
          "start": 1132,
          "end": 1148,
          "object": {
            "type": "Identifier",
            "start": 1132,
            "end": 1138,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1139,
            "end": 1148,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1149,
            "end": 1158,
            "name": "callCount"
          },
          {
            "type": "Literal",
            "start": 1160,
            "end": 1161,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}