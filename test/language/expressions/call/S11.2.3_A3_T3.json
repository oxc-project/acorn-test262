{
  "type": "Program",
  "start": 0,
  "end": 791,
  "body": [
    {
      "type": "TryStatement",
      "start": 279,
      "end": 512,
      "block": {
        "type": "BlockStatement",
        "start": 283,
        "end": 375,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 287,
            "end": 293,
            "expression": {
              "type": "CallExpression",
              "start": 287,
              "end": 292,
              "callee": {
                "type": "Literal",
                "start": 287,
                "end": 290,
                "value": "1",
                "raw": "\"1\""
              },
              "arguments": [],
              "optional": false
            }
          },
          {
            "type": "ThrowStatement",
            "start": 298,
            "end": 372,
            "argument": {
              "type": "NewExpression",
              "start": 304,
              "end": 371,
              "callee": {
                "type": "Identifier",
                "start": 308,
                "end": 320,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 321,
                  "end": 370,
                  "left": {
                    "type": "Literal",
                    "start": 321,
                    "end": 360,
                    "value": "#1.1: \"1\"() throw TypeError. Actual: ",
                    "raw": "'#1.1: \"1\"() throw TypeError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 363,
                    "end": 370,
                    "expression": {
                      "type": "CallExpression",
                      "start": 364,
                      "end": 369,
                      "callee": {
                        "type": "Literal",
                        "start": 364,
                        "end": 367,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 376,
        "end": 512,
        "param": {
          "type": "Identifier",
          "start": 383,
          "end": 384,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 386,
          "end": 512,
          "body": [
            {
              "type": "IfStatement",
              "start": 390,
              "end": 510,
              "test": {
                "type": "BinaryExpression",
                "start": 394,
                "end": 427,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 394,
                  "end": 418,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 395,
                    "end": 417,
                    "left": {
                      "type": "Identifier",
                      "start": 395,
                      "end": 396,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 408,
                      "end": 417,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 423,
                  "end": 427,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 429,
                "end": 510,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 435,
                    "end": 505,
                    "argument": {
                      "type": "NewExpression",
                      "start": 441,
                      "end": 504,
                      "callee": {
                        "type": "Identifier",
                        "start": 445,
                        "end": 457,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 458,
                          "end": 503,
                          "left": {
                            "type": "Literal",
                            "start": 458,
                            "end": 497,
                            "value": "#1.2: \"1\"() throw TypeError. Actual: ",
                            "raw": "'#1.2: \"1\"() throw TypeError. Actual: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 500,
                            "end": 503,
                            "expression": {
                              "type": "Identifier",
                              "start": 501,
                              "end": 502,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 524,
      "end": 790,
      "block": {
        "type": "BlockStatement",
        "start": 528,
        "end": 642,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 532,
            "end": 544,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 536,
                "end": 543,
                "id": {
                  "type": "Identifier",
                  "start": 536,
                  "end": 537,
                  "name": "x"
                },
                "init": {
                  "type": "Literal",
                  "start": 540,
                  "end": 543,
                  "value": "1",
                  "raw": "\"1\""
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 547,
            "end": 551,
            "expression": {
              "type": "CallExpression",
              "start": 547,
              "end": 550,
              "callee": {
                "type": "Identifier",
                "start": 547,
                "end": 548,
                "name": "x"
              },
              "arguments": [],
              "optional": false
            }
          },
          {
            "type": "ThrowStatement",
            "start": 556,
            "end": 639,
            "argument": {
              "type": "NewExpression",
              "start": 562,
              "end": 638,
              "callee": {
                "type": "Identifier",
                "start": 566,
                "end": 578,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 579,
                  "end": 637,
                  "left": {
                    "type": "Literal",
                    "start": 579,
                    "end": 629,
                    "value": "#2.1: var x = \"1\"; x() throw TypeError. Actual: ",
                    "raw": "'#2.1: var x = \"1\"; x() throw TypeError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 632,
                    "end": 637,
                    "expression": {
                      "type": "CallExpression",
                      "start": 633,
                      "end": 636,
                      "callee": {
                        "type": "Identifier",
                        "start": 633,
                        "end": 634,
                        "name": "x"
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 643,
        "end": 790,
        "param": {
          "type": "Identifier",
          "start": 650,
          "end": 651,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 653,
          "end": 790,
          "body": [
            {
              "type": "IfStatement",
              "start": 657,
              "end": 788,
              "test": {
                "type": "BinaryExpression",
                "start": 661,
                "end": 694,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 661,
                  "end": 685,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 662,
                    "end": 684,
                    "left": {
                      "type": "Identifier",
                      "start": 662,
                      "end": 663,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 675,
                      "end": 684,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 690,
                  "end": 694,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 696,
                "end": 788,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 702,
                    "end": 783,
                    "argument": {
                      "type": "NewExpression",
                      "start": 708,
                      "end": 782,
                      "callee": {
                        "type": "Identifier",
                        "start": 712,
                        "end": 724,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 725,
                          "end": 781,
                          "left": {
                            "type": "Literal",
                            "start": 725,
                            "end": 775,
                            "value": "#2.2: var x = \"1\"; x() throw TypeError. Actual: ",
                            "raw": "'#2.2: var x = \"1\"; x() throw TypeError. Actual: '"
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 778,
                            "end": 781,
                            "expression": {
                              "type": "Identifier",
                              "start": 779,
                              "end": 780,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}