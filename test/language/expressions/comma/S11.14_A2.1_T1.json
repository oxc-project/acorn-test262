{
  "type": "Program",
  "start": 0,
  "end": 1512,
  "body": [
    {
      "type": "IfStatement",
      "start": 277,
      "end": 362,
      "test": {
        "type": "BinaryExpression",
        "start": 281,
        "end": 292,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 281,
          "end": 286,
          "expression": {
            "type": "SequenceExpression",
            "start": 282,
            "end": 285,
            "expressions": [
              {
                "type": "Literal",
                "start": 282,
                "end": 283,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 284,
                "end": 285,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 291,
          "end": 292,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 294,
        "end": 362,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 298,
            "end": 360,
            "argument": {
              "type": "NewExpression",
              "start": 304,
              "end": 359,
              "callee": {
                "type": "Identifier",
                "start": 308,
                "end": 320,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 321,
                  "end": 358,
                  "left": {
                    "type": "Literal",
                    "start": 321,
                    "end": 348,
                    "value": "#1: (1,2) === 2. Actual: ",
                    "raw": "'#1: (1,2) === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 351,
                    "end": 358,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 352,
                      "end": 357,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 353,
                        "end": 356,
                        "expressions": [
                          {
                            "type": "Literal",
                            "start": 353,
                            "end": 354,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          },
                          {
                            "type": "Literal",
                            "start": 355,
                            "end": 356,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 374,
      "end": 384,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 378,
          "end": 383,
          "id": {
            "type": "Identifier",
            "start": 378,
            "end": 379,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 382,
            "end": 383,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 385,
      "end": 484,
      "test": {
        "type": "BinaryExpression",
        "start": 389,
        "end": 401,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 389,
          "end": 395,
          "expression": {
            "type": "SequenceExpression",
            "start": 390,
            "end": 394,
            "expressions": [
              {
                "type": "Identifier",
                "start": 390,
                "end": 391,
                "name": "x"
              },
              {
                "type": "Literal",
                "start": 393,
                "end": 394,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 400,
          "end": 401,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 403,
        "end": 484,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 407,
            "end": 482,
            "argument": {
              "type": "NewExpression",
              "start": 413,
              "end": 481,
              "callee": {
                "type": "Identifier",
                "start": 417,
                "end": 429,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 430,
                  "end": 480,
                  "left": {
                    "type": "Literal",
                    "start": 430,
                    "end": 469,
                    "value": "#2: var x = 1; (x, 2) === 2. Actual: ",
                    "raw": "'#2: var x = 1; (x, 2) === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 472,
                    "end": 480,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 473,
                      "end": 479,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 474,
                        "end": 478,
                        "expressions": [
                          {
                            "type": "Identifier",
                            "start": 474,
                            "end": 475,
                            "name": "x"
                          },
                          {
                            "type": "Literal",
                            "start": 477,
                            "end": 478,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 496,
      "end": 506,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 500,
          "end": 505,
          "id": {
            "type": "Identifier",
            "start": 500,
            "end": 501,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 504,
            "end": 505,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 507,
      "end": 606,
      "test": {
        "type": "BinaryExpression",
        "start": 511,
        "end": 523,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 511,
          "end": 517,
          "expression": {
            "type": "SequenceExpression",
            "start": 512,
            "end": 516,
            "expressions": [
              {
                "type": "Literal",
                "start": 512,
                "end": 513,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Identifier",
                "start": 515,
                "end": 516,
                "name": "y"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 522,
          "end": 523,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 525,
        "end": 606,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 529,
            "end": 604,
            "argument": {
              "type": "NewExpression",
              "start": 535,
              "end": 603,
              "callee": {
                "type": "Identifier",
                "start": 539,
                "end": 551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 552,
                  "end": 602,
                  "left": {
                    "type": "Literal",
                    "start": 552,
                    "end": 591,
                    "value": "#3: var y = 2; (1, y) === 2. Actual: ",
                    "raw": "'#3: var y = 2; (1, y) === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 594,
                    "end": 602,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 595,
                      "end": 601,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 596,
                        "end": 600,
                        "expressions": [
                          {
                            "type": "Literal",
                            "start": 596,
                            "end": 597,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          },
                          {
                            "type": "Identifier",
                            "start": 599,
                            "end": 600,
                            "name": "y"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 618,
      "end": 628,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 622,
          "end": 627,
          "id": {
            "type": "Identifier",
            "start": 622,
            "end": 623,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 626,
            "end": 627,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 629,
      "end": 639,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 633,
          "end": 638,
          "id": {
            "type": "Identifier",
            "start": 633,
            "end": 634,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 637,
            "end": 638,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 640,
      "end": 750,
      "test": {
        "type": "BinaryExpression",
        "start": 644,
        "end": 656,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 644,
          "end": 650,
          "expression": {
            "type": "SequenceExpression",
            "start": 645,
            "end": 649,
            "expressions": [
              {
                "type": "Identifier",
                "start": 645,
                "end": 646,
                "name": "x"
              },
              {
                "type": "Identifier",
                "start": 648,
                "end": 649,
                "name": "y"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 655,
          "end": 656,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 658,
        "end": 750,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 662,
            "end": 748,
            "argument": {
              "type": "NewExpression",
              "start": 668,
              "end": 747,
              "callee": {
                "type": "Identifier",
                "start": 672,
                "end": 684,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 685,
                  "end": 746,
                  "left": {
                    "type": "Literal",
                    "start": 685,
                    "end": 735,
                    "value": "#4: var x = 1; var y = 2; (x, y) === 2. Actual: ",
                    "raw": "'#4: var x = 1; var y = 2; (x, y) === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 738,
                    "end": 746,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 739,
                      "end": 745,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 740,
                        "end": 744,
                        "expressions": [
                          {
                            "type": "Identifier",
                            "start": 740,
                            "end": 741,
                            "name": "x"
                          },
                          {
                            "type": "Identifier",
                            "start": 743,
                            "end": 744,
                            "name": "y"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 762,
      "end": 772,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 766,
          "end": 771,
          "id": {
            "type": "Identifier",
            "start": 766,
            "end": 767,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 770,
            "end": 771,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 773,
      "end": 872,
      "test": {
        "type": "BinaryExpression",
        "start": 777,
        "end": 789,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 777,
          "end": 783,
          "expression": {
            "type": "SequenceExpression",
            "start": 778,
            "end": 782,
            "expressions": [
              {
                "type": "Identifier",
                "start": 778,
                "end": 779,
                "name": "x"
              },
              {
                "type": "Identifier",
                "start": 781,
                "end": 782,
                "name": "x"
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 788,
          "end": 789,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 791,
        "end": 872,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 795,
            "end": 870,
            "argument": {
              "type": "NewExpression",
              "start": 801,
              "end": 869,
              "callee": {
                "type": "Identifier",
                "start": 805,
                "end": 817,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 818,
                  "end": 868,
                  "left": {
                    "type": "Literal",
                    "start": 818,
                    "end": 857,
                    "value": "#5: var x = 1; (x, x) === 1. Actual: ",
                    "raw": "'#5: var x = 1; (x, x) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 860,
                    "end": 868,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 861,
                      "end": 867,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 862,
                        "end": 866,
                        "expressions": [
                          {
                            "type": "Identifier",
                            "start": 862,
                            "end": 863,
                            "name": "x"
                          },
                          {
                            "type": "Identifier",
                            "start": 865,
                            "end": 866,
                            "name": "x"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 884,
      "end": 911,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 888,
          "end": 910,
          "id": {
            "type": "Identifier",
            "start": 888,
            "end": 895,
            "name": "objectx"
          },
          "init": {
            "type": "NewExpression",
            "start": 898,
            "end": 910,
            "callee": {
              "type": "Identifier",
              "start": 902,
              "end": 908,
              "name": "Object"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 912,
      "end": 939,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 916,
          "end": 938,
          "id": {
            "type": "Identifier",
            "start": 916,
            "end": 923,
            "name": "objecty"
          },
          "init": {
            "type": "NewExpression",
            "start": 926,
            "end": 938,
            "callee": {
              "type": "Identifier",
              "start": 930,
              "end": 936,
              "name": "Object"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 940,
      "end": 960,
      "expression": {
        "type": "AssignmentExpression",
        "start": 940,
        "end": 959,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 940,
          "end": 952,
          "object": {
            "type": "Identifier",
            "start": 940,
            "end": 947,
            "name": "objectx"
          },
          "property": {
            "type": "Identifier",
            "start": 948,
            "end": 952,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 955,
          "end": 959,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 961,
      "end": 980,
      "expression": {
        "type": "AssignmentExpression",
        "start": 961,
        "end": 979,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 961,
          "end": 973,
          "object": {
            "type": "Identifier",
            "start": 961,
            "end": 968,
            "name": "objecty"
          },
          "property": {
            "type": "Identifier",
            "start": 969,
            "end": 973,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 976,
          "end": 979,
          "value": 1.1,
          "raw": "1.1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 981,
      "end": 1511,
      "test": {
        "type": "BinaryExpression",
        "start": 985,
        "end": 1038,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 985,
          "end": 1021,
          "expression": {
            "type": "SequenceExpression",
            "start": 986,
            "end": 1020,
            "expressions": [
              {
                "type": "AssignmentExpression",
                "start": 986,
                "end": 1006,
                "operator": "=",
                "left": {
                  "type": "MemberExpression",
                  "start": 986,
                  "end": 998,
                  "object": {
                    "type": "Identifier",
                    "start": 986,
                    "end": 993,
                    "name": "objectx"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 994,
                    "end": 998,
                    "name": "prop"
                  },
                  "computed": false,
                  "optional": false
                },
                "right": {
                  "type": "Literal",
                  "start": 1001,
                  "end": 1006,
                  "value": false,
                  "raw": "false",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "MemberExpression",
                "start": 1008,
                "end": 1020,
                "object": {
                  "type": "Identifier",
                  "start": 1008,
                  "end": 1015,
                  "name": "objecty"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1016,
                  "end": 1020,
                  "name": "prop"
                },
                "computed": false,
                "optional": false
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 1026,
          "end": 1038,
          "object": {
            "type": "Identifier",
            "start": 1026,
            "end": 1033,
            "name": "objecty"
          },
          "property": {
            "type": "Identifier",
            "start": 1034,
            "end": 1038,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1040,
        "end": 1276,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1044,
            "end": 1274,
            "argument": {
              "type": "NewExpression",
              "start": 1050,
              "end": 1273,
              "callee": {
                "type": "Identifier",
                "start": 1054,
                "end": 1066,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1067,
                  "end": 1272,
                  "left": {
                    "type": "Literal",
                    "start": 1067,
                    "end": 1231,
                    "value": "#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop = false, objecty.prop) === objecty.prop. Actual: ",
                    "raw": "'#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop = false, objecty.prop) === objecty.prop. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1234,
                    "end": 1272,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1235,
                      "end": 1271,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 1236,
                        "end": 1270,
                        "expressions": [
                          {
                            "type": "AssignmentExpression",
                            "start": 1236,
                            "end": 1256,
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "start": 1236,
                              "end": 1248,
                              "object": {
                                "type": "Identifier",
                                "start": 1236,
                                "end": 1243,
                                "name": "objectx"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 1244,
                                "end": 1248,
                                "name": "prop"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "right": {
                              "type": "Literal",
                              "start": 1251,
                              "end": 1256,
                              "value": false,
                              "raw": "false",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          {
                            "type": "MemberExpression",
                            "start": 1258,
                            "end": 1270,
                            "object": {
                              "type": "Identifier",
                              "start": 1258,
                              "end": 1265,
                              "name": "objecty"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 1266,
                              "end": 1270,
                              "name": "prop"
                            },
                            "computed": false,
                            "optional": false
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1282,
        "end": 1511,
        "body": [
          {
            "type": "IfStatement",
            "start": 1286,
            "end": 1508,
            "test": {
              "type": "BinaryExpression",
              "start": 1290,
              "end": 1312,
              "left": {
                "type": "MemberExpression",
                "start": 1290,
                "end": 1302,
                "object": {
                  "type": "Identifier",
                  "start": 1290,
                  "end": 1297,
                  "name": "objectx"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1298,
                  "end": 1302,
                  "name": "prop"
                },
                "computed": false,
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 1307,
                "end": 1312,
                "value": false,
                "raw": "false",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1314,
              "end": 1508,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1320,
                  "end": 1504,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1326,
                    "end": 1503,
                    "callee": {
                      "type": "Identifier",
                      "start": 1330,
                      "end": 1342,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1343,
                        "end": 1502,
                        "value": "#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; objectx.prop = false, objecty.prop; objectx.prop === false",
                        "raw": "'#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; objectx.prop = false, objecty.prop; objectx.prop === false'",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}