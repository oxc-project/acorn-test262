{
  "type": "Program",
  "start": 0,
  "end": 951,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 279,
      "end": 289,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 283,
          "end": 288,
          "id": {
            "type": "Identifier",
            "start": 283,
            "end": 284,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 287,
            "end": 288,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 290,
      "end": 300,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 294,
          "end": 299,
          "id": {
            "type": "Identifier",
            "start": 294,
            "end": 295,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 298,
            "end": 299,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 301,
      "end": 311,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 305,
          "end": 310,
          "id": {
            "type": "Identifier",
            "start": 305,
            "end": 306,
            "name": "z"
          },
          "init": {
            "type": "Literal",
            "start": 309,
            "end": 310,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 312,
      "end": 478,
      "test": {
        "type": "BinaryExpression",
        "start": 316,
        "end": 343,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 316,
          "end": 337,
          "expression": {
            "type": "SequenceExpression",
            "start": 317,
            "end": 336,
            "expressions": [
              {
                "type": "AssignmentExpression",
                "start": 317,
                "end": 322,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 317,
                  "end": 318,
                  "name": "x"
                },
                "right": {
                  "type": "Literal",
                  "start": 321,
                  "end": 322,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "AssignmentExpression",
                "start": 324,
                "end": 329,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 324,
                  "end": 325,
                  "name": "y"
                },
                "right": {
                  "type": "Literal",
                  "start": 328,
                  "end": 329,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "AssignmentExpression",
                "start": 331,
                "end": 336,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 331,
                  "end": 332,
                  "name": "z"
                },
                "right": {
                  "type": "Literal",
                  "start": 335,
                  "end": 336,
                  "value": 3,
                  "raw": "3",
                  "regex": null,
                  "bigint": null
                }
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 342,
          "end": 343,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 345,
        "end": 478,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 349,
            "end": 476,
            "argument": {
              "type": "NewExpression",
              "start": 355,
              "end": 475,
              "callee": {
                "type": "Identifier",
                "start": 359,
                "end": 371,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 372,
                  "end": 474,
                  "left": {
                    "type": "Literal",
                    "start": 372,
                    "end": 448,
                    "value": "#1: var x = 0; var y = 0; var z = 0; (x = 1, y = 2, z = 3) === 3. Actual: ",
                    "raw": "'#1: var x = 0; var y = 0; var z = 0; (x = 1, y = 2, z = 3) === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 451,
                    "end": 474,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 452,
                      "end": 473,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 453,
                        "end": 472,
                        "expressions": [
                          {
                            "type": "AssignmentExpression",
                            "start": 453,
                            "end": 458,
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "start": 453,
                              "end": 454,
                              "name": "x"
                            },
                            "right": {
                              "type": "Literal",
                              "start": 457,
                              "end": 458,
                              "value": 1,
                              "raw": "1",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          {
                            "type": "AssignmentExpression",
                            "start": 460,
                            "end": 465,
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "start": 460,
                              "end": 461,
                              "name": "y"
                            },
                            "right": {
                              "type": "Literal",
                              "start": 464,
                              "end": 465,
                              "value": 2,
                              "raw": "2",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          {
                            "type": "AssignmentExpression",
                            "start": 467,
                            "end": 472,
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "start": 467,
                              "end": 468,
                              "name": "z"
                            },
                            "right": {
                              "type": "Literal",
                              "start": 471,
                              "end": 472,
                              "value": 3,
                              "raw": "3",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 480,
      "end": 490,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 484,
          "end": 489,
          "id": {
            "type": "Identifier",
            "start": 484,
            "end": 485,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 488,
            "end": 489,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 491,
      "end": 501,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 495,
          "end": 500,
          "id": {
            "type": "Identifier",
            "start": 495,
            "end": 496,
            "name": "y"
          },
          "init": {
            "type": "Literal",
            "start": 499,
            "end": 500,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 502,
      "end": 512,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 506,
          "end": 511,
          "id": {
            "type": "Identifier",
            "start": 506,
            "end": 507,
            "name": "z"
          },
          "init": {
            "type": "Literal",
            "start": 510,
            "end": 511,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 513,
      "end": 533,
      "expression": {
        "type": "SequenceExpression",
        "start": 513,
        "end": 532,
        "expressions": [
          {
            "type": "AssignmentExpression",
            "start": 513,
            "end": 518,
            "operator": "=",
            "left": {
              "type": "Identifier",
              "start": 513,
              "end": 514,
              "name": "x"
            },
            "right": {
              "type": "Literal",
              "start": 517,
              "end": 518,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "AssignmentExpression",
            "start": 520,
            "end": 525,
            "operator": "=",
            "left": {
              "type": "Identifier",
              "start": 520,
              "end": 521,
              "name": "y"
            },
            "right": {
              "type": "Literal",
              "start": 524,
              "end": 525,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "AssignmentExpression",
            "start": 527,
            "end": 532,
            "operator": "=",
            "left": {
              "type": "Identifier",
              "start": 527,
              "end": 528,
              "name": "z"
            },
            "right": {
              "type": "Literal",
              "start": 531,
              "end": 532,
              "value": 3,
              "raw": "3",
              "regex": null,
              "bigint": null
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 545,
      "end": 672,
      "test": {
        "type": "BinaryExpression",
        "start": 549,
        "end": 556,
        "left": {
          "type": "Identifier",
          "start": 549,
          "end": 550,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 555,
          "end": 556,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 558,
        "end": 672,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 562,
            "end": 670,
            "argument": {
              "type": "NewExpression",
              "start": 568,
              "end": 669,
              "callee": {
                "type": "Identifier",
                "start": 572,
                "end": 584,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 585,
                  "end": 668,
                  "left": {
                    "type": "Literal",
                    "start": 585,
                    "end": 662,
                    "value": "#2: var x = 0; var y = 0; var z = 0; x = 1, y = 2, z = 3; x === 1. Actual: ",
                    "raw": "'#2: var x = 0; var y = 0; var z = 0; x = 1, y = 2, z = 3; x === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 665,
                    "end": 668,
                    "expression": {
                      "type": "Identifier",
                      "start": 666,
                      "end": 667,
                      "name": "x"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 684,
      "end": 811,
      "test": {
        "type": "BinaryExpression",
        "start": 688,
        "end": 695,
        "left": {
          "type": "Identifier",
          "start": 688,
          "end": 689,
          "name": "y"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 694,
          "end": 695,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 697,
        "end": 811,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 701,
            "end": 809,
            "argument": {
              "type": "NewExpression",
              "start": 707,
              "end": 808,
              "callee": {
                "type": "Identifier",
                "start": 711,
                "end": 723,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 724,
                  "end": 807,
                  "left": {
                    "type": "Literal",
                    "start": 724,
                    "end": 801,
                    "value": "#3: var x = 0; var y = 0; var z = 0; x = 1, y = 2, z = 3; y === 2. Actual: ",
                    "raw": "'#3: var x = 0; var y = 0; var z = 0; x = 1, y = 2, z = 3; y === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 804,
                    "end": 807,
                    "expression": {
                      "type": "Identifier",
                      "start": 805,
                      "end": 806,
                      "name": "y"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 823,
      "end": 950,
      "test": {
        "type": "BinaryExpression",
        "start": 827,
        "end": 834,
        "left": {
          "type": "Identifier",
          "start": 827,
          "end": 828,
          "name": "z"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 833,
          "end": 834,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 836,
        "end": 950,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 840,
            "end": 948,
            "argument": {
              "type": "NewExpression",
              "start": 846,
              "end": 947,
              "callee": {
                "type": "Identifier",
                "start": 850,
                "end": 862,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 863,
                  "end": 946,
                  "left": {
                    "type": "Literal",
                    "start": 863,
                    "end": 940,
                    "value": "#4: var x = 0; var y = 0; var z = 0; x = 1, y = 2, z = 3; z === 3. Actual: ",
                    "raw": "'#4: var x = 0; var y = 0; var z = 0; x = 1, y = 2, z = 3; z === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 943,
                    "end": 946,
                    "expression": {
                      "type": "Identifier",
                      "start": 944,
                      "end": 945,
                      "name": "z"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}