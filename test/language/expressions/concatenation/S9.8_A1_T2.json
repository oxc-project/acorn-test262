{
  "type": "Program",
  "start": 0,
  "end": 780,
  "body": [
    {
      "type": "IfStatement",
      "start": 354,
      "end": 486,
      "test": {
        "type": "BinaryExpression",
        "start": 358,
        "end": 388,
        "left": {
          "type": "BinaryExpression",
          "start": 358,
          "end": 372,
          "left": {
            "type": "Identifier",
            "start": 358,
            "end": 367,
            "name": "undefined"
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 370,
            "end": 372,
            "value": "",
            "raw": "\"\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 377,
          "end": 388,
          "value": "undefined",
          "raw": "\"undefined\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 390,
        "end": 486,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 394,
            "end": 484,
            "argument": {
              "type": "NewExpression",
              "start": 400,
              "end": 483,
              "callee": {
                "type": "Identifier",
                "start": 404,
                "end": 416,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 417,
                  "end": 482,
                  "left": {
                    "type": "Literal",
                    "start": 417,
                    "end": 463,
                    "value": "#1: undefined + \"\" === \"undefined\". Actual: ",
                    "raw": "'#1: undefined + \"\" === \"undefined\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 466,
                    "end": 482,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 467,
                      "end": 481,
                      "left": {
                        "type": "Identifier",
                        "start": 467,
                        "end": 476,
                        "name": "undefined"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 479,
                        "end": 481,
                        "value": "",
                        "raw": "\"\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 499,
      "end": 622,
      "test": {
        "type": "BinaryExpression",
        "start": 503,
        "end": 530,
        "left": {
          "type": "BinaryExpression",
          "start": 503,
          "end": 514,
          "left": {
            "type": "UnaryExpression",
            "start": 503,
            "end": 509,
            "operator": "void",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 508,
              "end": 509,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 512,
            "end": 514,
            "value": "",
            "raw": "\"\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 519,
          "end": 530,
          "value": "undefined",
          "raw": "\"undefined\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 532,
        "end": 622,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 536,
            "end": 620,
            "argument": {
              "type": "NewExpression",
              "start": 542,
              "end": 619,
              "callee": {
                "type": "Identifier",
                "start": 546,
                "end": 558,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 559,
                  "end": 618,
                  "left": {
                    "type": "Literal",
                    "start": 559,
                    "end": 602,
                    "value": "#2: void 0 + \"\" === \"undefined\". Actual: ",
                    "raw": "'#2: void 0 + \"\" === \"undefined\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 605,
                    "end": 618,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 606,
                      "end": 617,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 606,
                        "end": 612,
                        "operator": "void",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 611,
                          "end": 612,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 615,
                        "end": 617,
                        "value": "",
                        "raw": "\"\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 635,
      "end": 779,
      "test": {
        "type": "BinaryExpression",
        "start": 639,
        "end": 673,
        "left": {
          "type": "BinaryExpression",
          "start": 639,
          "end": 657,
          "left": {
            "type": "CallExpression",
            "start": 639,
            "end": 652,
            "callee": {
              "type": "Identifier",
              "start": 639,
              "end": 643,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 644,
                "end": 651,
                "value": "var x",
                "raw": "\"var x\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 655,
            "end": 657,
            "value": "",
            "raw": "\"\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 662,
          "end": 673,
          "value": "undefined",
          "raw": "\"undefined\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 675,
        "end": 779,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 679,
            "end": 777,
            "argument": {
              "type": "NewExpression",
              "start": 685,
              "end": 776,
              "callee": {
                "type": "Identifier",
                "start": 689,
                "end": 701,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 702,
                  "end": 775,
                  "left": {
                    "type": "Literal",
                    "start": 702,
                    "end": 752,
                    "value": "#3: eval(\"var x\") + \"\" === \"undefined\". Actual: ",
                    "raw": "'#3: eval(\"var x\") + \"\" === \"undefined\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 755,
                    "end": 775,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 756,
                      "end": 774,
                      "left": {
                        "type": "CallExpression",
                        "start": 756,
                        "end": 769,
                        "callee": {
                          "type": "Identifier",
                          "start": 756,
                          "end": 760,
                          "name": "eval"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 761,
                            "end": 768,
                            "value": "var x",
                            "raw": "\"var x\"",
                            "regex": null,
                            "bigint": null
                          }
                        ],
                        "optional": false
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 772,
                        "end": 774,
                        "value": "",
                        "raw": "\"\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}