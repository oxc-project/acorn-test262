{
  "type": "Program",
  "start": 0,
  "end": 2947,
  "body": [
    {
      "type": "IfStatement",
      "start": 342,
      "end": 467,
      "test": {
        "type": "BinaryExpression",
        "start": 346,
        "end": 371,
        "left": {
          "type": "BinaryExpression",
          "start": 346,
          "end": 363,
          "left": {
            "type": "NewExpression",
            "start": 346,
            "end": 358,
            "callee": {
              "type": "Identifier",
              "start": 350,
              "end": 356,
              "name": "Number"
            },
            "arguments": []
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 361,
            "end": 363,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 368,
          "end": 371,
          "value": "0",
          "raw": "\"0\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 373,
        "end": 467,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 377,
            "end": 465,
            "argument": {
              "type": "NewExpression",
              "start": 383,
              "end": 464,
              "callee": {
                "type": "Identifier",
                "start": 387,
                "end": 399,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 400,
                  "end": 463,
                  "left": {
                    "type": "Literal",
                    "start": 400,
                    "end": 441,
                    "value": "#1: new Number() + \"\" === \"0\". Actual: ",
                    "raw": "'#1: new Number() + \"\" === \"0\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 444,
                    "end": 463,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 445,
                      "end": 462,
                      "left": {
                        "type": "NewExpression",
                        "start": 445,
                        "end": 457,
                        "callee": {
                          "type": "Identifier",
                          "start": 449,
                          "end": 455,
                          "name": "Number"
                        },
                        "arguments": []
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 460,
                        "end": 462,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 480,
      "end": 608,
      "test": {
        "type": "BinaryExpression",
        "start": 484,
        "end": 510,
        "left": {
          "type": "BinaryExpression",
          "start": 484,
          "end": 502,
          "left": {
            "type": "NewExpression",
            "start": 484,
            "end": 497,
            "callee": {
              "type": "Identifier",
              "start": 488,
              "end": 494,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 495,
                "end": 496,
                "value": 0,
                "raw": "0"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 500,
            "end": 502,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 507,
          "end": 510,
          "value": "0",
          "raw": "\"0\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 512,
        "end": 608,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 516,
            "end": 606,
            "argument": {
              "type": "NewExpression",
              "start": 522,
              "end": 605,
              "callee": {
                "type": "Identifier",
                "start": 526,
                "end": 538,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 539,
                  "end": 604,
                  "left": {
                    "type": "Literal",
                    "start": 539,
                    "end": 581,
                    "value": "#2: new Number(0) + \"\" === \"0\". Actual: ",
                    "raw": "'#2: new Number(0) + \"\" === \"0\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 584,
                    "end": 604,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 585,
                      "end": 603,
                      "left": {
                        "type": "NewExpression",
                        "start": 585,
                        "end": 598,
                        "callee": {
                          "type": "Identifier",
                          "start": 589,
                          "end": 595,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 596,
                            "end": 597,
                            "value": 0,
                            "raw": "0"
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 601,
                        "end": 603,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 621,
      "end": 780,
      "test": {
        "type": "BinaryExpression",
        "start": 625,
        "end": 662,
        "left": {
          "type": "BinaryExpression",
          "start": 625,
          "end": 652,
          "left": {
            "type": "NewExpression",
            "start": 625,
            "end": 647,
            "callee": {
              "type": "Identifier",
              "start": 629,
              "end": 635,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 636,
                "end": 646,
                "object": {
                  "type": "Identifier",
                  "start": 636,
                  "end": 642,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 643,
                  "end": 646,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 650,
            "end": 652,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 657,
          "end": 662,
          "value": "NaN",
          "raw": "\"NaN\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 664,
        "end": 780,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 668,
            "end": 778,
            "argument": {
              "type": "NewExpression",
              "start": 674,
              "end": 777,
              "callee": {
                "type": "Identifier",
                "start": 678,
                "end": 690,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 691,
                  "end": 776,
                  "left": {
                    "type": "Literal",
                    "start": 691,
                    "end": 744,
                    "value": "#3: new Number(Number.NaN) + \"\" === \"NaN\". Actual: ",
                    "raw": "'#3: new Number(Number.NaN) + \"\" === \"NaN\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 747,
                    "end": 776,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 748,
                      "end": 775,
                      "left": {
                        "type": "NewExpression",
                        "start": 748,
                        "end": 770,
                        "callee": {
                          "type": "Identifier",
                          "start": 752,
                          "end": 758,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "start": 759,
                            "end": 769,
                            "object": {
                              "type": "Identifier",
                              "start": 759,
                              "end": 765,
                              "name": "Number"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 766,
                              "end": 769,
                              "name": "NaN"
                            },
                            "computed": false,
                            "optional": false
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 773,
                        "end": 775,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 793,
      "end": 931,
      "test": {
        "type": "BinaryExpression",
        "start": 797,
        "end": 826,
        "left": {
          "type": "BinaryExpression",
          "start": 797,
          "end": 818,
          "left": {
            "type": "NewExpression",
            "start": 797,
            "end": 813,
            "callee": {
              "type": "Identifier",
              "start": 801,
              "end": 807,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 808,
                "end": 812,
                "value": null,
                "raw": "null"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 816,
            "end": 818,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 823,
          "end": 826,
          "value": "0",
          "raw": "\"0\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 828,
        "end": 931,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 832,
            "end": 928,
            "argument": {
              "type": "NewExpression",
              "start": 838,
              "end": 927,
              "callee": {
                "type": "Identifier",
                "start": 842,
                "end": 854,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 855,
                  "end": 926,
                  "left": {
                    "type": "Literal",
                    "start": 855,
                    "end": 900,
                    "value": "#4: new Number(null) + \"\" === \"0\". Actual: ",
                    "raw": "'#4: new Number(null) + \"\" === \"0\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 903,
                    "end": 926,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 904,
                      "end": 925,
                      "left": {
                        "type": "NewExpression",
                        "start": 904,
                        "end": 920,
                        "callee": {
                          "type": "Identifier",
                          "start": 908,
                          "end": 914,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 915,
                            "end": 919,
                            "value": null,
                            "raw": "null"
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 923,
                        "end": 925,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 944,
      "end": 1090,
      "test": {
        "type": "BinaryExpression",
        "start": 948,
        "end": 981,
        "left": {
          "type": "BinaryExpression",
          "start": 948,
          "end": 971,
          "left": {
            "type": "NewExpression",
            "start": 948,
            "end": 966,
            "callee": {
              "type": "Identifier",
              "start": 952,
              "end": 958,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 959,
                "end": 965,
                "operator": "void",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 964,
                  "end": 965,
                  "value": 0,
                  "raw": "0"
                }
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 969,
            "end": 971,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 976,
          "end": 981,
          "value": "NaN",
          "raw": "\"NaN\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 983,
        "end": 1090,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 987,
            "end": 1088,
            "argument": {
              "type": "NewExpression",
              "start": 993,
              "end": 1087,
              "callee": {
                "type": "Identifier",
                "start": 997,
                "end": 1009,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1010,
                  "end": 1086,
                  "left": {
                    "type": "Literal",
                    "start": 1010,
                    "end": 1058,
                    "value": "#5: new Number(void 0) + \"\" === \"NaN. Actual: ",
                    "raw": "'#5: new Number(void 0) + \"\" === \"NaN. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1061,
                    "end": 1086,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1062,
                      "end": 1085,
                      "left": {
                        "type": "NewExpression",
                        "start": 1062,
                        "end": 1080,
                        "callee": {
                          "type": "Identifier",
                          "start": 1066,
                          "end": 1072,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "start": 1073,
                            "end": 1079,
                            "operator": "void",
                            "prefix": true,
                            "argument": {
                              "type": "Literal",
                              "start": 1078,
                              "end": 1079,
                              "value": 0,
                              "raw": "0"
                            }
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1083,
                        "end": 1085,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1103,
      "end": 1240,
      "test": {
        "type": "BinaryExpression",
        "start": 1107,
        "end": 1136,
        "left": {
          "type": "BinaryExpression",
          "start": 1107,
          "end": 1128,
          "left": {
            "type": "NewExpression",
            "start": 1107,
            "end": 1123,
            "callee": {
              "type": "Identifier",
              "start": 1111,
              "end": 1117,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1118,
                "end": 1122,
                "value": true,
                "raw": "true"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1126,
            "end": 1128,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1133,
          "end": 1136,
          "value": "1",
          "raw": "\"1\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1138,
        "end": 1240,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1142,
            "end": 1238,
            "argument": {
              "type": "NewExpression",
              "start": 1148,
              "end": 1237,
              "callee": {
                "type": "Identifier",
                "start": 1152,
                "end": 1164,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1165,
                  "end": 1236,
                  "left": {
                    "type": "Literal",
                    "start": 1165,
                    "end": 1210,
                    "value": "#6: new Number(true) + \"\" === \"1\". Actual: ",
                    "raw": "'#6: new Number(true) + \"\" === \"1\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1213,
                    "end": 1236,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1214,
                      "end": 1235,
                      "left": {
                        "type": "NewExpression",
                        "start": 1214,
                        "end": 1230,
                        "callee": {
                          "type": "Identifier",
                          "start": 1218,
                          "end": 1224,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1225,
                            "end": 1229,
                            "value": true,
                            "raw": "true"
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1233,
                        "end": 1235,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1253,
      "end": 1393,
      "test": {
        "type": "BinaryExpression",
        "start": 1257,
        "end": 1287,
        "left": {
          "type": "BinaryExpression",
          "start": 1257,
          "end": 1279,
          "left": {
            "type": "NewExpression",
            "start": 1257,
            "end": 1274,
            "callee": {
              "type": "Identifier",
              "start": 1261,
              "end": 1267,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1268,
                "end": 1273,
                "value": false,
                "raw": "false"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1277,
            "end": 1279,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1284,
          "end": 1287,
          "value": "0",
          "raw": "\"0\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1289,
        "end": 1393,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1293,
            "end": 1391,
            "argument": {
              "type": "NewExpression",
              "start": 1299,
              "end": 1390,
              "callee": {
                "type": "Identifier",
                "start": 1303,
                "end": 1315,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1316,
                  "end": 1389,
                  "left": {
                    "type": "Literal",
                    "start": 1316,
                    "end": 1362,
                    "value": "#7: new Number(false) + \"\" === \"0\". Actual: ",
                    "raw": "'#7: new Number(false) + \"\" === \"0\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1365,
                    "end": 1389,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1366,
                      "end": 1388,
                      "left": {
                        "type": "NewExpression",
                        "start": 1366,
                        "end": 1383,
                        "callee": {
                          "type": "Identifier",
                          "start": 1370,
                          "end": 1376,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1377,
                            "end": 1382,
                            "value": false,
                            "raw": "false"
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1386,
                        "end": 1388,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1406,
      "end": 1552,
      "test": {
        "type": "BinaryExpression",
        "start": 1410,
        "end": 1443,
        "left": {
          "type": "BinaryExpression",
          "start": 1410,
          "end": 1432,
          "left": {
            "type": "NewExpression",
            "start": 1410,
            "end": 1427,
            "callee": {
              "type": "Identifier",
              "start": 1414,
              "end": 1421,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1422,
                "end": 1426,
                "value": true,
                "raw": "true"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1430,
            "end": 1432,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1437,
          "end": 1443,
          "value": "true",
          "raw": "\"true\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1445,
        "end": 1552,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1449,
            "end": 1550,
            "argument": {
              "type": "NewExpression",
              "start": 1455,
              "end": 1549,
              "callee": {
                "type": "Identifier",
                "start": 1459,
                "end": 1471,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1472,
                  "end": 1548,
                  "left": {
                    "type": "Literal",
                    "start": 1472,
                    "end": 1521,
                    "value": "#8: new Boolean(true) + \"\" === \"true\". Actual: ",
                    "raw": "'#8: new Boolean(true) + \"\" === \"true\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1524,
                    "end": 1548,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1525,
                      "end": 1547,
                      "left": {
                        "type": "NewExpression",
                        "start": 1525,
                        "end": 1542,
                        "callee": {
                          "type": "Identifier",
                          "start": 1529,
                          "end": 1536,
                          "name": "Boolean"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1537,
                            "end": 1541,
                            "value": true,
                            "raw": "true"
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1545,
                        "end": 1547,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1565,
      "end": 1722,
      "test": {
        "type": "BinaryExpression",
        "start": 1569,
        "end": 1604,
        "left": {
          "type": "BinaryExpression",
          "start": 1569,
          "end": 1592,
          "left": {
            "type": "NewExpression",
            "start": 1569,
            "end": 1587,
            "callee": {
              "type": "Identifier",
              "start": 1573,
              "end": 1580,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1581,
                "end": 1586,
                "value": false,
                "raw": "false"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1590,
            "end": 1592,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1597,
          "end": 1604,
          "value": "false",
          "raw": "\"false\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1606,
        "end": 1722,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1610,
            "end": 1720,
            "argument": {
              "type": "NewExpression",
              "start": 1616,
              "end": 1719,
              "callee": {
                "type": "Identifier",
                "start": 1620,
                "end": 1632,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1633,
                  "end": 1718,
                  "left": {
                    "type": "Literal",
                    "start": 1633,
                    "end": 1687,
                    "value": "#9: Number(new Boolean(false)) === \"false\". Actual: ",
                    "raw": "'#9: Number(new Boolean(false)) === \"false\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1690,
                    "end": 1718,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1691,
                      "end": 1717,
                      "callee": {
                        "type": "Identifier",
                        "start": 1691,
                        "end": 1697,
                        "name": "Number"
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "start": 1698,
                          "end": 1716,
                          "callee": {
                            "type": "Identifier",
                            "start": 1702,
                            "end": 1709,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1710,
                              "end": 1715,
                              "value": false,
                              "raw": "false"
                            }
                          ]
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1736,
      "end": 1912,
      "test": {
        "type": "BinaryExpression",
        "start": 1740,
        "end": 1785,
        "left": {
          "type": "BinaryExpression",
          "start": 1740,
          "end": 1767,
          "left": {
            "type": "NewExpression",
            "start": 1740,
            "end": 1762,
            "callee": {
              "type": "Identifier",
              "start": 1744,
              "end": 1749,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1750,
                "end": 1751,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 1752,
                "end": 1753,
                "value": 4,
                "raw": "4"
              },
              {
                "type": "Literal",
                "start": 1754,
                "end": 1755,
                "value": 8,
                "raw": "8"
              },
              {
                "type": "Literal",
                "start": 1756,
                "end": 1758,
                "value": 16,
                "raw": "16"
              },
              {
                "type": "Literal",
                "start": 1759,
                "end": 1761,
                "value": 32,
                "raw": "32"
              }
            ]
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 1765,
            "end": 1767,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1772,
          "end": 1785,
          "value": "2,4,8,16,32",
          "raw": "\"2,4,8,16,32\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1787,
        "end": 1912,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1791,
            "end": 1910,
            "argument": {
              "type": "NewExpression",
              "start": 1797,
              "end": 1909,
              "callee": {
                "type": "Identifier",
                "start": 1801,
                "end": 1813,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1814,
                  "end": 1908,
                  "left": {
                    "type": "Literal",
                    "start": 1814,
                    "end": 1876,
                    "value": "#10: new Array(2,4,8,16,32) + \"\" === \"2,4,8,16,32\". Actual: ",
                    "raw": "'#10: new Array(2,4,8,16,32) + \"\" === \"2,4,8,16,32\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1879,
                    "end": 1908,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1880,
                      "end": 1907,
                      "left": {
                        "type": "NewExpression",
                        "start": 1880,
                        "end": 1902,
                        "callee": {
                          "type": "Identifier",
                          "start": 1884,
                          "end": 1889,
                          "name": "Array"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1890,
                            "end": 1891,
                            "value": 2,
                            "raw": "2"
                          },
                          {
                            "type": "Literal",
                            "start": 1892,
                            "end": 1893,
                            "value": 4,
                            "raw": "4"
                          },
                          {
                            "type": "Literal",
                            "start": 1894,
                            "end": 1895,
                            "value": 8,
                            "raw": "8"
                          },
                          {
                            "type": "Literal",
                            "start": 1896,
                            "end": 1898,
                            "value": 16,
                            "raw": "16"
                          },
                          {
                            "type": "Literal",
                            "start": 1899,
                            "end": 1901,
                            "value": 32,
                            "raw": "32"
                          }
                        ]
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1905,
                        "end": 1907,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 1926,
      "end": 2129,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1930,
          "end": 2128,
          "id": {
            "type": "Identifier",
            "start": 1930,
            "end": 1936,
            "name": "myobj1"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 1939,
            "end": 2128,
            "properties": [
              {
                "type": "Property",
                "start": 1957,
                "end": 1993,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1957,
                  "end": 1965,
                  "name": "toNumber"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 1968,
                  "end": 1993,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1978,
                    "end": 1993,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1979,
                        "end": 1992,
                        "argument": {
                          "type": "Literal",
                          "start": 1986,
                          "end": 1991,
                          "value": 12345,
                          "raw": "12345"
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 2012,
                "end": 2048,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2012,
                  "end": 2020,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 2023,
                  "end": 2048,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 2033,
                    "end": 2048,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2034,
                        "end": 2047,
                        "argument": {
                          "type": "Literal",
                          "start": 2041,
                          "end": 2046,
                          "value": 67890,
                          "raw": "67890"
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 2066,
                "end": 2113,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2066,
                  "end": 2073,
                  "name": "valueOf"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 2077,
                  "end": 2113,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 2087,
                    "end": 2113,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2088,
                        "end": 2112,
                        "argument": {
                          "type": "Literal",
                          "start": 2095,
                          "end": 2111,
                          "value": "[object MyObj]",
                          "raw": "\"[object MyObj]\""
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 2131,
      "end": 2307,
      "test": {
        "type": "BinaryExpression",
        "start": 2135,
        "end": 2167,
        "left": {
          "type": "BinaryExpression",
          "start": 2135,
          "end": 2146,
          "left": {
            "type": "Identifier",
            "start": 2135,
            "end": 2141,
            "name": "myobj1"
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 2144,
            "end": 2146,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2151,
          "end": 2167,
          "value": "[object MyObj]",
          "raw": "\"[object MyObj]\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2168,
        "end": 2307,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2172,
            "end": 2305,
            "argument": {
              "type": "NewExpression",
              "start": 2178,
              "end": 2304,
              "callee": {
                "type": "Identifier",
                "start": 2182,
                "end": 2194,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2195,
                  "end": 2303,
                  "left": {
                    "type": "Literal",
                    "start": 2195,
                    "end": 2287,
                    "value": "#11: myobj1 + \"\" calls ToPrimitive with hint Number. Exptected: \"[object MyObj]\". Actual: ",
                    "raw": "'#11: myobj1 + \"\" calls ToPrimitive with hint Number. Exptected: \"[object MyObj]\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2290,
                    "end": 2303,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2291,
                      "end": 2302,
                      "left": {
                        "type": "Identifier",
                        "start": 2291,
                        "end": 2297,
                        "name": "myobj1"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 2300,
                        "end": 2302,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 2321,
      "end": 2508,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2325,
          "end": 2507,
          "id": {
            "type": "Identifier",
            "start": 2325,
            "end": 2331,
            "name": "myobj2"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 2334,
            "end": 2507,
            "properties": [
              {
                "type": "Property",
                "start": 2352,
                "end": 2388,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2352,
                  "end": 2360,
                  "name": "toNumber"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 2363,
                  "end": 2388,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 2373,
                    "end": 2388,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2374,
                        "end": 2387,
                        "argument": {
                          "type": "Literal",
                          "start": 2381,
                          "end": 2386,
                          "value": 12345,
                          "raw": "12345"
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 2406,
                "end": 2441,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2406,
                  "end": 2414,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 2417,
                  "end": 2441,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 2427,
                    "end": 2441,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2428,
                        "end": 2440,
                        "argument": {
                          "type": "Literal",
                          "start": 2435,
                          "end": 2440,
                          "value": 67890,
                          "raw": "67890"
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 2460,
                "end": 2492,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2460,
                  "end": 2467,
                  "name": "valueOf"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 2471,
                  "end": 2492,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 2481,
                    "end": 2492,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2482,
                        "end": 2491,
                        "argument": {
                          "type": "ObjectExpression",
                          "start": 2489,
                          "end": 2491,
                          "properties": []
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 2510,
      "end": 2668,
      "test": {
        "type": "BinaryExpression",
        "start": 2514,
        "end": 2537,
        "left": {
          "type": "BinaryExpression",
          "start": 2514,
          "end": 2525,
          "left": {
            "type": "Identifier",
            "start": 2514,
            "end": 2520,
            "name": "myobj2"
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 2523,
            "end": 2525,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2530,
          "end": 2537,
          "value": "67890",
          "raw": "\"67890\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2538,
        "end": 2668,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2542,
            "end": 2666,
            "argument": {
              "type": "NewExpression",
              "start": 2548,
              "end": 2665,
              "callee": {
                "type": "Identifier",
                "start": 2552,
                "end": 2564,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2565,
                  "end": 2664,
                  "left": {
                    "type": "Literal",
                    "start": 2565,
                    "end": 2648,
                    "value": "#12: myobj2 + \"\" calls ToPrimitive with hint Number. Exptected: \"67890\". Actual: ",
                    "raw": "'#12: myobj2 + \"\" calls ToPrimitive with hint Number. Exptected: \"67890\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2651,
                    "end": 2664,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2652,
                      "end": 2663,
                      "left": {
                        "type": "Identifier",
                        "start": 2652,
                        "end": 2658,
                        "name": "myobj2"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 2661,
                        "end": 2663,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 2682,
      "end": 2765,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2686,
          "end": 2764,
          "id": {
            "type": "Identifier",
            "start": 2686,
            "end": 2692,
            "name": "myobj3"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 2695,
            "end": 2764,
            "properties": [
              {
                "type": "Property",
                "start": 2713,
                "end": 2749,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2713,
                  "end": 2721,
                  "name": "toNumber"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 2724,
                  "end": 2749,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 2734,
                    "end": 2749,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 2735,
                        "end": 2748,
                        "argument": {
                          "type": "Literal",
                          "start": 2742,
                          "end": 2747,
                          "value": 12345,
                          "raw": "12345"
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 2767,
      "end": 2946,
      "test": {
        "type": "BinaryExpression",
        "start": 2771,
        "end": 2804,
        "left": {
          "type": "BinaryExpression",
          "start": 2771,
          "end": 2782,
          "left": {
            "type": "Identifier",
            "start": 2771,
            "end": 2777,
            "name": "myobj3"
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 2780,
            "end": 2782,
            "value": "",
            "raw": "\"\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2787,
          "end": 2804,
          "value": "[object Object]",
          "raw": "\"[object Object]\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2805,
        "end": 2946,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2809,
            "end": 2944,
            "argument": {
              "type": "NewExpression",
              "start": 2815,
              "end": 2943,
              "callee": {
                "type": "Identifier",
                "start": 2819,
                "end": 2831,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2832,
                  "end": 2942,
                  "left": {
                    "type": "Literal",
                    "start": 2832,
                    "end": 2926,
                    "value": "#13: myobj3 + \"\" calls ToPrimitive with hint Number.  Exptected: \"[object Object]\". Actual: ",
                    "raw": "'#13: myobj3 + \"\" calls ToPrimitive with hint Number.  Exptected: \"[object Object]\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2929,
                    "end": 2942,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2930,
                      "end": 2941,
                      "left": {
                        "type": "Identifier",
                        "start": 2930,
                        "end": 2936,
                        "name": "myobj3"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 2939,
                        "end": 2941,
                        "value": "",
                        "raw": "\"\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}