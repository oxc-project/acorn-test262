{
  "type": "Program",
  "start": 0,
  "end": 575,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 276,
      "end": 287,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 280,
          "end": 286,
          "id": {
            "type": "Identifier",
            "start": 280,
            "end": 281,
            "name": "x"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 284,
            "end": 286,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 289,
      "end": 401,
      "test": {
        "type": "BinaryExpression",
        "start": 293,
        "end": 312,
        "left": {
          "type": "CallExpression",
          "start": 293,
          "end": 303,
          "callee": {
            "type": "Identifier",
            "start": 293,
            "end": 298,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UpdateExpression",
              "start": 299,
              "end": 302,
              "operator": "--",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 301,
                "end": 302,
                "name": "x"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 308,
          "end": 312,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 314,
        "end": 401,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 318,
            "end": 399,
            "argument": {
              "type": "NewExpression",
              "start": 324,
              "end": 398,
              "callee": {
                "type": "Identifier",
                "start": 328,
                "end": 340,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 341,
                  "end": 397,
                  "left": {
                    "type": "Literal",
                    "start": 341,
                    "end": 389,
                    "value": "#1: var x = {}; --x === Not-a-Number. Actual: ",
                    "raw": "'#1: var x = {}; --x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 392,
                    "end": 397,
                    "expression": {
                      "type": "UpdateExpression",
                      "start": 393,
                      "end": 396,
                      "operator": "--",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 395,
                        "end": 396,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 413,
      "end": 442,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 417,
          "end": 441,
          "id": {
            "type": "Identifier",
            "start": 417,
            "end": 418,
            "name": "x"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 421,
            "end": 441,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 431,
              "end": 441,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 432,
                  "end": 440,
                  "argument": {
                    "type": "Literal",
                    "start": 439,
                    "end": 440,
                    "value": 1,
                    "raw": "1"
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 444,
      "end": 574,
      "test": {
        "type": "BinaryExpression",
        "start": 448,
        "end": 467,
        "left": {
          "type": "CallExpression",
          "start": 448,
          "end": 458,
          "callee": {
            "type": "Identifier",
            "start": 448,
            "end": 453,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UpdateExpression",
              "start": 454,
              "end": 457,
              "operator": "--",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 456,
                "end": 457,
                "name": "x"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 463,
          "end": 467,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 469,
        "end": 574,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 473,
            "end": 572,
            "argument": {
              "type": "NewExpression",
              "start": 479,
              "end": 571,
              "callee": {
                "type": "Identifier",
                "start": 483,
                "end": 495,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 496,
                  "end": 570,
                  "left": {
                    "type": "Literal",
                    "start": 496,
                    "end": 562,
                    "value": "#2: var x = function(){return 1}; --x === Not-a-Number. Actual: ",
                    "raw": "'#2: var x = function(){return 1}; --x === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 565,
                    "end": 570,
                    "expression": {
                      "type": "UpdateExpression",
                      "start": 566,
                      "end": 569,
                      "operator": "--",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 568,
                        "end": 569,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}