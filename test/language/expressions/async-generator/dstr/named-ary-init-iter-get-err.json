{
  "type": "Program",
  "start": 0,
  "end": 1074,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 890,
      "end": 904,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 894,
          "end": 903,
          "id": {
            "type": "Identifier",
            "start": 894,
            "end": 898,
            "name": "iter"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 901,
            "end": 903,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 905,
      "end": 972,
      "expression": {
        "type": "AssignmentExpression",
        "start": 905,
        "end": 971,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 905,
          "end": 926,
          "object": {
            "type": "Identifier",
            "start": 905,
            "end": 909,
            "name": "iter"
          },
          "property": {
            "type": "MemberExpression",
            "start": 910,
            "end": 925,
            "object": {
              "type": "Identifier",
              "start": 910,
              "end": 916,
              "name": "Symbol"
            },
            "property": {
              "type": "Identifier",
              "start": 917,
              "end": 925,
              "name": "iterator"
            },
            "computed": false,
            "optional": false
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "FunctionExpression",
          "start": 929,
          "end": 971,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 940,
            "end": 971,
            "body": [
              {
                "type": "ThrowStatement",
                "start": 944,
                "end": 969,
                "argument": {
                  "type": "NewExpression",
                  "start": 950,
                  "end": 968,
                  "callee": {
                    "type": "Identifier",
                    "start": 954,
                    "end": 966,
                    "name": "Test262Error"
                  },
                  "arguments": []
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 975,
      "end": 981,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 979,
          "end": 980,
          "id": {
            "type": "Identifier",
            "start": 979,
            "end": 980,
            "name": "f"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 982,
      "end": 1016,
      "expression": {
        "type": "AssignmentExpression",
        "start": 982,
        "end": 1015,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 982,
          "end": 983,
          "name": "f"
        },
        "right": {
          "type": "FunctionExpression",
          "start": 986,
          "end": 1015,
          "id": {
            "type": "Identifier",
            "start": 1002,
            "end": 1003,
            "name": "g"
          },
          "expression": false,
          "generator": true,
          "async": true,
          "params": [
            {
              "type": "ArrayPattern",
              "start": 1004,
              "end": 1007,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 1005,
                  "end": 1006,
                  "name": "x"
                }
              ]
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1009,
            "end": 1015,
            "body": []
          }
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1018,
      "end": 1073,
      "expression": {
        "type": "CallExpression",
        "start": 1018,
        "end": 1072,
        "callee": {
          "type": "MemberExpression",
          "start": 1018,
          "end": 1031,
          "object": {
            "type": "Identifier",
            "start": 1018,
            "end": 1024,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1025,
            "end": 1031,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1032,
            "end": 1044,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 1046,
            "end": 1071,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1057,
              "end": 1071,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1061,
                  "end": 1069,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1061,
                    "end": 1068,
                    "callee": {
                      "type": "Identifier",
                      "start": 1061,
                      "end": 1062,
                      "name": "f"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1063,
                        "end": 1067,
                        "name": "iter"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}