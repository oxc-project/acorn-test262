{
  "type": "Program",
  "start": 0,
  "end": 2152,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1893,
      "end": 1911,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1897,
          "end": 1910,
          "id": {
            "type": "Identifier",
            "start": 1897,
            "end": 1906,
            "name": "following"
          },
          "init": {
            "type": "Literal",
            "start": 1909,
            "end": 1910,
            "value": 0,
            "raw": "0"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1912,
      "end": 1987,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1916,
          "end": 1986,
          "id": {
            "type": "Identifier",
            "start": 1916,
            "end": 1920,
            "name": "iter"
          },
          "init": {
            "type": "CallExpression",
            "start": 1922,
            "end": 1986,
            "callee": {
              "type": "FunctionExpression",
              "start": 1922,
              "end": 1984,
              "id": null,
              "expression": false,
              "generator": true,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1935,
                "end": 1984,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1939,
                    "end": 1964,
                    "argument": {
                      "type": "NewExpression",
                      "start": 1945,
                      "end": 1963,
                      "callee": {
                        "type": "Identifier",
                        "start": 1949,
                        "end": 1961,
                        "name": "Test262Error"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1967,
                    "end": 1982,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1967,
                      "end": 1981,
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "start": 1967,
                        "end": 1976,
                        "name": "following"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1980,
                        "end": 1981,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1989,
      "end": 2015,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1993,
          "end": 2014,
          "id": {
            "type": "Identifier",
            "start": 1993,
            "end": 1994,
            "name": "f"
          },
          "init": {
            "type": "FunctionExpression",
            "start": 1997,
            "end": 2014,
            "id": null,
            "expression": false,
            "generator": true,
            "async": false,
            "params": [
              {
                "type": "ArrayPattern",
                "start": 2007,
                "end": 2010,
                "elements": [
                  null
                ]
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 2012,
              "end": 2014,
              "body": []
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 2017,
      "end": 2072,
      "expression": {
        "type": "CallExpression",
        "start": 2017,
        "end": 2071,
        "callee": {
          "type": "MemberExpression",
          "start": 2017,
          "end": 2030,
          "object": {
            "type": "Identifier",
            "start": 2017,
            "end": 2023,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2024,
            "end": 2030,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2031,
            "end": 2043,
            "name": "Test262Error"
          },
          {
            "type": "FunctionExpression",
            "start": 2045,
            "end": 2070,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 2056,
              "end": 2070,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2060,
                  "end": 2068,
                  "expression": {
                    "type": "CallExpression",
                    "start": 2060,
                    "end": 2067,
                    "callee": {
                      "type": "Identifier",
                      "start": 2060,
                      "end": 2061,
                      "name": "f"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 2062,
                        "end": 2066,
                        "name": "iter"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2074,
      "end": 2086,
      "expression": {
        "type": "CallExpression",
        "start": 2074,
        "end": 2085,
        "callee": {
          "type": "MemberExpression",
          "start": 2074,
          "end": 2083,
          "object": {
            "type": "Identifier",
            "start": 2074,
            "end": 2078,
            "name": "iter"
          },
          "property": {
            "type": "Identifier",
            "start": 2079,
            "end": 2083,
            "name": "next"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2087,
      "end": 2151,
      "expression": {
        "type": "CallExpression",
        "start": 2087,
        "end": 2150,
        "callee": {
          "type": "MemberExpression",
          "start": 2087,
          "end": 2103,
          "object": {
            "type": "Identifier",
            "start": 2087,
            "end": 2093,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2094,
            "end": 2103,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2104,
            "end": 2113,
            "name": "following"
          },
          {
            "type": "Literal",
            "start": 2115,
            "end": 2116,
            "value": 0,
            "raw": "0"
          },
          {
            "type": "Literal",
            "start": 2118,
            "end": 2149,
            "value": "Iterator was properly closed.",
            "raw": "'Iterator was properly closed.'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}