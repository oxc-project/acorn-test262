{
  "type": "Program",
  "start": 0,
  "end": 1179,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 915,
      "end": 933,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 919,
          "end": 932,
          "id": {
            "type": "Identifier",
            "start": 919,
            "end": 920,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 923,
            "end": 932,
            "value": "outside",
            "raw": "'outside'",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 934,
      "end": 961,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 938,
          "end": 949,
          "id": {
            "type": "Identifier",
            "start": 938,
            "end": 949,
            "name": "probeParams"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 951,
          "end": 960,
          "id": {
            "type": "Identifier",
            "start": 951,
            "end": 960,
            "name": "probeBody"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 963,
      "end": 1092,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 963,
        "end": 1091,
        "expression": {
          "type": "CallExpression",
          "start": 964,
          "end": 1090,
          "callee": {
            "type": "MemberExpression",
            "start": 964,
            "end": 1088,
            "object": {
              "type": "CallExpression",
              "start": 964,
              "end": 1083,
              "callee": {
                "type": "FunctionExpression",
                "start": 964,
                "end": 1081,
                "id": null,
                "expression": false,
                "generator": true,
                "async": false,
                "params": [
                  {
                    "type": "AssignmentPattern",
                    "start": 974,
                    "end": 1016,
                    "left": {
                      "type": "Identifier",
                      "start": 974,
                      "end": 975,
                      "name": "_"
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "start": 978,
                      "end": 1016,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 978,
                        "end": 989,
                        "name": "probeParams"
                      },
                      "right": {
                        "type": "FunctionExpression",
                        "start": 992,
                        "end": 1016,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1003,
                          "end": 1016,
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "start": 1005,
                              "end": 1014,
                              "argument": {
                                "type": "Identifier",
                                "start": 1012,
                                "end": 1013,
                                "name": "x"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1018,
                  "end": 1081,
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "start": 1022,
                      "end": 1039,
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 1026,
                          "end": 1038,
                          "id": {
                            "type": "Identifier",
                            "start": 1026,
                            "end": 1027,
                            "name": "x"
                          },
                          "init": {
                            "type": "Literal",
                            "start": 1030,
                            "end": 1038,
                            "value": "inside",
                            "raw": "'inside'",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1042,
                      "end": 1079,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 1042,
                        "end": 1078,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 1042,
                          "end": 1051,
                          "name": "probeBody"
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "start": 1054,
                          "end": 1078,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 1065,
                            "end": 1078,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 1067,
                                "end": 1076,
                                "argument": {
                                  "type": "Identifier",
                                  "start": 1074,
                                  "end": 1075,
                                  "name": "x"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "arguments": [],
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "start": 1084,
              "end": 1088,
              "name": "next"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1094,
      "end": 1137,
      "expression": {
        "type": "CallExpression",
        "start": 1094,
        "end": 1136,
        "callee": {
          "type": "MemberExpression",
          "start": 1094,
          "end": 1110,
          "object": {
            "type": "Identifier",
            "start": 1094,
            "end": 1100,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1101,
            "end": 1110,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1111,
            "end": 1124,
            "callee": {
              "type": "Identifier",
              "start": 1111,
              "end": 1122,
              "name": "probeParams"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1126,
            "end": 1135,
            "value": "outside",
            "raw": "'outside'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1138,
      "end": 1178,
      "expression": {
        "type": "CallExpression",
        "start": 1138,
        "end": 1177,
        "callee": {
          "type": "MemberExpression",
          "start": 1138,
          "end": 1154,
          "object": {
            "type": "Identifier",
            "start": 1138,
            "end": 1144,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1145,
            "end": 1154,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1155,
            "end": 1166,
            "callee": {
              "type": "Identifier",
              "start": 1155,
              "end": 1164,
              "name": "probeBody"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1168,
            "end": 1176,
            "value": "inside",
            "raw": "'inside'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}