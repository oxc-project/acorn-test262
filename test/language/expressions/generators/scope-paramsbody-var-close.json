{
  "type": "Program",
  "start": 0,
  "end": 1138,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 853,
      "end": 863,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 857,
          "end": 862,
          "id": {
            "type": "Identifier",
            "start": 857,
            "end": 862,
            "name": "probe"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 956,
      "end": 1047,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 956,
        "end": 1046,
        "expression": {
          "type": "CallExpression",
          "start": 957,
          "end": 1045,
          "callee": {
            "type": "MemberExpression",
            "start": 957,
            "end": 1043,
            "object": {
              "type": "CallExpression",
              "start": 957,
              "end": 1038,
              "callee": {
                "type": "FunctionExpression",
                "start": 957,
                "end": 1036,
                "id": null,
                "expression": false,
                "generator": true,
                "async": false,
                "params": [
                  {
                    "type": "AssignmentPattern",
                    "start": 967,
                    "end": 975,
                    "left": {
                      "type": "Identifier",
                      "start": 967,
                      "end": 968,
                      "name": "_"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 971,
                      "end": 975,
                      "value": null,
                      "raw": "null"
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 977,
                  "end": 1036,
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "start": 981,
                      "end": 998,
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 985,
                          "end": 997,
                          "id": {
                            "type": "Identifier",
                            "start": 985,
                            "end": 986,
                            "name": "x"
                          },
                          "init": {
                            "type": "Literal",
                            "start": 989,
                            "end": 997,
                            "value": "inside",
                            "raw": "'inside'"
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1001,
                      "end": 1034,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 1001,
                        "end": 1033,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 1001,
                          "end": 1006,
                          "name": "probe"
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "start": 1009,
                          "end": 1033,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 1020,
                            "end": 1033,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 1022,
                                "end": 1031,
                                "argument": {
                                  "type": "Identifier",
                                  "start": 1029,
                                  "end": 1030,
                                  "name": "x"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "arguments": [],
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "start": 1039,
              "end": 1043,
              "name": "next"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1049,
      "end": 1067,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1053,
          "end": 1066,
          "id": {
            "type": "Identifier",
            "start": 1053,
            "end": 1054,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 1057,
            "end": 1066,
            "value": "outside",
            "raw": "'outside'"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1069,
      "end": 1105,
      "expression": {
        "type": "CallExpression",
        "start": 1069,
        "end": 1104,
        "callee": {
          "type": "MemberExpression",
          "start": 1069,
          "end": 1085,
          "object": {
            "type": "Identifier",
            "start": 1069,
            "end": 1075,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1076,
            "end": 1085,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1086,
            "end": 1093,
            "callee": {
              "type": "Identifier",
              "start": 1086,
              "end": 1091,
              "name": "probe"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1095,
            "end": 1103,
            "value": "inside",
            "raw": "'inside'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1106,
      "end": 1137,
      "expression": {
        "type": "CallExpression",
        "start": 1106,
        "end": 1136,
        "callee": {
          "type": "MemberExpression",
          "start": 1106,
          "end": 1122,
          "object": {
            "type": "Identifier",
            "start": 1106,
            "end": 1112,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1113,
            "end": 1122,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1123,
            "end": 1124,
            "name": "x"
          },
          {
            "type": "Literal",
            "start": 1126,
            "end": 1135,
            "value": "outside",
            "raw": "'outside'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}