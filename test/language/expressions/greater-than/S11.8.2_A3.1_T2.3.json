{
  "type": "Program",
  "start": 0,
  "end": 865,
  "body": [
    {
      "type": "IfStatement",
      "start": 468,
      "end": 545,
      "test": {
        "type": "BinaryExpression",
        "start": 472,
        "end": 489,
        "left": {
          "type": "BinaryExpression",
          "start": 472,
          "end": 480,
          "left": {
            "type": "Literal",
            "start": 472,
            "end": 473,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 476,
            "end": 480,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 485,
          "end": 489,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 491,
        "end": 545,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 495,
            "end": 543,
            "argument": {
              "type": "NewExpression",
              "start": 501,
              "end": 542,
              "callee": {
                "type": "Identifier",
                "start": 505,
                "end": 517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 518,
                  "end": 541,
                  "value": "#1: 1 > null === true",
                  "raw": "'#1: 1 > null === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 557,
      "end": 636,
      "test": {
        "type": "BinaryExpression",
        "start": 561,
        "end": 579,
        "left": {
          "type": "BinaryExpression",
          "start": 561,
          "end": 569,
          "left": {
            "type": "Literal",
            "start": 561,
            "end": 565,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 568,
            "end": 569,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 574,
          "end": 579,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 581,
        "end": 636,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 585,
            "end": 634,
            "argument": {
              "type": "NewExpression",
              "start": 591,
              "end": 633,
              "callee": {
                "type": "Identifier",
                "start": 595,
                "end": 607,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 608,
                  "end": 632,
                  "value": "#2: null > 1 === false",
                  "raw": "'#2: null > 1 === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 648,
      "end": 749,
      "test": {
        "type": "BinaryExpression",
        "start": 652,
        "end": 681,
        "left": {
          "type": "BinaryExpression",
          "start": 652,
          "end": 672,
          "left": {
            "type": "NewExpression",
            "start": 652,
            "end": 665,
            "callee": {
              "type": "Identifier",
              "start": 656,
              "end": 662,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 663,
                "end": 664,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 668,
            "end": 672,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 677,
          "end": 681,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 683,
        "end": 749,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 687,
            "end": 747,
            "argument": {
              "type": "NewExpression",
              "start": 693,
              "end": 746,
              "callee": {
                "type": "Identifier",
                "start": 697,
                "end": 709,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 710,
                  "end": 745,
                  "value": "#3: new Number(1) > null === true",
                  "raw": "'#3: new Number(1) > null === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 761,
      "end": 864,
      "test": {
        "type": "BinaryExpression",
        "start": 765,
        "end": 795,
        "left": {
          "type": "BinaryExpression",
          "start": 765,
          "end": 785,
          "left": {
            "type": "Literal",
            "start": 765,
            "end": 769,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "NewExpression",
            "start": 772,
            "end": 785,
            "callee": {
              "type": "Identifier",
              "start": 776,
              "end": 782,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 783,
                "end": 784,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 790,
          "end": 795,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 797,
        "end": 864,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 801,
            "end": 862,
            "argument": {
              "type": "NewExpression",
              "start": 807,
              "end": 861,
              "callee": {
                "type": "Identifier",
                "start": 811,
                "end": 823,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 824,
                  "end": 860,
                  "value": "#4: null > new Number(1) === false",
                  "raw": "'#4: null > new Number(1) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}