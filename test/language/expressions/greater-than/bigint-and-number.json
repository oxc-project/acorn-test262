{
  "type": "Program",
  "start": 0,
  "end": 2563,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 907,
      "end": 974,
      "expression": {
        "type": "CallExpression",
        "start": 907,
        "end": 973,
        "callee": {
          "type": "MemberExpression",
          "start": 907,
          "end": 923,
          "object": {
            "type": "Identifier",
            "start": 907,
            "end": 913,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 914,
            "end": 923,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 924,
            "end": 930,
            "left": {
              "type": "Literal",
              "start": 924,
              "end": 926,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 929,
              "end": 930,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 932,
            "end": 937,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 939,
            "end": 972,
            "value": "The result of (0n > 0) is false",
            "raw": "'The result of (0n > 0) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 975,
      "end": 1042,
      "expression": {
        "type": "CallExpression",
        "start": 975,
        "end": 1041,
        "callee": {
          "type": "MemberExpression",
          "start": 975,
          "end": 991,
          "object": {
            "type": "Identifier",
            "start": 975,
            "end": 981,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 982,
            "end": 991,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 992,
            "end": 998,
            "left": {
              "type": "Literal",
              "start": 992,
              "end": 993,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 996,
              "end": 998,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1000,
            "end": 1005,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1007,
            "end": 1040,
            "value": "The result of (0 > 0n) is false",
            "raw": "'The result of (0 > 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1043,
      "end": 1112,
      "expression": {
        "type": "CallExpression",
        "start": 1043,
        "end": 1111,
        "callee": {
          "type": "MemberExpression",
          "start": 1043,
          "end": 1059,
          "object": {
            "type": "Identifier",
            "start": 1043,
            "end": 1049,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1050,
            "end": 1059,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1060,
            "end": 1067,
            "left": {
              "type": "Literal",
              "start": 1060,
              "end": 1062,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "start": 1065,
              "end": 1067,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1066,
                "end": 1067,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          },
          {
            "type": "Literal",
            "start": 1069,
            "end": 1074,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1076,
            "end": 1110,
            "value": "The result of (0n > -0) is false",
            "raw": "'The result of (0n > -0) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1113,
      "end": 1182,
      "expression": {
        "type": "CallExpression",
        "start": 1113,
        "end": 1181,
        "callee": {
          "type": "MemberExpression",
          "start": 1113,
          "end": 1129,
          "object": {
            "type": "Identifier",
            "start": 1113,
            "end": 1119,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1120,
            "end": 1129,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1130,
            "end": 1137,
            "left": {
              "type": "UnaryExpression",
              "start": 1130,
              "end": 1132,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1131,
                "end": 1132,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1135,
              "end": 1137,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1139,
            "end": 1144,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1146,
            "end": 1180,
            "value": "The result of (-0 > 0n) is false",
            "raw": "'The result of (-0 > 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1183,
      "end": 1276,
      "expression": {
        "type": "CallExpression",
        "start": 1183,
        "end": 1275,
        "callee": {
          "type": "MemberExpression",
          "start": 1183,
          "end": 1199,
          "object": {
            "type": "Identifier",
            "start": 1183,
            "end": 1189,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1190,
            "end": 1199,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1200,
            "end": 1219,
            "left": {
              "type": "Literal",
              "start": 1200,
              "end": 1202,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1205,
              "end": 1219,
              "value": 1e-12,
              "raw": "0.000000000001",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1221,
            "end": 1226,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1228,
            "end": 1274,
            "value": "The result of (0n > 0.000000000001) is false",
            "raw": "'The result of (0n > 0.000000000001) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1277,
      "end": 1368,
      "expression": {
        "type": "CallExpression",
        "start": 1277,
        "end": 1367,
        "callee": {
          "type": "MemberExpression",
          "start": 1277,
          "end": 1293,
          "object": {
            "type": "Identifier",
            "start": 1277,
            "end": 1283,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1284,
            "end": 1293,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1294,
            "end": 1313,
            "left": {
              "type": "Literal",
              "start": 1294,
              "end": 1308,
              "value": 1e-12,
              "raw": "0.000000000001",
              "regex": null,
              "bigint": null
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1311,
              "end": 1313,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1315,
            "end": 1319,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1321,
            "end": 1366,
            "value": "The result of (0.000000000001 > 0n) is true",
            "raw": "'The result of (0.000000000001 > 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1369,
      "end": 1436,
      "expression": {
        "type": "CallExpression",
        "start": 1369,
        "end": 1435,
        "callee": {
          "type": "MemberExpression",
          "start": 1369,
          "end": 1385,
          "object": {
            "type": "Identifier",
            "start": 1369,
            "end": 1375,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1376,
            "end": 1385,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1386,
            "end": 1392,
            "left": {
              "type": "Literal",
              "start": 1386,
              "end": 1388,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1391,
              "end": 1392,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1394,
            "end": 1399,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1401,
            "end": 1434,
            "value": "The result of (0n > 1) is false",
            "raw": "'The result of (0n > 1) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1437,
      "end": 1502,
      "expression": {
        "type": "CallExpression",
        "start": 1437,
        "end": 1501,
        "callee": {
          "type": "MemberExpression",
          "start": 1437,
          "end": 1453,
          "object": {
            "type": "Identifier",
            "start": 1437,
            "end": 1443,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1444,
            "end": 1453,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1454,
            "end": 1460,
            "left": {
              "type": "Literal",
              "start": 1454,
              "end": 1455,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1458,
              "end": 1460,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1462,
            "end": 1466,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1468,
            "end": 1500,
            "value": "The result of (1 > 0n) is true",
            "raw": "'The result of (1 > 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1503,
      "end": 1568,
      "expression": {
        "type": "CallExpression",
        "start": 1503,
        "end": 1567,
        "callee": {
          "type": "MemberExpression",
          "start": 1503,
          "end": 1519,
          "object": {
            "type": "Identifier",
            "start": 1503,
            "end": 1509,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1510,
            "end": 1519,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1520,
            "end": 1526,
            "left": {
              "type": "Literal",
              "start": 1520,
              "end": 1522,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1525,
              "end": 1526,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1528,
            "end": 1532,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1534,
            "end": 1566,
            "value": "The result of (1n > 0) is true",
            "raw": "'The result of (1n > 0) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1569,
      "end": 1636,
      "expression": {
        "type": "CallExpression",
        "start": 1569,
        "end": 1635,
        "callee": {
          "type": "MemberExpression",
          "start": 1569,
          "end": 1585,
          "object": {
            "type": "Identifier",
            "start": 1569,
            "end": 1575,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1576,
            "end": 1585,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1586,
            "end": 1592,
            "left": {
              "type": "Literal",
              "start": 1586,
              "end": 1587,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1590,
              "end": 1592,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1594,
            "end": 1599,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1601,
            "end": 1634,
            "value": "The result of (0 > 1n) is false",
            "raw": "'The result of (0 > 1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1637,
      "end": 1728,
      "expression": {
        "type": "CallExpression",
        "start": 1637,
        "end": 1727,
        "callee": {
          "type": "MemberExpression",
          "start": 1637,
          "end": 1653,
          "object": {
            "type": "Identifier",
            "start": 1637,
            "end": 1643,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1644,
            "end": 1653,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1654,
            "end": 1673,
            "left": {
              "type": "Literal",
              "start": 1654,
              "end": 1656,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1659,
              "end": 1673,
              "value": 0.999999999999,
              "raw": "0.999999999999",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1675,
            "end": 1679,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1681,
            "end": 1726,
            "value": "The result of (1n > 0.999999999999) is true",
            "raw": "'The result of (1n > 0.999999999999) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1729,
      "end": 1822,
      "expression": {
        "type": "CallExpression",
        "start": 1729,
        "end": 1821,
        "callee": {
          "type": "MemberExpression",
          "start": 1729,
          "end": 1745,
          "object": {
            "type": "Identifier",
            "start": 1729,
            "end": 1735,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1736,
            "end": 1745,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1746,
            "end": 1765,
            "left": {
              "type": "Literal",
              "start": 1746,
              "end": 1760,
              "value": 0.999999999999,
              "raw": "0.999999999999",
              "regex": null,
              "bigint": null
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1763,
              "end": 1765,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1767,
            "end": 1772,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1774,
            "end": 1820,
            "value": "The result of (0.999999999999 > 1n) is false",
            "raw": "'The result of (0.999999999999 > 1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1823,
      "end": 1890,
      "expression": {
        "type": "CallExpression",
        "start": 1823,
        "end": 1889,
        "callee": {
          "type": "MemberExpression",
          "start": 1823,
          "end": 1839,
          "object": {
            "type": "Identifier",
            "start": 1823,
            "end": 1829,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1830,
            "end": 1839,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1840,
            "end": 1846,
            "left": {
              "type": "Literal",
              "start": 1840,
              "end": 1842,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1845,
              "end": 1846,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1848,
            "end": 1853,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1855,
            "end": 1888,
            "value": "The result of (1n > 1) is false",
            "raw": "'The result of (1n > 1) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1891,
      "end": 1958,
      "expression": {
        "type": "CallExpression",
        "start": 1891,
        "end": 1957,
        "callee": {
          "type": "MemberExpression",
          "start": 1891,
          "end": 1907,
          "object": {
            "type": "Identifier",
            "start": 1891,
            "end": 1897,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1898,
            "end": 1907,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1908,
            "end": 1914,
            "left": {
              "type": "Literal",
              "start": 1908,
              "end": 1909,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 1912,
              "end": 1914,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1916,
            "end": 1921,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1923,
            "end": 1956,
            "value": "The result of (1 > 1n) is false",
            "raw": "'The result of (1 > 1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1959,
      "end": 2056,
      "expression": {
        "type": "CallExpression",
        "start": 1959,
        "end": 2055,
        "callee": {
          "type": "MemberExpression",
          "start": 1959,
          "end": 1975,
          "object": {
            "type": "Identifier",
            "start": 1959,
            "end": 1965,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1966,
            "end": 1975,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1976,
            "end": 1997,
            "left": {
              "type": "Literal",
              "start": 1976,
              "end": 1978,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "start": 1981,
              "end": 1997,
              "object": {
                "type": "Identifier",
                "start": 1981,
                "end": 1987,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1988,
                "end": 1997,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1999,
            "end": 2004,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2006,
            "end": 2054,
            "value": "The result of (0n > Number.MIN_VALUE) is false",
            "raw": "'The result of (0n > Number.MIN_VALUE) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2057,
      "end": 2152,
      "expression": {
        "type": "CallExpression",
        "start": 2057,
        "end": 2151,
        "callee": {
          "type": "MemberExpression",
          "start": 2057,
          "end": 2073,
          "object": {
            "type": "Identifier",
            "start": 2057,
            "end": 2063,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2064,
            "end": 2073,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2074,
            "end": 2095,
            "left": {
              "type": "MemberExpression",
              "start": 2074,
              "end": 2090,
              "object": {
                "type": "Identifier",
                "start": 2074,
                "end": 2080,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2081,
                "end": 2090,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 2093,
              "end": 2095,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 2097,
            "end": 2101,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2103,
            "end": 2150,
            "value": "The result of (Number.MIN_VALUE > 0n) is true",
            "raw": "'The result of (Number.MIN_VALUE > 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2153,
      "end": 2250,
      "expression": {
        "type": "CallExpression",
        "start": 2153,
        "end": 2249,
        "callee": {
          "type": "MemberExpression",
          "start": 2153,
          "end": 2169,
          "object": {
            "type": "Identifier",
            "start": 2153,
            "end": 2159,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2160,
            "end": 2169,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2170,
            "end": 2192,
            "left": {
              "type": "Literal",
              "start": 2170,
              "end": 2172,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "start": 2175,
              "end": 2192,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "MemberExpression",
                "start": 2176,
                "end": 2192,
                "object": {
                  "type": "Identifier",
                  "start": 2176,
                  "end": 2182,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2183,
                  "end": 2192,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          },
          {
            "type": "Literal",
            "start": 2194,
            "end": 2198,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2200,
            "end": 2248,
            "value": "The result of (0n > -Number.MIN_VALUE) is true",
            "raw": "'The result of (0n > -Number.MIN_VALUE) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2251,
      "end": 2350,
      "expression": {
        "type": "CallExpression",
        "start": 2251,
        "end": 2349,
        "callee": {
          "type": "MemberExpression",
          "start": 2251,
          "end": 2267,
          "object": {
            "type": "Identifier",
            "start": 2251,
            "end": 2257,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2258,
            "end": 2267,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2268,
            "end": 2290,
            "left": {
              "type": "UnaryExpression",
              "start": 2268,
              "end": 2285,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "MemberExpression",
                "start": 2269,
                "end": 2285,
                "object": {
                  "type": "Identifier",
                  "start": 2269,
                  "end": 2275,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2276,
                  "end": 2285,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            },
            "operator": ">",
            "right": {
              "type": "Literal",
              "start": 2288,
              "end": 2290,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 2292,
            "end": 2297,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2299,
            "end": 2348,
            "value": "The result of (-Number.MIN_VALUE > 0n) is false",
            "raw": "'The result of (-Number.MIN_VALUE > 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2352,
      "end": 2461,
      "expression": {
        "type": "CallExpression",
        "start": 2352,
        "end": 2460,
        "callee": {
          "type": "MemberExpression",
          "start": 2352,
          "end": 2368,
          "object": {
            "type": "Identifier",
            "start": 2352,
            "end": 2358,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2359,
            "end": 2368,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2372,
            "end": 2395,
            "left": {
              "type": "UnaryExpression",
              "start": 2372,
              "end": 2376,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2373,
                "end": 2376,
                "value": null,
                "raw": "10n",
                "regex": null,
                "bigint": "10"
              }
            },
            "operator": ">",
            "right": {
              "type": "MemberExpression",
              "start": 2379,
              "end": 2395,
              "object": {
                "type": "Identifier",
                "start": 2379,
                "end": 2385,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2386,
                "end": 2395,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2399,
            "end": 2404,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2408,
            "end": 2458,
            "value": "The result of (-10n > Number.MIN_VALUE) is false",
            "raw": "'The result of (-10n > Number.MIN_VALUE) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2463,
      "end": 2562,
      "expression": {
        "type": "CallExpression",
        "start": 2463,
        "end": 2561,
        "callee": {
          "type": "MemberExpression",
          "start": 2463,
          "end": 2479,
          "object": {
            "type": "Identifier",
            "start": 2463,
            "end": 2469,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2470,
            "end": 2479,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2480,
            "end": 2503,
            "left": {
              "type": "MemberExpression",
              "start": 2480,
              "end": 2496,
              "object": {
                "type": "Identifier",
                "start": 2480,
                "end": 2486,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 2487,
                "end": 2496,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "UnaryExpression",
              "start": 2499,
              "end": 2503,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2500,
                "end": 2503,
                "value": null,
                "raw": "10n",
                "regex": null,
                "bigint": "10"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2505,
            "end": 2509,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2511,
            "end": 2560,
            "value": "The result of (Number.MIN_VALUE > -10n) is true",
            "raw": "'The result of (Number.MIN_VALUE > -10n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}