{
  "type": "Program",
  "start": 0,
  "end": 1285,
  "body": [
    {
      "type": "IfStatement",
      "start": 428,
      "end": 633,
      "test": {
        "type": "BinaryExpression",
        "start": 432,
        "end": 513,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 432,
          "end": 459,
          "expression": {
            "type": "BinaryExpression",
            "start": 433,
            "end": 458,
            "left": {
              "type": "ObjectExpression",
              "start": 433,
              "end": 435,
              "properties": []
            },
            "operator": ">",
            "right": {
              "type": "FunctionExpression",
              "start": 438,
              "end": 458,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 448,
                "end": 458,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 449,
                    "end": 457,
                    "argument": {
                      "type": "Literal",
                      "start": 456,
                      "end": 457,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 464,
          "end": 513,
          "expression": {
            "type": "BinaryExpression",
            "start": 465,
            "end": 512,
            "left": {
              "type": "CallExpression",
              "start": 465,
              "end": 478,
              "callee": {
                "type": "MemberExpression",
                "start": 465,
                "end": 476,
                "object": {
                  "type": "ObjectExpression",
                  "start": 465,
                  "end": 467,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 468,
                  "end": 476,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "CallExpression",
              "start": 481,
              "end": 512,
              "callee": {
                "type": "MemberExpression",
                "start": 481,
                "end": 510,
                "object": {
                  "type": "FunctionExpression",
                  "start": 481,
                  "end": 501,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 491,
                    "end": 501,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 492,
                        "end": 500,
                        "argument": {
                          "type": "Literal",
                          "start": 499,
                          "end": 500,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  }
                },
                "property": {
                  "type": "Identifier",
                  "start": 502,
                  "end": 510,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 515,
        "end": 633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 519,
            "end": 631,
            "argument": {
              "type": "NewExpression",
              "start": 525,
              "end": 630,
              "callee": {
                "type": "Identifier",
                "start": 529,
                "end": 541,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 542,
                  "end": 629,
                  "value": "#1: ({} > function(){return 1}) === ({}.toString() > function(){return 1}.toString())",
                  "raw": "'#1: ({} > function(){return 1}) === ({}.toString() > function(){return 1}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 645,
      "end": 850,
      "test": {
        "type": "BinaryExpression",
        "start": 649,
        "end": 730,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 649,
          "end": 676,
          "expression": {
            "type": "BinaryExpression",
            "start": 650,
            "end": 675,
            "left": {
              "type": "FunctionExpression",
              "start": 650,
              "end": 670,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 660,
                "end": 670,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 661,
                    "end": 669,
                    "argument": {
                      "type": "Literal",
                      "start": 668,
                      "end": 669,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              }
            },
            "operator": ">",
            "right": {
              "type": "ObjectExpression",
              "start": 673,
              "end": 675,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 681,
          "end": 730,
          "expression": {
            "type": "BinaryExpression",
            "start": 682,
            "end": 729,
            "left": {
              "type": "CallExpression",
              "start": 682,
              "end": 713,
              "callee": {
                "type": "MemberExpression",
                "start": 682,
                "end": 711,
                "object": {
                  "type": "FunctionExpression",
                  "start": 682,
                  "end": 702,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 692,
                    "end": 702,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 693,
                        "end": 701,
                        "argument": {
                          "type": "Literal",
                          "start": 700,
                          "end": 701,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  }
                },
                "property": {
                  "type": "Identifier",
                  "start": 703,
                  "end": 711,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "CallExpression",
              "start": 716,
              "end": 729,
              "callee": {
                "type": "MemberExpression",
                "start": 716,
                "end": 727,
                "object": {
                  "type": "ObjectExpression",
                  "start": 716,
                  "end": 718,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 719,
                  "end": 727,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 732,
        "end": 850,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 736,
            "end": 848,
            "argument": {
              "type": "NewExpression",
              "start": 742,
              "end": 847,
              "callee": {
                "type": "Identifier",
                "start": 746,
                "end": 758,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 759,
                  "end": 846,
                  "value": "#2: (function(){return 1} > {}) === (function(){return 1}.toString() > {}.toString())",
                  "raw": "'#2: (function(){return 1} > {}) === (function(){return 1}.toString() > {}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 862,
      "end": 1139,
      "test": {
        "type": "BinaryExpression",
        "start": 866,
        "end": 983,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 866,
          "end": 911,
          "expression": {
            "type": "BinaryExpression",
            "start": 867,
            "end": 910,
            "left": {
              "type": "FunctionExpression",
              "start": 867,
              "end": 887,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 877,
                "end": 887,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 878,
                    "end": 886,
                    "argument": {
                      "type": "Literal",
                      "start": 885,
                      "end": 886,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              }
            },
            "operator": ">",
            "right": {
              "type": "FunctionExpression",
              "start": 890,
              "end": 910,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 900,
                "end": 910,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 901,
                    "end": 909,
                    "argument": {
                      "type": "Literal",
                      "start": 908,
                      "end": 909,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ]
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 916,
          "end": 983,
          "expression": {
            "type": "BinaryExpression",
            "start": 917,
            "end": 982,
            "left": {
              "type": "CallExpression",
              "start": 917,
              "end": 948,
              "callee": {
                "type": "MemberExpression",
                "start": 917,
                "end": 946,
                "object": {
                  "type": "FunctionExpression",
                  "start": 917,
                  "end": 937,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 927,
                    "end": 937,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 928,
                        "end": 936,
                        "argument": {
                          "type": "Literal",
                          "start": 935,
                          "end": 936,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  }
                },
                "property": {
                  "type": "Identifier",
                  "start": 938,
                  "end": 946,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "CallExpression",
              "start": 951,
              "end": 982,
              "callee": {
                "type": "MemberExpression",
                "start": 951,
                "end": 980,
                "object": {
                  "type": "FunctionExpression",
                  "start": 951,
                  "end": 971,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 961,
                    "end": 971,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 962,
                        "end": 970,
                        "argument": {
                          "type": "Literal",
                          "start": 969,
                          "end": 970,
                          "value": 1,
                          "raw": "1"
                        }
                      }
                    ]
                  }
                },
                "property": {
                  "type": "Identifier",
                  "start": 972,
                  "end": 980,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 985,
        "end": 1139,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 989,
            "end": 1137,
            "argument": {
              "type": "NewExpression",
              "start": 995,
              "end": 1136,
              "callee": {
                "type": "Identifier",
                "start": 999,
                "end": 1011,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1012,
                  "end": 1135,
                  "value": "#3: (function(){return 1} > function(){return 1}) === (function(){return 1}.toString() > function(){return 1}.toString())",
                  "raw": "'#3: (function(){return 1} > function(){return 1}) === (function(){return 1}.toString() > function(){return 1}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1151,
      "end": 1284,
      "test": {
        "type": "BinaryExpression",
        "start": 1155,
        "end": 1200,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1155,
          "end": 1164,
          "expression": {
            "type": "BinaryExpression",
            "start": 1156,
            "end": 1163,
            "left": {
              "type": "ObjectExpression",
              "start": 1156,
              "end": 1158,
              "properties": []
            },
            "operator": ">",
            "right": {
              "type": "ObjectExpression",
              "start": 1161,
              "end": 1163,
              "properties": []
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 1169,
          "end": 1200,
          "expression": {
            "type": "BinaryExpression",
            "start": 1170,
            "end": 1199,
            "left": {
              "type": "CallExpression",
              "start": 1170,
              "end": 1183,
              "callee": {
                "type": "MemberExpression",
                "start": 1170,
                "end": 1181,
                "object": {
                  "type": "ObjectExpression",
                  "start": 1170,
                  "end": 1172,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 1173,
                  "end": 1181,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": ">",
            "right": {
              "type": "CallExpression",
              "start": 1186,
              "end": 1199,
              "callee": {
                "type": "MemberExpression",
                "start": 1186,
                "end": 1197,
                "object": {
                  "type": "ObjectExpression",
                  "start": 1186,
                  "end": 1188,
                  "properties": []
                },
                "property": {
                  "type": "Identifier",
                  "start": 1189,
                  "end": 1197,
                  "name": "toString"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [],
              "optional": false
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1202,
        "end": 1284,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1206,
            "end": 1282,
            "argument": {
              "type": "NewExpression",
              "start": 1212,
              "end": 1281,
              "callee": {
                "type": "Identifier",
                "start": 1216,
                "end": 1228,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1229,
                  "end": 1280,
                  "value": "#4: ({} > {}) === ({}.toString() > {}.toString())",
                  "raw": "'#4: ({} > {}) === ({}.toString() > {}.toString())'"
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}