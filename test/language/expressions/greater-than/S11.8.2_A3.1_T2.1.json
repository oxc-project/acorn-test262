{
  "type": "Program",
  "start": 0,
  "end": 1415,
  "body": [
    {
      "type": "IfStatement",
      "start": 498,
      "end": 577,
      "test": {
        "type": "BinaryExpression",
        "start": 502,
        "end": 520,
        "left": {
          "type": "BinaryExpression",
          "start": 502,
          "end": 510,
          "left": {
            "type": "Literal",
            "start": 502,
            "end": 506,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 509,
            "end": 510,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 515,
          "end": 520,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 522,
        "end": 577,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 526,
            "end": 575,
            "argument": {
              "type": "NewExpression",
              "start": 532,
              "end": 574,
              "callee": {
                "type": "Identifier",
                "start": 536,
                "end": 548,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 549,
                  "end": 573,
                  "value": "#1: true > 1 === false",
                  "raw": "'#1: true > 1 === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 589,
      "end": 668,
      "test": {
        "type": "BinaryExpression",
        "start": 593,
        "end": 611,
        "left": {
          "type": "BinaryExpression",
          "start": 593,
          "end": 601,
          "left": {
            "type": "Literal",
            "start": 593,
            "end": 594,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 597,
            "end": 601,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 606,
          "end": 611,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 613,
        "end": 668,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 617,
            "end": 666,
            "argument": {
              "type": "NewExpression",
              "start": 623,
              "end": 665,
              "callee": {
                "type": "Identifier",
                "start": 627,
                "end": 639,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 640,
                  "end": 664,
                  "value": "#2: 1 > true === false",
                  "raw": "'#2: 1 > true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 680,
      "end": 785,
      "test": {
        "type": "BinaryExpression",
        "start": 684,
        "end": 715,
        "left": {
          "type": "BinaryExpression",
          "start": 684,
          "end": 705,
          "left": {
            "type": "NewExpression",
            "start": 684,
            "end": 701,
            "callee": {
              "type": "Identifier",
              "start": 688,
              "end": 695,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 696,
                "end": 700,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 704,
            "end": 705,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 710,
          "end": 715,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 717,
        "end": 785,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 721,
            "end": 783,
            "argument": {
              "type": "NewExpression",
              "start": 727,
              "end": 782,
              "callee": {
                "type": "Identifier",
                "start": 731,
                "end": 743,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 744,
                  "end": 781,
                  "value": "#3: new Boolean(true) > 1 === false",
                  "raw": "'#3: new Boolean(true) > 1 === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 797,
      "end": 902,
      "test": {
        "type": "BinaryExpression",
        "start": 801,
        "end": 832,
        "left": {
          "type": "BinaryExpression",
          "start": 801,
          "end": 822,
          "left": {
            "type": "Literal",
            "start": 801,
            "end": 802,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "NewExpression",
            "start": 805,
            "end": 822,
            "callee": {
              "type": "Identifier",
              "start": 809,
              "end": 816,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 817,
                "end": 821,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 827,
          "end": 832,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 834,
        "end": 902,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 838,
            "end": 900,
            "argument": {
              "type": "NewExpression",
              "start": 844,
              "end": 899,
              "callee": {
                "type": "Identifier",
                "start": 848,
                "end": 860,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 861,
                  "end": 898,
                  "value": "#4: 1 > new Boolean(true) === false",
                  "raw": "'#4: 1 > new Boolean(true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 914,
      "end": 1017,
      "test": {
        "type": "BinaryExpression",
        "start": 918,
        "end": 948,
        "left": {
          "type": "BinaryExpression",
          "start": 918,
          "end": 938,
          "left": {
            "type": "Literal",
            "start": 918,
            "end": 922,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": ">",
          "right": {
            "type": "NewExpression",
            "start": 925,
            "end": 938,
            "callee": {
              "type": "Identifier",
              "start": 929,
              "end": 935,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 936,
                "end": 937,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 943,
          "end": 948,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 950,
        "end": 1017,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 954,
            "end": 1015,
            "argument": {
              "type": "NewExpression",
              "start": 960,
              "end": 1014,
              "callee": {
                "type": "Identifier",
                "start": 964,
                "end": 976,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 977,
                  "end": 1013,
                  "value": "#5: true > new Number(1) === false",
                  "raw": "'#5: true > new Number(1) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1029,
      "end": 1132,
      "test": {
        "type": "BinaryExpression",
        "start": 1033,
        "end": 1063,
        "left": {
          "type": "BinaryExpression",
          "start": 1033,
          "end": 1053,
          "left": {
            "type": "NewExpression",
            "start": 1033,
            "end": 1046,
            "callee": {
              "type": "Identifier",
              "start": 1037,
              "end": 1043,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1044,
                "end": 1045,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">",
          "right": {
            "type": "Literal",
            "start": 1049,
            "end": 1053,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1058,
          "end": 1063,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1065,
        "end": 1132,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1069,
            "end": 1130,
            "argument": {
              "type": "NewExpression",
              "start": 1075,
              "end": 1129,
              "callee": {
                "type": "Identifier",
                "start": 1079,
                "end": 1091,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1092,
                  "end": 1128,
                  "value": "#6: new Number(1) > true === false",
                  "raw": "'#6: new Number(1) > true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1144,
      "end": 1273,
      "test": {
        "type": "BinaryExpression",
        "start": 1148,
        "end": 1191,
        "left": {
          "type": "BinaryExpression",
          "start": 1148,
          "end": 1181,
          "left": {
            "type": "NewExpression",
            "start": 1148,
            "end": 1165,
            "callee": {
              "type": "Identifier",
              "start": 1152,
              "end": 1159,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1160,
                "end": 1164,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">",
          "right": {
            "type": "NewExpression",
            "start": 1168,
            "end": 1181,
            "callee": {
              "type": "Identifier",
              "start": 1172,
              "end": 1178,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1179,
                "end": 1180,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1186,
          "end": 1191,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1193,
        "end": 1273,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1197,
            "end": 1271,
            "argument": {
              "type": "NewExpression",
              "start": 1203,
              "end": 1270,
              "callee": {
                "type": "Identifier",
                "start": 1207,
                "end": 1219,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1220,
                  "end": 1269,
                  "value": "#7: new Boolean(true) > new Number(1) === false",
                  "raw": "'#7: new Boolean(true) > new Number(1) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1285,
      "end": 1414,
      "test": {
        "type": "BinaryExpression",
        "start": 1289,
        "end": 1332,
        "left": {
          "type": "BinaryExpression",
          "start": 1289,
          "end": 1322,
          "left": {
            "type": "NewExpression",
            "start": 1289,
            "end": 1302,
            "callee": {
              "type": "Identifier",
              "start": 1293,
              "end": 1299,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1300,
                "end": 1301,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": ">",
          "right": {
            "type": "NewExpression",
            "start": 1305,
            "end": 1322,
            "callee": {
              "type": "Identifier",
              "start": 1309,
              "end": 1316,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1317,
                "end": 1321,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1327,
          "end": 1332,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1334,
        "end": 1414,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1338,
            "end": 1412,
            "argument": {
              "type": "NewExpression",
              "start": 1344,
              "end": 1411,
              "callee": {
                "type": "Identifier",
                "start": 1348,
                "end": 1360,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1361,
                  "end": 1410,
                  "value": "#8: new Number(1) > new Boolean(true) === false",
                  "raw": "'#8: new Number(1) > new Boolean(true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}