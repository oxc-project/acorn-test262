{
  "type": "Program",
  "start": 0,
  "end": 1302,
  "body": [
    {
      "type": "IfStatement",
      "start": 236,
      "end": 330,
      "test": {
        "type": "BinaryExpression",
        "start": 240,
        "end": 269,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 240,
          "end": 260,
          "expression": {
            "type": "BinaryExpression",
            "start": 241,
            "end": 259,
            "left": {
              "type": "Literal",
              "start": 241,
              "end": 245,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 249,
              "end": 259,
              "object": {
                "type": "Identifier",
                "start": 249,
                "end": 255,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 256,
                "end": 259,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 265,
          "end": 269,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 271,
        "end": 330,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 275,
            "end": 328,
            "argument": {
              "type": "NewExpression",
              "start": 281,
              "end": 327,
              "callee": {
                "type": "Identifier",
                "start": 285,
                "end": 297,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 298,
                  "end": 326,
                  "value": "#1: (true != NaN) === true",
                  "raw": "'#1: (true != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 342,
      "end": 432,
      "test": {
        "type": "BinaryExpression",
        "start": 346,
        "end": 373,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 346,
          "end": 364,
          "expression": {
            "type": "BinaryExpression",
            "start": 347,
            "end": 363,
            "left": {
              "type": "UnaryExpression",
              "start": 347,
              "end": 349,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 348,
                "end": 349,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 353,
              "end": 363,
              "object": {
                "type": "Identifier",
                "start": 353,
                "end": 359,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 360,
                "end": 363,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 369,
          "end": 373,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 375,
        "end": 432,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 379,
            "end": 430,
            "argument": {
              "type": "NewExpression",
              "start": 385,
              "end": 429,
              "callee": {
                "type": "Identifier",
                "start": 389,
                "end": 401,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 402,
                  "end": 428,
                  "value": "#2: (-1 != NaN) === true",
                  "raw": "'#2: (-1 != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 444,
      "end": 543,
      "test": {
        "type": "BinaryExpression",
        "start": 448,
        "end": 483,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 448,
          "end": 474,
          "expression": {
            "type": "BinaryExpression",
            "start": 449,
            "end": 473,
            "left": {
              "type": "MemberExpression",
              "start": 449,
              "end": 459,
              "object": {
                "type": "Identifier",
                "start": 449,
                "end": 455,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 456,
                "end": 459,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 463,
              "end": 473,
              "object": {
                "type": "Identifier",
                "start": 463,
                "end": 469,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 470,
                "end": 473,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 479,
          "end": 483,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 485,
        "end": 543,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 489,
            "end": 541,
            "argument": {
              "type": "NewExpression",
              "start": 495,
              "end": 540,
              "callee": {
                "type": "Identifier",
                "start": 499,
                "end": 511,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 512,
                  "end": 539,
                  "value": "#3: (NaN != NaN) === true",
                  "raw": "'#3: (NaN != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 555,
      "end": 674,
      "test": {
        "type": "BinaryExpression",
        "start": 559,
        "end": 608,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 559,
          "end": 599,
          "expression": {
            "type": "BinaryExpression",
            "start": 560,
            "end": 598,
            "left": {
              "type": "MemberExpression",
              "start": 560,
              "end": 584,
              "object": {
                "type": "Identifier",
                "start": 560,
                "end": 566,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 567,
                "end": 584,
                "name": "POSITIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 588,
              "end": 598,
              "object": {
                "type": "Identifier",
                "start": 588,
                "end": 594,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 595,
                "end": 598,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 604,
          "end": 608,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 610,
        "end": 674,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 614,
            "end": 672,
            "argument": {
              "type": "NewExpression",
              "start": 620,
              "end": 671,
              "callee": {
                "type": "Identifier",
                "start": 624,
                "end": 636,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 637,
                  "end": 670,
                  "value": "#4: (+Infinity != NaN) === true",
                  "raw": "'#4: (+Infinity != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 686,
      "end": 805,
      "test": {
        "type": "BinaryExpression",
        "start": 690,
        "end": 739,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 690,
          "end": 730,
          "expression": {
            "type": "BinaryExpression",
            "start": 691,
            "end": 729,
            "left": {
              "type": "MemberExpression",
              "start": 691,
              "end": 715,
              "object": {
                "type": "Identifier",
                "start": 691,
                "end": 697,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 698,
                "end": 715,
                "name": "NEGATIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 719,
              "end": 729,
              "object": {
                "type": "Identifier",
                "start": 719,
                "end": 725,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 726,
                "end": 729,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 735,
          "end": 739,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 741,
        "end": 805,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 745,
            "end": 803,
            "argument": {
              "type": "NewExpression",
              "start": 751,
              "end": 802,
              "callee": {
                "type": "Identifier",
                "start": 755,
                "end": 767,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 768,
                  "end": 801,
                  "value": "#5: (-Infinity != NaN) === true",
                  "raw": "'#5: (-Infinity != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 817,
      "end": 935,
      "test": {
        "type": "BinaryExpression",
        "start": 821,
        "end": 862,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 821,
          "end": 853,
          "expression": {
            "type": "BinaryExpression",
            "start": 822,
            "end": 852,
            "left": {
              "type": "MemberExpression",
              "start": 822,
              "end": 838,
              "object": {
                "type": "Identifier",
                "start": 822,
                "end": 828,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 829,
                "end": 838,
                "name": "MAX_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 842,
              "end": 852,
              "object": {
                "type": "Identifier",
                "start": 842,
                "end": 848,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 849,
                "end": 852,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 858,
          "end": 862,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 864,
        "end": 935,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 868,
            "end": 933,
            "argument": {
              "type": "NewExpression",
              "start": 874,
              "end": 932,
              "callee": {
                "type": "Identifier",
                "start": 878,
                "end": 890,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 891,
                  "end": 931,
                  "value": "#6: (Number.MAX_VALUE != NaN) === true",
                  "raw": "'#6: (Number.MAX_VALUE != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 947,
      "end": 1065,
      "test": {
        "type": "BinaryExpression",
        "start": 951,
        "end": 992,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 951,
          "end": 983,
          "expression": {
            "type": "BinaryExpression",
            "start": 952,
            "end": 982,
            "left": {
              "type": "MemberExpression",
              "start": 952,
              "end": 968,
              "object": {
                "type": "Identifier",
                "start": 952,
                "end": 958,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 959,
                "end": 968,
                "name": "MIN_VALUE"
              },
              "computed": false,
              "optional": false
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 972,
              "end": 982,
              "object": {
                "type": "Identifier",
                "start": 972,
                "end": 978,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 979,
                "end": 982,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 988,
          "end": 992,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 994,
        "end": 1065,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 998,
            "end": 1063,
            "argument": {
              "type": "NewExpression",
              "start": 1004,
              "end": 1062,
              "callee": {
                "type": "Identifier",
                "start": 1008,
                "end": 1020,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1021,
                  "end": 1061,
                  "value": "#7: (Number.MIN_VALUE != NaN) === true",
                  "raw": "'#7: (Number.MIN_VALUE != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1077,
      "end": 1179,
      "test": {
        "type": "BinaryExpression",
        "start": 1081,
        "end": 1114,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1081,
          "end": 1105,
          "expression": {
            "type": "BinaryExpression",
            "start": 1082,
            "end": 1104,
            "left": {
              "type": "Literal",
              "start": 1082,
              "end": 1090,
              "value": "string",
              "raw": "\"string\"",
              "regex": null,
              "bigint": null
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 1094,
              "end": 1104,
              "object": {
                "type": "Identifier",
                "start": 1094,
                "end": 1100,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1101,
                "end": 1104,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1110,
          "end": 1114,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1116,
        "end": 1179,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1120,
            "end": 1177,
            "argument": {
              "type": "NewExpression",
              "start": 1126,
              "end": 1176,
              "callee": {
                "type": "Identifier",
                "start": 1130,
                "end": 1142,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1143,
                  "end": 1175,
                  "value": "#8: (\"string\" != NaN) === true",
                  "raw": "'#8: (\"string\" != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1191,
      "end": 1301,
      "test": {
        "type": "BinaryExpression",
        "start": 1195,
        "end": 1232,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1195,
          "end": 1223,
          "expression": {
            "type": "BinaryExpression",
            "start": 1196,
            "end": 1222,
            "left": {
              "type": "NewExpression",
              "start": 1196,
              "end": 1208,
              "callee": {
                "type": "Identifier",
                "start": 1200,
                "end": 1206,
                "name": "Object"
              },
              "arguments": []
            },
            "operator": "!=",
            "right": {
              "type": "MemberExpression",
              "start": 1212,
              "end": 1222,
              "object": {
                "type": "Identifier",
                "start": 1212,
                "end": 1218,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1219,
                "end": 1222,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1228,
          "end": 1232,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1234,
        "end": 1301,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1238,
            "end": 1299,
            "argument": {
              "type": "NewExpression",
              "start": 1244,
              "end": 1298,
              "callee": {
                "type": "Identifier",
                "start": 1248,
                "end": 1260,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1261,
                  "end": 1297,
                  "value": "#9: (new Object() != NaN) === true",
                  "raw": "'#9: (new Object() != NaN) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}