{
  "type": "Program",
  "start": 0,
  "end": 1405,
  "body": [
    {
      "type": "IfStatement",
      "start": 488,
      "end": 567,
      "test": {
        "type": "BinaryExpression",
        "start": 492,
        "end": 510,
        "left": {
          "type": "BinaryExpression",
          "start": 492,
          "end": 500,
          "left": {
            "type": "Literal",
            "start": 492,
            "end": 496,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 499,
            "end": 500,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 505,
          "end": 510,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 512,
        "end": 567,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 516,
            "end": 565,
            "argument": {
              "type": "NewExpression",
              "start": 522,
              "end": 564,
              "callee": {
                "type": "Identifier",
                "start": 526,
                "end": 538,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 539,
                  "end": 563,
                  "value": "#1: true < 1 === false",
                  "raw": "'#1: true < 1 === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 579,
      "end": 658,
      "test": {
        "type": "BinaryExpression",
        "start": 583,
        "end": 601,
        "left": {
          "type": "BinaryExpression",
          "start": 583,
          "end": 591,
          "left": {
            "type": "Literal",
            "start": 583,
            "end": 584,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 587,
            "end": 591,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 596,
          "end": 601,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 603,
        "end": 658,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 607,
            "end": 656,
            "argument": {
              "type": "NewExpression",
              "start": 613,
              "end": 655,
              "callee": {
                "type": "Identifier",
                "start": 617,
                "end": 629,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 630,
                  "end": 654,
                  "value": "#2: 1 < true === false",
                  "raw": "'#2: 1 < true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 670,
      "end": 775,
      "test": {
        "type": "BinaryExpression",
        "start": 674,
        "end": 705,
        "left": {
          "type": "BinaryExpression",
          "start": 674,
          "end": 695,
          "left": {
            "type": "NewExpression",
            "start": 674,
            "end": 691,
            "callee": {
              "type": "Identifier",
              "start": 678,
              "end": 685,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 686,
                "end": 690,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 694,
            "end": 695,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 700,
          "end": 705,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 707,
        "end": 775,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 711,
            "end": 773,
            "argument": {
              "type": "NewExpression",
              "start": 717,
              "end": 772,
              "callee": {
                "type": "Identifier",
                "start": 721,
                "end": 733,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 734,
                  "end": 771,
                  "value": "#3: new Boolean(true) < 1 === false",
                  "raw": "'#3: new Boolean(true) < 1 === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 787,
      "end": 892,
      "test": {
        "type": "BinaryExpression",
        "start": 791,
        "end": 822,
        "left": {
          "type": "BinaryExpression",
          "start": 791,
          "end": 812,
          "left": {
            "type": "Literal",
            "start": 791,
            "end": 792,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "<",
          "right": {
            "type": "NewExpression",
            "start": 795,
            "end": 812,
            "callee": {
              "type": "Identifier",
              "start": 799,
              "end": 806,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 807,
                "end": 811,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 817,
          "end": 822,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 824,
        "end": 892,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 828,
            "end": 890,
            "argument": {
              "type": "NewExpression",
              "start": 834,
              "end": 889,
              "callee": {
                "type": "Identifier",
                "start": 838,
                "end": 850,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 851,
                  "end": 888,
                  "value": "#4: 1 < new Boolean(true) === false",
                  "raw": "'#4: 1 < new Boolean(true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 904,
      "end": 1007,
      "test": {
        "type": "BinaryExpression",
        "start": 908,
        "end": 938,
        "left": {
          "type": "BinaryExpression",
          "start": 908,
          "end": 928,
          "left": {
            "type": "Literal",
            "start": 908,
            "end": 912,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          "operator": "<",
          "right": {
            "type": "NewExpression",
            "start": 915,
            "end": 928,
            "callee": {
              "type": "Identifier",
              "start": 919,
              "end": 925,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 926,
                "end": 927,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 933,
          "end": 938,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 940,
        "end": 1007,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 944,
            "end": 1005,
            "argument": {
              "type": "NewExpression",
              "start": 950,
              "end": 1004,
              "callee": {
                "type": "Identifier",
                "start": 954,
                "end": 966,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 967,
                  "end": 1003,
                  "value": "#5: true < new Number(1) === false",
                  "raw": "'#5: true < new Number(1) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1019,
      "end": 1122,
      "test": {
        "type": "BinaryExpression",
        "start": 1023,
        "end": 1053,
        "left": {
          "type": "BinaryExpression",
          "start": 1023,
          "end": 1043,
          "left": {
            "type": "NewExpression",
            "start": 1023,
            "end": 1036,
            "callee": {
              "type": "Identifier",
              "start": 1027,
              "end": 1033,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1034,
                "end": 1035,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<",
          "right": {
            "type": "Literal",
            "start": 1039,
            "end": 1043,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1048,
          "end": 1053,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1055,
        "end": 1122,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1059,
            "end": 1120,
            "argument": {
              "type": "NewExpression",
              "start": 1065,
              "end": 1119,
              "callee": {
                "type": "Identifier",
                "start": 1069,
                "end": 1081,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1082,
                  "end": 1118,
                  "value": "#6: new Number(1) < true === false",
                  "raw": "'#6: new Number(1) < true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1134,
      "end": 1263,
      "test": {
        "type": "BinaryExpression",
        "start": 1138,
        "end": 1181,
        "left": {
          "type": "BinaryExpression",
          "start": 1138,
          "end": 1171,
          "left": {
            "type": "NewExpression",
            "start": 1138,
            "end": 1155,
            "callee": {
              "type": "Identifier",
              "start": 1142,
              "end": 1149,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1150,
                "end": 1154,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<",
          "right": {
            "type": "NewExpression",
            "start": 1158,
            "end": 1171,
            "callee": {
              "type": "Identifier",
              "start": 1162,
              "end": 1168,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1169,
                "end": 1170,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1176,
          "end": 1181,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1183,
        "end": 1263,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1187,
            "end": 1261,
            "argument": {
              "type": "NewExpression",
              "start": 1193,
              "end": 1260,
              "callee": {
                "type": "Identifier",
                "start": 1197,
                "end": 1209,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1210,
                  "end": 1259,
                  "value": "#7: new Boolean(true) < new Number(1) === false",
                  "raw": "'#7: new Boolean(true) < new Number(1) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1275,
      "end": 1404,
      "test": {
        "type": "BinaryExpression",
        "start": 1279,
        "end": 1322,
        "left": {
          "type": "BinaryExpression",
          "start": 1279,
          "end": 1312,
          "left": {
            "type": "NewExpression",
            "start": 1279,
            "end": 1292,
            "callee": {
              "type": "Identifier",
              "start": 1283,
              "end": 1289,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1290,
                "end": 1291,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<",
          "right": {
            "type": "NewExpression",
            "start": 1295,
            "end": 1312,
            "callee": {
              "type": "Identifier",
              "start": 1299,
              "end": 1306,
              "name": "Boolean"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1307,
                "end": 1311,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1317,
          "end": 1322,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1324,
        "end": 1404,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1328,
            "end": 1402,
            "argument": {
              "type": "NewExpression",
              "start": 1334,
              "end": 1401,
              "callee": {
                "type": "Identifier",
                "start": 1338,
                "end": 1350,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1351,
                  "end": 1400,
                  "value": "#8: new Number(1) < new Boolean(true) === false",
                  "raw": "'#8: new Number(1) < new Boolean(true) === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}