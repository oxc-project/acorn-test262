{
  "type": "Program",
  "start": 0,
  "end": 4229,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 741,
      "end": 810,
      "expression": {
        "type": "CallExpression",
        "start": 741,
        "end": 809,
        "callee": {
          "type": "MemberExpression",
          "start": 741,
          "end": 757,
          "object": {
            "type": "Identifier",
            "start": 741,
            "end": 747,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 748,
            "end": 757,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 758,
            "end": 765,
            "left": {
              "type": "Literal",
              "start": 758,
              "end": 760,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 763,
              "end": 765,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 767,
            "end": 772,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 774,
            "end": 808,
            "value": "The result of (0n < 0n) is false",
            "raw": "'The result of (0n < 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 811,
      "end": 880,
      "expression": {
        "type": "CallExpression",
        "start": 811,
        "end": 879,
        "callee": {
          "type": "MemberExpression",
          "start": 811,
          "end": 827,
          "object": {
            "type": "Identifier",
            "start": 811,
            "end": 817,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 818,
            "end": 827,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 828,
            "end": 835,
            "left": {
              "type": "Literal",
              "start": 828,
              "end": 830,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 833,
              "end": 835,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 837,
            "end": 842,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 844,
            "end": 878,
            "value": "The result of (1n < 1n) is false",
            "raw": "'The result of (1n < 1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 881,
      "end": 954,
      "expression": {
        "type": "CallExpression",
        "start": 881,
        "end": 953,
        "callee": {
          "type": "MemberExpression",
          "start": 881,
          "end": 897,
          "object": {
            "type": "Identifier",
            "start": 881,
            "end": 887,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 888,
            "end": 897,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 898,
            "end": 907,
            "left": {
              "type": "UnaryExpression",
              "start": 898,
              "end": 901,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 899,
                "end": 901,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 904,
              "end": 907,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 905,
                "end": 907,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 909,
            "end": 914,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 916,
            "end": 952,
            "value": "The result of (-1n < -1n) is false",
            "raw": "'The result of (-1n < -1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 955,
      "end": 1026,
      "expression": {
        "type": "CallExpression",
        "start": 955,
        "end": 1025,
        "callee": {
          "type": "MemberExpression",
          "start": 955,
          "end": 971,
          "object": {
            "type": "Identifier",
            "start": 955,
            "end": 961,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 962,
            "end": 971,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 972,
            "end": 980,
            "left": {
              "type": "Literal",
              "start": 972,
              "end": 974,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 977,
              "end": 980,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 978,
                "end": 980,
                "value": null,
                "raw": "0n",
                "regex": null,
                "bigint": "0"
              }
            }
          },
          {
            "type": "Literal",
            "start": 982,
            "end": 987,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 989,
            "end": 1024,
            "value": "The result of (0n < -0n) is false",
            "raw": "'The result of (0n < -0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1027,
      "end": 1098,
      "expression": {
        "type": "CallExpression",
        "start": 1027,
        "end": 1097,
        "callee": {
          "type": "MemberExpression",
          "start": 1027,
          "end": 1043,
          "object": {
            "type": "Identifier",
            "start": 1027,
            "end": 1033,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1034,
            "end": 1043,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1044,
            "end": 1052,
            "left": {
              "type": "UnaryExpression",
              "start": 1044,
              "end": 1047,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1045,
                "end": 1047,
                "value": null,
                "raw": "0n",
                "regex": null,
                "bigint": "0"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1050,
              "end": 1052,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1054,
            "end": 1059,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1061,
            "end": 1096,
            "value": "The result of (-0n < 0n) is false",
            "raw": "'The result of (-0n < 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1099,
      "end": 1166,
      "expression": {
        "type": "CallExpression",
        "start": 1099,
        "end": 1165,
        "callee": {
          "type": "MemberExpression",
          "start": 1099,
          "end": 1115,
          "object": {
            "type": "Identifier",
            "start": 1099,
            "end": 1105,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1106,
            "end": 1115,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1116,
            "end": 1123,
            "left": {
              "type": "Literal",
              "start": 1116,
              "end": 1118,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1121,
              "end": 1123,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1125,
            "end": 1129,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1131,
            "end": 1164,
            "value": "The result of (0n < 1n) is true",
            "raw": "'The result of (0n < 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1167,
      "end": 1236,
      "expression": {
        "type": "CallExpression",
        "start": 1167,
        "end": 1235,
        "callee": {
          "type": "MemberExpression",
          "start": 1167,
          "end": 1183,
          "object": {
            "type": "Identifier",
            "start": 1167,
            "end": 1173,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1174,
            "end": 1183,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1184,
            "end": 1191,
            "left": {
              "type": "Literal",
              "start": 1184,
              "end": 1186,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1189,
              "end": 1191,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1193,
            "end": 1198,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1200,
            "end": 1234,
            "value": "The result of (1n < 0n) is false",
            "raw": "'The result of (1n < 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1237,
      "end": 1308,
      "expression": {
        "type": "CallExpression",
        "start": 1237,
        "end": 1307,
        "callee": {
          "type": "MemberExpression",
          "start": 1237,
          "end": 1253,
          "object": {
            "type": "Identifier",
            "start": 1237,
            "end": 1243,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1244,
            "end": 1253,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1254,
            "end": 1262,
            "left": {
              "type": "Literal",
              "start": 1254,
              "end": 1256,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 1259,
              "end": 1262,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1260,
                "end": 1262,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 1264,
            "end": 1269,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1271,
            "end": 1306,
            "value": "The result of (0n < -1n) is false",
            "raw": "'The result of (0n < -1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1309,
      "end": 1378,
      "expression": {
        "type": "CallExpression",
        "start": 1309,
        "end": 1377,
        "callee": {
          "type": "MemberExpression",
          "start": 1309,
          "end": 1325,
          "object": {
            "type": "Identifier",
            "start": 1309,
            "end": 1315,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1316,
            "end": 1325,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1326,
            "end": 1334,
            "left": {
              "type": "UnaryExpression",
              "start": 1326,
              "end": 1329,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1327,
                "end": 1329,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1332,
              "end": 1334,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1336,
            "end": 1340,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1342,
            "end": 1376,
            "value": "The result of (-1n < 0n) is true",
            "raw": "'The result of (-1n < 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1379,
      "end": 1450,
      "expression": {
        "type": "CallExpression",
        "start": 1379,
        "end": 1449,
        "callee": {
          "type": "MemberExpression",
          "start": 1379,
          "end": 1395,
          "object": {
            "type": "Identifier",
            "start": 1379,
            "end": 1385,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1386,
            "end": 1395,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1396,
            "end": 1404,
            "left": {
              "type": "Literal",
              "start": 1396,
              "end": 1398,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 1401,
              "end": 1404,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1402,
                "end": 1404,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 1406,
            "end": 1411,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1413,
            "end": 1448,
            "value": "The result of (1n < -1n) is false",
            "raw": "'The result of (1n < -1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1451,
      "end": 1520,
      "expression": {
        "type": "CallExpression",
        "start": 1451,
        "end": 1519,
        "callee": {
          "type": "MemberExpression",
          "start": 1451,
          "end": 1467,
          "object": {
            "type": "Identifier",
            "start": 1451,
            "end": 1457,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1458,
            "end": 1467,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1468,
            "end": 1476,
            "left": {
              "type": "UnaryExpression",
              "start": 1468,
              "end": 1471,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1469,
                "end": 1471,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1474,
              "end": 1476,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 1478,
            "end": 1482,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1484,
            "end": 1518,
            "value": "The result of (-1n < 1n) is true",
            "raw": "'The result of (-1n < 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1522,
      "end": 1665,
      "expression": {
        "type": "CallExpression",
        "start": 1522,
        "end": 1664,
        "callee": {
          "type": "MemberExpression",
          "start": 1522,
          "end": 1538,
          "object": {
            "type": "Identifier",
            "start": 1522,
            "end": 1528,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1529,
            "end": 1538,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1542,
            "end": 1583,
            "left": {
              "type": "Literal",
              "start": 1542,
              "end": 1561,
              "value": null,
              "raw": "0x1fffffffffffff01n",
              "regex": null,
              "bigint": "0x1fffffffffffff01"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1564,
              "end": 1583,
              "value": null,
              "raw": "0x1fffffffffffff02n",
              "regex": null,
              "bigint": "0x1fffffffffffff02"
            }
          },
          {
            "type": "Literal",
            "start": 1587,
            "end": 1591,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1595,
            "end": 1662,
            "value": "The result of (0x1fffffffffffff01n < 0x1fffffffffffff02n) is true",
            "raw": "'The result of (0x1fffffffffffff01n < 0x1fffffffffffff02n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1667,
      "end": 1812,
      "expression": {
        "type": "CallExpression",
        "start": 1667,
        "end": 1811,
        "callee": {
          "type": "MemberExpression",
          "start": 1667,
          "end": 1683,
          "object": {
            "type": "Identifier",
            "start": 1667,
            "end": 1673,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1674,
            "end": 1683,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1687,
            "end": 1728,
            "left": {
              "type": "Literal",
              "start": 1687,
              "end": 1706,
              "value": null,
              "raw": "0x1fffffffffffff02n",
              "regex": null,
              "bigint": "0x1fffffffffffff02"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 1709,
              "end": 1728,
              "value": null,
              "raw": "0x1fffffffffffff01n",
              "regex": null,
              "bigint": "0x1fffffffffffff01"
            }
          },
          {
            "type": "Literal",
            "start": 1732,
            "end": 1737,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1741,
            "end": 1809,
            "value": "The result of (0x1fffffffffffff02n < 0x1fffffffffffff01n) is false",
            "raw": "'The result of (0x1fffffffffffff02n < 0x1fffffffffffff01n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1814,
      "end": 1963,
      "expression": {
        "type": "CallExpression",
        "start": 1814,
        "end": 1962,
        "callee": {
          "type": "MemberExpression",
          "start": 1814,
          "end": 1830,
          "object": {
            "type": "Identifier",
            "start": 1814,
            "end": 1820,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1821,
            "end": 1830,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1834,
            "end": 1877,
            "left": {
              "type": "UnaryExpression",
              "start": 1834,
              "end": 1854,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1835,
                "end": 1854,
                "value": null,
                "raw": "0x1fffffffffffff01n",
                "regex": null,
                "bigint": "0x1fffffffffffff01"
              }
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 1857,
              "end": 1877,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1858,
                "end": 1877,
                "value": null,
                "raw": "0x1fffffffffffff02n",
                "regex": null,
                "bigint": "0x1fffffffffffff02"
              }
            }
          },
          {
            "type": "Literal",
            "start": 1881,
            "end": 1886,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1890,
            "end": 1960,
            "value": "The result of (-0x1fffffffffffff01n < -0x1fffffffffffff02n) is false",
            "raw": "'The result of (-0x1fffffffffffff01n < -0x1fffffffffffff02n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1965,
      "end": 2112,
      "expression": {
        "type": "CallExpression",
        "start": 1965,
        "end": 2111,
        "callee": {
          "type": "MemberExpression",
          "start": 1965,
          "end": 1981,
          "object": {
            "type": "Identifier",
            "start": 1965,
            "end": 1971,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1972,
            "end": 1981,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1985,
            "end": 2028,
            "left": {
              "type": "UnaryExpression",
              "start": 1985,
              "end": 2005,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1986,
                "end": 2005,
                "value": null,
                "raw": "0x1fffffffffffff02n",
                "regex": null,
                "bigint": "0x1fffffffffffff02"
              }
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 2008,
              "end": 2028,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2009,
                "end": 2028,
                "value": null,
                "raw": "0x1fffffffffffff01n",
                "regex": null,
                "bigint": "0x1fffffffffffff01"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2032,
            "end": 2036,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2040,
            "end": 2109,
            "value": "The result of (-0x1fffffffffffff02n < -0x1fffffffffffff01n) is true",
            "raw": "'The result of (-0x1fffffffffffff02n < -0x1fffffffffffff01n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2114,
      "end": 2227,
      "expression": {
        "type": "CallExpression",
        "start": 2114,
        "end": 2226,
        "callee": {
          "type": "MemberExpression",
          "start": 2114,
          "end": 2130,
          "object": {
            "type": "Identifier",
            "start": 2114,
            "end": 2120,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2121,
            "end": 2130,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2134,
            "end": 2159,
            "left": {
              "type": "Literal",
              "start": 2134,
              "end": 2154,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2157,
              "end": 2159,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 2163,
            "end": 2168,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2172,
            "end": 2224,
            "value": "The result of (0x10000000000000000n < 0n) is false",
            "raw": "'The result of (0x10000000000000000n < 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2229,
      "end": 2340,
      "expression": {
        "type": "CallExpression",
        "start": 2229,
        "end": 2339,
        "callee": {
          "type": "MemberExpression",
          "start": 2229,
          "end": 2245,
          "object": {
            "type": "Identifier",
            "start": 2229,
            "end": 2235,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2236,
            "end": 2245,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2249,
            "end": 2274,
            "left": {
              "type": "Literal",
              "start": 2249,
              "end": 2251,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2254,
              "end": 2274,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            }
          },
          {
            "type": "Literal",
            "start": 2278,
            "end": 2282,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2286,
            "end": 2337,
            "value": "The result of (0n < 0x10000000000000000n) is true",
            "raw": "'The result of (0n < 0x10000000000000000n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2342,
      "end": 2455,
      "expression": {
        "type": "CallExpression",
        "start": 2342,
        "end": 2454,
        "callee": {
          "type": "MemberExpression",
          "start": 2342,
          "end": 2358,
          "object": {
            "type": "Identifier",
            "start": 2342,
            "end": 2348,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2349,
            "end": 2358,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2362,
            "end": 2387,
            "left": {
              "type": "Literal",
              "start": 2362,
              "end": 2382,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2385,
              "end": 2387,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 2391,
            "end": 2396,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2400,
            "end": 2452,
            "value": "The result of (0x10000000000000000n < 1n) is false",
            "raw": "'The result of (0x10000000000000000n < 1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2457,
      "end": 2568,
      "expression": {
        "type": "CallExpression",
        "start": 2457,
        "end": 2567,
        "callee": {
          "type": "MemberExpression",
          "start": 2457,
          "end": 2473,
          "object": {
            "type": "Identifier",
            "start": 2457,
            "end": 2463,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2464,
            "end": 2473,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2477,
            "end": 2502,
            "left": {
              "type": "Literal",
              "start": 2477,
              "end": 2479,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2482,
              "end": 2502,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            }
          },
          {
            "type": "Literal",
            "start": 2506,
            "end": 2510,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2514,
            "end": 2565,
            "value": "The result of (1n < 0x10000000000000000n) is true",
            "raw": "'The result of (1n < 0x10000000000000000n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2570,
      "end": 2685,
      "expression": {
        "type": "CallExpression",
        "start": 2570,
        "end": 2684,
        "callee": {
          "type": "MemberExpression",
          "start": 2570,
          "end": 2586,
          "object": {
            "type": "Identifier",
            "start": 2570,
            "end": 2576,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2577,
            "end": 2586,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2590,
            "end": 2616,
            "left": {
              "type": "Literal",
              "start": 2590,
              "end": 2610,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 2613,
              "end": 2616,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2614,
                "end": 2616,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2620,
            "end": 2625,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2629,
            "end": 2682,
            "value": "The result of (0x10000000000000000n < -1n) is false",
            "raw": "'The result of (0x10000000000000000n < -1n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2687,
      "end": 2800,
      "expression": {
        "type": "CallExpression",
        "start": 2687,
        "end": 2799,
        "callee": {
          "type": "MemberExpression",
          "start": 2687,
          "end": 2703,
          "object": {
            "type": "Identifier",
            "start": 2687,
            "end": 2693,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2694,
            "end": 2703,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2707,
            "end": 2733,
            "left": {
              "type": "UnaryExpression",
              "start": 2707,
              "end": 2710,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2708,
                "end": 2710,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2713,
              "end": 2733,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            }
          },
          {
            "type": "Literal",
            "start": 2737,
            "end": 2741,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2745,
            "end": 2797,
            "value": "The result of (-1n < 0x10000000000000000n) is true",
            "raw": "'The result of (-1n < 0x10000000000000000n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2802,
      "end": 2915,
      "expression": {
        "type": "CallExpression",
        "start": 2802,
        "end": 2914,
        "callee": {
          "type": "MemberExpression",
          "start": 2802,
          "end": 2818,
          "object": {
            "type": "Identifier",
            "start": 2802,
            "end": 2808,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2809,
            "end": 2818,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2822,
            "end": 2847,
            "left": {
              "type": "Literal",
              "start": 2822,
              "end": 2842,
              "value": null,
              "raw": "0x10000000000000001n",
              "regex": null,
              "bigint": "0x10000000000000001"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2845,
              "end": 2847,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 2851,
            "end": 2856,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2860,
            "end": 2912,
            "value": "The result of (0x10000000000000001n < 0n) is false",
            "raw": "'The result of (0x10000000000000001n < 0n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2917,
      "end": 3028,
      "expression": {
        "type": "CallExpression",
        "start": 2917,
        "end": 3027,
        "callee": {
          "type": "MemberExpression",
          "start": 2917,
          "end": 2933,
          "object": {
            "type": "Identifier",
            "start": 2917,
            "end": 2923,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2924,
            "end": 2933,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2937,
            "end": 2962,
            "left": {
              "type": "Literal",
              "start": 2937,
              "end": 2939,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 2942,
              "end": 2962,
              "value": null,
              "raw": "0x10000000000000001n",
              "regex": null,
              "bigint": "0x10000000000000001"
            }
          },
          {
            "type": "Literal",
            "start": 2966,
            "end": 2970,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 2974,
            "end": 3025,
            "value": "The result of (0n < 0x10000000000000001n) is true",
            "raw": "'The result of (0n < 0x10000000000000001n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3030,
      "end": 3143,
      "expression": {
        "type": "CallExpression",
        "start": 3030,
        "end": 3142,
        "callee": {
          "type": "MemberExpression",
          "start": 3030,
          "end": 3046,
          "object": {
            "type": "Identifier",
            "start": 3030,
            "end": 3036,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3037,
            "end": 3046,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3050,
            "end": 3076,
            "left": {
              "type": "UnaryExpression",
              "start": 3050,
              "end": 3071,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3051,
                "end": 3071,
                "value": null,
                "raw": "0x10000000000000000n",
                "regex": null,
                "bigint": "0x10000000000000000"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 3074,
              "end": 3076,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 3080,
            "end": 3084,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3088,
            "end": 3140,
            "value": "The result of (-0x10000000000000000n < 0n) is true",
            "raw": "'The result of (-0x10000000000000000n < 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3145,
      "end": 3260,
      "expression": {
        "type": "CallExpression",
        "start": 3145,
        "end": 3259,
        "callee": {
          "type": "MemberExpression",
          "start": 3145,
          "end": 3161,
          "object": {
            "type": "Identifier",
            "start": 3145,
            "end": 3151,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3152,
            "end": 3161,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3165,
            "end": 3191,
            "left": {
              "type": "Literal",
              "start": 3165,
              "end": 3167,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 3170,
              "end": 3191,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3171,
                "end": 3191,
                "value": null,
                "raw": "0x10000000000000000n",
                "regex": null,
                "bigint": "0x10000000000000000"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3195,
            "end": 3200,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3204,
            "end": 3257,
            "value": "The result of (0n < -0x10000000000000000n) is false",
            "raw": "'The result of (0n < -0x10000000000000000n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3262,
      "end": 3375,
      "expression": {
        "type": "CallExpression",
        "start": 3262,
        "end": 3374,
        "callee": {
          "type": "MemberExpression",
          "start": 3262,
          "end": 3278,
          "object": {
            "type": "Identifier",
            "start": 3262,
            "end": 3268,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3269,
            "end": 3278,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3282,
            "end": 3308,
            "left": {
              "type": "UnaryExpression",
              "start": 3282,
              "end": 3303,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3283,
                "end": 3303,
                "value": null,
                "raw": "0x10000000000000000n",
                "regex": null,
                "bigint": "0x10000000000000000"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 3306,
              "end": 3308,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 3312,
            "end": 3316,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3320,
            "end": 3372,
            "value": "The result of (-0x10000000000000000n < 1n) is true",
            "raw": "'The result of (-0x10000000000000000n < 1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3377,
      "end": 3492,
      "expression": {
        "type": "CallExpression",
        "start": 3377,
        "end": 3491,
        "callee": {
          "type": "MemberExpression",
          "start": 3377,
          "end": 3393,
          "object": {
            "type": "Identifier",
            "start": 3377,
            "end": 3383,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3384,
            "end": 3393,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3397,
            "end": 3423,
            "left": {
              "type": "Literal",
              "start": 3397,
              "end": 3399,
              "value": null,
              "raw": "1n",
              "regex": null,
              "bigint": "1"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 3402,
              "end": 3423,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3403,
                "end": 3423,
                "value": null,
                "raw": "0x10000000000000000n",
                "regex": null,
                "bigint": "0x10000000000000000"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3427,
            "end": 3432,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3436,
            "end": 3489,
            "value": "The result of (1n < -0x10000000000000000n) is false",
            "raw": "'The result of (1n < -0x10000000000000000n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3494,
      "end": 3609,
      "expression": {
        "type": "CallExpression",
        "start": 3494,
        "end": 3608,
        "callee": {
          "type": "MemberExpression",
          "start": 3494,
          "end": 3510,
          "object": {
            "type": "Identifier",
            "start": 3494,
            "end": 3500,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3501,
            "end": 3510,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3514,
            "end": 3541,
            "left": {
              "type": "UnaryExpression",
              "start": 3514,
              "end": 3535,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3515,
                "end": 3535,
                "value": null,
                "raw": "0x10000000000000000n",
                "regex": null,
                "bigint": "0x10000000000000000"
              }
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 3538,
              "end": 3541,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3539,
                "end": 3541,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3545,
            "end": 3549,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3553,
            "end": 3606,
            "value": "The result of (-0x10000000000000000n < -1n) is true",
            "raw": "'The result of (-0x10000000000000000n < -1n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3611,
      "end": 3728,
      "expression": {
        "type": "CallExpression",
        "start": 3611,
        "end": 3727,
        "callee": {
          "type": "MemberExpression",
          "start": 3611,
          "end": 3627,
          "object": {
            "type": "Identifier",
            "start": 3611,
            "end": 3617,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3618,
            "end": 3627,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3631,
            "end": 3658,
            "left": {
              "type": "UnaryExpression",
              "start": 3631,
              "end": 3634,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3632,
                "end": 3634,
                "value": null,
                "raw": "1n",
                "regex": null,
                "bigint": "1"
              }
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 3637,
              "end": 3658,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3638,
                "end": 3658,
                "value": null,
                "raw": "0x10000000000000000n",
                "regex": null,
                "bigint": "0x10000000000000000"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3662,
            "end": 3667,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3671,
            "end": 3725,
            "value": "The result of (-1n < -0x10000000000000000n) is false",
            "raw": "'The result of (-1n < -0x10000000000000000n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3730,
      "end": 3843,
      "expression": {
        "type": "CallExpression",
        "start": 3730,
        "end": 3842,
        "callee": {
          "type": "MemberExpression",
          "start": 3730,
          "end": 3746,
          "object": {
            "type": "Identifier",
            "start": 3730,
            "end": 3736,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3737,
            "end": 3746,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3750,
            "end": 3776,
            "left": {
              "type": "UnaryExpression",
              "start": 3750,
              "end": 3771,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3751,
                "end": 3771,
                "value": null,
                "raw": "0x10000000000000001n",
                "regex": null,
                "bigint": "0x10000000000000001"
              }
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 3774,
              "end": 3776,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 3780,
            "end": 3784,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3788,
            "end": 3840,
            "value": "The result of (-0x10000000000000001n < 0n) is true",
            "raw": "'The result of (-0x10000000000000001n < 0n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3845,
      "end": 3960,
      "expression": {
        "type": "CallExpression",
        "start": 3845,
        "end": 3959,
        "callee": {
          "type": "MemberExpression",
          "start": 3845,
          "end": 3861,
          "object": {
            "type": "Identifier",
            "start": 3845,
            "end": 3851,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3852,
            "end": 3861,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3865,
            "end": 3891,
            "left": {
              "type": "Literal",
              "start": 3865,
              "end": 3867,
              "value": null,
              "raw": "0n",
              "regex": null,
              "bigint": "0"
            },
            "operator": "<",
            "right": {
              "type": "UnaryExpression",
              "start": 3870,
              "end": 3891,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3871,
                "end": 3891,
                "value": null,
                "raw": "0x10000000000000001n",
                "regex": null,
                "bigint": "0x10000000000000001"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3895,
            "end": 3900,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 3904,
            "end": 3957,
            "value": "The result of (0n < -0x10000000000000001n) is false",
            "raw": "'The result of (0n < -0x10000000000000001n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3962,
      "end": 4095,
      "expression": {
        "type": "CallExpression",
        "start": 3962,
        "end": 4094,
        "callee": {
          "type": "MemberExpression",
          "start": 3962,
          "end": 3978,
          "object": {
            "type": "Identifier",
            "start": 3962,
            "end": 3968,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3969,
            "end": 3978,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3982,
            "end": 4017,
            "left": {
              "type": "Literal",
              "start": 3982,
              "end": 4002,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 4005,
              "end": 4017,
              "value": null,
              "raw": "0x100000000n",
              "regex": null,
              "bigint": "0x100000000"
            }
          },
          {
            "type": "Literal",
            "start": 4021,
            "end": 4026,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 4030,
            "end": 4092,
            "value": "The result of (0x10000000000000000n < 0x100000000n) is false",
            "raw": "'The result of (0x10000000000000000n < 0x100000000n) is false'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4097,
      "end": 4228,
      "expression": {
        "type": "CallExpression",
        "start": 4097,
        "end": 4227,
        "callee": {
          "type": "MemberExpression",
          "start": 4097,
          "end": 4113,
          "object": {
            "type": "Identifier",
            "start": 4097,
            "end": 4103,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4104,
            "end": 4113,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4117,
            "end": 4152,
            "left": {
              "type": "Literal",
              "start": 4117,
              "end": 4129,
              "value": null,
              "raw": "0x100000000n",
              "regex": null,
              "bigint": "0x100000000"
            },
            "operator": "<",
            "right": {
              "type": "Literal",
              "start": 4132,
              "end": 4152,
              "value": null,
              "raw": "0x10000000000000000n",
              "regex": null,
              "bigint": "0x10000000000000000"
            }
          },
          {
            "type": "Literal",
            "start": 4156,
            "end": 4160,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 4164,
            "end": 4225,
            "value": "The result of (0x100000000n < 0x10000000000000000n) is true",
            "raw": "'The result of (0x100000000n < 0x10000000000000000n) is true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}