{
  "type": "Program",
  "start": 0,
  "end": 2290,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 463,
      "end": 541,
      "expression": {
        "type": "CallExpression",
        "start": 463,
        "end": 540,
        "callee": {
          "type": "MemberExpression",
          "start": 463,
          "end": 476,
          "object": {
            "type": "Identifier",
            "start": 463,
            "end": 469,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 470,
            "end": 476,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 477,
            "end": 486,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 488,
            "end": 512,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 499,
              "end": 512,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 503,
                  "end": 510,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 503,
                    "end": 509,
                    "left": {
                      "type": "Literal",
                      "start": 503,
                      "end": 505,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 508,
                      "end": 509,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 514,
            "end": 539,
            "value": "1n & 1 throws TypeError",
            "raw": "'1n & 1 throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 543,
      "end": 621,
      "expression": {
        "type": "CallExpression",
        "start": 543,
        "end": 620,
        "callee": {
          "type": "MemberExpression",
          "start": 543,
          "end": 556,
          "object": {
            "type": "Identifier",
            "start": 543,
            "end": 549,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 550,
            "end": 556,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 557,
            "end": 566,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 568,
            "end": 592,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 579,
              "end": 592,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 583,
                  "end": 590,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 583,
                    "end": 589,
                    "left": {
                      "type": "Literal",
                      "start": 583,
                      "end": 584,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 587,
                      "end": 589,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 594,
            "end": 619,
            "value": "1 & 1n throws TypeError",
            "raw": "'1 & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 623,
      "end": 717,
      "expression": {
        "type": "CallExpression",
        "start": 623,
        "end": 716,
        "callee": {
          "type": "MemberExpression",
          "start": 623,
          "end": 636,
          "object": {
            "type": "Identifier",
            "start": 623,
            "end": 629,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 630,
            "end": 636,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 637,
            "end": 646,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 648,
            "end": 680,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 659,
              "end": 680,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 663,
                  "end": 678,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 663,
                    "end": 677,
                    "left": {
                      "type": "CallExpression",
                      "start": 663,
                      "end": 673,
                      "callee": {
                        "type": "Identifier",
                        "start": 663,
                        "end": 669,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 670,
                          "end": 672,
                          "value": null,
                          "raw": "1n",
                          "regex": null,
                          "bigint": "1"
                        }
                      ],
                      "optional": false
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 676,
                      "end": 677,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 682,
            "end": 715,
            "value": "Object(1n) & 1 throws TypeError",
            "raw": "'Object(1n) & 1 throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 719,
      "end": 813,
      "expression": {
        "type": "CallExpression",
        "start": 719,
        "end": 812,
        "callee": {
          "type": "MemberExpression",
          "start": 719,
          "end": 732,
          "object": {
            "type": "Identifier",
            "start": 719,
            "end": 725,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 726,
            "end": 732,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 733,
            "end": 742,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 744,
            "end": 776,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 755,
              "end": 776,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 759,
                  "end": 774,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 759,
                    "end": 773,
                    "left": {
                      "type": "Literal",
                      "start": 759,
                      "end": 760,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "&",
                    "right": {
                      "type": "CallExpression",
                      "start": 763,
                      "end": 773,
                      "callee": {
                        "type": "Identifier",
                        "start": 763,
                        "end": 769,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 770,
                          "end": 772,
                          "value": null,
                          "raw": "1n",
                          "regex": null,
                          "bigint": "1"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 778,
            "end": 811,
            "value": "1 & Object(1n) throws TypeError",
            "raw": "'1 & Object(1n) throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 815,
      "end": 909,
      "expression": {
        "type": "CallExpression",
        "start": 815,
        "end": 908,
        "callee": {
          "type": "MemberExpression",
          "start": 815,
          "end": 828,
          "object": {
            "type": "Identifier",
            "start": 815,
            "end": 821,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 822,
            "end": 828,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 829,
            "end": 838,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 840,
            "end": 872,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 851,
              "end": 872,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 855,
                  "end": 870,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 855,
                    "end": 869,
                    "left": {
                      "type": "Literal",
                      "start": 855,
                      "end": 857,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "CallExpression",
                      "start": 860,
                      "end": 869,
                      "callee": {
                        "type": "Identifier",
                        "start": 860,
                        "end": 866,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 867,
                          "end": 868,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 874,
            "end": 907,
            "value": "1n & Object(1) throws TypeError",
            "raw": "'1n & Object(1) throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 911,
      "end": 1005,
      "expression": {
        "type": "CallExpression",
        "start": 911,
        "end": 1004,
        "callee": {
          "type": "MemberExpression",
          "start": 911,
          "end": 924,
          "object": {
            "type": "Identifier",
            "start": 911,
            "end": 917,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 918,
            "end": 924,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 925,
            "end": 934,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 936,
            "end": 968,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 947,
              "end": 968,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 951,
                  "end": 966,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 951,
                    "end": 965,
                    "left": {
                      "type": "CallExpression",
                      "start": 951,
                      "end": 960,
                      "callee": {
                        "type": "Identifier",
                        "start": 951,
                        "end": 957,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 958,
                          "end": 959,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 963,
                      "end": 965,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 970,
            "end": 1003,
            "value": "Object(1) & 1n throws TypeError",
            "raw": "'Object(1) & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1007,
      "end": 1117,
      "expression": {
        "type": "CallExpression",
        "start": 1007,
        "end": 1116,
        "callee": {
          "type": "MemberExpression",
          "start": 1007,
          "end": 1020,
          "object": {
            "type": "Identifier",
            "start": 1007,
            "end": 1013,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1014,
            "end": 1020,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1021,
            "end": 1030,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1032,
            "end": 1072,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1043,
              "end": 1072,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1047,
                  "end": 1070,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1047,
                    "end": 1069,
                    "left": {
                      "type": "CallExpression",
                      "start": 1047,
                      "end": 1057,
                      "callee": {
                        "type": "Identifier",
                        "start": 1047,
                        "end": 1053,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1054,
                          "end": 1056,
                          "value": null,
                          "raw": "1n",
                          "regex": null,
                          "bigint": "1"
                        }
                      ],
                      "optional": false
                    },
                    "operator": "&",
                    "right": {
                      "type": "CallExpression",
                      "start": 1060,
                      "end": 1069,
                      "callee": {
                        "type": "Identifier",
                        "start": 1060,
                        "end": 1066,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1067,
                          "end": 1068,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1074,
            "end": 1115,
            "value": "Object(1n) & Object(1) throws TypeError",
            "raw": "'Object(1n) & Object(1) throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1119,
      "end": 1229,
      "expression": {
        "type": "CallExpression",
        "start": 1119,
        "end": 1228,
        "callee": {
          "type": "MemberExpression",
          "start": 1119,
          "end": 1132,
          "object": {
            "type": "Identifier",
            "start": 1119,
            "end": 1125,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1126,
            "end": 1132,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1133,
            "end": 1142,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1144,
            "end": 1184,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1155,
              "end": 1184,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1159,
                  "end": 1182,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1159,
                    "end": 1181,
                    "left": {
                      "type": "CallExpression",
                      "start": 1159,
                      "end": 1168,
                      "callee": {
                        "type": "Identifier",
                        "start": 1159,
                        "end": 1165,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1166,
                          "end": 1167,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    },
                    "operator": "&",
                    "right": {
                      "type": "CallExpression",
                      "start": 1171,
                      "end": 1181,
                      "callee": {
                        "type": "Identifier",
                        "start": 1171,
                        "end": 1177,
                        "name": "Object"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1178,
                          "end": 1180,
                          "value": null,
                          "raw": "1n",
                          "regex": null,
                          "bigint": "1"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1186,
            "end": 1227,
            "value": "Object(1) & Object(1n) throws TypeError",
            "raw": "'Object(1) & Object(1n) throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1231,
      "end": 1313,
      "expression": {
        "type": "CallExpression",
        "start": 1231,
        "end": 1312,
        "callee": {
          "type": "MemberExpression",
          "start": 1231,
          "end": 1244,
          "object": {
            "type": "Identifier",
            "start": 1231,
            "end": 1237,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1238,
            "end": 1244,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1245,
            "end": 1254,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1256,
            "end": 1282,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1267,
              "end": 1282,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1271,
                  "end": 1280,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1271,
                    "end": 1279,
                    "left": {
                      "type": "Literal",
                      "start": 1271,
                      "end": 1273,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Identifier",
                      "start": 1276,
                      "end": 1279,
                      "name": "NaN"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1284,
            "end": 1311,
            "value": "1n & NaN throws TypeError",
            "raw": "'1n & NaN throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1315,
      "end": 1397,
      "expression": {
        "type": "CallExpression",
        "start": 1315,
        "end": 1396,
        "callee": {
          "type": "MemberExpression",
          "start": 1315,
          "end": 1328,
          "object": {
            "type": "Identifier",
            "start": 1315,
            "end": 1321,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1322,
            "end": 1328,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1329,
            "end": 1338,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1340,
            "end": 1366,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1351,
              "end": 1366,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1355,
                  "end": 1364,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1355,
                    "end": 1363,
                    "left": {
                      "type": "Identifier",
                      "start": 1355,
                      "end": 1358,
                      "name": "NaN"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1361,
                      "end": 1363,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1368,
            "end": 1395,
            "value": "NaN & 1n throws TypeError",
            "raw": "'NaN & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1399,
      "end": 1491,
      "expression": {
        "type": "CallExpression",
        "start": 1399,
        "end": 1490,
        "callee": {
          "type": "MemberExpression",
          "start": 1399,
          "end": 1412,
          "object": {
            "type": "Identifier",
            "start": 1399,
            "end": 1405,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1406,
            "end": 1412,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1413,
            "end": 1422,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1424,
            "end": 1455,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1435,
              "end": 1455,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1439,
                  "end": 1453,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1439,
                    "end": 1452,
                    "left": {
                      "type": "Literal",
                      "start": 1439,
                      "end": 1441,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Identifier",
                      "start": 1444,
                      "end": 1452,
                      "name": "Infinity"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1457,
            "end": 1489,
            "value": "1n & Infinity throws TypeError",
            "raw": "'1n & Infinity throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1493,
      "end": 1585,
      "expression": {
        "type": "CallExpression",
        "start": 1493,
        "end": 1584,
        "callee": {
          "type": "MemberExpression",
          "start": 1493,
          "end": 1506,
          "object": {
            "type": "Identifier",
            "start": 1493,
            "end": 1499,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1500,
            "end": 1506,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1507,
            "end": 1516,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1518,
            "end": 1549,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1529,
              "end": 1549,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1533,
                  "end": 1547,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1533,
                    "end": 1546,
                    "left": {
                      "type": "Identifier",
                      "start": 1533,
                      "end": 1541,
                      "name": "Infinity"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1544,
                      "end": 1546,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1551,
            "end": 1583,
            "value": "Infinity & 1n throws TypeError",
            "raw": "'Infinity & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1587,
      "end": 1671,
      "expression": {
        "type": "CallExpression",
        "start": 1587,
        "end": 1670,
        "callee": {
          "type": "MemberExpression",
          "start": 1587,
          "end": 1600,
          "object": {
            "type": "Identifier",
            "start": 1587,
            "end": 1593,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1594,
            "end": 1600,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1601,
            "end": 1610,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1612,
            "end": 1639,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1623,
              "end": 1639,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1627,
                  "end": 1637,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1627,
                    "end": 1636,
                    "left": {
                      "type": "Literal",
                      "start": 1627,
                      "end": 1629,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1632,
                      "end": 1636,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1641,
            "end": 1669,
            "value": "1n & true throws TypeError",
            "raw": "'1n & true throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1673,
      "end": 1757,
      "expression": {
        "type": "CallExpression",
        "start": 1673,
        "end": 1756,
        "callee": {
          "type": "MemberExpression",
          "start": 1673,
          "end": 1686,
          "object": {
            "type": "Identifier",
            "start": 1673,
            "end": 1679,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1680,
            "end": 1686,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1687,
            "end": 1696,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1698,
            "end": 1725,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1709,
              "end": 1725,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1713,
                  "end": 1723,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1713,
                    "end": 1722,
                    "left": {
                      "type": "Literal",
                      "start": 1713,
                      "end": 1717,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1720,
                      "end": 1722,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1727,
            "end": 1755,
            "value": "true & 1n throws TypeError",
            "raw": "'true & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1759,
      "end": 1841,
      "expression": {
        "type": "CallExpression",
        "start": 1759,
        "end": 1840,
        "callee": {
          "type": "MemberExpression",
          "start": 1759,
          "end": 1772,
          "object": {
            "type": "Identifier",
            "start": 1759,
            "end": 1765,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1766,
            "end": 1772,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1773,
            "end": 1782,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1784,
            "end": 1810,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1795,
              "end": 1810,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1799,
                  "end": 1808,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1799,
                    "end": 1807,
                    "left": {
                      "type": "Literal",
                      "start": 1799,
                      "end": 1801,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1804,
                      "end": 1807,
                      "value": "1",
                      "raw": "'1'",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1812,
            "end": 1839,
            "value": "1n & \"1\" throws TypeError",
            "raw": "'1n & \"1\" throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1843,
      "end": 1925,
      "expression": {
        "type": "CallExpression",
        "start": 1843,
        "end": 1924,
        "callee": {
          "type": "MemberExpression",
          "start": 1843,
          "end": 1856,
          "object": {
            "type": "Identifier",
            "start": 1843,
            "end": 1849,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1850,
            "end": 1856,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1857,
            "end": 1866,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1868,
            "end": 1894,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1879,
              "end": 1894,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1883,
                  "end": 1892,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1883,
                    "end": 1891,
                    "left": {
                      "type": "Literal",
                      "start": 1883,
                      "end": 1886,
                      "value": "1",
                      "raw": "'1'",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1889,
                      "end": 1891,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1896,
            "end": 1923,
            "value": "\"1\" & 1n throws TypeError",
            "raw": "'\"1\" & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1927,
      "end": 2011,
      "expression": {
        "type": "CallExpression",
        "start": 1927,
        "end": 2010,
        "callee": {
          "type": "MemberExpression",
          "start": 1927,
          "end": 1940,
          "object": {
            "type": "Identifier",
            "start": 1927,
            "end": 1933,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1934,
            "end": 1940,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1941,
            "end": 1950,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1952,
            "end": 1979,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1963,
              "end": 1979,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1967,
                  "end": 1977,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 1967,
                    "end": 1976,
                    "left": {
                      "type": "Literal",
                      "start": 1967,
                      "end": 1969,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 1972,
                      "end": 1976,
                      "value": null,
                      "raw": "null",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1981,
            "end": 2009,
            "value": "1n & null throws TypeError",
            "raw": "'1n & null throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2013,
      "end": 2097,
      "expression": {
        "type": "CallExpression",
        "start": 2013,
        "end": 2096,
        "callee": {
          "type": "MemberExpression",
          "start": 2013,
          "end": 2026,
          "object": {
            "type": "Identifier",
            "start": 2013,
            "end": 2019,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2020,
            "end": 2026,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2027,
            "end": 2036,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 2038,
            "end": 2065,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 2049,
              "end": 2065,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2053,
                  "end": 2063,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 2053,
                    "end": 2062,
                    "left": {
                      "type": "Literal",
                      "start": 2053,
                      "end": 2057,
                      "value": null,
                      "raw": "null",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 2060,
                      "end": 2062,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 2067,
            "end": 2095,
            "value": "null & 1n throws TypeError",
            "raw": "'null & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2099,
      "end": 2193,
      "expression": {
        "type": "CallExpression",
        "start": 2099,
        "end": 2192,
        "callee": {
          "type": "MemberExpression",
          "start": 2099,
          "end": 2112,
          "object": {
            "type": "Identifier",
            "start": 2099,
            "end": 2105,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2106,
            "end": 2112,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2113,
            "end": 2122,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 2124,
            "end": 2156,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 2135,
              "end": 2156,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2139,
                  "end": 2154,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 2139,
                    "end": 2153,
                    "left": {
                      "type": "Literal",
                      "start": 2139,
                      "end": 2141,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Identifier",
                      "start": 2144,
                      "end": 2153,
                      "name": "undefined"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 2158,
            "end": 2191,
            "value": "1n & undefined throws TypeError",
            "raw": "'1n & undefined throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2195,
      "end": 2289,
      "expression": {
        "type": "CallExpression",
        "start": 2195,
        "end": 2288,
        "callee": {
          "type": "MemberExpression",
          "start": 2195,
          "end": 2208,
          "object": {
            "type": "Identifier",
            "start": 2195,
            "end": 2201,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2202,
            "end": 2208,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 2209,
            "end": 2218,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 2220,
            "end": 2252,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 2231,
              "end": 2252,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 2235,
                  "end": 2250,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 2235,
                    "end": 2249,
                    "left": {
                      "type": "Identifier",
                      "start": 2235,
                      "end": 2244,
                      "name": "undefined"
                    },
                    "operator": "&",
                    "right": {
                      "type": "Literal",
                      "start": 2247,
                      "end": 2249,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 2254,
            "end": 2287,
            "value": "undefined & 1n throws TypeError",
            "raw": "'undefined & 1n throws TypeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}