{
  "type": "Program",
  "start": 0,
  "end": 2087,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 441,
      "end": 552,
      "expression": {
        "type": "CallExpression",
        "start": 441,
        "end": 551,
        "callee": {
          "type": "MemberExpression",
          "start": 441,
          "end": 457,
          "object": {
            "type": "Identifier",
            "start": 441,
            "end": 447,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 448,
            "end": 457,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 461,
            "end": 484,
            "left": {
              "type": "CallExpression",
              "start": 461,
              "end": 475,
              "callee": {
                "type": "Identifier",
                "start": 461,
                "end": 467,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 468,
                  "end": 474,
                  "value": null,
                  "raw": "0b101n",
                  "regex": null,
                  "bigint": "0b101"
                }
              ],
              "optional": false
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 478,
              "end": 484,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            }
          },
          {
            "type": "Literal",
            "start": 488,
            "end": 494,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 498,
            "end": 549,
            "value": "The result of (Object(0b101n) & 0b011n) is 0b001n",
            "raw": "'The result of (Object(0b101n) & 0b011n) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 554,
      "end": 665,
      "expression": {
        "type": "CallExpression",
        "start": 554,
        "end": 664,
        "callee": {
          "type": "MemberExpression",
          "start": 554,
          "end": 570,
          "object": {
            "type": "Identifier",
            "start": 554,
            "end": 560,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 561,
            "end": 570,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 574,
            "end": 597,
            "left": {
              "type": "Literal",
              "start": 574,
              "end": 580,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            },
            "operator": "&",
            "right": {
              "type": "CallExpression",
              "start": 583,
              "end": 597,
              "callee": {
                "type": "Identifier",
                "start": 583,
                "end": 589,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 590,
                  "end": 596,
                  "value": null,
                  "raw": "0b101n",
                  "regex": null,
                  "bigint": "0b101"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 601,
            "end": 607,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 611,
            "end": 662,
            "value": "The result of (0b011n & Object(0b101n)) is 0b001n",
            "raw": "'The result of (0b011n & Object(0b101n)) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 667,
      "end": 794,
      "expression": {
        "type": "CallExpression",
        "start": 667,
        "end": 793,
        "callee": {
          "type": "MemberExpression",
          "start": 667,
          "end": 683,
          "object": {
            "type": "Identifier",
            "start": 667,
            "end": 673,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 674,
            "end": 683,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 687,
            "end": 718,
            "left": {
              "type": "CallExpression",
              "start": 687,
              "end": 701,
              "callee": {
                "type": "Identifier",
                "start": 687,
                "end": 693,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 694,
                  "end": 700,
                  "value": null,
                  "raw": "0b101n",
                  "regex": null,
                  "bigint": "0b101"
                }
              ],
              "optional": false
            },
            "operator": "&",
            "right": {
              "type": "CallExpression",
              "start": 704,
              "end": 718,
              "callee": {
                "type": "Identifier",
                "start": 704,
                "end": 710,
                "name": "Object"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 711,
                  "end": 717,
                  "value": null,
                  "raw": "0b011n",
                  "regex": null,
                  "bigint": "0b011"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 722,
            "end": 728,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 732,
            "end": 791,
            "value": "The result of (Object(0b101n) & Object(0b011n)) is 0b001n",
            "raw": "'The result of (Object(0b101n) & Object(0b011n)) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "FunctionDeclaration",
      "start": 796,
      "end": 842,
      "id": {
        "type": "Identifier",
        "start": 805,
        "end": 808,
        "name": "err"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 811,
        "end": 842,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 815,
            "end": 840,
            "argument": {
              "type": "NewExpression",
              "start": 821,
              "end": 839,
              "callee": {
                "type": "Identifier",
                "start": 825,
                "end": 837,
                "name": "Test262Error"
              },
              "arguments": []
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 844,
      "end": 1098,
      "expression": {
        "type": "CallExpression",
        "start": 844,
        "end": 1097,
        "callee": {
          "type": "MemberExpression",
          "start": 844,
          "end": 860,
          "object": {
            "type": "Identifier",
            "start": 844,
            "end": 850,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 851,
            "end": 860,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 861,
            "end": 967,
            "left": {
              "type": "ObjectExpression",
              "start": 861,
              "end": 958,
              "properties": [
                {
                  "type": "Property",
                  "start": 865,
                  "end": 922,
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "key": {
                    "type": "MemberExpression",
                    "start": 866,
                    "end": 884,
                    "object": {
                      "type": "Identifier",
                      "start": 866,
                      "end": 872,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 873,
                      "end": 884,
                      "name": "toPrimitive"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 887,
                    "end": 922,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 898,
                      "end": 922,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 904,
                          "end": 918,
                          "argument": {
                            "type": "Literal",
                            "start": 911,
                            "end": 917,
                            "value": null,
                            "raw": "0b101n",
                            "regex": null,
                            "bigint": "0b101"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "start": 927,
                  "end": 939,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 927,
                    "end": 934,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "Identifier",
                    "start": 936,
                    "end": 939,
                    "name": "err"
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "start": 943,
                  "end": 956,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 943,
                    "end": 951,
                    "name": "toString"
                  },
                  "value": {
                    "type": "Identifier",
                    "start": 953,
                    "end": 956,
                    "name": "err"
                  },
                  "kind": "init"
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 961,
              "end": 967,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            }
          },
          {
            "type": "Literal",
            "start": 969,
            "end": 975,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 977,
            "end": 1096,
            "value": "The result of (({[Symbol.toPrimitive]: function() {return 0b101n;}, valueOf: err, toString: err}) & 0b011n) is 0b001n",
            "raw": "'The result of (({[Symbol.toPrimitive]: function() {return 0b101n;}, valueOf: err, toString: err}) & 0b011n) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1100,
      "end": 1352,
      "expression": {
        "type": "CallExpression",
        "start": 1100,
        "end": 1351,
        "callee": {
          "type": "MemberExpression",
          "start": 1100,
          "end": 1116,
          "object": {
            "type": "Identifier",
            "start": 1100,
            "end": 1106,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1107,
            "end": 1116,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1117,
            "end": 1223,
            "left": {
              "type": "Literal",
              "start": 1117,
              "end": 1123,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            },
            "operator": "&",
            "right": {
              "type": "ObjectExpression",
              "start": 1126,
              "end": 1223,
              "properties": [
                {
                  "type": "Property",
                  "start": 1130,
                  "end": 1187,
                  "method": false,
                  "shorthand": false,
                  "computed": true,
                  "key": {
                    "type": "MemberExpression",
                    "start": 1131,
                    "end": 1149,
                    "object": {
                      "type": "Identifier",
                      "start": 1131,
                      "end": 1137,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1138,
                      "end": 1149,
                      "name": "toPrimitive"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1152,
                    "end": 1187,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1163,
                      "end": 1187,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1169,
                          "end": 1183,
                          "argument": {
                            "type": "Literal",
                            "start": 1176,
                            "end": 1182,
                            "value": null,
                            "raw": "0b101n",
                            "regex": null,
                            "bigint": "0b101"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "start": 1192,
                  "end": 1204,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1192,
                    "end": 1199,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "Identifier",
                    "start": 1201,
                    "end": 1204,
                    "name": "err"
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "start": 1208,
                  "end": 1221,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1208,
                    "end": 1216,
                    "name": "toString"
                  },
                  "value": {
                    "type": "Identifier",
                    "start": 1218,
                    "end": 1221,
                    "name": "err"
                  },
                  "kind": "init"
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1225,
            "end": 1231,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 1233,
            "end": 1350,
            "value": "The result of (0b011n & {[Symbol.toPrimitive]: function() {return 0b101n;}, valueOf: err, toString: err}) is 0b001n",
            "raw": "'The result of (0b011n & {[Symbol.toPrimitive]: function() {return 0b101n;}, valueOf: err, toString: err}) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1354,
      "end": 1552,
      "expression": {
        "type": "CallExpression",
        "start": 1354,
        "end": 1551,
        "callee": {
          "type": "MemberExpression",
          "start": 1354,
          "end": 1370,
          "object": {
            "type": "Identifier",
            "start": 1354,
            "end": 1360,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1361,
            "end": 1370,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1371,
            "end": 1448,
            "left": {
              "type": "ObjectExpression",
              "start": 1371,
              "end": 1439,
              "properties": [
                {
                  "type": "Property",
                  "start": 1375,
                  "end": 1419,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1375,
                    "end": 1382,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1384,
                    "end": 1419,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1395,
                      "end": 1419,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1401,
                          "end": 1415,
                          "argument": {
                            "type": "Literal",
                            "start": 1408,
                            "end": 1414,
                            "value": null,
                            "raw": "0b101n",
                            "regex": null,
                            "bigint": "0b101"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "start": 1424,
                  "end": 1437,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1424,
                    "end": 1432,
                    "name": "toString"
                  },
                  "value": {
                    "type": "Identifier",
                    "start": 1434,
                    "end": 1437,
                    "name": "err"
                  },
                  "kind": "init"
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1442,
              "end": 1448,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            }
          },
          {
            "type": "Literal",
            "start": 1450,
            "end": 1456,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 1458,
            "end": 1550,
            "value": "The result of (({valueOf: function() {return 0b101n;}, toString: err}) & 0b011n) is 0b001n",
            "raw": "'The result of (({valueOf: function() {return 0b101n;}, toString: err}) & 0b011n) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1554,
      "end": 1750,
      "expression": {
        "type": "CallExpression",
        "start": 1554,
        "end": 1749,
        "callee": {
          "type": "MemberExpression",
          "start": 1554,
          "end": 1570,
          "object": {
            "type": "Identifier",
            "start": 1554,
            "end": 1560,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1561,
            "end": 1570,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1571,
            "end": 1648,
            "left": {
              "type": "Literal",
              "start": 1571,
              "end": 1577,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            },
            "operator": "&",
            "right": {
              "type": "ObjectExpression",
              "start": 1580,
              "end": 1648,
              "properties": [
                {
                  "type": "Property",
                  "start": 1584,
                  "end": 1628,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1584,
                    "end": 1591,
                    "name": "valueOf"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1593,
                    "end": 1628,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1604,
                      "end": 1628,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1610,
                          "end": 1624,
                          "argument": {
                            "type": "Literal",
                            "start": 1617,
                            "end": 1623,
                            "value": null,
                            "raw": "0b101n",
                            "regex": null,
                            "bigint": "0b101"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "start": 1633,
                  "end": 1646,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1633,
                    "end": 1641,
                    "name": "toString"
                  },
                  "value": {
                    "type": "Identifier",
                    "start": 1643,
                    "end": 1646,
                    "name": "err"
                  },
                  "kind": "init"
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1650,
            "end": 1656,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 1658,
            "end": 1748,
            "value": "The result of (0b011n & {valueOf: function() {return 0b101n;}, toString: err}) is 0b001n",
            "raw": "'The result of (0b011n & {valueOf: function() {return 0b101n;}, toString: err}) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1752,
      "end": 1919,
      "expression": {
        "type": "CallExpression",
        "start": 1752,
        "end": 1918,
        "callee": {
          "type": "MemberExpression",
          "start": 1752,
          "end": 1768,
          "object": {
            "type": "Identifier",
            "start": 1752,
            "end": 1758,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1759,
            "end": 1768,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1769,
            "end": 1829,
            "left": {
              "type": "ObjectExpression",
              "start": 1769,
              "end": 1820,
              "properties": [
                {
                  "type": "Property",
                  "start": 1773,
                  "end": 1818,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1773,
                    "end": 1781,
                    "name": "toString"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1783,
                    "end": 1818,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1794,
                      "end": 1818,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1800,
                          "end": 1814,
                          "argument": {
                            "type": "Literal",
                            "start": 1807,
                            "end": 1813,
                            "value": null,
                            "raw": "0b101n",
                            "regex": null,
                            "bigint": "0b101"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1823,
              "end": 1829,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            }
          },
          {
            "type": "Literal",
            "start": 1831,
            "end": 1837,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 1839,
            "end": 1917,
            "value": "The result of (({toString: function() {return 0b101n;}}) & 0b011n) is 0b001n",
            "raw": "'The result of (({toString: function() {return 0b101n;}}) & 0b011n) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1921,
      "end": 2086,
      "expression": {
        "type": "CallExpression",
        "start": 1921,
        "end": 2085,
        "callee": {
          "type": "MemberExpression",
          "start": 1921,
          "end": 1937,
          "object": {
            "type": "Identifier",
            "start": 1921,
            "end": 1927,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1928,
            "end": 1937,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1938,
            "end": 1998,
            "left": {
              "type": "Literal",
              "start": 1938,
              "end": 1944,
              "value": null,
              "raw": "0b011n",
              "regex": null,
              "bigint": "0b011"
            },
            "operator": "&",
            "right": {
              "type": "ObjectExpression",
              "start": 1947,
              "end": 1998,
              "properties": [
                {
                  "type": "Property",
                  "start": 1951,
                  "end": 1996,
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "key": {
                    "type": "Identifier",
                    "start": 1951,
                    "end": 1959,
                    "name": "toString"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1961,
                    "end": 1996,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1972,
                      "end": 1996,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1978,
                          "end": 1992,
                          "argument": {
                            "type": "Literal",
                            "start": 1985,
                            "end": 1991,
                            "value": null,
                            "raw": "0b101n",
                            "regex": null,
                            "bigint": "0b101"
                          }
                        }
                      ]
                    }
                  },
                  "kind": "init"
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 2000,
            "end": 2006,
            "value": null,
            "raw": "0b001n",
            "regex": null,
            "bigint": "0b001"
          },
          {
            "type": "Literal",
            "start": 2008,
            "end": 2084,
            "value": "The result of (0b011n & {toString: function() {return 0b101n;}}) is 0b001n",
            "raw": "'The result of (0b011n & {toString: function() {return 0b101n;}}) is 0b001n'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}