{
  "type": "Program",
  "start": 0,
  "end": 6297,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 712,
      "end": 778,
      "expression": {
        "type": "CallExpression",
        "start": 712,
        "end": 777,
        "callee": {
          "type": "MemberExpression",
          "start": 712,
          "end": 728,
          "object": {
            "type": "Identifier",
            "start": 712,
            "end": 718,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 719,
            "end": 728,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 729,
            "end": 742,
            "left": {
              "type": "Literal",
              "start": 729,
              "end": 734,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 737,
              "end": 742,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            }
          },
          {
            "type": "Literal",
            "start": 744,
            "end": 749,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 751,
            "end": 776,
            "value": "0b00n & 0b00n === 0b00n",
            "raw": "\"0b00n & 0b00n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 779,
      "end": 845,
      "expression": {
        "type": "CallExpression",
        "start": 779,
        "end": 844,
        "callee": {
          "type": "MemberExpression",
          "start": 779,
          "end": 795,
          "object": {
            "type": "Identifier",
            "start": 779,
            "end": 785,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 786,
            "end": 795,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 796,
            "end": 809,
            "left": {
              "type": "Literal",
              "start": 796,
              "end": 801,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 804,
              "end": 809,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            }
          },
          {
            "type": "Literal",
            "start": 811,
            "end": 816,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 818,
            "end": 843,
            "value": "0b00n & 0b01n === 0b00n",
            "raw": "\"0b00n & 0b01n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 846,
      "end": 912,
      "expression": {
        "type": "CallExpression",
        "start": 846,
        "end": 911,
        "callee": {
          "type": "MemberExpression",
          "start": 846,
          "end": 862,
          "object": {
            "type": "Identifier",
            "start": 846,
            "end": 852,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 853,
            "end": 862,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 863,
            "end": 876,
            "left": {
              "type": "Literal",
              "start": 863,
              "end": 868,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 871,
              "end": 876,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            }
          },
          {
            "type": "Literal",
            "start": 878,
            "end": 883,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 885,
            "end": 910,
            "value": "0b01n & 0b00n === 0b00n",
            "raw": "\"0b01n & 0b00n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 913,
      "end": 979,
      "expression": {
        "type": "CallExpression",
        "start": 913,
        "end": 978,
        "callee": {
          "type": "MemberExpression",
          "start": 913,
          "end": 929,
          "object": {
            "type": "Identifier",
            "start": 913,
            "end": 919,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 920,
            "end": 929,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 930,
            "end": 943,
            "left": {
              "type": "Literal",
              "start": 930,
              "end": 935,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 938,
              "end": 943,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            }
          },
          {
            "type": "Literal",
            "start": 945,
            "end": 950,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 952,
            "end": 977,
            "value": "0b00n & 0b10n === 0b00n",
            "raw": "\"0b00n & 0b10n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 980,
      "end": 1046,
      "expression": {
        "type": "CallExpression",
        "start": 980,
        "end": 1045,
        "callee": {
          "type": "MemberExpression",
          "start": 980,
          "end": 996,
          "object": {
            "type": "Identifier",
            "start": 980,
            "end": 986,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 987,
            "end": 996,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 997,
            "end": 1010,
            "left": {
              "type": "Literal",
              "start": 997,
              "end": 1002,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1005,
              "end": 1010,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            }
          },
          {
            "type": "Literal",
            "start": 1012,
            "end": 1017,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 1019,
            "end": 1044,
            "value": "0b10n & 0b00n === 0b00n",
            "raw": "\"0b10n & 0b00n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1047,
      "end": 1113,
      "expression": {
        "type": "CallExpression",
        "start": 1047,
        "end": 1112,
        "callee": {
          "type": "MemberExpression",
          "start": 1047,
          "end": 1063,
          "object": {
            "type": "Identifier",
            "start": 1047,
            "end": 1053,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1054,
            "end": 1063,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1064,
            "end": 1077,
            "left": {
              "type": "Literal",
              "start": 1064,
              "end": 1069,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1072,
              "end": 1077,
              "value": null,
              "raw": "0b11n",
              "bigint": "0b11"
            }
          },
          {
            "type": "Literal",
            "start": 1079,
            "end": 1084,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 1086,
            "end": 1111,
            "value": "0b00n & 0b11n === 0b00n",
            "raw": "\"0b00n & 0b11n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1114,
      "end": 1180,
      "expression": {
        "type": "CallExpression",
        "start": 1114,
        "end": 1179,
        "callee": {
          "type": "MemberExpression",
          "start": 1114,
          "end": 1130,
          "object": {
            "type": "Identifier",
            "start": 1114,
            "end": 1120,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1121,
            "end": 1130,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1131,
            "end": 1144,
            "left": {
              "type": "Literal",
              "start": 1131,
              "end": 1136,
              "value": null,
              "raw": "0b11n",
              "bigint": "0b11"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1139,
              "end": 1144,
              "value": null,
              "raw": "0b00n",
              "bigint": "0b00"
            }
          },
          {
            "type": "Literal",
            "start": 1146,
            "end": 1151,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 1153,
            "end": 1178,
            "value": "0b11n & 0b00n === 0b00n",
            "raw": "\"0b11n & 0b00n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1181,
      "end": 1247,
      "expression": {
        "type": "CallExpression",
        "start": 1181,
        "end": 1246,
        "callee": {
          "type": "MemberExpression",
          "start": 1181,
          "end": 1197,
          "object": {
            "type": "Identifier",
            "start": 1181,
            "end": 1187,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1188,
            "end": 1197,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1198,
            "end": 1211,
            "left": {
              "type": "Literal",
              "start": 1198,
              "end": 1203,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1206,
              "end": 1211,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            }
          },
          {
            "type": "Literal",
            "start": 1213,
            "end": 1218,
            "value": null,
            "raw": "0b01n",
            "bigint": "0b01"
          },
          {
            "type": "Literal",
            "start": 1220,
            "end": 1245,
            "value": "0b01n & 0b01n === 0b01n",
            "raw": "\"0b01n & 0b01n === 0b01n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1248,
      "end": 1314,
      "expression": {
        "type": "CallExpression",
        "start": 1248,
        "end": 1313,
        "callee": {
          "type": "MemberExpression",
          "start": 1248,
          "end": 1264,
          "object": {
            "type": "Identifier",
            "start": 1248,
            "end": 1254,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1255,
            "end": 1264,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1265,
            "end": 1278,
            "left": {
              "type": "Literal",
              "start": 1265,
              "end": 1270,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1273,
              "end": 1278,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            }
          },
          {
            "type": "Literal",
            "start": 1280,
            "end": 1285,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 1287,
            "end": 1312,
            "value": "0b01n & 0b10n === 0b00n",
            "raw": "\"0b01n & 0b10n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1315,
      "end": 1381,
      "expression": {
        "type": "CallExpression",
        "start": 1315,
        "end": 1380,
        "callee": {
          "type": "MemberExpression",
          "start": 1315,
          "end": 1331,
          "object": {
            "type": "Identifier",
            "start": 1315,
            "end": 1321,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1322,
            "end": 1331,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1332,
            "end": 1345,
            "left": {
              "type": "Literal",
              "start": 1332,
              "end": 1337,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1340,
              "end": 1345,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            }
          },
          {
            "type": "Literal",
            "start": 1347,
            "end": 1352,
            "value": null,
            "raw": "0b00n",
            "bigint": "0b00"
          },
          {
            "type": "Literal",
            "start": 1354,
            "end": 1379,
            "value": "0b10n & 0b01n === 0b00n",
            "raw": "\"0b10n & 0b01n === 0b00n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1382,
      "end": 1448,
      "expression": {
        "type": "CallExpression",
        "start": 1382,
        "end": 1447,
        "callee": {
          "type": "MemberExpression",
          "start": 1382,
          "end": 1398,
          "object": {
            "type": "Identifier",
            "start": 1382,
            "end": 1388,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1389,
            "end": 1398,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1399,
            "end": 1412,
            "left": {
              "type": "Literal",
              "start": 1399,
              "end": 1404,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1407,
              "end": 1412,
              "value": null,
              "raw": "0b11n",
              "bigint": "0b11"
            }
          },
          {
            "type": "Literal",
            "start": 1414,
            "end": 1419,
            "value": null,
            "raw": "0b01n",
            "bigint": "0b01"
          },
          {
            "type": "Literal",
            "start": 1421,
            "end": 1446,
            "value": "0b01n & 0b11n === 0b01n",
            "raw": "\"0b01n & 0b11n === 0b01n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1449,
      "end": 1515,
      "expression": {
        "type": "CallExpression",
        "start": 1449,
        "end": 1514,
        "callee": {
          "type": "MemberExpression",
          "start": 1449,
          "end": 1465,
          "object": {
            "type": "Identifier",
            "start": 1449,
            "end": 1455,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1456,
            "end": 1465,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1466,
            "end": 1479,
            "left": {
              "type": "Literal",
              "start": 1466,
              "end": 1471,
              "value": null,
              "raw": "0b11n",
              "bigint": "0b11"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1474,
              "end": 1479,
              "value": null,
              "raw": "0b01n",
              "bigint": "0b01"
            }
          },
          {
            "type": "Literal",
            "start": 1481,
            "end": 1486,
            "value": null,
            "raw": "0b01n",
            "bigint": "0b01"
          },
          {
            "type": "Literal",
            "start": 1488,
            "end": 1513,
            "value": "0b11n & 0b01n === 0b01n",
            "raw": "\"0b11n & 0b01n === 0b01n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1516,
      "end": 1582,
      "expression": {
        "type": "CallExpression",
        "start": 1516,
        "end": 1581,
        "callee": {
          "type": "MemberExpression",
          "start": 1516,
          "end": 1532,
          "object": {
            "type": "Identifier",
            "start": 1516,
            "end": 1522,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1523,
            "end": 1532,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1533,
            "end": 1546,
            "left": {
              "type": "Literal",
              "start": 1533,
              "end": 1538,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1541,
              "end": 1546,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            }
          },
          {
            "type": "Literal",
            "start": 1548,
            "end": 1553,
            "value": null,
            "raw": "0b10n",
            "bigint": "0b10"
          },
          {
            "type": "Literal",
            "start": 1555,
            "end": 1580,
            "value": "0b10n & 0b10n === 0b10n",
            "raw": "\"0b10n & 0b10n === 0b10n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1583,
      "end": 1649,
      "expression": {
        "type": "CallExpression",
        "start": 1583,
        "end": 1648,
        "callee": {
          "type": "MemberExpression",
          "start": 1583,
          "end": 1599,
          "object": {
            "type": "Identifier",
            "start": 1583,
            "end": 1589,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1590,
            "end": 1599,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1600,
            "end": 1613,
            "left": {
              "type": "Literal",
              "start": 1600,
              "end": 1605,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1608,
              "end": 1613,
              "value": null,
              "raw": "0b11n",
              "bigint": "0b11"
            }
          },
          {
            "type": "Literal",
            "start": 1615,
            "end": 1620,
            "value": null,
            "raw": "0b10n",
            "bigint": "0b10"
          },
          {
            "type": "Literal",
            "start": 1622,
            "end": 1647,
            "value": "0b10n & 0b11n === 0b10n",
            "raw": "\"0b10n & 0b11n === 0b10n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1650,
      "end": 1716,
      "expression": {
        "type": "CallExpression",
        "start": 1650,
        "end": 1715,
        "callee": {
          "type": "MemberExpression",
          "start": 1650,
          "end": 1666,
          "object": {
            "type": "Identifier",
            "start": 1650,
            "end": 1656,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1657,
            "end": 1666,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1667,
            "end": 1680,
            "left": {
              "type": "Literal",
              "start": 1667,
              "end": 1672,
              "value": null,
              "raw": "0b11n",
              "bigint": "0b11"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1675,
              "end": 1680,
              "value": null,
              "raw": "0b10n",
              "bigint": "0b10"
            }
          },
          {
            "type": "Literal",
            "start": 1682,
            "end": 1687,
            "value": null,
            "raw": "0b10n",
            "bigint": "0b10"
          },
          {
            "type": "Literal",
            "start": 1689,
            "end": 1714,
            "value": "0b11n & 0b10n === 0b10n",
            "raw": "\"0b11n & 0b10n === 0b10n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1717,
      "end": 1783,
      "expression": {
        "type": "CallExpression",
        "start": 1717,
        "end": 1782,
        "callee": {
          "type": "MemberExpression",
          "start": 1717,
          "end": 1733,
          "object": {
            "type": "Identifier",
            "start": 1717,
            "end": 1723,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1724,
            "end": 1733,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1734,
            "end": 1750,
            "left": {
              "type": "Literal",
              "start": 1734,
              "end": 1745,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1748,
              "end": 1750,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1752,
            "end": 1754,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 1756,
            "end": 1781,
            "value": "0xffffffffn & 0n === 0n",
            "raw": "\"0xffffffffn & 0n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1784,
      "end": 1850,
      "expression": {
        "type": "CallExpression",
        "start": 1784,
        "end": 1849,
        "callee": {
          "type": "MemberExpression",
          "start": 1784,
          "end": 1800,
          "object": {
            "type": "Identifier",
            "start": 1784,
            "end": 1790,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1791,
            "end": 1800,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1801,
            "end": 1817,
            "left": {
              "type": "Literal",
              "start": 1801,
              "end": 1803,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1806,
              "end": 1817,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 1819,
            "end": 1821,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 1823,
            "end": 1848,
            "value": "0n & 0xffffffffn === 0n",
            "raw": "\"0n & 0xffffffffn === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1851,
      "end": 1953,
      "expression": {
        "type": "CallExpression",
        "start": 1851,
        "end": 1952,
        "callee": {
          "type": "MemberExpression",
          "start": 1851,
          "end": 1867,
          "object": {
            "type": "Identifier",
            "start": 1851,
            "end": 1857,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1858,
            "end": 1867,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1868,
            "end": 1893,
            "left": {
              "type": "Literal",
              "start": 1868,
              "end": 1879,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1882,
              "end": 1893,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 1895,
            "end": 1906,
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "0xffffffff"
          },
          {
            "type": "Literal",
            "start": 1908,
            "end": 1951,
            "value": "0xffffffffn & 0xffffffffn === 0xffffffffn",
            "raw": "\"0xffffffffn & 0xffffffffn === 0xffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1954,
      "end": 2036,
      "expression": {
        "type": "CallExpression",
        "start": 1954,
        "end": 2035,
        "callee": {
          "type": "MemberExpression",
          "start": 1954,
          "end": 1970,
          "object": {
            "type": "Identifier",
            "start": 1954,
            "end": 1960,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1961,
            "end": 1970,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1971,
            "end": 1995,
            "left": {
              "type": "Literal",
              "start": 1971,
              "end": 1990,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1993,
              "end": 1995,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 1997,
            "end": 1999,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 2001,
            "end": 2034,
            "value": "0xffffffffffffffffn & 0n === 0n",
            "raw": "\"0xffffffffffffffffn & 0n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2037,
      "end": 2119,
      "expression": {
        "type": "CallExpression",
        "start": 2037,
        "end": 2118,
        "callee": {
          "type": "MemberExpression",
          "start": 2037,
          "end": 2053,
          "object": {
            "type": "Identifier",
            "start": 2037,
            "end": 2043,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2044,
            "end": 2053,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2054,
            "end": 2078,
            "left": {
              "type": "Literal",
              "start": 2054,
              "end": 2056,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 2059,
              "end": 2078,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 2080,
            "end": 2082,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 2084,
            "end": 2117,
            "value": "0n & 0xffffffffffffffffn === 0n",
            "raw": "\"0n & 0xffffffffffffffffn === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2120,
      "end": 2238,
      "expression": {
        "type": "CallExpression",
        "start": 2120,
        "end": 2237,
        "callee": {
          "type": "MemberExpression",
          "start": 2120,
          "end": 2136,
          "object": {
            "type": "Identifier",
            "start": 2120,
            "end": 2126,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2127,
            "end": 2136,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2137,
            "end": 2170,
            "left": {
              "type": "Literal",
              "start": 2137,
              "end": 2156,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 2159,
              "end": 2170,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 2172,
            "end": 2183,
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "0xffffffff"
          },
          {
            "type": "Literal",
            "start": 2185,
            "end": 2236,
            "value": "0xffffffffffffffffn & 0xffffffffn === 0xffffffffn",
            "raw": "\"0xffffffffffffffffn & 0xffffffffn === 0xffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2239,
      "end": 2357,
      "expression": {
        "type": "CallExpression",
        "start": 2239,
        "end": 2356,
        "callee": {
          "type": "MemberExpression",
          "start": 2239,
          "end": 2255,
          "object": {
            "type": "Identifier",
            "start": 2239,
            "end": 2245,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2246,
            "end": 2255,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2256,
            "end": 2289,
            "left": {
              "type": "Literal",
              "start": 2256,
              "end": 2267,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 2270,
              "end": 2289,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 2291,
            "end": 2302,
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "0xffffffff"
          },
          {
            "type": "Literal",
            "start": 2304,
            "end": 2355,
            "value": "0xffffffffn & 0xffffffffffffffffn === 0xffffffffn",
            "raw": "\"0xffffffffn & 0xffffffffffffffffn === 0xffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2358,
      "end": 2513,
      "expression": {
        "type": "CallExpression",
        "start": 2358,
        "end": 2512,
        "callee": {
          "type": "MemberExpression",
          "start": 2358,
          "end": 2374,
          "object": {
            "type": "Identifier",
            "start": 2358,
            "end": 2364,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2365,
            "end": 2374,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2378,
            "end": 2419,
            "left": {
              "type": "Literal",
              "start": 2378,
              "end": 2397,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 2400,
              "end": 2419,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 2421,
            "end": 2440,
            "value": null,
            "raw": "0xffffffffffffffffn",
            "bigint": "0xffffffffffffffff"
          },
          {
            "type": "Literal",
            "start": 2444,
            "end": 2511,
            "value": "0xffffffffffffffffn & 0xffffffffffffffffn === 0xffffffffffffffffn",
            "raw": "\"0xffffffffffffffffn & 0xffffffffffffffffn === 0xffffffffffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2514,
      "end": 2733,
      "expression": {
        "type": "CallExpression",
        "start": 2514,
        "end": 2732,
        "callee": {
          "type": "MemberExpression",
          "start": 2514,
          "end": 2530,
          "object": {
            "type": "Identifier",
            "start": 2514,
            "end": 2520,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2521,
            "end": 2530,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2534,
            "end": 2599,
            "left": {
              "type": "Literal",
              "start": 2534,
              "end": 2569,
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 2572,
              "end": 2599,
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "0x4aabef2324cedff5387f1f65"
            }
          },
          {
            "type": "Literal",
            "start": 2601,
            "end": 2628,
            "value": null,
            "raw": "0x42092803008e813400181700n",
            "bigint": "0x42092803008e813400181700"
          },
          {
            "type": "Literal",
            "start": 2632,
            "end": 2731,
            "value": "0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x42092803008e813400181700n",
            "raw": "\"0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x42092803008e813400181700n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2734,
      "end": 2953,
      "expression": {
        "type": "CallExpression",
        "start": 2734,
        "end": 2952,
        "callee": {
          "type": "MemberExpression",
          "start": 2734,
          "end": 2750,
          "object": {
            "type": "Identifier",
            "start": 2734,
            "end": 2740,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2741,
            "end": 2750,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2754,
            "end": 2819,
            "left": {
              "type": "Literal",
              "start": 2754,
              "end": 2781,
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "0x4aabef2324cedff5387f1f65"
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 2784,
              "end": 2819,
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
            }
          },
          {
            "type": "Literal",
            "start": 2821,
            "end": 2848,
            "value": null,
            "raw": "0x42092803008e813400181700n",
            "bigint": "0x42092803008e813400181700"
          },
          {
            "type": "Literal",
            "start": 2852,
            "end": 2951,
            "value": "0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0x42092803008e813400181700n",
            "raw": "\"0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0x42092803008e813400181700n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2954,
      "end": 3004,
      "expression": {
        "type": "CallExpression",
        "start": 2954,
        "end": 3003,
        "callee": {
          "type": "MemberExpression",
          "start": 2954,
          "end": 2970,
          "object": {
            "type": "Identifier",
            "start": 2954,
            "end": 2960,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 2961,
            "end": 2970,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 2971,
            "end": 2979,
            "left": {
              "type": "Literal",
              "start": 2971,
              "end": 2973,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 2976,
              "end": 2979,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 2977,
                "end": 2979,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 2981,
            "end": 2983,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 2985,
            "end": 3002,
            "value": "0n & -1n === 0n",
            "raw": "\"0n & -1n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3005,
      "end": 3055,
      "expression": {
        "type": "CallExpression",
        "start": 3005,
        "end": 3054,
        "callee": {
          "type": "MemberExpression",
          "start": 3005,
          "end": 3021,
          "object": {
            "type": "Identifier",
            "start": 3005,
            "end": 3011,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3012,
            "end": 3021,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3022,
            "end": 3030,
            "left": {
              "type": "UnaryExpression",
              "start": 3022,
              "end": 3025,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3023,
                "end": 3025,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 3028,
              "end": 3030,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 3032,
            "end": 3034,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3036,
            "end": 3053,
            "value": "-1n & 0n === 0n",
            "raw": "\"-1n & 0n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3056,
      "end": 3106,
      "expression": {
        "type": "CallExpression",
        "start": 3056,
        "end": 3105,
        "callee": {
          "type": "MemberExpression",
          "start": 3056,
          "end": 3072,
          "object": {
            "type": "Identifier",
            "start": 3056,
            "end": 3062,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3063,
            "end": 3072,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3073,
            "end": 3081,
            "left": {
              "type": "Literal",
              "start": 3073,
              "end": 3075,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3078,
              "end": 3081,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3079,
                "end": 3081,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3083,
            "end": 3085,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3087,
            "end": 3104,
            "value": "0n & -2n === 0n",
            "raw": "\"0n & -2n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3107,
      "end": 3157,
      "expression": {
        "type": "CallExpression",
        "start": 3107,
        "end": 3156,
        "callee": {
          "type": "MemberExpression",
          "start": 3107,
          "end": 3123,
          "object": {
            "type": "Identifier",
            "start": 3107,
            "end": 3113,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3114,
            "end": 3123,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3124,
            "end": 3132,
            "left": {
              "type": "UnaryExpression",
              "start": 3124,
              "end": 3127,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3125,
                "end": 3127,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 3130,
              "end": 3132,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 3134,
            "end": 3136,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3138,
            "end": 3155,
            "value": "-2n & 0n === 0n",
            "raw": "\"-2n & 0n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3158,
      "end": 3208,
      "expression": {
        "type": "CallExpression",
        "start": 3158,
        "end": 3207,
        "callee": {
          "type": "MemberExpression",
          "start": 3158,
          "end": 3174,
          "object": {
            "type": "Identifier",
            "start": 3158,
            "end": 3164,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3165,
            "end": 3174,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3175,
            "end": 3183,
            "left": {
              "type": "Literal",
              "start": 3175,
              "end": 3177,
              "value": null,
              "raw": "1n",
              "bigint": "1"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3180,
              "end": 3183,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3181,
                "end": 3183,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3185,
            "end": 3187,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3189,
            "end": 3206,
            "value": "1n & -2n === 0n",
            "raw": "\"1n & -2n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3209,
      "end": 3259,
      "expression": {
        "type": "CallExpression",
        "start": 3209,
        "end": 3258,
        "callee": {
          "type": "MemberExpression",
          "start": 3209,
          "end": 3225,
          "object": {
            "type": "Identifier",
            "start": 3209,
            "end": 3215,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3216,
            "end": 3225,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3226,
            "end": 3234,
            "left": {
              "type": "UnaryExpression",
              "start": 3226,
              "end": 3229,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3227,
                "end": 3229,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 3232,
              "end": 3234,
              "value": null,
              "raw": "1n",
              "bigint": "1"
            }
          },
          {
            "type": "Literal",
            "start": 3236,
            "end": 3238,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3240,
            "end": 3257,
            "value": "-2n & 1n === 0n",
            "raw": "\"-2n & 1n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3260,
      "end": 3310,
      "expression": {
        "type": "CallExpression",
        "start": 3260,
        "end": 3309,
        "callee": {
          "type": "MemberExpression",
          "start": 3260,
          "end": 3276,
          "object": {
            "type": "Identifier",
            "start": 3260,
            "end": 3266,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3267,
            "end": 3276,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3277,
            "end": 3285,
            "left": {
              "type": "Literal",
              "start": 3277,
              "end": 3279,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3282,
              "end": 3285,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3283,
                "end": 3285,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3287,
            "end": 3289,
            "value": null,
            "raw": "2n",
            "bigint": "2"
          },
          {
            "type": "Literal",
            "start": 3291,
            "end": 3308,
            "value": "2n & -2n === 2n",
            "raw": "\"2n & -2n === 2n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3311,
      "end": 3361,
      "expression": {
        "type": "CallExpression",
        "start": 3311,
        "end": 3360,
        "callee": {
          "type": "MemberExpression",
          "start": 3311,
          "end": 3327,
          "object": {
            "type": "Identifier",
            "start": 3311,
            "end": 3317,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3318,
            "end": 3327,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3328,
            "end": 3336,
            "left": {
              "type": "UnaryExpression",
              "start": 3328,
              "end": 3331,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3329,
                "end": 3331,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 3334,
              "end": 3336,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 3338,
            "end": 3340,
            "value": null,
            "raw": "2n",
            "bigint": "2"
          },
          {
            "type": "Literal",
            "start": 3342,
            "end": 3359,
            "value": "-2n & 2n === 2n",
            "raw": "\"-2n & 2n === 2n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3362,
      "end": 3412,
      "expression": {
        "type": "CallExpression",
        "start": 3362,
        "end": 3411,
        "callee": {
          "type": "MemberExpression",
          "start": 3362,
          "end": 3378,
          "object": {
            "type": "Identifier",
            "start": 3362,
            "end": 3368,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3369,
            "end": 3378,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3379,
            "end": 3387,
            "left": {
              "type": "Literal",
              "start": 3379,
              "end": 3381,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3384,
              "end": 3387,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3385,
                "end": 3387,
                "value": null,
                "raw": "3n",
                "bigint": "3"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3389,
            "end": 3391,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3393,
            "end": 3410,
            "value": "2n & -3n === 0n",
            "raw": "\"2n & -3n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3413,
      "end": 3463,
      "expression": {
        "type": "CallExpression",
        "start": 3413,
        "end": 3462,
        "callee": {
          "type": "MemberExpression",
          "start": 3413,
          "end": 3429,
          "object": {
            "type": "Identifier",
            "start": 3413,
            "end": 3419,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3420,
            "end": 3429,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3430,
            "end": 3438,
            "left": {
              "type": "UnaryExpression",
              "start": 3430,
              "end": 3433,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3431,
                "end": 3433,
                "value": null,
                "raw": "3n",
                "bigint": "3"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 3436,
              "end": 3438,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 3440,
            "end": 3442,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 3444,
            "end": 3461,
            "value": "-3n & 2n === 0n",
            "raw": "\"-3n & 2n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3464,
      "end": 3518,
      "expression": {
        "type": "CallExpression",
        "start": 3464,
        "end": 3517,
        "callee": {
          "type": "MemberExpression",
          "start": 3464,
          "end": 3480,
          "object": {
            "type": "Identifier",
            "start": 3464,
            "end": 3470,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3471,
            "end": 3480,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3481,
            "end": 3490,
            "left": {
              "type": "UnaryExpression",
              "start": 3481,
              "end": 3484,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3482,
                "end": 3484,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3487,
              "end": 3490,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3488,
                "end": 3490,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3492,
            "end": 3495,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3493,
              "end": 3495,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 3497,
            "end": 3516,
            "value": "-1n & -2n === -2n",
            "raw": "\"-1n & -2n === -2n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3519,
      "end": 3573,
      "expression": {
        "type": "CallExpression",
        "start": 3519,
        "end": 3572,
        "callee": {
          "type": "MemberExpression",
          "start": 3519,
          "end": 3535,
          "object": {
            "type": "Identifier",
            "start": 3519,
            "end": 3525,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3526,
            "end": 3535,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3536,
            "end": 3545,
            "left": {
              "type": "UnaryExpression",
              "start": 3536,
              "end": 3539,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3537,
                "end": 3539,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3542,
              "end": 3545,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3543,
                "end": 3545,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3547,
            "end": 3550,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3548,
              "end": 3550,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 3552,
            "end": 3571,
            "value": "-2n & -1n === -2n",
            "raw": "\"-2n & -1n === -2n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3574,
      "end": 3628,
      "expression": {
        "type": "CallExpression",
        "start": 3574,
        "end": 3627,
        "callee": {
          "type": "MemberExpression",
          "start": 3574,
          "end": 3590,
          "object": {
            "type": "Identifier",
            "start": 3574,
            "end": 3580,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3581,
            "end": 3590,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3591,
            "end": 3600,
            "left": {
              "type": "UnaryExpression",
              "start": 3591,
              "end": 3594,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3592,
                "end": 3594,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3597,
              "end": 3600,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3598,
                "end": 3600,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3602,
            "end": 3605,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3603,
              "end": 3605,
              "value": null,
              "raw": "2n",
              "bigint": "2"
            }
          },
          {
            "type": "Literal",
            "start": 3607,
            "end": 3626,
            "value": "-2n & -2n === -2n",
            "raw": "\"-2n & -2n === -2n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3629,
      "end": 3683,
      "expression": {
        "type": "CallExpression",
        "start": 3629,
        "end": 3682,
        "callee": {
          "type": "MemberExpression",
          "start": 3629,
          "end": 3645,
          "object": {
            "type": "Identifier",
            "start": 3629,
            "end": 3635,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3636,
            "end": 3645,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3646,
            "end": 3655,
            "left": {
              "type": "UnaryExpression",
              "start": 3646,
              "end": 3649,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3647,
                "end": 3649,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3652,
              "end": 3655,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3653,
                "end": 3655,
                "value": null,
                "raw": "3n",
                "bigint": "3"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3657,
            "end": 3660,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3658,
              "end": 3660,
              "value": null,
              "raw": "4n",
              "bigint": "4"
            }
          },
          {
            "type": "Literal",
            "start": 3662,
            "end": 3681,
            "value": "-2n & -3n === -4n",
            "raw": "\"-2n & -3n === -4n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3684,
      "end": 3738,
      "expression": {
        "type": "CallExpression",
        "start": 3684,
        "end": 3737,
        "callee": {
          "type": "MemberExpression",
          "start": 3684,
          "end": 3700,
          "object": {
            "type": "Identifier",
            "start": 3684,
            "end": 3690,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3691,
            "end": 3700,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3701,
            "end": 3710,
            "left": {
              "type": "UnaryExpression",
              "start": 3701,
              "end": 3704,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3702,
                "end": 3704,
                "value": null,
                "raw": "3n",
                "bigint": "3"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3707,
              "end": 3710,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3708,
                "end": 3710,
                "value": null,
                "raw": "2n",
                "bigint": "2"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 3712,
            "end": 3715,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3713,
              "end": 3715,
              "value": null,
              "raw": "4n",
              "bigint": "4"
            }
          },
          {
            "type": "Literal",
            "start": 3717,
            "end": 3736,
            "value": "-3n & -2n === -4n",
            "raw": "\"-3n & -2n === -4n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3739,
      "end": 3825,
      "expression": {
        "type": "CallExpression",
        "start": 3739,
        "end": 3824,
        "callee": {
          "type": "MemberExpression",
          "start": 3739,
          "end": 3755,
          "object": {
            "type": "Identifier",
            "start": 3739,
            "end": 3745,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3746,
            "end": 3755,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3756,
            "end": 3773,
            "left": {
              "type": "Literal",
              "start": 3756,
              "end": 3767,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3770,
              "end": 3773,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3771,
                "end": 3773,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3775,
            "end": 3786,
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "0xffffffff"
          },
          {
            "type": "Literal",
            "start": 3788,
            "end": 3823,
            "value": "0xffffffffn & -1n === 0xffffffffn",
            "raw": "\"0xffffffffn & -1n === 0xffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3826,
      "end": 3912,
      "expression": {
        "type": "CallExpression",
        "start": 3826,
        "end": 3911,
        "callee": {
          "type": "MemberExpression",
          "start": 3826,
          "end": 3842,
          "object": {
            "type": "Identifier",
            "start": 3826,
            "end": 3832,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3833,
            "end": 3842,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3843,
            "end": 3860,
            "left": {
              "type": "UnaryExpression",
              "start": 3843,
              "end": 3846,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3844,
                "end": 3846,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 3849,
              "end": 3860,
              "value": null,
              "raw": "0xffffffffn",
              "bigint": "0xffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 3862,
            "end": 3873,
            "value": null,
            "raw": "0xffffffffn",
            "bigint": "0xffffffff"
          },
          {
            "type": "Literal",
            "start": 3875,
            "end": 3910,
            "value": "-1n & 0xffffffffn === 0xffffffffn",
            "raw": "\"-1n & 0xffffffffn === 0xffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 3913,
      "end": 4031,
      "expression": {
        "type": "CallExpression",
        "start": 3913,
        "end": 4030,
        "callee": {
          "type": "MemberExpression",
          "start": 3913,
          "end": 3929,
          "object": {
            "type": "Identifier",
            "start": 3913,
            "end": 3919,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 3920,
            "end": 3929,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 3930,
            "end": 3955,
            "left": {
              "type": "Literal",
              "start": 3930,
              "end": 3949,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 3952,
              "end": 3955,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 3953,
                "end": 3955,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            }
          },
          {
            "type": "Literal",
            "start": 3957,
            "end": 3976,
            "value": null,
            "raw": "0xffffffffffffffffn",
            "bigint": "0xffffffffffffffff"
          },
          {
            "type": "Literal",
            "start": 3978,
            "end": 4029,
            "value": "0xffffffffffffffffn & -1n === 0xffffffffffffffffn",
            "raw": "\"0xffffffffffffffffn & -1n === 0xffffffffffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4032,
      "end": 4150,
      "expression": {
        "type": "CallExpression",
        "start": 4032,
        "end": 4149,
        "callee": {
          "type": "MemberExpression",
          "start": 4032,
          "end": 4048,
          "object": {
            "type": "Identifier",
            "start": 4032,
            "end": 4038,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4039,
            "end": 4048,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4049,
            "end": 4074,
            "left": {
              "type": "UnaryExpression",
              "start": 4049,
              "end": 4052,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 4050,
                "end": 4052,
                "value": null,
                "raw": "1n",
                "bigint": "1"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 4055,
              "end": 4074,
              "value": null,
              "raw": "0xffffffffffffffffn",
              "bigint": "0xffffffffffffffff"
            }
          },
          {
            "type": "Literal",
            "start": 4076,
            "end": 4095,
            "value": null,
            "raw": "0xffffffffffffffffn",
            "bigint": "0xffffffffffffffff"
          },
          {
            "type": "Literal",
            "start": 4097,
            "end": 4148,
            "value": "-1n & 0xffffffffffffffffn === 0xffffffffffffffffn",
            "raw": "\"-1n & 0xffffffffffffffffn === 0xffffffffffffffffn\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4151,
      "end": 4388,
      "expression": {
        "type": "CallExpression",
        "start": 4151,
        "end": 4387,
        "callee": {
          "type": "MemberExpression",
          "start": 4151,
          "end": 4167,
          "object": {
            "type": "Identifier",
            "start": 4151,
            "end": 4157,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4158,
            "end": 4167,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4171,
            "end": 4237,
            "left": {
              "type": "Literal",
              "start": 4171,
              "end": 4206,
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 4209,
              "end": 4237,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 4210,
                "end": 4237,
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "0x4aabef2324cedff5387f1f65"
              }
            }
          },
          {
            "type": "Literal",
            "start": 4239,
            "end": 4274,
            "value": null,
            "raw": "0xbf2ed51fb554100cd330000ac6004080n",
            "bigint": "0xbf2ed51fb554100cd330000ac6004080"
          },
          {
            "type": "Literal",
            "start": 4278,
            "end": 4386,
            "value": "0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === 0xbf2ed51fb554100cd330000ac6004080n",
            "raw": "\"0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === 0xbf2ed51fb554100cd330000ac6004080n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4389,
      "end": 4626,
      "expression": {
        "type": "CallExpression",
        "start": 4389,
        "end": 4625,
        "callee": {
          "type": "MemberExpression",
          "start": 4389,
          "end": 4405,
          "object": {
            "type": "Identifier",
            "start": 4389,
            "end": 4395,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4396,
            "end": 4405,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4409,
            "end": 4475,
            "left": {
              "type": "UnaryExpression",
              "start": 4409,
              "end": 4437,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 4410,
                "end": 4437,
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "0x4aabef2324cedff5387f1f65"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 4440,
              "end": 4475,
              "value": null,
              "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
              "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
            }
          },
          {
            "type": "Literal",
            "start": 4477,
            "end": 4512,
            "value": null,
            "raw": "0xbf2ed51fb554100cd330000ac6004080n",
            "bigint": "0xbf2ed51fb554100cd330000ac6004080"
          },
          {
            "type": "Literal",
            "start": 4516,
            "end": 4624,
            "value": "-0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0xbf2ed51fb554100cd330000ac6004080n",
            "raw": "\"-0x4aabef2324cedff5387f1f65n & 0xbf2ed51ff75d380fd3be813ec6185780n === 0xbf2ed51fb554100cd330000ac6004080n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4627,
      "end": 4846,
      "expression": {
        "type": "CallExpression",
        "start": 4627,
        "end": 4845,
        "callee": {
          "type": "MemberExpression",
          "start": 4627,
          "end": 4643,
          "object": {
            "type": "Identifier",
            "start": 4627,
            "end": 4633,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4634,
            "end": 4643,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4647,
            "end": 4713,
            "left": {
              "type": "UnaryExpression",
              "start": 4647,
              "end": 4683,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 4648,
                "end": 4683,
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 4686,
              "end": 4713,
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "0x4aabef2324cedff5387f1f65"
            }
          },
          {
            "type": "Literal",
            "start": 4715,
            "end": 4741,
            "value": null,
            "raw": "0x8a2c72024405ec138670800n",
            "bigint": "0x8a2c72024405ec138670800"
          },
          {
            "type": "Literal",
            "start": 4745,
            "end": 4844,
            "value": "-0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x8a2c72024405ec138670800n",
            "raw": "\"-0xbf2ed51ff75d380fd3be813ec6185780n & 0x4aabef2324cedff5387f1f65n === 0x8a2c72024405ec138670800n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 4847,
      "end": 5066,
      "expression": {
        "type": "CallExpression",
        "start": 4847,
        "end": 5065,
        "callee": {
          "type": "MemberExpression",
          "start": 4847,
          "end": 4863,
          "object": {
            "type": "Identifier",
            "start": 4847,
            "end": 4853,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 4854,
            "end": 4863,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 4867,
            "end": 4933,
            "left": {
              "type": "Literal",
              "start": 4867,
              "end": 4894,
              "value": null,
              "raw": "0x4aabef2324cedff5387f1f65n",
              "bigint": "0x4aabef2324cedff5387f1f65"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 4897,
              "end": 4933,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 4898,
                "end": 4933,
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
              }
            }
          },
          {
            "type": "Literal",
            "start": 4935,
            "end": 4961,
            "value": null,
            "raw": "0x8a2c72024405ec138670800n",
            "bigint": "0x8a2c72024405ec138670800"
          },
          {
            "type": "Literal",
            "start": 4965,
            "end": 5064,
            "value": "0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === 0x8a2c72024405ec138670800n",
            "raw": "\"0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === 0x8a2c72024405ec138670800n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5067,
      "end": 5308,
      "expression": {
        "type": "CallExpression",
        "start": 5067,
        "end": 5307,
        "callee": {
          "type": "MemberExpression",
          "start": 5067,
          "end": 5083,
          "object": {
            "type": "Identifier",
            "start": 5067,
            "end": 5073,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5074,
            "end": 5083,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5087,
            "end": 5154,
            "left": {
              "type": "UnaryExpression",
              "start": 5087,
              "end": 5123,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5088,
                "end": 5123,
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 5126,
              "end": 5154,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5127,
                "end": 5154,
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "0x4aabef2324cedff5387f1f65"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 5156,
            "end": 5192,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5157,
              "end": 5192,
              "value": null,
              "raw": "0xbf2ed51fffffff2ff7fedffffe7f5f80n",
              "bigint": "0xbf2ed51fffffff2ff7fedffffe7f5f80"
            }
          },
          {
            "type": "Literal",
            "start": 5196,
            "end": 5306,
            "value": "-0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n",
            "raw": "\"-0xbf2ed51ff75d380fd3be813ec6185780n & -0x4aabef2324cedff5387f1f65n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5309,
      "end": 5550,
      "expression": {
        "type": "CallExpression",
        "start": 5309,
        "end": 5549,
        "callee": {
          "type": "MemberExpression",
          "start": 5309,
          "end": 5325,
          "object": {
            "type": "Identifier",
            "start": 5309,
            "end": 5315,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5316,
            "end": 5325,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5329,
            "end": 5396,
            "left": {
              "type": "UnaryExpression",
              "start": 5329,
              "end": 5357,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5330,
                "end": 5357,
                "value": null,
                "raw": "0x4aabef2324cedff5387f1f65n",
                "bigint": "0x4aabef2324cedff5387f1f65"
              }
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 5360,
              "end": 5396,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5361,
                "end": 5396,
                "value": null,
                "raw": "0xbf2ed51ff75d380fd3be813ec6185780n",
                "bigint": "0xbf2ed51ff75d380fd3be813ec6185780"
              }
            }
          },
          {
            "type": "UnaryExpression",
            "start": 5398,
            "end": 5434,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5399,
              "end": 5434,
              "value": null,
              "raw": "0xbf2ed51fffffff2ff7fedffffe7f5f80n",
              "bigint": "0xbf2ed51fffffff2ff7fedffffe7f5f80"
            }
          },
          {
            "type": "Literal",
            "start": 5438,
            "end": 5548,
            "value": "-0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n",
            "raw": "\"-0x4aabef2324cedff5387f1f65n & -0xbf2ed51ff75d380fd3be813ec6185780n === -0xbf2ed51fffffff2ff7fedffffe7f5f80n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5551,
      "end": 5619,
      "expression": {
        "type": "CallExpression",
        "start": 5551,
        "end": 5618,
        "callee": {
          "type": "MemberExpression",
          "start": 5551,
          "end": 5567,
          "object": {
            "type": "Identifier",
            "start": 5551,
            "end": 5557,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5558,
            "end": 5567,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5568,
            "end": 5585,
            "left": {
              "type": "UnaryExpression",
              "start": 5568,
              "end": 5580,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5569,
                "end": 5580,
                "value": null,
                "raw": "0xffffffffn",
                "bigint": "0xffffffff"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 5583,
              "end": 5585,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            }
          },
          {
            "type": "Literal",
            "start": 5587,
            "end": 5589,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 5591,
            "end": 5617,
            "value": "-0xffffffffn & 0n === 0n",
            "raw": "\"-0xffffffffn & 0n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5620,
      "end": 5688,
      "expression": {
        "type": "CallExpression",
        "start": 5620,
        "end": 5687,
        "callee": {
          "type": "MemberExpression",
          "start": 5620,
          "end": 5636,
          "object": {
            "type": "Identifier",
            "start": 5620,
            "end": 5626,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5627,
            "end": 5636,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5637,
            "end": 5654,
            "left": {
              "type": "Literal",
              "start": 5637,
              "end": 5639,
              "value": null,
              "raw": "0n",
              "bigint": "0"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 5642,
              "end": 5654,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5643,
                "end": 5654,
                "value": null,
                "raw": "0xffffffffn",
                "bigint": "0xffffffff"
              }
            }
          },
          {
            "type": "Literal",
            "start": 5656,
            "end": 5658,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 5660,
            "end": 5686,
            "value": "0n & -0xffffffffn === 0n",
            "raw": "\"0n & -0xffffffffn === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5689,
      "end": 5850,
      "expression": {
        "type": "CallExpression",
        "start": 5689,
        "end": 5849,
        "callee": {
          "type": "MemberExpression",
          "start": 5689,
          "end": 5705,
          "object": {
            "type": "Identifier",
            "start": 5689,
            "end": 5695,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5696,
            "end": 5705,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5709,
            "end": 5752,
            "left": {
              "type": "UnaryExpression",
              "start": 5709,
              "end": 5729,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5710,
                "end": 5729,
                "value": null,
                "raw": "0xffffffffffffffffn",
                "bigint": "0xffffffffffffffff"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 5732,
              "end": 5752,
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "0x10000000000000000"
            }
          },
          {
            "type": "Literal",
            "start": 5754,
            "end": 5774,
            "value": null,
            "raw": "0x10000000000000000n",
            "bigint": "0x10000000000000000"
          },
          {
            "type": "Literal",
            "start": 5778,
            "end": 5848,
            "value": "-0xffffffffffffffffn & 0x10000000000000000n === 0x10000000000000000n",
            "raw": "\"-0xffffffffffffffffn & 0x10000000000000000n === 0x10000000000000000n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 5851,
      "end": 6012,
      "expression": {
        "type": "CallExpression",
        "start": 5851,
        "end": 6011,
        "callee": {
          "type": "MemberExpression",
          "start": 5851,
          "end": 5867,
          "object": {
            "type": "Identifier",
            "start": 5851,
            "end": 5857,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 5858,
            "end": 5867,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 5871,
            "end": 5914,
            "left": {
              "type": "Literal",
              "start": 5871,
              "end": 5891,
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "0x10000000000000000"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 5894,
              "end": 5914,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 5895,
                "end": 5914,
                "value": null,
                "raw": "0xffffffffffffffffn",
                "bigint": "0xffffffffffffffff"
              }
            }
          },
          {
            "type": "Literal",
            "start": 5916,
            "end": 5936,
            "value": null,
            "raw": "0x10000000000000000n",
            "bigint": "0x10000000000000000"
          },
          {
            "type": "Literal",
            "start": 5940,
            "end": 6010,
            "value": "0x10000000000000000n & -0xffffffffffffffffn === 0x10000000000000000n",
            "raw": "\"0x10000000000000000n & -0xffffffffffffffffn === 0x10000000000000000n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6013,
      "end": 6154,
      "expression": {
        "type": "CallExpression",
        "start": 6013,
        "end": 6153,
        "callee": {
          "type": "MemberExpression",
          "start": 6013,
          "end": 6029,
          "object": {
            "type": "Identifier",
            "start": 6013,
            "end": 6019,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6020,
            "end": 6029,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6033,
            "end": 6084,
            "left": {
              "type": "UnaryExpression",
              "start": 6033,
              "end": 6061,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 6034,
                "end": 6061,
                "value": null,
                "raw": "0xffffffffffffffffffffffffn",
                "bigint": "0xffffffffffffffffffffffff"
              }
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 6064,
              "end": 6084,
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "0x10000000000000000"
            }
          },
          {
            "type": "Literal",
            "start": 6086,
            "end": 6088,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 6092,
            "end": 6152,
            "value": "-0xffffffffffffffffffffffffn & 0x10000000000000000n === 0n",
            "raw": "\"-0xffffffffffffffffffffffffn & 0x10000000000000000n === 0n\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 6155,
      "end": 6296,
      "expression": {
        "type": "CallExpression",
        "start": 6155,
        "end": 6295,
        "callee": {
          "type": "MemberExpression",
          "start": 6155,
          "end": 6171,
          "object": {
            "type": "Identifier",
            "start": 6155,
            "end": 6161,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 6162,
            "end": 6171,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 6175,
            "end": 6226,
            "left": {
              "type": "Literal",
              "start": 6175,
              "end": 6195,
              "value": null,
              "raw": "0x10000000000000000n",
              "bigint": "0x10000000000000000"
            },
            "operator": "&",
            "right": {
              "type": "UnaryExpression",
              "start": 6198,
              "end": 6226,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 6199,
                "end": 6226,
                "value": null,
                "raw": "0xffffffffffffffffffffffffn",
                "bigint": "0xffffffffffffffffffffffff"
              }
            }
          },
          {
            "type": "Literal",
            "start": 6228,
            "end": 6230,
            "value": null,
            "raw": "0n",
            "bigint": "0"
          },
          {
            "type": "Literal",
            "start": 6234,
            "end": 6294,
            "value": "0x10000000000000000n & -0xffffffffffffffffffffffffn === 0n",
            "raw": "\"0x10000000000000000n & -0xffffffffffffffffffffffffn === 0n\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}