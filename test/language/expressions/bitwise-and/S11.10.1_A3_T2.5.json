{
  "type": "Program",
  "start": 0,
  "end": 1606,
  "body": [
    {
      "type": "IfStatement",
      "start": 373,
      "end": 479,
      "test": {
        "type": "BinaryExpression",
        "start": 377,
        "end": 395,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 377,
          "end": 389,
          "expression": {
            "type": "BinaryExpression",
            "start": 378,
            "end": 388,
            "left": {
              "type": "Literal",
              "start": 378,
              "end": 382,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 385,
              "end": 388,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 394,
          "end": 395,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 397,
        "end": 479,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 401,
            "end": 477,
            "argument": {
              "type": "NewExpression",
              "start": 407,
              "end": 476,
              "callee": {
                "type": "Identifier",
                "start": 411,
                "end": 423,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 424,
                  "end": 475,
                  "left": {
                    "type": "Literal",
                    "start": 424,
                    "end": 458,
                    "value": "#1: (true & \"1\") === 1. Actual: ",
                    "raw": "'#1: (true & \"1\") === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 461,
                    "end": 475,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 462,
                      "end": 474,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 463,
                        "end": 473,
                        "left": {
                          "type": "Literal",
                          "start": 463,
                          "end": 467,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 470,
                          "end": 473,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 491,
      "end": 597,
      "test": {
        "type": "BinaryExpression",
        "start": 495,
        "end": 513,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 495,
          "end": 507,
          "expression": {
            "type": "BinaryExpression",
            "start": 496,
            "end": 506,
            "left": {
              "type": "Literal",
              "start": 496,
              "end": 499,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 502,
              "end": 506,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 512,
          "end": 513,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 515,
        "end": 597,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 519,
            "end": 595,
            "argument": {
              "type": "NewExpression",
              "start": 525,
              "end": 594,
              "callee": {
                "type": "Identifier",
                "start": 529,
                "end": 541,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 542,
                  "end": 593,
                  "left": {
                    "type": "Literal",
                    "start": 542,
                    "end": 576,
                    "value": "#2: (\"1\" & true) === 1. Actual: ",
                    "raw": "'#2: (\"1\" & true) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 579,
                    "end": 593,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 580,
                      "end": 592,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 581,
                        "end": 591,
                        "left": {
                          "type": "Literal",
                          "start": 581,
                          "end": 584,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 587,
                          "end": 591,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 609,
      "end": 754,
      "test": {
        "type": "BinaryExpression",
        "start": 613,
        "end": 644,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 613,
          "end": 638,
          "expression": {
            "type": "BinaryExpression",
            "start": 614,
            "end": 637,
            "left": {
              "type": "NewExpression",
              "start": 614,
              "end": 631,
              "callee": {
                "type": "Identifier",
                "start": 618,
                "end": 625,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 626,
                  "end": 630,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 634,
              "end": 637,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 643,
          "end": 644,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 646,
        "end": 754,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 650,
            "end": 752,
            "argument": {
              "type": "NewExpression",
              "start": 656,
              "end": 751,
              "callee": {
                "type": "Identifier",
                "start": 660,
                "end": 672,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 673,
                  "end": 750,
                  "left": {
                    "type": "Literal",
                    "start": 673,
                    "end": 720,
                    "value": "#3: (new Boolean(true) & \"1\") === 1. Actual: ",
                    "raw": "'#3: (new Boolean(true) & \"1\") === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 723,
                    "end": 750,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 724,
                      "end": 749,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 725,
                        "end": 748,
                        "left": {
                          "type": "NewExpression",
                          "start": 725,
                          "end": 742,
                          "callee": {
                            "type": "Identifier",
                            "start": 729,
                            "end": 736,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 737,
                              "end": 741,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 745,
                          "end": 748,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 766,
      "end": 911,
      "test": {
        "type": "BinaryExpression",
        "start": 770,
        "end": 801,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 770,
          "end": 795,
          "expression": {
            "type": "BinaryExpression",
            "start": 771,
            "end": 794,
            "left": {
              "type": "Literal",
              "start": 771,
              "end": 774,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 777,
              "end": 794,
              "callee": {
                "type": "Identifier",
                "start": 781,
                "end": 788,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 789,
                  "end": 793,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 800,
          "end": 801,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 803,
        "end": 911,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 807,
            "end": 909,
            "argument": {
              "type": "NewExpression",
              "start": 813,
              "end": 908,
              "callee": {
                "type": "Identifier",
                "start": 817,
                "end": 829,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 830,
                  "end": 907,
                  "left": {
                    "type": "Literal",
                    "start": 830,
                    "end": 877,
                    "value": "#4: (\"1\" & new Boolean(true)) === 1. Actual: ",
                    "raw": "'#4: (\"1\" & new Boolean(true)) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 880,
                    "end": 907,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 881,
                      "end": 906,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 882,
                        "end": 905,
                        "left": {
                          "type": "Literal",
                          "start": 882,
                          "end": 885,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 888,
                          "end": 905,
                          "callee": {
                            "type": "Identifier",
                            "start": 892,
                            "end": 899,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 900,
                              "end": 904,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 923,
      "end": 1065,
      "test": {
        "type": "BinaryExpression",
        "start": 927,
        "end": 957,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 927,
          "end": 951,
          "expression": {
            "type": "BinaryExpression",
            "start": 928,
            "end": 950,
            "left": {
              "type": "Literal",
              "start": 928,
              "end": 932,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 935,
              "end": 950,
              "callee": {
                "type": "Identifier",
                "start": 939,
                "end": 945,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 946,
                  "end": 949,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 956,
          "end": 957,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 959,
        "end": 1065,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 963,
            "end": 1063,
            "argument": {
              "type": "NewExpression",
              "start": 969,
              "end": 1062,
              "callee": {
                "type": "Identifier",
                "start": 973,
                "end": 985,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 986,
                  "end": 1061,
                  "left": {
                    "type": "Literal",
                    "start": 986,
                    "end": 1032,
                    "value": "#5: (true & new String(\"1\")) === 1. Actual: ",
                    "raw": "'#5: (true & new String(\"1\")) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1035,
                    "end": 1061,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1036,
                      "end": 1060,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1037,
                        "end": 1059,
                        "left": {
                          "type": "Literal",
                          "start": 1037,
                          "end": 1041,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 1044,
                          "end": 1059,
                          "callee": {
                            "type": "Identifier",
                            "start": 1048,
                            "end": 1054,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1055,
                              "end": 1058,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1077,
      "end": 1219,
      "test": {
        "type": "BinaryExpression",
        "start": 1081,
        "end": 1111,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1081,
          "end": 1105,
          "expression": {
            "type": "BinaryExpression",
            "start": 1082,
            "end": 1104,
            "left": {
              "type": "NewExpression",
              "start": 1082,
              "end": 1097,
              "callee": {
                "type": "Identifier",
                "start": 1086,
                "end": 1092,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1093,
                  "end": 1096,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1100,
              "end": 1104,
              "value": true,
              "raw": "true",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1110,
          "end": 1111,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1113,
        "end": 1219,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1117,
            "end": 1217,
            "argument": {
              "type": "NewExpression",
              "start": 1123,
              "end": 1216,
              "callee": {
                "type": "Identifier",
                "start": 1127,
                "end": 1139,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1140,
                  "end": 1215,
                  "left": {
                    "type": "Literal",
                    "start": 1140,
                    "end": 1186,
                    "value": "#6: (new String(\"1\") & true) === 1. Actual: ",
                    "raw": "'#6: (new String(\"1\") & true) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1189,
                    "end": 1215,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1190,
                      "end": 1214,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1191,
                        "end": 1213,
                        "left": {
                          "type": "NewExpression",
                          "start": 1191,
                          "end": 1206,
                          "callee": {
                            "type": "Identifier",
                            "start": 1195,
                            "end": 1201,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1202,
                              "end": 1205,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 1209,
                          "end": 1213,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1231,
      "end": 1412,
      "test": {
        "type": "BinaryExpression",
        "start": 1235,
        "end": 1278,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1235,
          "end": 1272,
          "expression": {
            "type": "BinaryExpression",
            "start": 1236,
            "end": 1271,
            "left": {
              "type": "NewExpression",
              "start": 1236,
              "end": 1253,
              "callee": {
                "type": "Identifier",
                "start": 1240,
                "end": 1247,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1248,
                  "end": 1252,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 1256,
              "end": 1271,
              "callee": {
                "type": "Identifier",
                "start": 1260,
                "end": 1266,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1267,
                  "end": 1270,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1277,
          "end": 1278,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1280,
        "end": 1412,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1284,
            "end": 1410,
            "argument": {
              "type": "NewExpression",
              "start": 1290,
              "end": 1409,
              "callee": {
                "type": "Identifier",
                "start": 1294,
                "end": 1306,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1307,
                  "end": 1408,
                  "left": {
                    "type": "Literal",
                    "start": 1307,
                    "end": 1366,
                    "value": "#7: (new Boolean(true) & new String(\"1\")) === 1. Actual: ",
                    "raw": "'#7: (new Boolean(true) & new String(\"1\")) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1369,
                    "end": 1408,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1370,
                      "end": 1407,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1371,
                        "end": 1406,
                        "left": {
                          "type": "NewExpression",
                          "start": 1371,
                          "end": 1388,
                          "callee": {
                            "type": "Identifier",
                            "start": 1375,
                            "end": 1382,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1383,
                              "end": 1387,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 1391,
                          "end": 1406,
                          "callee": {
                            "type": "Identifier",
                            "start": 1395,
                            "end": 1401,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1402,
                              "end": 1405,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1424,
      "end": 1605,
      "test": {
        "type": "BinaryExpression",
        "start": 1428,
        "end": 1471,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1428,
          "end": 1465,
          "expression": {
            "type": "BinaryExpression",
            "start": 1429,
            "end": 1464,
            "left": {
              "type": "NewExpression",
              "start": 1429,
              "end": 1444,
              "callee": {
                "type": "Identifier",
                "start": 1433,
                "end": 1439,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1440,
                  "end": 1443,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 1447,
              "end": 1464,
              "callee": {
                "type": "Identifier",
                "start": 1451,
                "end": 1458,
                "name": "Boolean"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1459,
                  "end": 1463,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1470,
          "end": 1471,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1473,
        "end": 1605,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1477,
            "end": 1603,
            "argument": {
              "type": "NewExpression",
              "start": 1483,
              "end": 1602,
              "callee": {
                "type": "Identifier",
                "start": 1487,
                "end": 1499,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1500,
                  "end": 1601,
                  "left": {
                    "type": "Literal",
                    "start": 1500,
                    "end": 1559,
                    "value": "#8: (new String(\"1\") & new Boolean(true)) === 1. Actual: ",
                    "raw": "'#8: (new String(\"1\") & new Boolean(true)) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1562,
                    "end": 1601,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1563,
                      "end": 1600,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1564,
                        "end": 1599,
                        "left": {
                          "type": "NewExpression",
                          "start": 1564,
                          "end": 1579,
                          "callee": {
                            "type": "Identifier",
                            "start": 1568,
                            "end": 1574,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1575,
                              "end": 1578,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 1582,
                          "end": 1599,
                          "callee": {
                            "type": "Identifier",
                            "start": 1586,
                            "end": 1593,
                            "name": "Boolean"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1594,
                              "end": 1598,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}