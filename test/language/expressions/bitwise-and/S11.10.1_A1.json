{
  "type": "Program",
  "start": 0,
  "end": 1655,
  "body": [
    {
      "type": "IfStatement",
      "start": 341,
      "end": 440,
      "test": {
        "type": "BinaryExpression",
        "start": 345,
        "end": 376,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 345,
          "end": 370,
          "expression": {
            "type": "CallExpression",
            "start": 346,
            "end": 369,
            "callee": {
              "type": "Identifier",
              "start": 346,
              "end": 350,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 351,
                "end": 368,
                "value": "1\t&\t1",
                "raw": "\"1\\u0009&\\u00091\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 375,
          "end": 376,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 378,
        "end": 440,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 382,
            "end": 438,
            "argument": {
              "type": "NewExpression",
              "start": 388,
              "end": 437,
              "callee": {
                "type": "Identifier",
                "start": 392,
                "end": 404,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 405,
                  "end": 436,
                  "value": "#1: (1\\u0009&\\u00091) === 1",
                  "raw": "'#1: (1\\\\u0009&\\\\u00091) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 452,
      "end": 553,
      "test": {
        "type": "BinaryExpression",
        "start": 456,
        "end": 487,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 456,
          "end": 481,
          "expression": {
            "type": "CallExpression",
            "start": 457,
            "end": 480,
            "callee": {
              "type": "Identifier",
              "start": 457,
              "end": 461,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 462,
                "end": 479,
                "value": "1\u000b&\u000b1",
                "raw": "\"1\\u000B&\\u000B1\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 486,
          "end": 487,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 489,
        "end": 553,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 493,
            "end": 549,
            "argument": {
              "type": "NewExpression",
              "start": 499,
              "end": 548,
              "callee": {
                "type": "Identifier",
                "start": 503,
                "end": 515,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 516,
                  "end": 547,
                  "value": "#2: (1\\u000B&\\u000B1) === 1",
                  "raw": "'#2: (1\\\\u000B&\\\\u000B1) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 565,
      "end": 664,
      "test": {
        "type": "BinaryExpression",
        "start": 569,
        "end": 600,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 569,
          "end": 594,
          "expression": {
            "type": "CallExpression",
            "start": 570,
            "end": 593,
            "callee": {
              "type": "Identifier",
              "start": 570,
              "end": 574,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 575,
                "end": 592,
                "value": "1\f&\f1",
                "raw": "\"1\\u000C&\\u000C1\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 599,
          "end": 600,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 602,
        "end": 664,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 606,
            "end": 662,
            "argument": {
              "type": "NewExpression",
              "start": 612,
              "end": 661,
              "callee": {
                "type": "Identifier",
                "start": 616,
                "end": 628,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 629,
                  "end": 660,
                  "value": "#3: (1\\u000C&\\u000C1) === 1",
                  "raw": "'#3: (1\\\\u000C&\\\\u000C1) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 676,
      "end": 775,
      "test": {
        "type": "BinaryExpression",
        "start": 680,
        "end": 711,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 680,
          "end": 705,
          "expression": {
            "type": "CallExpression",
            "start": 681,
            "end": 704,
            "callee": {
              "type": "Identifier",
              "start": 681,
              "end": 685,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 686,
                "end": 703,
                "value": "1 & 1",
                "raw": "\"1\\u0020&\\u00201\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 710,
          "end": 711,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 713,
        "end": 775,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 717,
            "end": 773,
            "argument": {
              "type": "NewExpression",
              "start": 723,
              "end": 772,
              "callee": {
                "type": "Identifier",
                "start": 727,
                "end": 739,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 740,
                  "end": 771,
                  "value": "#4: (1\\u0020&\\u00201) === 1",
                  "raw": "'#4: (1\\\\u0020&\\\\u00201) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 787,
      "end": 886,
      "test": {
        "type": "BinaryExpression",
        "start": 791,
        "end": 822,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 791,
          "end": 816,
          "expression": {
            "type": "CallExpression",
            "start": 792,
            "end": 815,
            "callee": {
              "type": "Identifier",
              "start": 792,
              "end": 796,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 797,
                "end": 814,
                "value": "1 & 1",
                "raw": "\"1\\u00A0&\\u00A01\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 821,
          "end": 822,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 824,
        "end": 886,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 828,
            "end": 884,
            "argument": {
              "type": "NewExpression",
              "start": 834,
              "end": 883,
              "callee": {
                "type": "Identifier",
                "start": 838,
                "end": 850,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 851,
                  "end": 882,
                  "value": "#5: (1\\u00A0&\\u00A01) === 1",
                  "raw": "'#5: (1\\\\u00A0&\\\\u00A01) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 898,
      "end": 999,
      "test": {
        "type": "BinaryExpression",
        "start": 902,
        "end": 933,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 902,
          "end": 927,
          "expression": {
            "type": "CallExpression",
            "start": 903,
            "end": 926,
            "callee": {
              "type": "Identifier",
              "start": 903,
              "end": 907,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 908,
                "end": 925,
                "value": "1\n&\n1",
                "raw": "\"1\\u000A&\\u000A1\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 932,
          "end": 933,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 935,
        "end": 999,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 939,
            "end": 995,
            "argument": {
              "type": "NewExpression",
              "start": 945,
              "end": 994,
              "callee": {
                "type": "Identifier",
                "start": 949,
                "end": 961,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 962,
                  "end": 993,
                  "value": "#6: (1\\u000A&\\u000A1) === 1",
                  "raw": "'#6: (1\\\\u000A&\\\\u000A1) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1011,
      "end": 1110,
      "test": {
        "type": "BinaryExpression",
        "start": 1015,
        "end": 1046,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1015,
          "end": 1040,
          "expression": {
            "type": "CallExpression",
            "start": 1016,
            "end": 1039,
            "callee": {
              "type": "Identifier",
              "start": 1016,
              "end": 1020,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1021,
                "end": 1038,
                "value": "1\r&\r1",
                "raw": "\"1\\u000D&\\u000D1\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1045,
          "end": 1046,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1048,
        "end": 1110,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1052,
            "end": 1108,
            "argument": {
              "type": "NewExpression",
              "start": 1058,
              "end": 1107,
              "callee": {
                "type": "Identifier",
                "start": 1062,
                "end": 1074,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1075,
                  "end": 1106,
                  "value": "#7: (1\\u000D&\\u000D1) === 1",
                  "raw": "'#7: (1\\\\u000D&\\\\u000D1) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1122,
      "end": 1221,
      "test": {
        "type": "BinaryExpression",
        "start": 1126,
        "end": 1157,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1126,
          "end": 1151,
          "expression": {
            "type": "CallExpression",
            "start": 1127,
            "end": 1150,
            "callee": {
              "type": "Identifier",
              "start": 1127,
              "end": 1131,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1132,
                "end": 1149,
                "value": "1 & 1",
                "raw": "\"1\\u2028&\\u20281\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1156,
          "end": 1157,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1159,
        "end": 1221,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1163,
            "end": 1219,
            "argument": {
              "type": "NewExpression",
              "start": 1169,
              "end": 1218,
              "callee": {
                "type": "Identifier",
                "start": 1173,
                "end": 1185,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1186,
                  "end": 1217,
                  "value": "#8: (1\\u2028&\\u20281) === 1",
                  "raw": "'#8: (1\\\\u2028&\\\\u20281) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1233,
      "end": 1332,
      "test": {
        "type": "BinaryExpression",
        "start": 1237,
        "end": 1268,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1237,
          "end": 1262,
          "expression": {
            "type": "CallExpression",
            "start": 1238,
            "end": 1261,
            "callee": {
              "type": "Identifier",
              "start": 1238,
              "end": 1242,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1243,
                "end": 1260,
                "value": "1 & 1",
                "raw": "\"1\\u2029&\\u20291\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1267,
          "end": 1268,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1270,
        "end": 1332,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1274,
            "end": 1330,
            "argument": {
              "type": "NewExpression",
              "start": 1280,
              "end": 1329,
              "callee": {
                "type": "Identifier",
                "start": 1284,
                "end": 1296,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1297,
                  "end": 1328,
                  "value": "#9: (1\\u2029&\\u20291) === 1",
                  "raw": "'#9: (1\\\\u2029&\\\\u20291) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1346,
      "end": 1654,
      "test": {
        "type": "BinaryExpression",
        "start": 1350,
        "end": 1477,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1350,
          "end": 1471,
          "expression": {
            "type": "CallExpression",
            "start": 1351,
            "end": 1470,
            "callee": {
              "type": "Identifier",
              "start": 1351,
              "end": 1355,
              "name": "eval"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1356,
                "end": 1469,
                "value": "1\t\u000b\f  \n\r  &\t\u000b\f  \n\r  1",
                "raw": "\"1\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029&\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1476,
          "end": 1477,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1479,
        "end": 1654,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1483,
            "end": 1652,
            "argument": {
              "type": "NewExpression",
              "start": 1489,
              "end": 1651,
              "callee": {
                "type": "Identifier",
                "start": 1493,
                "end": 1505,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1506,
                  "end": 1650,
                  "value": "#10: (1\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029&\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291) === 1",
                  "raw": "'#10: (1\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029&\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20291) === 1'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}