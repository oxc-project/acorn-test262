{
  "type": "Program",
  "start": 0,
  "end": 1751,
  "body": [
    {
      "type": "IfStatement",
      "start": 382,
      "end": 479,
      "test": {
        "type": "BinaryExpression",
        "start": 386,
        "end": 401,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 386,
          "end": 395,
          "expression": {
            "type": "BinaryExpression",
            "start": 387,
            "end": 394,
            "left": {
              "type": "Literal",
              "start": 387,
              "end": 390,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 393,
              "end": 394,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 400,
          "end": 401,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 403,
        "end": 479,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 407,
            "end": 477,
            "argument": {
              "type": "NewExpression",
              "start": 413,
              "end": 476,
              "callee": {
                "type": "Identifier",
                "start": 417,
                "end": 429,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 430,
                  "end": 475,
                  "left": {
                    "type": "Literal",
                    "start": 430,
                    "end": 461,
                    "value": "#1: (\"1\" & 1) === 1. Actual: ",
                    "raw": "'#1: (\"1\" & 1) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 464,
                    "end": 475,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 465,
                      "end": 474,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 466,
                        "end": 473,
                        "left": {
                          "type": "Literal",
                          "start": 466,
                          "end": 469,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 472,
                          "end": 473,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 491,
      "end": 588,
      "test": {
        "type": "BinaryExpression",
        "start": 495,
        "end": 510,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 495,
          "end": 504,
          "expression": {
            "type": "BinaryExpression",
            "start": 496,
            "end": 503,
            "left": {
              "type": "Literal",
              "start": 496,
              "end": 497,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 500,
              "end": 503,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 509,
          "end": 510,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 512,
        "end": 588,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 516,
            "end": 586,
            "argument": {
              "type": "NewExpression",
              "start": 522,
              "end": 585,
              "callee": {
                "type": "Identifier",
                "start": 526,
                "end": 538,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 539,
                  "end": 584,
                  "left": {
                    "type": "Literal",
                    "start": 539,
                    "end": 570,
                    "value": "#2: (1 & \"1\") === 1. Actual: ",
                    "raw": "'#2: (1 & \"1\") === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 573,
                    "end": 584,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 574,
                      "end": 583,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 575,
                        "end": 582,
                        "left": {
                          "type": "Literal",
                          "start": 575,
                          "end": 576,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 579,
                          "end": 582,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 600,
      "end": 733,
      "test": {
        "type": "BinaryExpression",
        "start": 604,
        "end": 631,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 604,
          "end": 625,
          "expression": {
            "type": "BinaryExpression",
            "start": 605,
            "end": 624,
            "left": {
              "type": "NewExpression",
              "start": 605,
              "end": 620,
              "callee": {
                "type": "Identifier",
                "start": 609,
                "end": 615,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 616,
                  "end": 619,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 623,
              "end": 624,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 630,
          "end": 631,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 633,
        "end": 733,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 637,
            "end": 731,
            "argument": {
              "type": "NewExpression",
              "start": 643,
              "end": 730,
              "callee": {
                "type": "Identifier",
                "start": 647,
                "end": 659,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 660,
                  "end": 729,
                  "left": {
                    "type": "Literal",
                    "start": 660,
                    "end": 703,
                    "value": "#3: (new String(\"1\") & 1) === 1. Actual: ",
                    "raw": "'#3: (new String(\"1\") & 1) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 706,
                    "end": 729,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 707,
                      "end": 728,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 708,
                        "end": 727,
                        "left": {
                          "type": "NewExpression",
                          "start": 708,
                          "end": 723,
                          "callee": {
                            "type": "Identifier",
                            "start": 712,
                            "end": 718,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 719,
                              "end": 722,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 726,
                          "end": 727,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 745,
      "end": 878,
      "test": {
        "type": "BinaryExpression",
        "start": 749,
        "end": 776,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 749,
          "end": 770,
          "expression": {
            "type": "BinaryExpression",
            "start": 750,
            "end": 769,
            "left": {
              "type": "Literal",
              "start": 750,
              "end": 751,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 754,
              "end": 769,
              "callee": {
                "type": "Identifier",
                "start": 758,
                "end": 764,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 765,
                  "end": 768,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 775,
          "end": 776,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 778,
        "end": 878,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 782,
            "end": 876,
            "argument": {
              "type": "NewExpression",
              "start": 788,
              "end": 875,
              "callee": {
                "type": "Identifier",
                "start": 792,
                "end": 804,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 805,
                  "end": 874,
                  "left": {
                    "type": "Literal",
                    "start": 805,
                    "end": 848,
                    "value": "#4: (1 & new String(\"1\")) === 1. Actual: ",
                    "raw": "'#4: (1 & new String(\"1\")) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 851,
                    "end": 874,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 852,
                      "end": 873,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 853,
                        "end": 872,
                        "left": {
                          "type": "Literal",
                          "start": 853,
                          "end": 854,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 857,
                          "end": 872,
                          "callee": {
                            "type": "Identifier",
                            "start": 861,
                            "end": 867,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 868,
                              "end": 871,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 890,
      "end": 1023,
      "test": {
        "type": "BinaryExpression",
        "start": 894,
        "end": 921,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 894,
          "end": 915,
          "expression": {
            "type": "BinaryExpression",
            "start": 895,
            "end": 914,
            "left": {
              "type": "Literal",
              "start": 895,
              "end": 898,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 901,
              "end": 914,
              "callee": {
                "type": "Identifier",
                "start": 905,
                "end": 911,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 912,
                  "end": 913,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 920,
          "end": 921,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 923,
        "end": 1023,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 927,
            "end": 1021,
            "argument": {
              "type": "NewExpression",
              "start": 933,
              "end": 1020,
              "callee": {
                "type": "Identifier",
                "start": 937,
                "end": 949,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 950,
                  "end": 1019,
                  "left": {
                    "type": "Literal",
                    "start": 950,
                    "end": 993,
                    "value": "#5: (\"1\" & new Number(1)) === 1. Actual: ",
                    "raw": "'#5: (\"1\" & new Number(1)) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 996,
                    "end": 1019,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 997,
                      "end": 1018,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 998,
                        "end": 1017,
                        "left": {
                          "type": "Literal",
                          "start": 998,
                          "end": 1001,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 1004,
                          "end": 1017,
                          "callee": {
                            "type": "Identifier",
                            "start": 1008,
                            "end": 1014,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1015,
                              "end": 1016,
                              "value": 1,
                              "raw": "1",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1035,
      "end": 1168,
      "test": {
        "type": "BinaryExpression",
        "start": 1039,
        "end": 1066,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1039,
          "end": 1060,
          "expression": {
            "type": "BinaryExpression",
            "start": 1040,
            "end": 1059,
            "left": {
              "type": "NewExpression",
              "start": 1040,
              "end": 1053,
              "callee": {
                "type": "Identifier",
                "start": 1044,
                "end": 1050,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1051,
                  "end": 1052,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1056,
              "end": 1059,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1065,
          "end": 1066,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1068,
        "end": 1168,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1072,
            "end": 1166,
            "argument": {
              "type": "NewExpression",
              "start": 1078,
              "end": 1165,
              "callee": {
                "type": "Identifier",
                "start": 1082,
                "end": 1094,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1095,
                  "end": 1164,
                  "left": {
                    "type": "Literal",
                    "start": 1095,
                    "end": 1138,
                    "value": "#6: (new Number(1) & \"1\") === 1. Actual: ",
                    "raw": "'#6: (new Number(1) & \"1\") === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1141,
                    "end": 1164,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1142,
                      "end": 1163,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1143,
                        "end": 1162,
                        "left": {
                          "type": "NewExpression",
                          "start": 1143,
                          "end": 1156,
                          "callee": {
                            "type": "Identifier",
                            "start": 1147,
                            "end": 1153,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1154,
                              "end": 1155,
                              "value": 1,
                              "raw": "1",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 1159,
                          "end": 1162,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1180,
      "end": 1349,
      "test": {
        "type": "BinaryExpression",
        "start": 1184,
        "end": 1223,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1184,
          "end": 1217,
          "expression": {
            "type": "BinaryExpression",
            "start": 1185,
            "end": 1216,
            "left": {
              "type": "NewExpression",
              "start": 1185,
              "end": 1200,
              "callee": {
                "type": "Identifier",
                "start": 1189,
                "end": 1195,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1196,
                  "end": 1199,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 1203,
              "end": 1216,
              "callee": {
                "type": "Identifier",
                "start": 1207,
                "end": 1213,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1214,
                  "end": 1215,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1222,
          "end": 1223,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1225,
        "end": 1349,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1229,
            "end": 1347,
            "argument": {
              "type": "NewExpression",
              "start": 1235,
              "end": 1346,
              "callee": {
                "type": "Identifier",
                "start": 1239,
                "end": 1251,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1252,
                  "end": 1345,
                  "left": {
                    "type": "Literal",
                    "start": 1252,
                    "end": 1307,
                    "value": "#7: (new String(\"1\") & new Number(1)) === 1. Actual: ",
                    "raw": "'#7: (new String(\"1\") & new Number(1)) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1310,
                    "end": 1345,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1311,
                      "end": 1344,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1312,
                        "end": 1343,
                        "left": {
                          "type": "NewExpression",
                          "start": 1312,
                          "end": 1327,
                          "callee": {
                            "type": "Identifier",
                            "start": 1316,
                            "end": 1322,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1323,
                              "end": 1326,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 1330,
                          "end": 1343,
                          "callee": {
                            "type": "Identifier",
                            "start": 1334,
                            "end": 1340,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1341,
                              "end": 1342,
                              "value": 1,
                              "raw": "1",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1361,
      "end": 1530,
      "test": {
        "type": "BinaryExpression",
        "start": 1365,
        "end": 1404,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1365,
          "end": 1398,
          "expression": {
            "type": "BinaryExpression",
            "start": 1366,
            "end": 1397,
            "left": {
              "type": "NewExpression",
              "start": 1366,
              "end": 1379,
              "callee": {
                "type": "Identifier",
                "start": 1370,
                "end": 1376,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1377,
                  "end": 1378,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "&",
            "right": {
              "type": "NewExpression",
              "start": 1382,
              "end": 1397,
              "callee": {
                "type": "Identifier",
                "start": 1386,
                "end": 1392,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1393,
                  "end": 1396,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1403,
          "end": 1404,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1406,
        "end": 1530,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1410,
            "end": 1528,
            "argument": {
              "type": "NewExpression",
              "start": 1416,
              "end": 1527,
              "callee": {
                "type": "Identifier",
                "start": 1420,
                "end": 1432,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1433,
                  "end": 1526,
                  "left": {
                    "type": "Literal",
                    "start": 1433,
                    "end": 1488,
                    "value": "#8: (new Number(1) & new String(\"1\")) === 1. Actual: ",
                    "raw": "'#8: (new Number(1) & new String(\"1\")) === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1491,
                    "end": 1526,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1492,
                      "end": 1525,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1493,
                        "end": 1524,
                        "left": {
                          "type": "NewExpression",
                          "start": 1493,
                          "end": 1506,
                          "callee": {
                            "type": "Identifier",
                            "start": 1497,
                            "end": 1503,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1504,
                              "end": 1505,
                              "value": 1,
                              "raw": "1",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "&",
                        "right": {
                          "type": "NewExpression",
                          "start": 1509,
                          "end": 1524,
                          "callee": {
                            "type": "Identifier",
                            "start": 1513,
                            "end": 1519,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1520,
                              "end": 1523,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1542,
      "end": 1639,
      "test": {
        "type": "BinaryExpression",
        "start": 1546,
        "end": 1561,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1546,
          "end": 1555,
          "expression": {
            "type": "BinaryExpression",
            "start": 1547,
            "end": 1554,
            "left": {
              "type": "Literal",
              "start": 1547,
              "end": 1550,
              "value": "x",
              "raw": "\"x\"",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1553,
              "end": 1554,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1560,
          "end": 1561,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1563,
        "end": 1639,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1567,
            "end": 1637,
            "argument": {
              "type": "NewExpression",
              "start": 1573,
              "end": 1636,
              "callee": {
                "type": "Identifier",
                "start": 1577,
                "end": 1589,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1590,
                  "end": 1635,
                  "left": {
                    "type": "Literal",
                    "start": 1590,
                    "end": 1621,
                    "value": "#9: (\"x\" & 1) === 0. Actual: ",
                    "raw": "'#9: (\"x\" & 1) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1624,
                    "end": 1635,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1625,
                      "end": 1634,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1626,
                        "end": 1633,
                        "left": {
                          "type": "Literal",
                          "start": 1626,
                          "end": 1629,
                          "value": "x",
                          "raw": "\"x\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 1632,
                          "end": 1633,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1652,
      "end": 1750,
      "test": {
        "type": "BinaryExpression",
        "start": 1656,
        "end": 1671,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1656,
          "end": 1665,
          "expression": {
            "type": "BinaryExpression",
            "start": 1657,
            "end": 1664,
            "left": {
              "type": "Literal",
              "start": 1657,
              "end": 1658,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "&",
            "right": {
              "type": "Literal",
              "start": 1661,
              "end": 1664,
              "value": "x",
              "raw": "\"x\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1670,
          "end": 1671,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1673,
        "end": 1750,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1677,
            "end": 1748,
            "argument": {
              "type": "NewExpression",
              "start": 1683,
              "end": 1747,
              "callee": {
                "type": "Identifier",
                "start": 1687,
                "end": 1699,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1700,
                  "end": 1746,
                  "left": {
                    "type": "Literal",
                    "start": 1700,
                    "end": 1732,
                    "value": "#10: (1 & \"x\") === 0. Actual: ",
                    "raw": "'#10: (1 & \"x\") === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1735,
                    "end": 1746,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1736,
                      "end": 1745,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1737,
                        "end": 1744,
                        "left": {
                          "type": "Literal",
                          "start": 1737,
                          "end": 1738,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "&",
                        "right": {
                          "type": "Literal",
                          "start": 1741,
                          "end": 1744,
                          "value": "x",
                          "raw": "\"x\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}