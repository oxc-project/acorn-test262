{
  "type": "Program",
  "start": 0,
  "end": 1463,
  "body": [
    {
      "type": "IfStatement",
      "start": 351,
      "end": 442,
      "test": {
        "type": "BinaryExpression",
        "start": 355,
        "end": 367,
        "left": {
          "type": "BinaryExpression",
          "start": 355,
          "end": 361,
          "left": {
            "type": "Literal",
            "start": 355,
            "end": 356,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "-",
          "right": {
            "type": "UnaryExpression",
            "start": 359,
            "end": 361,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 360,
              "end": 361,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 366,
          "end": 367,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 370,
        "end": 442,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 376,
            "end": 440,
            "argument": {
              "type": "NewExpression",
              "start": 382,
              "end": 439,
              "callee": {
                "type": "Identifier",
                "start": 386,
                "end": 398,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 399,
                  "end": 438,
                  "left": {
                    "type": "Literal",
                    "start": 399,
                    "end": 427,
                    "value": "#1: 1 - -0 === 1. Actual: ",
                    "raw": "'#1: 1 - -0 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 430,
                    "end": 438,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 431,
                      "end": 437,
                      "left": {
                        "type": "Literal",
                        "start": 431,
                        "end": 432,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "-",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 435,
                        "end": 437,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 436,
                          "end": 437,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 454,
      "end": 542,
      "test": {
        "type": "BinaryExpression",
        "start": 458,
        "end": 469,
        "left": {
          "type": "BinaryExpression",
          "start": 458,
          "end": 463,
          "left": {
            "type": "Literal",
            "start": 458,
            "end": 459,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "-",
          "right": {
            "type": "Literal",
            "start": 462,
            "end": 463,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 468,
          "end": 469,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 472,
        "end": 542,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 478,
            "end": 540,
            "argument": {
              "type": "NewExpression",
              "start": 484,
              "end": 539,
              "callee": {
                "type": "Identifier",
                "start": 488,
                "end": 500,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 501,
                  "end": 538,
                  "left": {
                    "type": "Literal",
                    "start": 501,
                    "end": 528,
                    "value": "#2: 1 - 0 === 1. Actual: ",
                    "raw": "'#2: 1 - 0 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 531,
                    "end": 538,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 532,
                      "end": 537,
                      "left": {
                        "type": "Literal",
                        "start": 532,
                        "end": 533,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "start": 536,
                        "end": 537,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 555,
      "end": 648,
      "test": {
        "type": "BinaryExpression",
        "start": 559,
        "end": 572,
        "left": {
          "type": "BinaryExpression",
          "start": 559,
          "end": 565,
          "left": {
            "type": "UnaryExpression",
            "start": 559,
            "end": 561,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 560,
              "end": 561,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "-",
          "right": {
            "type": "Literal",
            "start": 564,
            "end": 565,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 570,
          "end": 572,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 571,
            "end": 572,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 575,
        "end": 648,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 581,
            "end": 646,
            "argument": {
              "type": "NewExpression",
              "start": 587,
              "end": 645,
              "callee": {
                "type": "Identifier",
                "start": 591,
                "end": 603,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 604,
                  "end": 644,
                  "left": {
                    "type": "Literal",
                    "start": 604,
                    "end": 633,
                    "value": "#3: -0 - 1 === -1. Actual: ",
                    "raw": "'#3: -0 - 1 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 636,
                    "end": 644,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 637,
                      "end": 643,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 637,
                        "end": 639,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 638,
                          "end": 639,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "start": 642,
                        "end": 643,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 660,
      "end": 750,
      "test": {
        "type": "BinaryExpression",
        "start": 664,
        "end": 676,
        "left": {
          "type": "BinaryExpression",
          "start": 664,
          "end": 669,
          "left": {
            "type": "Literal",
            "start": 664,
            "end": 665,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": "-",
          "right": {
            "type": "Literal",
            "start": 668,
            "end": 669,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 674,
          "end": 676,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 675,
            "end": 676,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 679,
        "end": 750,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 685,
            "end": 748,
            "argument": {
              "type": "NewExpression",
              "start": 691,
              "end": 747,
              "callee": {
                "type": "Identifier",
                "start": 695,
                "end": 707,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 708,
                  "end": 746,
                  "left": {
                    "type": "Literal",
                    "start": 708,
                    "end": 736,
                    "value": "#4: 0 - 1 === -1. Actual: ",
                    "raw": "'#4: 0 - 1 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 739,
                    "end": 746,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 740,
                      "end": 745,
                      "left": {
                        "type": "Literal",
                        "start": 740,
                        "end": 741,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "start": 744,
                        "end": 745,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 763,
      "end": 929,
      "test": {
        "type": "BinaryExpression",
        "start": 767,
        "end": 809,
        "left": {
          "type": "BinaryExpression",
          "start": 767,
          "end": 788,
          "left": {
            "type": "MemberExpression",
            "start": 767,
            "end": 783,
            "object": {
              "type": "Identifier",
              "start": 767,
              "end": 773,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 774,
              "end": 783,
              "name": "MAX_VALUE"
            },
            "computed": false,
            "optional": false
          },
          "operator": "-",
          "right": {
            "type": "UnaryExpression",
            "start": 786,
            "end": 788,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 787,
              "end": 788,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 793,
          "end": 809,
          "object": {
            "type": "Identifier",
            "start": 793,
            "end": 799,
            "name": "Number"
          },
          "property": {
            "type": "Identifier",
            "start": 800,
            "end": 809,
            "name": "MAX_VALUE"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 812,
        "end": 929,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 818,
            "end": 927,
            "argument": {
              "type": "NewExpression",
              "start": 824,
              "end": 926,
              "callee": {
                "type": "Identifier",
                "start": 828,
                "end": 840,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 841,
                  "end": 925,
                  "left": {
                    "type": "Literal",
                    "start": 841,
                    "end": 899,
                    "value": "#5: Number.MAX_VALUE - -0 === Number.MAX_VALUE. Actual: ",
                    "raw": "'#5: Number.MAX_VALUE - -0 === Number.MAX_VALUE. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 902,
                    "end": 925,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 903,
                      "end": 924,
                      "left": {
                        "type": "MemberExpression",
                        "start": 903,
                        "end": 919,
                        "object": {
                          "type": "Identifier",
                          "start": 903,
                          "end": 909,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 910,
                          "end": 919,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "-",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 922,
                        "end": 924,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 923,
                          "end": 924,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 941,
      "end": 1104,
      "test": {
        "type": "BinaryExpression",
        "start": 945,
        "end": 986,
        "left": {
          "type": "BinaryExpression",
          "start": 945,
          "end": 965,
          "left": {
            "type": "MemberExpression",
            "start": 945,
            "end": 961,
            "object": {
              "type": "Identifier",
              "start": 945,
              "end": 951,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 952,
              "end": 961,
              "name": "MAX_VALUE"
            },
            "computed": false,
            "optional": false
          },
          "operator": "-",
          "right": {
            "type": "Literal",
            "start": 964,
            "end": 965,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "MemberExpression",
          "start": 970,
          "end": 986,
          "object": {
            "type": "Identifier",
            "start": 970,
            "end": 976,
            "name": "Number"
          },
          "property": {
            "type": "Identifier",
            "start": 977,
            "end": 986,
            "name": "MAX_VALUE"
          },
          "computed": false,
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 989,
        "end": 1104,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 995,
            "end": 1102,
            "argument": {
              "type": "NewExpression",
              "start": 1001,
              "end": 1101,
              "callee": {
                "type": "Identifier",
                "start": 1005,
                "end": 1017,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1018,
                  "end": 1100,
                  "left": {
                    "type": "Literal",
                    "start": 1018,
                    "end": 1075,
                    "value": "#6: Number.MAX_VALUE - 0 === Number.MAX_VALUE. Actual: ",
                    "raw": "'#6: Number.MAX_VALUE - 0 === Number.MAX_VALUE. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1078,
                    "end": 1100,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1079,
                      "end": 1099,
                      "left": {
                        "type": "MemberExpression",
                        "start": 1079,
                        "end": 1095,
                        "object": {
                          "type": "Identifier",
                          "start": 1079,
                          "end": 1085,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1086,
                          "end": 1095,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "start": 1098,
                        "end": 1099,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1117,
      "end": 1285,
      "test": {
        "type": "BinaryExpression",
        "start": 1121,
        "end": 1164,
        "left": {
          "type": "BinaryExpression",
          "start": 1121,
          "end": 1142,
          "left": {
            "type": "UnaryExpression",
            "start": 1121,
            "end": 1123,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1122,
              "end": 1123,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "-",
          "right": {
            "type": "MemberExpression",
            "start": 1126,
            "end": 1142,
            "object": {
              "type": "Identifier",
              "start": 1126,
              "end": 1132,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1133,
              "end": 1142,
              "name": "MIN_VALUE"
            },
            "computed": false,
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1147,
          "end": 1164,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "MemberExpression",
            "start": 1148,
            "end": 1164,
            "object": {
              "type": "Identifier",
              "start": 1148,
              "end": 1154,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1155,
              "end": 1164,
              "name": "MIN_VALUE"
            },
            "computed": false,
            "optional": false
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1167,
        "end": 1285,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1173,
            "end": 1283,
            "argument": {
              "type": "NewExpression",
              "start": 1179,
              "end": 1282,
              "callee": {
                "type": "Identifier",
                "start": 1183,
                "end": 1195,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1196,
                  "end": 1281,
                  "left": {
                    "type": "Literal",
                    "start": 1196,
                    "end": 1255,
                    "value": "#7: -0 - Number.MIN_VALUE === -Number.MIN_VALUE. Actual: ",
                    "raw": "'#7: -0 - Number.MIN_VALUE === -Number.MIN_VALUE. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1258,
                    "end": 1281,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1259,
                      "end": 1280,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1259,
                        "end": 1261,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1260,
                          "end": 1261,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "-",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1264,
                        "end": 1280,
                        "object": {
                          "type": "Identifier",
                          "start": 1264,
                          "end": 1270,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1271,
                          "end": 1280,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1297,
      "end": 1462,
      "test": {
        "type": "BinaryExpression",
        "start": 1301,
        "end": 1343,
        "left": {
          "type": "BinaryExpression",
          "start": 1301,
          "end": 1321,
          "left": {
            "type": "Literal",
            "start": 1301,
            "end": 1302,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": "-",
          "right": {
            "type": "MemberExpression",
            "start": 1305,
            "end": 1321,
            "object": {
              "type": "Identifier",
              "start": 1305,
              "end": 1311,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1312,
              "end": 1321,
              "name": "MIN_VALUE"
            },
            "computed": false,
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1326,
          "end": 1343,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "MemberExpression",
            "start": 1327,
            "end": 1343,
            "object": {
              "type": "Identifier",
              "start": 1327,
              "end": 1333,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1334,
              "end": 1343,
              "name": "MIN_VALUE"
            },
            "computed": false,
            "optional": false
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1346,
        "end": 1462,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1352,
            "end": 1460,
            "argument": {
              "type": "NewExpression",
              "start": 1358,
              "end": 1459,
              "callee": {
                "type": "Identifier",
                "start": 1362,
                "end": 1374,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1375,
                  "end": 1458,
                  "left": {
                    "type": "Literal",
                    "start": 1375,
                    "end": 1433,
                    "value": "#8: 0 - Number.MIN_VALUE === -Number.MIN_VALUE. Actual: ",
                    "raw": "'#8: 0 - Number.MIN_VALUE === -Number.MIN_VALUE. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1436,
                    "end": 1458,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1437,
                      "end": 1457,
                      "left": {
                        "type": "Literal",
                        "start": 1437,
                        "end": 1438,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "-",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1441,
                        "end": 1457,
                        "object": {
                          "type": "Identifier",
                          "start": 1441,
                          "end": 1447,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1448,
                          "end": 1457,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}