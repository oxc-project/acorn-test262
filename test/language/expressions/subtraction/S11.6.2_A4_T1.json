{
  "type": "Program",
  "start": 0,
  "end": 1220,
  "body": [
    {
      "type": "IfStatement",
      "start": 291,
      "end": 411,
      "test": {
        "type": "BinaryExpression",
        "start": 295,
        "end": 325,
        "left": {
          "type": "CallExpression",
          "start": 295,
          "end": 316,
          "callee": {
            "type": "Identifier",
            "start": 295,
            "end": 300,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 301,
              "end": 315,
              "left": {
                "type": "MemberExpression",
                "start": 301,
                "end": 311,
                "object": {
                  "type": "Identifier",
                  "start": 301,
                  "end": 307,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 308,
                  "end": 311,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "-",
              "right": {
                "type": "Literal",
                "start": 314,
                "end": 315,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 321,
          "end": 325,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 328,
        "end": 411,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 332,
            "end": 409,
            "argument": {
              "type": "NewExpression",
              "start": 338,
              "end": 408,
              "callee": {
                "type": "Identifier",
                "start": 342,
                "end": 354,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 355,
                  "end": 407,
                  "left": {
                    "type": "Literal",
                    "start": 355,
                    "end": 395,
                    "value": "#1: NaN - 1 === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN - 1 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 398,
                    "end": 407,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 399,
                      "end": 406,
                      "left": {
                        "type": "Identifier",
                        "start": 399,
                        "end": 402,
                        "name": "NaN"
                      },
                      "operator": "-",
                      "right": {
                        "type": "Literal",
                        "start": 405,
                        "end": 406,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 423,
      "end": 543,
      "test": {
        "type": "BinaryExpression",
        "start": 427,
        "end": 457,
        "left": {
          "type": "CallExpression",
          "start": 427,
          "end": 448,
          "callee": {
            "type": "Identifier",
            "start": 427,
            "end": 432,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 433,
              "end": 447,
              "left": {
                "type": "Literal",
                "start": 433,
                "end": 434,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "start": 437,
                "end": 447,
                "object": {
                  "type": "Identifier",
                  "start": 437,
                  "end": 443,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 444,
                  "end": 447,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 453,
          "end": 457,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 460,
        "end": 543,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 464,
            "end": 541,
            "argument": {
              "type": "NewExpression",
              "start": 470,
              "end": 540,
              "callee": {
                "type": "Identifier",
                "start": 474,
                "end": 486,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 487,
                  "end": 539,
                  "left": {
                    "type": "Literal",
                    "start": 487,
                    "end": 527,
                    "value": "#2: 1 - NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: 1 - NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 530,
                    "end": 539,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 531,
                      "end": 538,
                      "left": {
                        "type": "Literal",
                        "start": 531,
                        "end": 532,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "start": 535,
                        "end": 538,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 555,
      "end": 712,
      "test": {
        "type": "BinaryExpression",
        "start": 559,
        "end": 612,
        "left": {
          "type": "CallExpression",
          "start": 559,
          "end": 603,
          "callee": {
            "type": "Identifier",
            "start": 559,
            "end": 564,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 565,
              "end": 602,
              "left": {
                "type": "MemberExpression",
                "start": 565,
                "end": 575,
                "object": {
                  "type": "Identifier",
                  "start": 565,
                  "end": 571,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 572,
                  "end": 575,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "start": 578,
                "end": 602,
                "object": {
                  "type": "Identifier",
                  "start": 578,
                  "end": 584,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 585,
                  "end": 602,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 608,
          "end": 612,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 615,
        "end": 712,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 619,
            "end": 710,
            "argument": {
              "type": "NewExpression",
              "start": 625,
              "end": 709,
              "callee": {
                "type": "Identifier",
                "start": 629,
                "end": 641,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 642,
                  "end": 708,
                  "left": {
                    "type": "Literal",
                    "start": 642,
                    "end": 689,
                    "value": "#3: NaN - Infinity === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN - Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 692,
                    "end": 708,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 693,
                      "end": 707,
                      "left": {
                        "type": "Identifier",
                        "start": 693,
                        "end": 696,
                        "name": "NaN"
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "start": 699,
                        "end": 707,
                        "name": "Infinity"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 724,
      "end": 881,
      "test": {
        "type": "BinaryExpression",
        "start": 728,
        "end": 781,
        "left": {
          "type": "CallExpression",
          "start": 728,
          "end": 772,
          "callee": {
            "type": "Identifier",
            "start": 728,
            "end": 733,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 734,
              "end": 771,
              "left": {
                "type": "MemberExpression",
                "start": 734,
                "end": 758,
                "object": {
                  "type": "Identifier",
                  "start": 734,
                  "end": 740,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 741,
                  "end": 758,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "start": 761,
                "end": 771,
                "object": {
                  "type": "Identifier",
                  "start": 761,
                  "end": 767,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 768,
                  "end": 771,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 777,
          "end": 781,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 784,
        "end": 881,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 788,
            "end": 879,
            "argument": {
              "type": "NewExpression",
              "start": 794,
              "end": 878,
              "callee": {
                "type": "Identifier",
                "start": 798,
                "end": 810,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 811,
                  "end": 877,
                  "left": {
                    "type": "Literal",
                    "start": 811,
                    "end": 858,
                    "value": "#4: Infinity - NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity - NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 861,
                    "end": 877,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 862,
                      "end": 876,
                      "left": {
                        "type": "Identifier",
                        "start": 862,
                        "end": 870,
                        "name": "Infinity"
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "start": 873,
                        "end": 876,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 893,
      "end": 1050,
      "test": {
        "type": "BinaryExpression",
        "start": 897,
        "end": 950,
        "left": {
          "type": "CallExpression",
          "start": 897,
          "end": 941,
          "callee": {
            "type": "Identifier",
            "start": 897,
            "end": 902,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 903,
              "end": 940,
              "left": {
                "type": "MemberExpression",
                "start": 903,
                "end": 913,
                "object": {
                  "type": "Identifier",
                  "start": 903,
                  "end": 909,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 910,
                  "end": 913,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "start": 916,
                "end": 940,
                "object": {
                  "type": "Identifier",
                  "start": 916,
                  "end": 922,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 923,
                  "end": 940,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 946,
          "end": 950,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 953,
        "end": 1050,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 957,
            "end": 1048,
            "argument": {
              "type": "NewExpression",
              "start": 963,
              "end": 1047,
              "callee": {
                "type": "Identifier",
                "start": 967,
                "end": 979,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 980,
                  "end": 1046,
                  "left": {
                    "type": "Literal",
                    "start": 980,
                    "end": 1027,
                    "value": "#5: NaN - Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN - Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1030,
                    "end": 1046,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1031,
                      "end": 1045,
                      "left": {
                        "type": "Identifier",
                        "start": 1031,
                        "end": 1034,
                        "name": "NaN"
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "start": 1037,
                        "end": 1045,
                        "name": "Infinity"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1062,
      "end": 1219,
      "test": {
        "type": "BinaryExpression",
        "start": 1066,
        "end": 1119,
        "left": {
          "type": "CallExpression",
          "start": 1066,
          "end": 1110,
          "callee": {
            "type": "Identifier",
            "start": 1066,
            "end": 1071,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1072,
              "end": 1109,
              "left": {
                "type": "MemberExpression",
                "start": 1072,
                "end": 1096,
                "object": {
                  "type": "Identifier",
                  "start": 1072,
                  "end": 1078,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1079,
                  "end": 1096,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "-",
              "right": {
                "type": "MemberExpression",
                "start": 1099,
                "end": 1109,
                "object": {
                  "type": "Identifier",
                  "start": 1099,
                  "end": 1105,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1106,
                  "end": 1109,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1115,
          "end": 1119,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1122,
        "end": 1219,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1126,
            "end": 1217,
            "argument": {
              "type": "NewExpression",
              "start": 1132,
              "end": 1216,
              "callee": {
                "type": "Identifier",
                "start": 1136,
                "end": 1148,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1149,
                  "end": 1215,
                  "left": {
                    "type": "Literal",
                    "start": 1149,
                    "end": 1196,
                    "value": "#6: Infinity - NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Infinity - NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1199,
                    "end": 1215,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1200,
                      "end": 1214,
                      "left": {
                        "type": "Identifier",
                        "start": 1200,
                        "end": 1208,
                        "name": "Infinity"
                      },
                      "operator": "-",
                      "right": {
                        "type": "Identifier",
                        "start": 1211,
                        "end": 1214,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}