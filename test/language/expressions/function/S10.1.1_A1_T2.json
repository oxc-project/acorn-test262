{
  "type": "Program",
  "start": 0,
  "end": 961,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 453,
      "end": 486,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 457,
          "end": 485,
          "id": {
            "type": "Identifier",
            "start": 457,
            "end": 458,
            "name": "x"
          },
          "init": {
            "type": "CallExpression",
            "start": 459,
            "end": 485,
            "callee": {
              "type": "FunctionExpression",
              "start": 459,
              "end": 483,
              "id": {
                "type": "Identifier",
                "start": 468,
                "end": 470,
                "name": "f1"
              },
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 472,
                "end": 483,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 473,
                    "end": 482,
                    "argument": {
                      "type": "Literal",
                      "start": 480,
                      "end": 481,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 487,
      "end": 594,
      "test": {
        "type": "BinaryExpression",
        "start": 490,
        "end": 495,
        "left": {
          "type": "Identifier",
          "start": 490,
          "end": 491,
          "name": "x"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 494,
          "end": 495,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "ThrowStatement",
        "start": 499,
        "end": 594,
        "argument": {
          "type": "NewExpression",
          "start": 505,
          "end": 593,
          "callee": {
            "type": "Identifier",
            "start": 509,
            "end": 521,
            "name": "Test262Error"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 522,
              "end": 592,
              "value": "#1: Create function dynamically either by using a FunctionExpression",
              "raw": "'#1: Create function dynamically either by using a FunctionExpression'",
              "regex": null,
              "bigint": null
            }
          ]
        }
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 606,
      "end": 638,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 610,
          "end": 637,
          "id": {
            "type": "Identifier",
            "start": 610,
            "end": 611,
            "name": "y"
          },
          "init": {
            "type": "CallExpression",
            "start": 612,
            "end": 637,
            "callee": {
              "type": "FunctionExpression",
              "start": 612,
              "end": 635,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 624,
                "end": 635,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 625,
                    "end": 634,
                    "argument": {
                      "type": "Literal",
                      "start": 632,
                      "end": 633,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 639,
      "end": 762,
      "test": {
        "type": "BinaryExpression",
        "start": 642,
        "end": 647,
        "left": {
          "type": "Identifier",
          "start": 642,
          "end": 643,
          "name": "y"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 646,
          "end": 647,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 648,
        "end": 762,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 652,
            "end": 760,
            "argument": {
              "type": "NewExpression",
              "start": 658,
              "end": 759,
              "callee": {
                "type": "Identifier",
                "start": 662,
                "end": 674,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 675,
                  "end": 758,
                  "value": "#2: Create an anonymous function dynamically either by using a FunctionExpression",
                  "raw": "'#2: Create an anonymous function dynamically either by using a FunctionExpression'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 774,
      "end": 808,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 778,
          "end": 807,
          "id": {
            "type": "Identifier",
            "start": 778,
            "end": 779,
            "name": "z"
          },
          "init": {
            "type": "CallExpression",
            "start": 782,
            "end": 807,
            "callee": {
              "type": "ParenthesizedExpression",
              "start": 782,
              "end": 805,
              "expression": {
                "type": "FunctionExpression",
                "start": 783,
                "end": 804,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 793,
                  "end": 804,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 794,
                      "end": 803,
                      "argument": {
                        "type": "Literal",
                        "start": 801,
                        "end": 802,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ]
                }
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 809,
      "end": 960,
      "test": {
        "type": "BinaryExpression",
        "start": 812,
        "end": 817,
        "left": {
          "type": "Identifier",
          "start": 812,
          "end": 813,
          "name": "z"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 816,
          "end": 817,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 818,
        "end": 960,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 822,
            "end": 958,
            "argument": {
              "type": "NewExpression",
              "start": 828,
              "end": 957,
              "callee": {
                "type": "Identifier",
                "start": 832,
                "end": 844,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 845,
                  "end": 956,
                  "value": "#3: Create an anonymous function dynamically either by using a FunctionExpression wrapped in a group operator",
                  "raw": "'#3: Create an anonymous function dynamically either by using a FunctionExpression wrapped in a group operator'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}