{
  "type": "Program",
  "start": 0,
  "end": 683,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 277,
      "end": 289,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 281,
          "end": 288,
          "id": {
            "type": "Identifier",
            "start": 281,
            "end": 282,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 285,
            "end": 288,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 290,
      "end": 390,
      "test": {
        "type": "BinaryExpression",
        "start": 294,
        "end": 307,
        "left": {
          "type": "UpdateExpression",
          "start": 294,
          "end": 297,
          "operator": "++",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 296,
            "end": 297,
            "name": "x"
          }
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 302,
          "end": 307,
          "left": {
            "type": "Literal",
            "start": 302,
            "end": 303,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 306,
            "end": 307,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 309,
        "end": 390,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 313,
            "end": 388,
            "argument": {
              "type": "NewExpression",
              "start": 319,
              "end": 387,
              "callee": {
                "type": "Identifier",
                "start": 323,
                "end": 335,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 336,
                  "end": 386,
                  "left": {
                    "type": "Literal",
                    "start": 336,
                    "end": 378,
                    "value": "#1: var x = \"1\"; ++x === 1 + 1. Actual: ",
                    "raw": "'#1: var x = \"1\"; ++x === 1 + 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 381,
                    "end": 386,
                    "expression": {
                      "type": "UpdateExpression",
                      "start": 382,
                      "end": 385,
                      "operator": "++",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 384,
                        "end": 385,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 402,
      "end": 414,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 406,
          "end": 413,
          "id": {
            "type": "Identifier",
            "start": 406,
            "end": 407,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 410,
            "end": 413,
            "value": "x",
            "raw": "\"x\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 416,
      "end": 529,
      "test": {
        "type": "BinaryExpression",
        "start": 420,
        "end": 439,
        "left": {
          "type": "CallExpression",
          "start": 420,
          "end": 430,
          "callee": {
            "type": "Identifier",
            "start": 420,
            "end": 425,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UpdateExpression",
              "start": 426,
              "end": 429,
              "operator": "++",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 428,
                "end": 429,
                "name": "x"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 435,
          "end": 439,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 441,
        "end": 529,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 445,
            "end": 527,
            "argument": {
              "type": "NewExpression",
              "start": 451,
              "end": 526,
              "callee": {
                "type": "Identifier",
                "start": 455,
                "end": 467,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 468,
                  "end": 525,
                  "left": {
                    "type": "Literal",
                    "start": 468,
                    "end": 517,
                    "value": "#2: var x = \"x\"; ++x === Not-a-Number. Actual: ",
                    "raw": "'#2: var x = \"x\"; ++x === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 520,
                    "end": 525,
                    "expression": {
                      "type": "UpdateExpression",
                      "start": 521,
                      "end": 524,
                      "operator": "++",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 523,
                        "end": 524,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 541,
      "end": 566,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 545,
          "end": 565,
          "id": {
            "type": "Identifier",
            "start": 545,
            "end": 546,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 549,
            "end": 565,
            "callee": {
              "type": "Identifier",
              "start": 553,
              "end": 559,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 560,
                "end": 564,
                "value": "-1",
                "raw": "\"-1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 567,
      "end": 682,
      "test": {
        "type": "BinaryExpression",
        "start": 571,
        "end": 585,
        "left": {
          "type": "UpdateExpression",
          "start": 571,
          "end": 574,
          "operator": "++",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 573,
            "end": 574,
            "name": "x"
          }
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 579,
          "end": 585,
          "left": {
            "type": "UnaryExpression",
            "start": 579,
            "end": 581,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 580,
              "end": 581,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 584,
            "end": 585,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 587,
        "end": 682,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 591,
            "end": 680,
            "argument": {
              "type": "NewExpression",
              "start": 597,
              "end": 679,
              "callee": {
                "type": "Identifier",
                "start": 601,
                "end": 613,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 614,
                  "end": 678,
                  "left": {
                    "type": "Literal",
                    "start": 614,
                    "end": 670,
                    "value": "#3: var x = new String(\"-1\"); ++x === -1 + 1. Actual: ",
                    "raw": "'#3: var x = new String(\"-1\"); ++x === -1 + 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 673,
                    "end": 678,
                    "expression": {
                      "type": "UpdateExpression",
                      "start": 674,
                      "end": 677,
                      "operator": "++",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 676,
                        "end": 677,
                        "name": "x"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}