{
  "type": "Program",
  "start": 0,
  "end": 1129,
  "body": [
    {
      "type": "IfStatement",
      "start": 306,
      "end": 409,
      "test": {
        "type": "BinaryExpression",
        "start": 310,
        "end": 327,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 310,
          "end": 321,
          "expression": {
            "type": "BinaryExpression",
            "start": 311,
            "end": 320,
            "left": {
              "type": "Literal",
              "start": 311,
              "end": 314,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 317,
              "end": 320,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 326,
          "end": 327,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 329,
        "end": 409,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 333,
            "end": 407,
            "argument": {
              "type": "NewExpression",
              "start": 339,
              "end": 406,
              "callee": {
                "type": "Identifier",
                "start": 343,
                "end": 355,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 356,
                  "end": 405,
                  "left": {
                    "type": "Literal",
                    "start": 356,
                    "end": 389,
                    "value": "#1: (\"1\" ^ \"1\") === 0. Actual: ",
                    "raw": "'#1: (\"1\" ^ \"1\") === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 392,
                    "end": 405,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 393,
                      "end": 404,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 394,
                        "end": 403,
                        "left": {
                          "type": "Literal",
                          "start": 394,
                          "end": 397,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 400,
                          "end": 403,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 421,
      "end": 560,
      "test": {
        "type": "BinaryExpression",
        "start": 425,
        "end": 454,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 425,
          "end": 448,
          "expression": {
            "type": "BinaryExpression",
            "start": 426,
            "end": 447,
            "left": {
              "type": "NewExpression",
              "start": 426,
              "end": 441,
              "callee": {
                "type": "Identifier",
                "start": 430,
                "end": 436,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 437,
                  "end": 440,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 444,
              "end": 447,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 453,
          "end": 454,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 456,
        "end": 560,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 460,
            "end": 558,
            "argument": {
              "type": "NewExpression",
              "start": 466,
              "end": 557,
              "callee": {
                "type": "Identifier",
                "start": 470,
                "end": 482,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 483,
                  "end": 556,
                  "left": {
                    "type": "Literal",
                    "start": 483,
                    "end": 528,
                    "value": "#2: (new String(\"1\") ^ \"1\") === 0. Actual: ",
                    "raw": "'#2: (new String(\"1\") ^ \"1\") === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 531,
                    "end": 556,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 532,
                      "end": 555,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 533,
                        "end": 554,
                        "left": {
                          "type": "NewExpression",
                          "start": 533,
                          "end": 548,
                          "callee": {
                            "type": "Identifier",
                            "start": 537,
                            "end": 543,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 544,
                              "end": 547,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 551,
                          "end": 554,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 572,
      "end": 711,
      "test": {
        "type": "BinaryExpression",
        "start": 576,
        "end": 605,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 576,
          "end": 599,
          "expression": {
            "type": "BinaryExpression",
            "start": 577,
            "end": 598,
            "left": {
              "type": "Literal",
              "start": 577,
              "end": 580,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "start": 583,
              "end": 598,
              "callee": {
                "type": "Identifier",
                "start": 587,
                "end": 593,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 594,
                  "end": 597,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 604,
          "end": 605,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 607,
        "end": 711,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 611,
            "end": 709,
            "argument": {
              "type": "NewExpression",
              "start": 617,
              "end": 708,
              "callee": {
                "type": "Identifier",
                "start": 621,
                "end": 633,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 634,
                  "end": 707,
                  "left": {
                    "type": "Literal",
                    "start": 634,
                    "end": 679,
                    "value": "#3: (\"1\" ^ new String(\"1\")) === 0. Actual: ",
                    "raw": "'#3: (\"1\" ^ new String(\"1\")) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 682,
                    "end": 707,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 683,
                      "end": 706,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 684,
                        "end": 705,
                        "left": {
                          "type": "Literal",
                          "start": 684,
                          "end": 687,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "start": 690,
                          "end": 705,
                          "callee": {
                            "type": "Identifier",
                            "start": 694,
                            "end": 700,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 701,
                              "end": 704,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 723,
      "end": 898,
      "test": {
        "type": "BinaryExpression",
        "start": 727,
        "end": 768,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 727,
          "end": 762,
          "expression": {
            "type": "BinaryExpression",
            "start": 728,
            "end": 761,
            "left": {
              "type": "NewExpression",
              "start": 728,
              "end": 743,
              "callee": {
                "type": "Identifier",
                "start": 732,
                "end": 738,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 739,
                  "end": 742,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            },
            "operator": "^",
            "right": {
              "type": "NewExpression",
              "start": 746,
              "end": 761,
              "callee": {
                "type": "Identifier",
                "start": 750,
                "end": 756,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 757,
                  "end": 760,
                  "value": "1",
                  "raw": "\"1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 767,
          "end": 768,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 770,
        "end": 898,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 774,
            "end": 896,
            "argument": {
              "type": "NewExpression",
              "start": 780,
              "end": 895,
              "callee": {
                "type": "Identifier",
                "start": 784,
                "end": 796,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 797,
                  "end": 894,
                  "left": {
                    "type": "Literal",
                    "start": 797,
                    "end": 854,
                    "value": "#4: (new String(\"1\") ^ new String(\"1\")) === 0. Actual: ",
                    "raw": "'#4: (new String(\"1\") ^ new String(\"1\")) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 857,
                    "end": 894,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 858,
                      "end": 893,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 859,
                        "end": 892,
                        "left": {
                          "type": "NewExpression",
                          "start": 859,
                          "end": 874,
                          "callee": {
                            "type": "Identifier",
                            "start": 863,
                            "end": 869,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 870,
                              "end": 873,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        "operator": "^",
                        "right": {
                          "type": "NewExpression",
                          "start": 877,
                          "end": 892,
                          "callee": {
                            "type": "Identifier",
                            "start": 881,
                            "end": 887,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 888,
                              "end": 891,
                              "value": "1",
                              "raw": "\"1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 910,
      "end": 1013,
      "test": {
        "type": "BinaryExpression",
        "start": 914,
        "end": 931,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 914,
          "end": 925,
          "expression": {
            "type": "BinaryExpression",
            "start": 915,
            "end": 924,
            "left": {
              "type": "Literal",
              "start": 915,
              "end": 918,
              "value": "x",
              "raw": "\"x\"",
              "regex": null,
              "bigint": null
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 921,
              "end": 924,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 930,
          "end": 931,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 933,
        "end": 1013,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 937,
            "end": 1011,
            "argument": {
              "type": "NewExpression",
              "start": 943,
              "end": 1010,
              "callee": {
                "type": "Identifier",
                "start": 947,
                "end": 959,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 960,
                  "end": 1009,
                  "left": {
                    "type": "Literal",
                    "start": 960,
                    "end": 993,
                    "value": "#5: (\"x\" ^ \"1\") === 1. Actual: ",
                    "raw": "'#5: (\"x\" ^ \"1\") === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 996,
                    "end": 1009,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 997,
                      "end": 1008,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 998,
                        "end": 1007,
                        "left": {
                          "type": "Literal",
                          "start": 998,
                          "end": 1001,
                          "value": "x",
                          "raw": "\"x\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 1004,
                          "end": 1007,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1025,
      "end": 1128,
      "test": {
        "type": "BinaryExpression",
        "start": 1029,
        "end": 1046,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1029,
          "end": 1040,
          "expression": {
            "type": "BinaryExpression",
            "start": 1030,
            "end": 1039,
            "left": {
              "type": "Literal",
              "start": 1030,
              "end": 1033,
              "value": "1",
              "raw": "\"1\"",
              "regex": null,
              "bigint": null
            },
            "operator": "^",
            "right": {
              "type": "Literal",
              "start": 1036,
              "end": 1039,
              "value": "x",
              "raw": "\"x\"",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1045,
          "end": 1046,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1048,
        "end": 1128,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1052,
            "end": 1126,
            "argument": {
              "type": "NewExpression",
              "start": 1058,
              "end": 1125,
              "callee": {
                "type": "Identifier",
                "start": 1062,
                "end": 1074,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1075,
                  "end": 1124,
                  "left": {
                    "type": "Literal",
                    "start": 1075,
                    "end": 1108,
                    "value": "#6: (\"1\" ^ \"x\") === 1. Actual: ",
                    "raw": "'#6: (\"1\" ^ \"x\") === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1111,
                    "end": 1124,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1112,
                      "end": 1123,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1113,
                        "end": 1122,
                        "left": {
                          "type": "Literal",
                          "start": 1113,
                          "end": 1116,
                          "value": "1",
                          "raw": "\"1\"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "^",
                        "right": {
                          "type": "Literal",
                          "start": 1119,
                          "end": 1122,
                          "value": "x",
                          "raw": "\"x\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}