{
  "type": "Program",
  "start": 0,
  "end": 1167,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1065,
      "end": 1166,
      "expression": {
        "type": "CallExpression",
        "start": 1065,
        "end": 1165,
        "callee": {
          "type": "MemberExpression",
          "start": 1065,
          "end": 1078,
          "object": {
            "type": "Identifier",
            "start": 1065,
            "end": 1071,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1072,
            "end": 1078,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1079,
            "end": 1093,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1095,
            "end": 1164,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1106,
              "end": 1164,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1110,
                  "end": 1162,
                  "expression": {
                    "type": "NewExpression",
                    "start": 1110,
                    "end": 1161,
                    "callee": {
                      "type": "FunctionExpression",
                      "start": 1114,
                      "end": 1127,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 1125,
                        "end": 1127,
                        "body": []
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "start": 1128,
                        "end": 1160,
                        "properties": [
                          {
                            "type": "Property",
                            "start": 1129,
                            "end": 1133,
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "key": {
                              "type": "Identifier",
                              "start": 1129,
                              "end": 1130,
                              "name": "a"
                            },
                            "value": {
                              "type": "Literal",
                              "start": 1132,
                              "end": 1133,
                              "value": 0,
                              "raw": "0",
                              "regex": null,
                              "bigint": null
                            },
                            "kind": "init"
                          },
                          {
                            "type": "SpreadElement",
                            "start": 1135,
                            "end": 1159,
                            "argument": {
                              "type": "Identifier",
                              "start": 1138,
                              "end": 1159,
                              "name": "unresolvableReference"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}