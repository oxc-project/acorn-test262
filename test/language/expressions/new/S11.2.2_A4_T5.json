{
  "type": "Program",
  "start": 0,
  "end": 1036,
  "body": [
    {
      "type": "TryStatement",
      "start": 334,
      "end": 534,
      "block": {
        "type": "BlockStatement",
        "start": 338,
        "end": 412,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 342,
            "end": 351,
            "expression": {
              "type": "NewExpression",
              "start": 342,
              "end": 350,
              "callee": {
                "type": "Identifier",
                "start": 346,
                "end": 350,
                "name": "Math"
              },
              "arguments": []
            }
          },
          {
            "type": "ThrowStatement",
            "start": 354,
            "end": 409,
            "argument": {
              "type": "NewExpression",
              "start": 360,
              "end": 408,
              "callee": {
                "type": "Identifier",
                "start": 364,
                "end": 376,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 377,
                  "end": 407,
                  "value": "#1: new Math throw TypeError",
                  "raw": "'#1: new Math throw TypeError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 413,
        "end": 534,
        "param": {
          "type": "Identifier",
          "start": 420,
          "end": 421,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 423,
          "end": 534,
          "body": [
            {
              "type": "IfStatement",
              "start": 427,
              "end": 532,
              "test": {
                "type": "BinaryExpression",
                "start": 431,
                "end": 464,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 431,
                  "end": 455,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 432,
                    "end": 454,
                    "left": {
                      "type": "Identifier",
                      "start": 432,
                      "end": 433,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 445,
                      "end": 454,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 460,
                  "end": 464,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 466,
                "end": 532,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 472,
                    "end": 527,
                    "argument": {
                      "type": "NewExpression",
                      "start": 478,
                      "end": 526,
                      "callee": {
                        "type": "Identifier",
                        "start": 482,
                        "end": 494,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 495,
                          "end": 525,
                          "value": "#1: new Math throw TypeError",
                          "raw": "'#1: new Math throw TypeError'",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 546,
      "end": 764,
      "block": {
        "type": "BlockStatement",
        "start": 550,
        "end": 636,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 554,
            "end": 569,
            "expression": {
              "type": "NewExpression",
              "start": 554,
              "end": 568,
              "callee": {
                "type": "NewExpression",
                "start": 558,
                "end": 568,
                "callee": {
                  "type": "Identifier",
                  "start": 562,
                  "end": 566,
                  "name": "Math"
                },
                "arguments": []
              },
              "arguments": []
            }
          },
          {
            "type": "ThrowStatement",
            "start": 572,
            "end": 633,
            "argument": {
              "type": "NewExpression",
              "start": 578,
              "end": 632,
              "callee": {
                "type": "Identifier",
                "start": 582,
                "end": 594,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 595,
                  "end": 631,
                  "value": "#2: new new Math() throw TypeError",
                  "raw": "'#2: new new Math() throw TypeError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 637,
        "end": 764,
        "param": {
          "type": "Identifier",
          "start": 644,
          "end": 645,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 647,
          "end": 764,
          "body": [
            {
              "type": "IfStatement",
              "start": 651,
              "end": 762,
              "test": {
                "type": "BinaryExpression",
                "start": 655,
                "end": 688,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 655,
                  "end": 679,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 656,
                    "end": 678,
                    "left": {
                      "type": "Identifier",
                      "start": 656,
                      "end": 657,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 669,
                      "end": 678,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 684,
                  "end": 688,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 690,
                "end": 762,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 696,
                    "end": 757,
                    "argument": {
                      "type": "NewExpression",
                      "start": 702,
                      "end": 756,
                      "callee": {
                        "type": "Identifier",
                        "start": 706,
                        "end": 718,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 719,
                          "end": 755,
                          "value": "#2: new new Math() throw TypeError",
                          "raw": "'#2: new new Math() throw TypeError'",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "TryStatement",
      "start": 776,
      "end": 1035,
      "block": {
        "type": "BlockStatement",
        "start": 780,
        "end": 894,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 784,
            "end": 803,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 788,
                "end": 802,
                "id": {
                  "type": "Identifier",
                  "start": 788,
                  "end": 789,
                  "name": "x"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 792,
                  "end": 802,
                  "callee": {
                    "type": "Identifier",
                    "start": 796,
                    "end": 800,
                    "name": "Math"
                  },
                  "arguments": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 806,
            "end": 814,
            "expression": {
              "type": "NewExpression",
              "start": 806,
              "end": 813,
              "callee": {
                "type": "Identifier",
                "start": 810,
                "end": 811,
                "name": "x"
              },
              "arguments": []
            }
          },
          {
            "type": "ThrowStatement",
            "start": 817,
            "end": 891,
            "argument": {
              "type": "NewExpression",
              "start": 823,
              "end": 890,
              "callee": {
                "type": "Identifier",
                "start": 827,
                "end": 839,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 840,
                  "end": 889,
                  "value": "#3: var x = new Math(); new x() throw TypeError",
                  "raw": "'#3: var x = new Math(); new x() throw TypeError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 895,
        "end": 1035,
        "param": {
          "type": "Identifier",
          "start": 902,
          "end": 903,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 905,
          "end": 1035,
          "body": [
            {
              "type": "IfStatement",
              "start": 909,
              "end": 1033,
              "test": {
                "type": "BinaryExpression",
                "start": 913,
                "end": 946,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 913,
                  "end": 937,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 914,
                    "end": 936,
                    "left": {
                      "type": "Identifier",
                      "start": 914,
                      "end": 915,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 927,
                      "end": 936,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 942,
                  "end": 946,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 948,
                "end": 1033,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 954,
                    "end": 1028,
                    "argument": {
                      "type": "NewExpression",
                      "start": 960,
                      "end": 1027,
                      "callee": {
                        "type": "Identifier",
                        "start": 964,
                        "end": 976,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 977,
                          "end": 1026,
                          "value": "#3: var x = new Math(); new x() throw TypeError",
                          "raw": "'#3: var x = new Math(); new x() throw TypeError'",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}