{
  "type": "Program",
  "start": 0,
  "end": 715,
  "body": [
    {
      "type": "IfStatement",
      "start": 304,
      "end": 431,
      "test": {
        "type": "BinaryExpression",
        "start": 308,
        "end": 336,
        "left": {
          "type": "CallExpression",
          "start": 308,
          "end": 327,
          "callee": {
            "type": "Identifier",
            "start": 308,
            "end": 313,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 314,
              "end": 326,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "ParenthesizedExpression",
                "start": 315,
                "end": 326,
                "expression": {
                  "type": "Identifier",
                  "start": 316,
                  "end": 325,
                  "name": "undefined"
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 332,
          "end": 336,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 338,
        "end": 431,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 342,
            "end": 429,
            "argument": {
              "type": "NewExpression",
              "start": 348,
              "end": 428,
              "callee": {
                "type": "Identifier",
                "start": 352,
                "end": 364,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 365,
                  "end": 427,
                  "left": {
                    "type": "Literal",
                    "start": 365,
                    "end": 410,
                    "value": "#1: +(undefined) === Not-a-Number. Actual: ",
                    "raw": "'#1: +(undefined) === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 413,
                    "end": 427,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 414,
                      "end": 426,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "start": 415,
                        "end": 426,
                        "expression": {
                          "type": "Identifier",
                          "start": 416,
                          "end": 425,
                          "name": "undefined"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 444,
      "end": 562,
      "test": {
        "type": "BinaryExpression",
        "start": 448,
        "end": 473,
        "left": {
          "type": "CallExpression",
          "start": 448,
          "end": 464,
          "callee": {
            "type": "Identifier",
            "start": 448,
            "end": 453,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 454,
              "end": 463,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "ParenthesizedExpression",
                "start": 455,
                "end": 463,
                "expression": {
                  "type": "UnaryExpression",
                  "start": 456,
                  "end": 462,
                  "operator": "void",
                  "prefix": true,
                  "argument": {
                    "type": "Literal",
                    "start": 461,
                    "end": 462,
                    "value": 0,
                    "raw": "0"
                  }
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 469,
          "end": 473,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 475,
        "end": 562,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 479,
            "end": 560,
            "argument": {
              "type": "NewExpression",
              "start": 485,
              "end": 559,
              "callee": {
                "type": "Identifier",
                "start": 489,
                "end": 501,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 502,
                  "end": 558,
                  "left": {
                    "type": "Literal",
                    "start": 502,
                    "end": 544,
                    "value": "#2: +(void 0) === Not-a-Number. Actual: ",
                    "raw": "'#2: +(void 0) === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 547,
                    "end": 558,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 548,
                      "end": 557,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "start": 549,
                        "end": 557,
                        "expression": {
                          "type": "UnaryExpression",
                          "start": 550,
                          "end": 556,
                          "operator": "void",
                          "prefix": true,
                          "argument": {
                            "type": "Literal",
                            "start": 555,
                            "end": 556,
                            "value": 0,
                            "raw": "0"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 575,
      "end": 714,
      "test": {
        "type": "BinaryExpression",
        "start": 579,
        "end": 611,
        "left": {
          "type": "CallExpression",
          "start": 579,
          "end": 602,
          "callee": {
            "type": "Identifier",
            "start": 579,
            "end": 584,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 585,
              "end": 601,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "ParenthesizedExpression",
                "start": 586,
                "end": 601,
                "expression": {
                  "type": "CallExpression",
                  "start": 587,
                  "end": 600,
                  "callee": {
                    "type": "Identifier",
                    "start": 587,
                    "end": 591,
                    "name": "eval"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "start": 592,
                      "end": 599,
                      "value": "var x",
                      "raw": "\"var x\""
                    }
                  ],
                  "optional": false
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 607,
          "end": 611,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 613,
        "end": 714,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 617,
            "end": 712,
            "argument": {
              "type": "NewExpression",
              "start": 623,
              "end": 711,
              "callee": {
                "type": "Identifier",
                "start": 627,
                "end": 639,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 640,
                  "end": 710,
                  "left": {
                    "type": "Literal",
                    "start": 640,
                    "end": 689,
                    "value": "#3: +(eval(\"var x\")) === Not-a-Number. Actual: ",
                    "raw": "'#3: +(eval(\"var x\")) === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 692,
                    "end": 710,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 693,
                      "end": 709,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "ParenthesizedExpression",
                        "start": 694,
                        "end": 709,
                        "expression": {
                          "type": "CallExpression",
                          "start": 695,
                          "end": 708,
                          "callee": {
                            "type": "Identifier",
                            "start": 695,
                            "end": 699,
                            "name": "eval"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 700,
                              "end": 707,
                              "value": "var x",
                              "raw": "\"var x\""
                            }
                          ],
                          "optional": false
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}