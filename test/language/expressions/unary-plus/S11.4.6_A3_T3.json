{
  "type": "Program",
  "start": 0,
  "end": 877,
  "body": [
    {
      "type": "IfStatement",
      "start": 272,
      "end": 354,
      "test": {
        "type": "BinaryExpression",
        "start": 276,
        "end": 286,
        "left": {
          "type": "UnaryExpression",
          "start": 276,
          "end": 280,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 277,
            "end": 280,
            "value": "1",
            "raw": "\"1\"",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 285,
          "end": 286,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 288,
        "end": 354,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 292,
            "end": 352,
            "argument": {
              "type": "NewExpression",
              "start": 298,
              "end": 351,
              "callee": {
                "type": "Identifier",
                "start": 302,
                "end": 314,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 315,
                  "end": 350,
                  "left": {
                    "type": "Literal",
                    "start": 315,
                    "end": 341,
                    "value": "#1: +\"1\" === 1. Actual: ",
                    "raw": "'#1: +\"1\" === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 344,
                    "end": 350,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 345,
                      "end": 349,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 346,
                        "end": 349,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 366,
      "end": 489,
      "test": {
        "type": "BinaryExpression",
        "start": 370,
        "end": 394,
        "left": {
          "type": "UnaryExpression",
          "start": 370,
          "end": 387,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "NewExpression",
            "start": 371,
            "end": 387,
            "callee": {
              "type": "Identifier",
              "start": 375,
              "end": 381,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 382,
                "end": 386,
                "value": "-1",
                "raw": "\"-1\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 392,
          "end": 394,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 393,
            "end": 394,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 396,
        "end": 489,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 400,
            "end": 487,
            "argument": {
              "type": "NewExpression",
              "start": 406,
              "end": 486,
              "callee": {
                "type": "Identifier",
                "start": 410,
                "end": 422,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 423,
                  "end": 485,
                  "left": {
                    "type": "Literal",
                    "start": 423,
                    "end": 463,
                    "value": "#2: +new String(\"-1\") === -1. Actual: ",
                    "raw": "'#2: +new String(\"-1\") === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 466,
                    "end": 485,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 467,
                      "end": 484,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "NewExpression",
                        "start": 468,
                        "end": 484,
                        "callee": {
                          "type": "Identifier",
                          "start": 472,
                          "end": 478,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 479,
                            "end": 483,
                            "value": "-1",
                            "raw": "\"-1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 501,
      "end": 604,
      "test": {
        "type": "BinaryExpression",
        "start": 505,
        "end": 525,
        "left": {
          "type": "CallExpression",
          "start": 505,
          "end": 516,
          "callee": {
            "type": "Identifier",
            "start": 505,
            "end": 510,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 511,
              "end": 515,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 512,
                "end": 515,
                "value": "x",
                "raw": "\"x\"",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 521,
          "end": 525,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 527,
        "end": 604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 531,
            "end": 602,
            "argument": {
              "type": "NewExpression",
              "start": 537,
              "end": 601,
              "callee": {
                "type": "Identifier",
                "start": 541,
                "end": 553,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 554,
                  "end": 600,
                  "left": {
                    "type": "Literal",
                    "start": 554,
                    "end": 591,
                    "value": "#3: +\"x\" === Not-a-Number. Actual: ",
                    "raw": "'#3: +\"x\" === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 594,
                    "end": 600,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 595,
                      "end": 599,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 596,
                        "end": 599,
                        "value": "x",
                        "raw": "\"x\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 616,
      "end": 740,
      "test": {
        "type": "BinaryExpression",
        "start": 620,
        "end": 647,
        "left": {
          "type": "CallExpression",
          "start": 620,
          "end": 638,
          "callee": {
            "type": "Identifier",
            "start": 620,
            "end": 625,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 626,
              "end": 637,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 627,
                "end": 637,
                "value": "INFINITY",
                "raw": "\"INFINITY\"",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 643,
          "end": 647,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 649,
        "end": 740,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 653,
            "end": 738,
            "argument": {
              "type": "NewExpression",
              "start": 659,
              "end": 737,
              "callee": {
                "type": "Identifier",
                "start": 663,
                "end": 675,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 676,
                  "end": 736,
                  "left": {
                    "type": "Literal",
                    "start": 676,
                    "end": 720,
                    "value": "#4: +\"INFINITY\" === Not-a-Number. Actual: ",
                    "raw": "'#4: +\"INFINITY\" === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 723,
                    "end": 736,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 724,
                      "end": 735,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 725,
                        "end": 735,
                        "value": "INFINITY",
                        "raw": "\"INFINITY\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 752,
      "end": 876,
      "test": {
        "type": "BinaryExpression",
        "start": 756,
        "end": 783,
        "left": {
          "type": "CallExpression",
          "start": 756,
          "end": 774,
          "callee": {
            "type": "Identifier",
            "start": 756,
            "end": 761,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 762,
              "end": 773,
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 763,
                "end": 773,
                "value": "infinity",
                "raw": "\"infinity\"",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 779,
          "end": 783,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 785,
        "end": 876,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 789,
            "end": 874,
            "argument": {
              "type": "NewExpression",
              "start": 795,
              "end": 873,
              "callee": {
                "type": "Identifier",
                "start": 799,
                "end": 811,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 812,
                  "end": 872,
                  "left": {
                    "type": "Literal",
                    "start": 812,
                    "end": 856,
                    "value": "#5: +\"infinity\" === Not-a-Number. Actual: ",
                    "raw": "'#5: +\"infinity\" === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 859,
                    "end": 872,
                    "expression": {
                      "type": "UnaryExpression",
                      "start": 860,
                      "end": 871,
                      "operator": "+",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 861,
                        "end": 871,
                        "value": "infinity",
                        "raw": "\"infinity\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}