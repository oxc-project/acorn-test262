{
  "type": "Program",
  "start": 0,
  "end": 1599,
  "body": [
    {
      "type": "IfStatement",
      "start": 362,
      "end": 494,
      "test": {
        "type": "BinaryExpression",
        "start": 366,
        "end": 405,
        "left": {
          "type": "CallExpression",
          "start": 366,
          "end": 396,
          "callee": {
            "type": "Identifier",
            "start": 366,
            "end": 371,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 372,
              "end": 395,
              "left": {
                "type": "MemberExpression",
                "start": 372,
                "end": 382,
                "object": {
                  "type": "Identifier",
                  "start": 372,
                  "end": 378,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 379,
                  "end": 382,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 385,
                "end": 395,
                "object": {
                  "type": "Identifier",
                  "start": 385,
                  "end": 391,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 392,
                  "end": 395,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 401,
          "end": 405,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 407,
        "end": 494,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 411,
            "end": 492,
            "argument": {
              "type": "NewExpression",
              "start": 417,
              "end": 491,
              "callee": {
                "type": "Identifier",
                "start": 421,
                "end": 433,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 434,
                  "end": 490,
                  "left": {
                    "type": "Literal",
                    "start": 434,
                    "end": 476,
                    "value": "#1: NaN * NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 479,
                    "end": 490,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 480,
                      "end": 489,
                      "left": {
                        "type": "Identifier",
                        "start": 480,
                        "end": 483,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 486,
                        "end": 489,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 508,
      "end": 631,
      "test": {
        "type": "BinaryExpression",
        "start": 512,
        "end": 543,
        "left": {
          "type": "CallExpression",
          "start": 512,
          "end": 534,
          "callee": {
            "type": "Identifier",
            "start": 512,
            "end": 517,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 518,
              "end": 533,
              "left": {
                "type": "UnaryExpression",
                "start": 518,
                "end": 520,
                "operator": "+",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 519,
                  "end": 520,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 523,
                "end": 533,
                "object": {
                  "type": "Identifier",
                  "start": 523,
                  "end": 529,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 530,
                  "end": 533,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 539,
          "end": 543,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 545,
        "end": 631,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 549,
            "end": 628,
            "argument": {
              "type": "NewExpression",
              "start": 555,
              "end": 627,
              "callee": {
                "type": "Identifier",
                "start": 559,
                "end": 571,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 572,
                  "end": 626,
                  "left": {
                    "type": "Literal",
                    "start": 572,
                    "end": 613,
                    "value": "#2: +0 * NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: +0 * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 616,
                    "end": 626,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 617,
                      "end": 625,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 617,
                        "end": 619,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 618,
                          "end": 619,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 622,
                        "end": 625,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 644,
      "end": 767,
      "test": {
        "type": "BinaryExpression",
        "start": 648,
        "end": 679,
        "left": {
          "type": "CallExpression",
          "start": 648,
          "end": 670,
          "callee": {
            "type": "Identifier",
            "start": 648,
            "end": 653,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 654,
              "end": 669,
              "left": {
                "type": "UnaryExpression",
                "start": 654,
                "end": 656,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 655,
                  "end": 656,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 659,
                "end": 669,
                "object": {
                  "type": "Identifier",
                  "start": 659,
                  "end": 665,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 666,
                  "end": 669,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 675,
          "end": 679,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 681,
        "end": 767,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 685,
            "end": 764,
            "argument": {
              "type": "NewExpression",
              "start": 691,
              "end": 763,
              "callee": {
                "type": "Identifier",
                "start": 695,
                "end": 707,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 708,
                  "end": 762,
                  "left": {
                    "type": "Literal",
                    "start": 708,
                    "end": 749,
                    "value": "#3: -0 * NaN === Not-a-Number. Actual: ",
                    "raw": "'#3: -0 * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 752,
                    "end": 762,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 753,
                      "end": 761,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 753,
                        "end": 755,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 754,
                          "end": 755,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 758,
                        "end": 761,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 780,
      "end": 936,
      "test": {
        "type": "BinaryExpression",
        "start": 784,
        "end": 837,
        "left": {
          "type": "CallExpression",
          "start": 784,
          "end": 828,
          "callee": {
            "type": "Identifier",
            "start": 784,
            "end": 789,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 790,
              "end": 827,
              "left": {
                "type": "MemberExpression",
                "start": 790,
                "end": 814,
                "object": {
                  "type": "Identifier",
                  "start": 790,
                  "end": 796,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 797,
                  "end": 814,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 817,
                "end": 827,
                "object": {
                  "type": "Identifier",
                  "start": 817,
                  "end": 823,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 824,
                  "end": 827,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 833,
          "end": 837,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 839,
        "end": 936,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 843,
            "end": 934,
            "argument": {
              "type": "NewExpression",
              "start": 849,
              "end": 933,
              "callee": {
                "type": "Identifier",
                "start": 853,
                "end": 865,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 866,
                  "end": 932,
                  "left": {
                    "type": "Literal",
                    "start": 866,
                    "end": 913,
                    "value": "#4: Infinity * NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 916,
                    "end": 932,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 917,
                      "end": 931,
                      "left": {
                        "type": "Identifier",
                        "start": 917,
                        "end": 925,
                        "name": "Infinity"
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 928,
                        "end": 931,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 949,
      "end": 1110,
      "test": {
        "type": "BinaryExpression",
        "start": 953,
        "end": 1006,
        "left": {
          "type": "CallExpression",
          "start": 953,
          "end": 997,
          "callee": {
            "type": "Identifier",
            "start": 953,
            "end": 958,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 959,
              "end": 996,
              "left": {
                "type": "MemberExpression",
                "start": 959,
                "end": 983,
                "object": {
                  "type": "Identifier",
                  "start": 959,
                  "end": 965,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 966,
                  "end": 983,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 986,
                "end": 996,
                "object": {
                  "type": "Identifier",
                  "start": 986,
                  "end": 992,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 993,
                  "end": 996,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1002,
          "end": 1006,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1008,
        "end": 1110,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1012,
            "end": 1107,
            "argument": {
              "type": "NewExpression",
              "start": 1018,
              "end": 1106,
              "callee": {
                "type": "Identifier",
                "start": 1022,
                "end": 1034,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1035,
                  "end": 1105,
                  "left": {
                    "type": "Literal",
                    "start": 1035,
                    "end": 1084,
                    "value": "#5:  -Infinity * NaN === Not-a-Number. Actual: ",
                    "raw": "'#5:  -Infinity * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1087,
                    "end": 1105,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1089,
                      "end": 1104,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1089,
                        "end": 1098,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1090,
                          "end": 1098,
                          "name": "Infinity"
                        }
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 1101,
                        "end": 1104,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1123,
      "end": 1287,
      "test": {
        "type": "BinaryExpression",
        "start": 1127,
        "end": 1172,
        "left": {
          "type": "CallExpression",
          "start": 1127,
          "end": 1163,
          "callee": {
            "type": "Identifier",
            "start": 1127,
            "end": 1132,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1133,
              "end": 1162,
              "left": {
                "type": "MemberExpression",
                "start": 1133,
                "end": 1149,
                "object": {
                  "type": "Identifier",
                  "start": 1133,
                  "end": 1139,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1140,
                  "end": 1149,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 1152,
                "end": 1162,
                "object": {
                  "type": "Identifier",
                  "start": 1152,
                  "end": 1158,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1159,
                  "end": 1162,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1168,
          "end": 1172,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1174,
        "end": 1287,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1178,
            "end": 1285,
            "argument": {
              "type": "NewExpression",
              "start": 1184,
              "end": 1284,
              "callee": {
                "type": "Identifier",
                "start": 1188,
                "end": 1200,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1201,
                  "end": 1283,
                  "left": {
                    "type": "Literal",
                    "start": 1201,
                    "end": 1256,
                    "value": "#6: Number.MAX_VALUE * NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Number.MAX_VALUE * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1259,
                    "end": 1283,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1260,
                      "end": 1282,
                      "left": {
                        "type": "MemberExpression",
                        "start": 1260,
                        "end": 1276,
                        "object": {
                          "type": "Identifier",
                          "start": 1260,
                          "end": 1266,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1267,
                          "end": 1276,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 1279,
                        "end": 1282,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1300,
      "end": 1465,
      "test": {
        "type": "BinaryExpression",
        "start": 1304,
        "end": 1349,
        "left": {
          "type": "CallExpression",
          "start": 1304,
          "end": 1340,
          "callee": {
            "type": "Identifier",
            "start": 1304,
            "end": 1309,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1310,
              "end": 1339,
              "left": {
                "type": "MemberExpression",
                "start": 1310,
                "end": 1326,
                "object": {
                  "type": "Identifier",
                  "start": 1310,
                  "end": 1316,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1317,
                  "end": 1326,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 1329,
                "end": 1339,
                "object": {
                  "type": "Identifier",
                  "start": 1329,
                  "end": 1335,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1336,
                  "end": 1339,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1345,
          "end": 1349,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1351,
        "end": 1465,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1355,
            "end": 1462,
            "argument": {
              "type": "NewExpression",
              "start": 1361,
              "end": 1461,
              "callee": {
                "type": "Identifier",
                "start": 1365,
                "end": 1377,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1378,
                  "end": 1460,
                  "left": {
                    "type": "Literal",
                    "start": 1378,
                    "end": 1433,
                    "value": "#7: Number.MIN_VALUE * NaN === Not-a-Number. Actual: ",
                    "raw": "'#7: Number.MIN_VALUE * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1436,
                    "end": 1460,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1437,
                      "end": 1459,
                      "left": {
                        "type": "MemberExpression",
                        "start": 1437,
                        "end": 1453,
                        "object": {
                          "type": "Identifier",
                          "start": 1437,
                          "end": 1443,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1444,
                          "end": 1453,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 1456,
                        "end": 1459,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1477,
      "end": 1598,
      "test": {
        "type": "BinaryExpression",
        "start": 1481,
        "end": 1511,
        "left": {
          "type": "CallExpression",
          "start": 1481,
          "end": 1502,
          "callee": {
            "type": "Identifier",
            "start": 1481,
            "end": 1486,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1487,
              "end": 1501,
              "left": {
                "type": "Literal",
                "start": 1487,
                "end": 1488,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 1491,
                "end": 1501,
                "object": {
                  "type": "Identifier",
                  "start": 1491,
                  "end": 1497,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1498,
                  "end": 1501,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1507,
          "end": 1511,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1513,
        "end": 1598,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1517,
            "end": 1594,
            "argument": {
              "type": "NewExpression",
              "start": 1523,
              "end": 1593,
              "callee": {
                "type": "Identifier",
                "start": 1527,
                "end": 1539,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1540,
                  "end": 1592,
                  "left": {
                    "type": "Literal",
                    "start": 1540,
                    "end": 1580,
                    "value": "#8: 1 * NaN === Not-a-Number. Actual: ",
                    "raw": "'#8: 1 * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1583,
                    "end": 1592,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1584,
                      "end": 1591,
                      "left": {
                        "type": "Literal",
                        "start": 1584,
                        "end": 1585,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 1588,
                        "end": 1591,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}