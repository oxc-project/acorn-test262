{
  "type": "Program",
  "start": 0,
  "end": 1596,
  "body": [
    {
      "type": "IfStatement",
      "start": 361,
      "end": 493,
      "test": {
        "type": "BinaryExpression",
        "start": 365,
        "end": 404,
        "left": {
          "type": "CallExpression",
          "start": 365,
          "end": 395,
          "callee": {
            "type": "Identifier",
            "start": 365,
            "end": 370,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 371,
              "end": 394,
              "left": {
                "type": "MemberExpression",
                "start": 371,
                "end": 381,
                "object": {
                  "type": "Identifier",
                  "start": 371,
                  "end": 377,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 378,
                  "end": 381,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 384,
                "end": 394,
                "object": {
                  "type": "Identifier",
                  "start": 384,
                  "end": 390,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 391,
                  "end": 394,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 400,
          "end": 404,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 406,
        "end": 493,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 410,
            "end": 491,
            "argument": {
              "type": "NewExpression",
              "start": 416,
              "end": 490,
              "callee": {
                "type": "Identifier",
                "start": 420,
                "end": 432,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 433,
                  "end": 489,
                  "left": {
                    "type": "Literal",
                    "start": 433,
                    "end": 475,
                    "value": "#1: NaN * NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN * NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 478,
                    "end": 489,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 479,
                      "end": 488,
                      "left": {
                        "type": "Identifier",
                        "start": 479,
                        "end": 482,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 485,
                        "end": 488,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 507,
      "end": 630,
      "test": {
        "type": "BinaryExpression",
        "start": 511,
        "end": 542,
        "left": {
          "type": "CallExpression",
          "start": 511,
          "end": 533,
          "callee": {
            "type": "Identifier",
            "start": 511,
            "end": 516,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 517,
              "end": 532,
              "left": {
                "type": "MemberExpression",
                "start": 517,
                "end": 527,
                "object": {
                  "type": "Identifier",
                  "start": 517,
                  "end": 523,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 524,
                  "end": 527,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "UnaryExpression",
                "start": 530,
                "end": 532,
                "operator": "+",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 531,
                  "end": 532,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 538,
          "end": 542,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 544,
        "end": 630,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 548,
            "end": 627,
            "argument": {
              "type": "NewExpression",
              "start": 554,
              "end": 626,
              "callee": {
                "type": "Identifier",
                "start": 558,
                "end": 570,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 571,
                  "end": 625,
                  "left": {
                    "type": "Literal",
                    "start": 571,
                    "end": 612,
                    "value": "#2: NaN * +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: NaN * +0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 615,
                    "end": 625,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 616,
                      "end": 624,
                      "left": {
                        "type": "Identifier",
                        "start": 616,
                        "end": 619,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 622,
                        "end": 624,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 623,
                          "end": 624,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 643,
      "end": 766,
      "test": {
        "type": "BinaryExpression",
        "start": 647,
        "end": 678,
        "left": {
          "type": "CallExpression",
          "start": 647,
          "end": 669,
          "callee": {
            "type": "Identifier",
            "start": 647,
            "end": 652,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 653,
              "end": 668,
              "left": {
                "type": "MemberExpression",
                "start": 653,
                "end": 663,
                "object": {
                  "type": "Identifier",
                  "start": 653,
                  "end": 659,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 660,
                  "end": 663,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "UnaryExpression",
                "start": 666,
                "end": 668,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 667,
                  "end": 668,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 674,
          "end": 678,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 680,
        "end": 766,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 684,
            "end": 763,
            "argument": {
              "type": "NewExpression",
              "start": 690,
              "end": 762,
              "callee": {
                "type": "Identifier",
                "start": 694,
                "end": 706,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 707,
                  "end": 761,
                  "left": {
                    "type": "Literal",
                    "start": 707,
                    "end": 748,
                    "value": "#3: NaN * -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN * -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 751,
                    "end": 761,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 752,
                      "end": 760,
                      "left": {
                        "type": "Identifier",
                        "start": 752,
                        "end": 755,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 758,
                        "end": 760,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 759,
                          "end": 760,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 779,
      "end": 935,
      "test": {
        "type": "BinaryExpression",
        "start": 783,
        "end": 836,
        "left": {
          "type": "CallExpression",
          "start": 783,
          "end": 827,
          "callee": {
            "type": "Identifier",
            "start": 783,
            "end": 788,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 789,
              "end": 826,
              "left": {
                "type": "MemberExpression",
                "start": 789,
                "end": 799,
                "object": {
                  "type": "Identifier",
                  "start": 789,
                  "end": 795,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 796,
                  "end": 799,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 802,
                "end": 826,
                "object": {
                  "type": "Identifier",
                  "start": 802,
                  "end": 808,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 809,
                  "end": 826,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 832,
          "end": 836,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 838,
        "end": 935,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 842,
            "end": 933,
            "argument": {
              "type": "NewExpression",
              "start": 848,
              "end": 932,
              "callee": {
                "type": "Identifier",
                "start": 852,
                "end": 864,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 865,
                  "end": 931,
                  "left": {
                    "type": "Literal",
                    "start": 865,
                    "end": 912,
                    "value": "#4: NaN * Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: NaN * Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 915,
                    "end": 931,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 916,
                      "end": 930,
                      "left": {
                        "type": "Identifier",
                        "start": 916,
                        "end": 919,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 922,
                        "end": 930,
                        "name": "Infinity"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 948,
      "end": 1107,
      "test": {
        "type": "BinaryExpression",
        "start": 952,
        "end": 1005,
        "left": {
          "type": "CallExpression",
          "start": 952,
          "end": 996,
          "callee": {
            "type": "Identifier",
            "start": 952,
            "end": 957,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 958,
              "end": 995,
              "left": {
                "type": "MemberExpression",
                "start": 958,
                "end": 968,
                "object": {
                  "type": "Identifier",
                  "start": 958,
                  "end": 964,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 965,
                  "end": 968,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 971,
                "end": 995,
                "object": {
                  "type": "Identifier",
                  "start": 971,
                  "end": 977,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 978,
                  "end": 995,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1001,
          "end": 1005,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1007,
        "end": 1107,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1011,
            "end": 1104,
            "argument": {
              "type": "NewExpression",
              "start": 1017,
              "end": 1103,
              "callee": {
                "type": "Identifier",
                "start": 1021,
                "end": 1033,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1034,
                  "end": 1102,
                  "left": {
                    "type": "Literal",
                    "start": 1034,
                    "end": 1082,
                    "value": "#5: NaN * -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN * -Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1085,
                    "end": 1102,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1086,
                      "end": 1101,
                      "left": {
                        "type": "Identifier",
                        "start": 1086,
                        "end": 1089,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1092,
                        "end": 1101,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1093,
                          "end": 1101,
                          "name": "Infinity"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1120,
      "end": 1284,
      "test": {
        "type": "BinaryExpression",
        "start": 1124,
        "end": 1169,
        "left": {
          "type": "CallExpression",
          "start": 1124,
          "end": 1160,
          "callee": {
            "type": "Identifier",
            "start": 1124,
            "end": 1129,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1130,
              "end": 1159,
              "left": {
                "type": "MemberExpression",
                "start": 1130,
                "end": 1140,
                "object": {
                  "type": "Identifier",
                  "start": 1130,
                  "end": 1136,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1137,
                  "end": 1140,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 1143,
                "end": 1159,
                "object": {
                  "type": "Identifier",
                  "start": 1143,
                  "end": 1149,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1150,
                  "end": 1159,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1165,
          "end": 1169,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1171,
        "end": 1284,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1175,
            "end": 1282,
            "argument": {
              "type": "NewExpression",
              "start": 1181,
              "end": 1281,
              "callee": {
                "type": "Identifier",
                "start": 1185,
                "end": 1197,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1198,
                  "end": 1280,
                  "left": {
                    "type": "Literal",
                    "start": 1198,
                    "end": 1253,
                    "value": "#6: NaN * Number.MAX_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#6: NaN * Number.MAX_VALUE === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1256,
                    "end": 1280,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1257,
                      "end": 1279,
                      "left": {
                        "type": "Identifier",
                        "start": 1257,
                        "end": 1260,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1263,
                        "end": 1279,
                        "object": {
                          "type": "Identifier",
                          "start": 1263,
                          "end": 1269,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1270,
                          "end": 1279,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1297,
      "end": 1462,
      "test": {
        "type": "BinaryExpression",
        "start": 1301,
        "end": 1346,
        "left": {
          "type": "CallExpression",
          "start": 1301,
          "end": 1337,
          "callee": {
            "type": "Identifier",
            "start": 1301,
            "end": 1306,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1307,
              "end": 1336,
              "left": {
                "type": "MemberExpression",
                "start": 1307,
                "end": 1317,
                "object": {
                  "type": "Identifier",
                  "start": 1307,
                  "end": 1313,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1314,
                  "end": 1317,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "MemberExpression",
                "start": 1320,
                "end": 1336,
                "object": {
                  "type": "Identifier",
                  "start": 1320,
                  "end": 1326,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1327,
                  "end": 1336,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1342,
          "end": 1346,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1348,
        "end": 1462,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1352,
            "end": 1459,
            "argument": {
              "type": "NewExpression",
              "start": 1358,
              "end": 1458,
              "callee": {
                "type": "Identifier",
                "start": 1362,
                "end": 1374,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1375,
                  "end": 1457,
                  "left": {
                    "type": "Literal",
                    "start": 1375,
                    "end": 1430,
                    "value": "#7: NaN * Number.MIN_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#7: NaN * Number.MIN_VALUE === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1433,
                    "end": 1457,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1434,
                      "end": 1456,
                      "left": {
                        "type": "Identifier",
                        "start": 1434,
                        "end": 1437,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1440,
                        "end": 1456,
                        "object": {
                          "type": "Identifier",
                          "start": 1440,
                          "end": 1446,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1447,
                          "end": 1456,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1474,
      "end": 1595,
      "test": {
        "type": "BinaryExpression",
        "start": 1478,
        "end": 1508,
        "left": {
          "type": "CallExpression",
          "start": 1478,
          "end": 1499,
          "callee": {
            "type": "Identifier",
            "start": 1478,
            "end": 1483,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1484,
              "end": 1498,
              "left": {
                "type": "MemberExpression",
                "start": 1484,
                "end": 1494,
                "object": {
                  "type": "Identifier",
                  "start": 1484,
                  "end": 1490,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1491,
                  "end": 1494,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "start": 1497,
                "end": 1498,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1504,
          "end": 1508,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1510,
        "end": 1595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1514,
            "end": 1591,
            "argument": {
              "type": "NewExpression",
              "start": 1520,
              "end": 1590,
              "callee": {
                "type": "Identifier",
                "start": 1524,
                "end": 1536,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1537,
                  "end": 1589,
                  "left": {
                    "type": "Literal",
                    "start": 1537,
                    "end": 1577,
                    "value": "#8: NaN * 1 === Not-a-Number. Actual: ",
                    "raw": "'#8: NaN * 1 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1580,
                    "end": 1589,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1581,
                      "end": 1588,
                      "left": {
                        "type": "Identifier",
                        "start": 1581,
                        "end": 1584,
                        "name": "NaN"
                      },
                      "operator": "*",
                      "right": {
                        "type": "Literal",
                        "start": 1587,
                        "end": 1588,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}