{
  "type": "Program",
  "start": 0,
  "end": 1024,
  "body": [
    {
      "type": "IfStatement",
      "start": 371,
      "end": 507,
      "test": {
        "type": "BinaryExpression",
        "start": 375,
        "end": 406,
        "left": {
          "type": "CallExpression",
          "start": 375,
          "end": 397,
          "callee": {
            "type": "Identifier",
            "start": 375,
            "end": 380,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 381,
              "end": 396,
              "left": {
                "type": "Literal",
                "start": 381,
                "end": 384,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              },
              "operator": "*",
              "right": {
                "type": "Identifier",
                "start": 387,
                "end": 396,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 402,
          "end": 406,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 408,
        "end": 507,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 412,
            "end": 505,
            "argument": {
              "type": "NewExpression",
              "start": 418,
              "end": 504,
              "callee": {
                "type": "Identifier",
                "start": 422,
                "end": 434,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 435,
                  "end": 503,
                  "left": {
                    "type": "Literal",
                    "start": 435,
                    "end": 483,
                    "value": "#1: \"1\" * undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: \"1\" * undefined === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 486,
                    "end": 503,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 487,
                      "end": 502,
                      "left": {
                        "type": "Literal",
                        "start": 487,
                        "end": 490,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 493,
                        "end": 502,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 519,
      "end": 655,
      "test": {
        "type": "BinaryExpression",
        "start": 523,
        "end": 554,
        "left": {
          "type": "CallExpression",
          "start": 523,
          "end": 545,
          "callee": {
            "type": "Identifier",
            "start": 523,
            "end": 528,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 529,
              "end": 544,
              "left": {
                "type": "Identifier",
                "start": 529,
                "end": 538,
                "name": "undefined"
              },
              "operator": "*",
              "right": {
                "type": "Literal",
                "start": 541,
                "end": 544,
                "value": "1",
                "raw": "\"1\"",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 550,
          "end": 554,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 556,
        "end": 655,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 560,
            "end": 653,
            "argument": {
              "type": "NewExpression",
              "start": 566,
              "end": 652,
              "callee": {
                "type": "Identifier",
                "start": 570,
                "end": 582,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 583,
                  "end": 651,
                  "left": {
                    "type": "Literal",
                    "start": 583,
                    "end": 631,
                    "value": "#2: undefined * \"1\" === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined * \"1\" === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 634,
                    "end": 651,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 635,
                      "end": 650,
                      "left": {
                        "type": "Identifier",
                        "start": 635,
                        "end": 644,
                        "name": "undefined"
                      },
                      "operator": "*",
                      "right": {
                        "type": "Literal",
                        "start": 647,
                        "end": 650,
                        "value": "1",
                        "raw": "\"1\"",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 667,
      "end": 839,
      "test": {
        "type": "BinaryExpression",
        "start": 671,
        "end": 714,
        "left": {
          "type": "CallExpression",
          "start": 671,
          "end": 705,
          "callee": {
            "type": "Identifier",
            "start": 671,
            "end": 676,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 677,
              "end": 704,
              "left": {
                "type": "NewExpression",
                "start": 677,
                "end": 692,
                "callee": {
                  "type": "Identifier",
                  "start": 681,
                  "end": 687,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 688,
                    "end": 691,
                    "value": "1",
                    "raw": "\"1\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              "operator": "*",
              "right": {
                "type": "Identifier",
                "start": 695,
                "end": 704,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 710,
          "end": 714,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 716,
        "end": 839,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 720,
            "end": 837,
            "argument": {
              "type": "NewExpression",
              "start": 726,
              "end": 836,
              "callee": {
                "type": "Identifier",
                "start": 730,
                "end": 742,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 743,
                  "end": 835,
                  "left": {
                    "type": "Literal",
                    "start": 743,
                    "end": 803,
                    "value": "#3: new String(\"1\") * undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new String(\"1\") * undefined === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 806,
                    "end": 835,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 807,
                      "end": 834,
                      "left": {
                        "type": "NewExpression",
                        "start": 807,
                        "end": 822,
                        "callee": {
                          "type": "Identifier",
                          "start": 811,
                          "end": 817,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 818,
                            "end": 821,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "*",
                      "right": {
                        "type": "Identifier",
                        "start": 825,
                        "end": 834,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 851,
      "end": 1023,
      "test": {
        "type": "BinaryExpression",
        "start": 855,
        "end": 898,
        "left": {
          "type": "CallExpression",
          "start": 855,
          "end": 889,
          "callee": {
            "type": "Identifier",
            "start": 855,
            "end": 860,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 861,
              "end": 888,
              "left": {
                "type": "Identifier",
                "start": 861,
                "end": 870,
                "name": "undefined"
              },
              "operator": "*",
              "right": {
                "type": "NewExpression",
                "start": 873,
                "end": 888,
                "callee": {
                  "type": "Identifier",
                  "start": 877,
                  "end": 883,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 884,
                    "end": 887,
                    "value": "1",
                    "raw": "\"1\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 894,
          "end": 898,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 900,
        "end": 1023,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 904,
            "end": 1021,
            "argument": {
              "type": "NewExpression",
              "start": 910,
              "end": 1020,
              "callee": {
                "type": "Identifier",
                "start": 914,
                "end": 926,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 927,
                  "end": 1019,
                  "left": {
                    "type": "Literal",
                    "start": 927,
                    "end": 987,
                    "value": "#4: undefined * new String(\"1\") === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined * new String(\"1\") === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 990,
                    "end": 1019,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 991,
                      "end": 1018,
                      "left": {
                        "type": "Identifier",
                        "start": 991,
                        "end": 1000,
                        "name": "undefined"
                      },
                      "operator": "*",
                      "right": {
                        "type": "NewExpression",
                        "start": 1003,
                        "end": 1018,
                        "callee": {
                          "type": "Identifier",
                          "start": 1007,
                          "end": 1013,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1014,
                            "end": 1017,
                            "value": "1",
                            "raw": "\"1\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}