{
  "type": "Program",
  "start": 0,
  "end": 1487,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 920,
      "end": 931,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 924,
          "end": 930,
          "id": {
            "type": "Identifier",
            "start": 924,
            "end": 925,
            "name": "r"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 928,
            "end": 930,
            "elements": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "FunctionDeclaration",
      "start": 932,
      "end": 1311,
      "id": {
        "type": "Identifier",
        "start": 947,
        "end": 952,
        "name": "aiter"
      },
      "expression": false,
      "generator": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "start": 955,
        "end": 1311,
        "body": [
          {
            "type": "ForOfStatement",
            "start": 959,
            "end": 1309,
            "await": true,
            "left": {
              "type": "VariableDeclaration",
              "start": 970,
              "end": 982,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 974,
                  "end": 982,
                  "id": {
                    "type": "Identifier",
                    "start": 974,
                    "end": 982,
                    "name": "imported"
                  },
                  "init": null
                }
              ],
              "kind": "let"
            },
            "right": {
              "type": "ArrayExpression",
              "start": 986,
              "end": 1278,
              "elements": [
                {
                  "type": "ImportExpression",
                  "start": 994,
                  "end": 1049,
                  "source": {
                    "type": "Literal",
                    "start": 1001,
                    "end": 1048,
                    "value": "./for-await-resolution-and-error-a_FIXTURE.js",
                    "raw": "'./for-await-resolution-and-error-a_FIXTURE.js'",
                    "regex": null,
                    "bigint": null
                  },
                  "options": null
                },
                {
                  "type": "ImportExpression",
                  "start": 1057,
                  "end": 1112,
                  "source": {
                    "type": "Literal",
                    "start": 1064,
                    "end": 1111,
                    "value": "./for-await-resolution-and-error-b_FIXTURE.js",
                    "raw": "'./for-await-resolution-and-error-b_FIXTURE.js'",
                    "regex": null,
                    "bigint": null
                  },
                  "options": null
                },
                {
                  "type": "ImportExpression",
                  "start": 1120,
                  "end": 1182,
                  "source": {
                    "type": "Literal",
                    "start": 1127,
                    "end": 1181,
                    "value": "./for-await-resolution-and-error-poisoned_FIXTURE.js",
                    "raw": "'./for-await-resolution-and-error-poisoned_FIXTURE.js'",
                    "regex": null,
                    "bigint": null
                  },
                  "options": null
                },
                {
                  "type": "ImportExpression",
                  "start": 1190,
                  "end": 1245,
                  "source": {
                    "type": "Literal",
                    "start": 1197,
                    "end": 1244,
                    "value": "./for-await-resolution-and-error-a_FIXTURE.js",
                    "raw": "'./for-await-resolution-and-error-a_FIXTURE.js'",
                    "regex": null,
                    "bigint": null
                  },
                  "options": null
                }
              ]
            },
            "body": {
              "type": "BlockStatement",
              "start": 1280,
              "end": 1309,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1286,
                  "end": 1305,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1286,
                    "end": 1304,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1286,
                      "end": 1292,
                      "object": {
                        "type": "Identifier",
                        "start": 1286,
                        "end": 1287,
                        "name": "r"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1288,
                        "end": 1292,
                        "name": "push"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "start": 1293,
                        "end": 1303,
                        "object": {
                          "type": "Identifier",
                          "start": 1293,
                          "end": 1301,
                          "name": "imported"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1302,
                          "end": 1303,
                          "name": "x"
                        },
                        "computed": false,
                        "optional": false
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1313,
      "end": 1486,
      "expression": {
        "type": "CallExpression",
        "start": 1313,
        "end": 1485,
        "callee": {
          "type": "MemberExpression",
          "start": 1313,
          "end": 1471,
          "object": {
            "type": "CallExpression",
            "start": 1313,
            "end": 1466,
            "callee": {
              "type": "MemberExpression",
              "start": 1313,
              "end": 1325,
              "object": {
                "type": "CallExpression",
                "start": 1313,
                "end": 1320,
                "callee": {
                  "type": "Identifier",
                  "start": 1313,
                  "end": 1318,
                  "name": "aiter"
                },
                "arguments": [],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 1321,
                "end": 1325,
                "name": "then"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "start": 1326,
                "end": 1381,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 1332,
                  "end": 1381,
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 1334,
                      "end": 1379,
                      "argument": {
                        "type": "Literal",
                        "start": 1340,
                        "end": 1379,
                        "value": "The async function should not resolve",
                        "raw": "'The async function should not resolve'",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ]
                }
              },
              {
                "type": "ArrowFunctionExpression",
                "start": 1383,
                "end": 1465,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1383,
                    "end": 1388,
                    "name": "error"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1392,
                  "end": 1465,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1396,
                      "end": 1429,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1396,
                        "end": 1428,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1396,
                          "end": 1415,
                          "object": {
                            "type": "Identifier",
                            "start": 1396,
                            "end": 1402,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1403,
                            "end": 1415,
                            "name": "compareArray"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1416,
                            "end": 1417,
                            "name": "r"
                          },
                          {
                            "type": "ArrayExpression",
                            "start": 1419,
                            "end": 1427,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 1420,
                                "end": 1422,
                                "value": 42,
                                "raw": "42",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1424,
                                "end": 1426,
                                "value": 39,
                                "raw": "39",
                                "regex": null,
                                "bigint": null
                              }
                            ]
                          }
                        ],
                        "optional": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1432,
                      "end": 1463,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1432,
                        "end": 1462,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1432,
                          "end": 1448,
                          "object": {
                            "type": "Identifier",
                            "start": 1432,
                            "end": 1438,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1439,
                            "end": 1448,
                            "name": "sameValue"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1449,
                            "end": 1454,
                            "name": "error"
                          },
                          {
                            "type": "Literal",
                            "start": 1456,
                            "end": 1461,
                            "value": "foo",
                            "raw": "'foo'",
                            "regex": null,
                            "bigint": null
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                }
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1467,
            "end": 1471,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1472,
            "end": 1477,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 1479,
            "end": 1484,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}