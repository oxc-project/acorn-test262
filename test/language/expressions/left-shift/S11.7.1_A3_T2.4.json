{
  "type": "Program",
  "start": 0,
  "end": 920,
  "body": [
    {
      "type": "IfStatement",
      "start": 363,
      "end": 475,
      "test": {
        "type": "BinaryExpression",
        "start": 367,
        "end": 387,
        "left": {
          "type": "BinaryExpression",
          "start": 367,
          "end": 381,
          "left": {
            "type": "Literal",
            "start": 367,
            "end": 368,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": "<<",
          "right": {
            "type": "Identifier",
            "start": 372,
            "end": 381,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 386,
          "end": 387,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 389,
        "end": 475,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 393,
            "end": 473,
            "argument": {
              "type": "NewExpression",
              "start": 399,
              "end": 472,
              "callee": {
                "type": "Identifier",
                "start": 403,
                "end": 415,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 416,
                  "end": 471,
                  "left": {
                    "type": "Literal",
                    "start": 416,
                    "end": 452,
                    "value": "#1: 1 << undefined === 1. Actual: ",
                    "raw": "'#1: 1 << undefined === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 455,
                    "end": 471,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 456,
                      "end": 470,
                      "left": {
                        "type": "Literal",
                        "start": 456,
                        "end": 457,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Identifier",
                        "start": 461,
                        "end": 470,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 487,
      "end": 599,
      "test": {
        "type": "BinaryExpression",
        "start": 491,
        "end": 511,
        "left": {
          "type": "BinaryExpression",
          "start": 491,
          "end": 505,
          "left": {
            "type": "Identifier",
            "start": 491,
            "end": 500,
            "name": "undefined"
          },
          "operator": "<<",
          "right": {
            "type": "Literal",
            "start": 504,
            "end": 505,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 510,
          "end": 511,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 513,
        "end": 599,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 517,
            "end": 597,
            "argument": {
              "type": "NewExpression",
              "start": 523,
              "end": 596,
              "callee": {
                "type": "Identifier",
                "start": 527,
                "end": 539,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 540,
                  "end": 595,
                  "left": {
                    "type": "Literal",
                    "start": 540,
                    "end": 576,
                    "value": "#2: undefined << 1 === 0. Actual: ",
                    "raw": "'#2: undefined << 1 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 579,
                    "end": 595,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 580,
                      "end": 594,
                      "left": {
                        "type": "Identifier",
                        "start": 580,
                        "end": 589,
                        "name": "undefined"
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Literal",
                        "start": 593,
                        "end": 594,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 611,
      "end": 759,
      "test": {
        "type": "BinaryExpression",
        "start": 615,
        "end": 647,
        "left": {
          "type": "BinaryExpression",
          "start": 615,
          "end": 641,
          "left": {
            "type": "NewExpression",
            "start": 615,
            "end": 628,
            "callee": {
              "type": "Identifier",
              "start": 619,
              "end": 625,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 626,
                "end": 627,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "operator": "<<",
          "right": {
            "type": "Identifier",
            "start": 632,
            "end": 641,
            "name": "undefined"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 646,
          "end": 647,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 649,
        "end": 759,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 653,
            "end": 757,
            "argument": {
              "type": "NewExpression",
              "start": 659,
              "end": 756,
              "callee": {
                "type": "Identifier",
                "start": 663,
                "end": 675,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 676,
                  "end": 755,
                  "left": {
                    "type": "Literal",
                    "start": 676,
                    "end": 724,
                    "value": "#3: new Number(1) << undefined === 1. Actual: ",
                    "raw": "'#3: new Number(1) << undefined === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 727,
                    "end": 755,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 728,
                      "end": 754,
                      "left": {
                        "type": "NewExpression",
                        "start": 728,
                        "end": 741,
                        "callee": {
                          "type": "Identifier",
                          "start": 732,
                          "end": 738,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 739,
                            "end": 740,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      "operator": "<<",
                      "right": {
                        "type": "Identifier",
                        "start": 745,
                        "end": 754,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 771,
      "end": 919,
      "test": {
        "type": "BinaryExpression",
        "start": 775,
        "end": 807,
        "left": {
          "type": "BinaryExpression",
          "start": 775,
          "end": 801,
          "left": {
            "type": "Identifier",
            "start": 775,
            "end": 784,
            "name": "undefined"
          },
          "operator": "<<",
          "right": {
            "type": "NewExpression",
            "start": 788,
            "end": 801,
            "callee": {
              "type": "Identifier",
              "start": 792,
              "end": 798,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 799,
                "end": 800,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 806,
          "end": 807,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 809,
        "end": 919,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 813,
            "end": 917,
            "argument": {
              "type": "NewExpression",
              "start": 819,
              "end": 916,
              "callee": {
                "type": "Identifier",
                "start": 823,
                "end": 835,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 836,
                  "end": 915,
                  "left": {
                    "type": "Literal",
                    "start": 836,
                    "end": 884,
                    "value": "#4: undefined << new Number(1) === 0. Actual: ",
                    "raw": "'#4: undefined << new Number(1) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 887,
                    "end": 915,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 888,
                      "end": 914,
                      "left": {
                        "type": "Identifier",
                        "start": 888,
                        "end": 897,
                        "name": "undefined"
                      },
                      "operator": "<<",
                      "right": {
                        "type": "NewExpression",
                        "start": 901,
                        "end": 914,
                        "callee": {
                          "type": "Identifier",
                          "start": 905,
                          "end": 911,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 912,
                            "end": 913,
                            "value": 1,
                            "raw": "1",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}