{
  "type": "Program",
  "start": 0,
  "end": 1878,
  "body": [
    {
      "type": "IfStatement",
      "start": 282,
      "end": 541,
      "test": {
        "type": "BinaryExpression",
        "start": 286,
        "end": 310,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 286,
          "end": 303,
          "expression": {
            "type": "BinaryExpression",
            "start": 287,
            "end": 302,
            "left": {
              "type": "MemberExpression",
              "start": 287,
              "end": 297,
              "object": {
                "type": "Identifier",
                "start": 287,
                "end": 293,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 294,
                "end": 297,
                "name": "NaN"
              },
              "computed": false,
              "optional": false
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "start": 301,
              "end": 302,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 308,
          "end": 310,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 309,
            "end": 310,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 312,
        "end": 406,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 316,
            "end": 404,
            "argument": {
              "type": "NewExpression",
              "start": 322,
              "end": 403,
              "callee": {
                "type": "Identifier",
                "start": 326,
                "end": 338,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 339,
                  "end": 402,
                  "left": {
                    "type": "Literal",
                    "start": 339,
                    "end": 380,
                    "value": "#1.1: (Number.NaN << 0) === 0. Actual: ",
                    "raw": "'#1.1: (Number.NaN << 0) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 383,
                    "end": 402,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 384,
                      "end": 401,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 385,
                        "end": 400,
                        "left": {
                          "type": "MemberExpression",
                          "start": 385,
                          "end": 395,
                          "object": {
                            "type": "Identifier",
                            "start": 385,
                            "end": 391,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 392,
                            "end": 395,
                            "name": "NaN"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "operator": "<<",
                        "right": {
                          "type": "Literal",
                          "start": 399,
                          "end": 400,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "IfStatement",
        "start": 412,
        "end": 541,
        "test": {
          "type": "BinaryExpression",
          "start": 416,
          "end": 464,
          "left": {
            "type": "BinaryExpression",
            "start": 416,
            "end": 435,
            "left": {
              "type": "Literal",
              "start": 416,
              "end": 417,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "start": 418,
              "end": 435,
              "expression": {
                "type": "BinaryExpression",
                "start": 419,
                "end": 434,
                "left": {
                  "type": "MemberExpression",
                  "start": 419,
                  "end": 429,
                  "object": {
                    "type": "Identifier",
                    "start": 419,
                    "end": 425,
                    "name": "Number"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 426,
                    "end": 429,
                    "name": "NaN"
                  },
                  "computed": false,
                  "optional": false
                },
                "operator": "<<",
                "right": {
                  "type": "Literal",
                  "start": 433,
                  "end": 434,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "start": 440,
            "end": 464,
            "object": {
              "type": "Identifier",
              "start": 440,
              "end": 446,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 447,
              "end": 464,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 466,
          "end": 541,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 470,
              "end": 539,
              "argument": {
                "type": "NewExpression",
                "start": 476,
                "end": 538,
                "callee": {
                  "type": "Identifier",
                  "start": 480,
                  "end": 492,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 493,
                    "end": 537,
                    "value": "#1.2: (Number.NaN << 0) === +0. Actual: -0",
                    "raw": "'#1.2: (Number.NaN << 0) === +0. Actual: -0'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        },
        "alternate": null
      }
    },
    {
      "type": "IfStatement",
      "start": 554,
      "end": 804,
      "test": {
        "type": "BinaryExpression",
        "start": 558,
        "end": 585,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 558,
          "end": 578,
          "expression": {
            "type": "BinaryExpression",
            "start": 559,
            "end": 577,
            "left": {
              "type": "CallExpression",
              "start": 559,
              "end": 572,
              "callee": {
                "type": "Identifier",
                "start": 559,
                "end": 565,
                "name": "Number"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 566,
                  "end": 571,
                  "value": "abc",
                  "raw": "\"abc\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "start": 576,
              "end": 577,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 583,
          "end": 585,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 584,
            "end": 585,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 587,
        "end": 687,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 591,
            "end": 685,
            "argument": {
              "type": "NewExpression",
              "start": 597,
              "end": 684,
              "callee": {
                "type": "Identifier",
                "start": 601,
                "end": 613,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 614,
                  "end": 683,
                  "left": {
                    "type": "Literal",
                    "start": 614,
                    "end": 658,
                    "value": "#2.1: (Number(\"abc\") << 0) === 0. Actual: ",
                    "raw": "'#2.1: (Number(\"abc\") << 0) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 661,
                    "end": 683,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 662,
                      "end": 682,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 663,
                        "end": 681,
                        "left": {
                          "type": "CallExpression",
                          "start": 663,
                          "end": 676,
                          "callee": {
                            "type": "Identifier",
                            "start": 663,
                            "end": 669,
                            "name": "Number"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 670,
                              "end": 675,
                              "value": "abc",
                              "raw": "\"abc\"",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        },
                        "operator": "<<",
                        "right": {
                          "type": "Literal",
                          "start": 680,
                          "end": 681,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "IfStatement",
        "start": 693,
        "end": 804,
        "test": {
          "type": "BinaryExpression",
          "start": 697,
          "end": 736,
          "left": {
            "type": "BinaryExpression",
            "start": 697,
            "end": 707,
            "left": {
              "type": "Literal",
              "start": 697,
              "end": 698,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "start": 699,
              "end": 707,
              "expression": {
                "type": "BinaryExpression",
                "start": 700,
                "end": 706,
                "left": {
                  "type": "Literal",
                  "start": 700,
                  "end": 701,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                },
                "operator": "<<",
                "right": {
                  "type": "Literal",
                  "start": 705,
                  "end": 706,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "start": 712,
            "end": 736,
            "object": {
              "type": "Identifier",
              "start": 712,
              "end": 718,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 719,
              "end": 736,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 738,
          "end": 804,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 742,
              "end": 802,
              "argument": {
                "type": "NewExpression",
                "start": 748,
                "end": 801,
                "callee": {
                  "type": "Identifier",
                  "start": 752,
                  "end": 764,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 765,
                    "end": 800,
                    "value": "#2.2: (0 << 0) === +0. Actual: -0",
                    "raw": "'#2.2: (0 << 0) === +0. Actual: -0'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        },
        "alternate": null
      }
    },
    {
      "type": "IfStatement",
      "start": 817,
      "end": 1031,
      "test": {
        "type": "BinaryExpression",
        "start": 821,
        "end": 836,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 821,
          "end": 829,
          "expression": {
            "type": "BinaryExpression",
            "start": 822,
            "end": 828,
            "left": {
              "type": "Literal",
              "start": 822,
              "end": 823,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "start": 827,
              "end": 828,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 834,
          "end": 836,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 835,
            "end": 836,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 838,
        "end": 914,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 842,
            "end": 912,
            "argument": {
              "type": "NewExpression",
              "start": 848,
              "end": 911,
              "callee": {
                "type": "Identifier",
                "start": 852,
                "end": 864,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 865,
                  "end": 910,
                  "left": {
                    "type": "Literal",
                    "start": 865,
                    "end": 897,
                    "value": "#3.1: (0 << 0) === 0. Actual: ",
                    "raw": "'#3.1: (0 << 0) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 900,
                    "end": 910,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 901,
                      "end": 909,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 902,
                        "end": 908,
                        "left": {
                          "type": "Literal",
                          "start": 902,
                          "end": 903,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "<<",
                        "right": {
                          "type": "Literal",
                          "start": 907,
                          "end": 908,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "IfStatement",
        "start": 920,
        "end": 1031,
        "test": {
          "type": "BinaryExpression",
          "start": 924,
          "end": 963,
          "left": {
            "type": "BinaryExpression",
            "start": 924,
            "end": 934,
            "left": {
              "type": "Literal",
              "start": 924,
              "end": 925,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "start": 926,
              "end": 934,
              "expression": {
                "type": "BinaryExpression",
                "start": 927,
                "end": 933,
                "left": {
                  "type": "Literal",
                  "start": 927,
                  "end": 928,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                },
                "operator": "<<",
                "right": {
                  "type": "Literal",
                  "start": 932,
                  "end": 933,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "start": 939,
            "end": 963,
            "object": {
              "type": "Identifier",
              "start": 939,
              "end": 945,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 946,
              "end": 963,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 965,
          "end": 1031,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 969,
              "end": 1029,
              "argument": {
                "type": "NewExpression",
                "start": 975,
                "end": 1028,
                "callee": {
                  "type": "Identifier",
                  "start": 979,
                  "end": 991,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 992,
                    "end": 1027,
                    "value": "#3.2: (0 << 0) === +0. Actual: -0",
                    "raw": "'#3.2: (0 << 0) === +0. Actual: -0'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        },
        "alternate": null
      }
    },
    {
      "type": "IfStatement",
      "start": 1044,
      "end": 1239,
      "test": {
        "type": "BinaryExpression",
        "start": 1048,
        "end": 1064,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1048,
          "end": 1057,
          "expression": {
            "type": "BinaryExpression",
            "start": 1049,
            "end": 1056,
            "left": {
              "type": "UnaryExpression",
              "start": 1049,
              "end": 1051,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 1050,
                "end": 1051,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "start": 1055,
              "end": 1056,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1062,
          "end": 1064,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1063,
            "end": 1064,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1066,
        "end": 1120,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1070,
            "end": 1118,
            "argument": {
              "type": "NewExpression",
              "start": 1076,
              "end": 1117,
              "callee": {
                "type": "Identifier",
                "start": 1080,
                "end": 1092,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1093,
                  "end": 1116,
                  "value": "#4.1: (-0 << 0) === 0",
                  "raw": "\"#4.1: (-0 << 0) === 0\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "IfStatement",
        "start": 1126,
        "end": 1239,
        "test": {
          "type": "BinaryExpression",
          "start": 1130,
          "end": 1170,
          "left": {
            "type": "BinaryExpression",
            "start": 1130,
            "end": 1141,
            "left": {
              "type": "Literal",
              "start": 1130,
              "end": 1131,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "start": 1132,
              "end": 1141,
              "expression": {
                "type": "BinaryExpression",
                "start": 1133,
                "end": 1140,
                "left": {
                  "type": "UnaryExpression",
                  "start": 1133,
                  "end": 1135,
                  "operator": "-",
                  "prefix": true,
                  "argument": {
                    "type": "Literal",
                    "start": 1134,
                    "end": 1135,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  }
                },
                "operator": "<<",
                "right": {
                  "type": "Literal",
                  "start": 1139,
                  "end": 1140,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "start": 1146,
            "end": 1170,
            "object": {
              "type": "Identifier",
              "start": 1146,
              "end": 1152,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1153,
              "end": 1170,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 1172,
          "end": 1239,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 1176,
              "end": 1237,
              "argument": {
                "type": "NewExpression",
                "start": 1182,
                "end": 1236,
                "callee": {
                  "type": "Identifier",
                  "start": 1186,
                  "end": 1198,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 1199,
                    "end": 1235,
                    "value": "#4.2: (-0 << 0) === +0. Actual: -0",
                    "raw": "\"#4.2: (-0 << 0) === +0. Actual: -0\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        },
        "alternate": null
      }
    },
    {
      "type": "IfStatement",
      "start": 1252,
      "end": 1581,
      "test": {
        "type": "BinaryExpression",
        "start": 1256,
        "end": 1294,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1256,
          "end": 1287,
          "expression": {
            "type": "BinaryExpression",
            "start": 1257,
            "end": 1286,
            "left": {
              "type": "MemberExpression",
              "start": 1257,
              "end": 1281,
              "object": {
                "type": "Identifier",
                "start": 1257,
                "end": 1263,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1264,
                "end": 1281,
                "name": "POSITIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "start": 1285,
              "end": 1286,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1292,
          "end": 1294,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1293,
            "end": 1294,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1296,
        "end": 1418,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1300,
            "end": 1416,
            "argument": {
              "type": "NewExpression",
              "start": 1306,
              "end": 1415,
              "callee": {
                "type": "Identifier",
                "start": 1310,
                "end": 1322,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1323,
                  "end": 1414,
                  "left": {
                    "type": "Literal",
                    "start": 1323,
                    "end": 1378,
                    "value": "#5.1: (Number.POSITIVE_INFINITY << 0) === 0. Actual: ",
                    "raw": "'#5.1: (Number.POSITIVE_INFINITY << 0) === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1381,
                    "end": 1414,
                    "expression": {
                      "type": "ParenthesizedExpression",
                      "start": 1382,
                      "end": 1413,
                      "expression": {
                        "type": "BinaryExpression",
                        "start": 1383,
                        "end": 1412,
                        "left": {
                          "type": "MemberExpression",
                          "start": 1383,
                          "end": 1407,
                          "object": {
                            "type": "Identifier",
                            "start": 1383,
                            "end": 1389,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1390,
                            "end": 1407,
                            "name": "POSITIVE_INFINITY"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "operator": "<<",
                        "right": {
                          "type": "Literal",
                          "start": 1411,
                          "end": 1412,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "IfStatement",
        "start": 1424,
        "end": 1581,
        "test": {
          "type": "BinaryExpression",
          "start": 1428,
          "end": 1490,
          "left": {
            "type": "BinaryExpression",
            "start": 1428,
            "end": 1461,
            "left": {
              "type": "Literal",
              "start": 1428,
              "end": 1429,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "start": 1430,
              "end": 1461,
              "expression": {
                "type": "BinaryExpression",
                "start": 1431,
                "end": 1460,
                "left": {
                  "type": "MemberExpression",
                  "start": 1431,
                  "end": 1455,
                  "object": {
                    "type": "Identifier",
                    "start": 1431,
                    "end": 1437,
                    "name": "Number"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1438,
                    "end": 1455,
                    "name": "POSITIVE_INFINITY"
                  },
                  "computed": false,
                  "optional": false
                },
                "operator": "<<",
                "right": {
                  "type": "Literal",
                  "start": 1459,
                  "end": 1460,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "start": 1466,
            "end": 1490,
            "object": {
              "type": "Identifier",
              "start": 1466,
              "end": 1472,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1473,
              "end": 1490,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 1492,
          "end": 1581,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 1496,
              "end": 1579,
              "argument": {
                "type": "NewExpression",
                "start": 1502,
                "end": 1578,
                "callee": {
                  "type": "Identifier",
                  "start": 1506,
                  "end": 1518,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 1519,
                    "end": 1577,
                    "value": "#5.2: (Number.POSITIVE_INFINITY << 0) === +0. Actual: -0",
                    "raw": "'#5.2: (Number.POSITIVE_INFINITY << 0) === +0. Actual: -0'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        },
        "alternate": null
      }
    },
    {
      "type": "IfStatement",
      "start": 1594,
      "end": 1877,
      "test": {
        "type": "BinaryExpression",
        "start": 1598,
        "end": 1636,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 1598,
          "end": 1629,
          "expression": {
            "type": "BinaryExpression",
            "start": 1599,
            "end": 1628,
            "left": {
              "type": "MemberExpression",
              "start": 1599,
              "end": 1623,
              "object": {
                "type": "Identifier",
                "start": 1599,
                "end": 1605,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 1606,
                "end": 1623,
                "name": "NEGATIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            },
            "operator": "<<",
            "right": {
              "type": "Literal",
              "start": 1627,
              "end": 1628,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1634,
          "end": 1636,
          "operator": "+",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1635,
            "end": 1636,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1638,
        "end": 1714,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1642,
            "end": 1712,
            "argument": {
              "type": "NewExpression",
              "start": 1648,
              "end": 1711,
              "callee": {
                "type": "Identifier",
                "start": 1652,
                "end": 1664,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1665,
                  "end": 1710,
                  "value": "#6.1: (Number.NEGATIVE_INFINITY << 0) === 0",
                  "raw": "\"#6.1: (Number.NEGATIVE_INFINITY << 0) === 0\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "IfStatement",
        "start": 1720,
        "end": 1877,
        "test": {
          "type": "BinaryExpression",
          "start": 1724,
          "end": 1786,
          "left": {
            "type": "BinaryExpression",
            "start": 1724,
            "end": 1757,
            "left": {
              "type": "Literal",
              "start": 1724,
              "end": 1725,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            "operator": "/",
            "right": {
              "type": "ParenthesizedExpression",
              "start": 1726,
              "end": 1757,
              "expression": {
                "type": "BinaryExpression",
                "start": 1727,
                "end": 1756,
                "left": {
                  "type": "MemberExpression",
                  "start": 1727,
                  "end": 1751,
                  "object": {
                    "type": "Identifier",
                    "start": 1727,
                    "end": 1733,
                    "name": "Number"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1734,
                    "end": 1751,
                    "name": "NEGATIVE_INFINITY"
                  },
                  "computed": false,
                  "optional": false
                },
                "operator": "<<",
                "right": {
                  "type": "Literal",
                  "start": 1755,
                  "end": 1756,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          },
          "operator": "!==",
          "right": {
            "type": "MemberExpression",
            "start": 1762,
            "end": 1786,
            "object": {
              "type": "Identifier",
              "start": 1762,
              "end": 1768,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1769,
              "end": 1786,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          }
        },
        "consequent": {
          "type": "BlockStatement",
          "start": 1788,
          "end": 1877,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 1792,
              "end": 1875,
              "argument": {
                "type": "NewExpression",
                "start": 1798,
                "end": 1874,
                "callee": {
                  "type": "Identifier",
                  "start": 1802,
                  "end": 1814,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 1815,
                    "end": 1873,
                    "value": "#6.2: (Number.NEGATIVE_INFINITY << 0) === +0. Actual: -0",
                    "raw": "\"#6.2: (Number.NEGATIVE_INFINITY << 0) === +0. Actual: -0\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        },
        "alternate": null
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}