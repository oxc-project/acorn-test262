{
  "type": "Program",
  "start": 0,
  "end": 855,
  "body": [
    {
      "type": "IfStatement",
      "start": 281,
      "end": 354,
      "test": {
        "type": "BinaryExpression",
        "start": 285,
        "end": 300,
        "left": {
          "type": "UnaryExpression",
          "start": 285,
          "end": 290,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 286,
            "end": 290,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 295,
          "end": 300,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 302,
        "end": 354,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 306,
            "end": 352,
            "argument": {
              "type": "NewExpression",
              "start": 312,
              "end": 351,
              "callee": {
                "type": "Identifier",
                "start": 316,
                "end": 328,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 329,
                  "end": 350,
                  "value": "#1: !true === false",
                  "raw": "'#1: !true === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 366,
      "end": 443,
      "test": {
        "type": "BinaryExpression",
        "start": 370,
        "end": 387,
        "left": {
          "type": "UnaryExpression",
          "start": 370,
          "end": 378,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "ParenthesizedExpression",
            "start": 371,
            "end": 378,
            "expression": {
              "type": "UnaryExpression",
              "start": 372,
              "end": 377,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "start": 373,
                "end": 377,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 383,
          "end": 387,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 389,
        "end": 443,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 393,
            "end": 441,
            "argument": {
              "type": "NewExpression",
              "start": 399,
              "end": 440,
              "callee": {
                "type": "Identifier",
                "start": 403,
                "end": 415,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 416,
                  "end": 439,
                  "value": "#2: !(!true) === true",
                  "raw": "'#2: !(!true) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 455,
      "end": 468,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 459,
          "end": 467,
          "id": {
            "type": "Identifier",
            "start": 459,
            "end": 460,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 463,
            "end": 467,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 469,
      "end": 550,
      "test": {
        "type": "BinaryExpression",
        "start": 473,
        "end": 485,
        "left": {
          "type": "UnaryExpression",
          "start": 473,
          "end": 475,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "Identifier",
            "start": 474,
            "end": 475,
            "name": "x"
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 480,
          "end": 485,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 487,
        "end": 550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 491,
            "end": 548,
            "argument": {
              "type": "NewExpression",
              "start": 497,
              "end": 547,
              "callee": {
                "type": "Identifier",
                "start": 501,
                "end": 513,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 514,
                  "end": 546,
                  "value": "#3: var x = true; !x === false",
                  "raw": "'#3: var x = true; !x === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 562,
      "end": 575,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 566,
          "end": 574,
          "id": {
            "type": "Identifier",
            "start": 566,
            "end": 567,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 570,
            "end": 574,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 576,
      "end": 661,
      "test": {
        "type": "BinaryExpression",
        "start": 580,
        "end": 594,
        "left": {
          "type": "UnaryExpression",
          "start": 580,
          "end": 585,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "ParenthesizedExpression",
            "start": 581,
            "end": 585,
            "expression": {
              "type": "UnaryExpression",
              "start": 582,
              "end": 584,
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 583,
                "end": 584,
                "name": "x"
              }
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 590,
          "end": 594,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 596,
        "end": 661,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 600,
            "end": 659,
            "argument": {
              "type": "NewExpression",
              "start": 606,
              "end": 658,
              "callee": {
                "type": "Identifier",
                "start": 610,
                "end": 622,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 623,
                  "end": 657,
                  "value": "#4: var x = true; !(!x) === true",
                  "raw": "'#4: var x = true; !(!x) === true'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 673,
      "end": 699,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 677,
          "end": 698,
          "id": {
            "type": "Identifier",
            "start": 677,
            "end": 683,
            "name": "object"
          },
          "init": {
            "type": "NewExpression",
            "start": 686,
            "end": 698,
            "callee": {
              "type": "Identifier",
              "start": 690,
              "end": 696,
              "name": "Object"
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 700,
      "end": 719,
      "expression": {
        "type": "AssignmentExpression",
        "start": 700,
        "end": 718,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 700,
          "end": 711,
          "object": {
            "type": "Identifier",
            "start": 700,
            "end": 706,
            "name": "object"
          },
          "property": {
            "type": "Identifier",
            "start": 707,
            "end": 711,
            "name": "prop"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 714,
          "end": 718,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 720,
      "end": 854,
      "test": {
        "type": "BinaryExpression",
        "start": 724,
        "end": 746,
        "left": {
          "type": "UnaryExpression",
          "start": 724,
          "end": 736,
          "operator": "!",
          "prefix": true,
          "argument": {
            "type": "MemberExpression",
            "start": 725,
            "end": 736,
            "object": {
              "type": "Identifier",
              "start": 725,
              "end": 731,
              "name": "object"
            },
            "property": {
              "type": "Identifier",
              "start": 732,
              "end": 736,
              "name": "prop"
            },
            "computed": false,
            "optional": false
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 741,
          "end": 746,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 748,
        "end": 854,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 752,
            "end": 852,
            "argument": {
              "type": "NewExpression",
              "start": 758,
              "end": 851,
              "callee": {
                "type": "Identifier",
                "start": 762,
                "end": 774,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 775,
                  "end": 850,
                  "value": "#5: var object = new Object(); object.prop = true; !object.prop === false",
                  "raw": "'#5: var object = new Object(); object.prop = true; !object.prop === false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}