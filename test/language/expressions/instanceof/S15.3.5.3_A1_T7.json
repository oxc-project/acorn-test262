{
  "type": "Program",
  "start": 0,
  "end": 692,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 378,
      "end": 390,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 382,
          "end": 389,
          "id": {
            "type": "Identifier",
            "start": 382,
            "end": 389,
            "name": "FACTORY"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 391,
      "end": 436,
      "expression": {
        "type": "AssignmentExpression",
        "start": 391,
        "end": 435,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 391,
          "end": 398,
          "name": "FACTORY"
        },
        "right": {
          "type": "CallExpression",
          "start": 401,
          "end": 435,
          "callee": {
            "type": "Identifier",
            "start": 401,
            "end": 409,
            "name": "Function"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 410,
              "end": 416,
              "value": "name",
              "raw": "\"name\"",
              "regex": null,
              "bigint": null
            },
            {
              "type": "Literal",
              "start": 417,
              "end": 434,
              "value": "this.name=name;",
              "raw": "\"this.name=name;\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 448,
      "end": 691,
      "test": {
        "type": "BinaryExpression",
        "start": 452,
        "end": 491,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 452,
          "end": 483,
          "expression": {
            "type": "BinaryExpression",
            "start": 453,
            "end": 482,
            "left": {
              "type": "Identifier",
              "start": 453,
              "end": 462,
              "name": "undefined"
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "start": 475,
              "end": 482,
              "name": "FACTORY"
            }
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 486,
          "end": 491,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 493,
        "end": 691,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 497,
            "end": 689,
            "argument": {
              "type": "NewExpression",
              "start": 503,
              "end": 688,
              "callee": {
                "type": "Identifier",
                "start": 507,
                "end": 519,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 520,
                  "end": 687,
                  "value": "#1: Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false",
                  "raw": "'#1: Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}