{
  "type": "Program",
  "start": 0,
  "end": 572,
  "body": [
    {
      "type": "TryStatement",
      "start": 349,
      "end": 571,
      "block": {
        "type": "BlockStatement",
        "start": 352,
        "end": 441,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 355,
            "end": 373,
            "expression": {
              "type": "BinaryExpression",
              "start": 355,
              "end": 372,
              "left": {
                "type": "Literal",
                "start": 355,
                "end": 356,
                "value": 1,
                "raw": "1"
              },
              "operator": "instanceof",
              "right": {
                "type": "Identifier",
                "start": 368,
                "end": 372,
                "name": "Math"
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 375,
            "end": 439,
            "argument": {
              "type": "NewExpression",
              "start": 381,
              "end": 438,
              "callee": {
                "type": "Identifier",
                "start": 385,
                "end": 397,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 398,
                  "end": 437,
                  "value": "#1: 1 instanceof Math throw TypeError",
                  "raw": "'#1: 1 instanceof Math throw TypeError'"
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 442,
        "end": 571,
        "param": {
          "type": "Identifier",
          "start": 448,
          "end": 449,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 450,
          "end": 571,
          "body": [
            {
              "type": "IfStatement",
              "start": 454,
              "end": 567,
              "test": {
                "type": "BinaryExpression",
                "start": 458,
                "end": 490,
                "left": {
                  "type": "BinaryExpression",
                  "start": 458,
                  "end": 481,
                  "left": {
                    "type": "Identifier",
                    "start": 458,
                    "end": 459,
                    "name": "e"
                  },
                  "operator": "instanceof",
                  "right": {
                    "type": "Identifier",
                    "start": 472,
                    "end": 481,
                    "name": "TypeError"
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 486,
                  "end": 490,
                  "value": true,
                  "raw": "true"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 492,
                "end": 567,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 499,
                    "end": 563,
                    "argument": {
                      "type": "NewExpression",
                      "start": 505,
                      "end": 562,
                      "callee": {
                        "type": "Identifier",
                        "start": 509,
                        "end": 521,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 522,
                          "end": 561,
                          "value": "#1: 1 instanceof Math throw TypeError",
                          "raw": "'#1: 1 instanceof Math throw TypeError'"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}