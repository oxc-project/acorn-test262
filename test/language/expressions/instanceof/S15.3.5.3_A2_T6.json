{
  "type": "Program",
  "start": 0,
  "end": 881,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 533,
      "end": 545,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 537,
          "end": 544,
          "id": {
            "type": "Identifier",
            "start": 537,
            "end": 544,
            "name": "FACTORY"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 546,
      "end": 569,
      "expression": {
        "type": "AssignmentExpression",
        "start": 546,
        "end": 568,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 546,
          "end": 553,
          "name": "FACTORY"
        },
        "right": {
          "type": "NewExpression",
          "start": 556,
          "end": 568,
          "callee": {
            "type": "Identifier",
            "start": 560,
            "end": 568,
            "name": "Function"
          },
          "arguments": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 571,
      "end": 599,
      "expression": {
        "type": "AssignmentExpression",
        "start": 571,
        "end": 598,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 571,
          "end": 588,
          "object": {
            "type": "Identifier",
            "start": 571,
            "end": 578,
            "name": "FACTORY"
          },
          "property": {
            "type": "Identifier",
            "start": 579,
            "end": 588,
            "name": "prototype"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 591,
          "end": 598,
          "value": "error",
          "raw": "\"error\"",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "TryStatement",
      "start": 612,
      "end": 880,
      "block": {
        "type": "BlockStatement",
        "start": 616,
        "end": 742,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 620,
            "end": 659,
            "expression": {
              "type": "BinaryExpression",
              "start": 620,
              "end": 658,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 620,
                "end": 639,
                "expression": {
                  "type": "FunctionExpression",
                  "start": 622,
                  "end": 638,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 633,
                    "end": 638,
                    "body": []
                  }
                }
              },
              "operator": "instanceof",
              "right": {
                "type": "Identifier",
                "start": 651,
                "end": 658,
                "name": "FACTORY"
              }
            }
          },
          {
            "type": "ThrowStatement",
            "start": 662,
            "end": 740,
            "argument": {
              "type": "NewExpression",
              "start": 668,
              "end": 739,
              "callee": {
                "type": "Identifier",
                "start": 672,
                "end": 684,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 685,
                  "end": 738,
                  "value": "#1: O is not an object, throw a TypeError exception",
                  "raw": "'#1: O is not an object, throw a TypeError exception'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 743,
        "end": 880,
        "param": {
          "type": "Identifier",
          "start": 750,
          "end": 751,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 753,
          "end": 880,
          "body": [
            {
              "type": "IfStatement",
              "start": 757,
              "end": 878,
              "test": {
                "type": "UnaryExpression",
                "start": 761,
                "end": 786,
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "ParenthesizedExpression",
                  "start": 762,
                  "end": 786,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 763,
                    "end": 785,
                    "left": {
                      "type": "Identifier",
                      "start": 763,
                      "end": 764,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 776,
                      "end": 785,
                      "name": "TypeError"
                    }
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 788,
                "end": 878,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 794,
                    "end": 874,
                    "argument": {
                      "type": "NewExpression",
                      "start": 800,
                      "end": 873,
                      "callee": {
                        "type": "Identifier",
                        "start": 804,
                        "end": 816,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 817,
                          "end": 872,
                          "value": "#1.1: O is not an object, throw a TypeError exception",
                          "raw": "'#1.1: O is not an object, throw a TypeError exception'",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}