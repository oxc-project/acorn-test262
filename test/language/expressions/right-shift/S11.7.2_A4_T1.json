{
  "type": "Program",
  "start": 0,
  "end": 61447,
  "body": [
    {
      "type": "IfStatement",
      "start": 270,
      "end": 365,
      "test": {
        "type": "BinaryExpression",
        "start": 274,
        "end": 288,
        "left": {
          "type": "BinaryExpression",
          "start": 274,
          "end": 281,
          "left": {
            "type": "UnaryExpression",
            "start": 274,
            "end": 276,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 275,
              "end": 276,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 280,
            "end": 281,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 286,
          "end": 288,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 287,
            "end": 288,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 290,
        "end": 365,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 295,
            "end": 362,
            "argument": {
              "type": "NewExpression",
              "start": 301,
              "end": 361,
              "callee": {
                "type": "Identifier",
                "start": 305,
                "end": 317,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 318,
                  "end": 360,
                  "left": {
                    "type": "Literal",
                    "start": 318,
                    "end": 348,
                    "value": "#1: -1 >> 0 === -1. Actual: ",
                    "raw": "'#1: -1 >> 0 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 351,
                    "end": 360,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 352,
                      "end": 359,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 352,
                        "end": 354,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 353,
                          "end": 354,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 358,
                        "end": 359,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 369,
      "end": 464,
      "test": {
        "type": "BinaryExpression",
        "start": 373,
        "end": 387,
        "left": {
          "type": "BinaryExpression",
          "start": 373,
          "end": 380,
          "left": {
            "type": "UnaryExpression",
            "start": 373,
            "end": 375,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 374,
              "end": 375,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 379,
            "end": 380,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 385,
          "end": 387,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 386,
            "end": 387,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 389,
        "end": 464,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 394,
            "end": 461,
            "argument": {
              "type": "NewExpression",
              "start": 400,
              "end": 460,
              "callee": {
                "type": "Identifier",
                "start": 404,
                "end": 416,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 417,
                  "end": 459,
                  "left": {
                    "type": "Literal",
                    "start": 417,
                    "end": 447,
                    "value": "#2: -2 >> 0 === -2. Actual: ",
                    "raw": "'#2: -2 >> 0 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 450,
                    "end": 459,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 451,
                      "end": 458,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 451,
                        "end": 453,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 452,
                          "end": 453,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 457,
                        "end": 458,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 468,
      "end": 563,
      "test": {
        "type": "BinaryExpression",
        "start": 472,
        "end": 486,
        "left": {
          "type": "BinaryExpression",
          "start": 472,
          "end": 479,
          "left": {
            "type": "UnaryExpression",
            "start": 472,
            "end": 474,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 473,
              "end": 474,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 478,
            "end": 479,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 484,
          "end": 486,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 485,
            "end": 486,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 488,
        "end": 563,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 493,
            "end": 560,
            "argument": {
              "type": "NewExpression",
              "start": 499,
              "end": 559,
              "callee": {
                "type": "Identifier",
                "start": 503,
                "end": 515,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 516,
                  "end": 558,
                  "left": {
                    "type": "Literal",
                    "start": 516,
                    "end": 546,
                    "value": "#3: -4 >> 0 === -4. Actual: ",
                    "raw": "'#3: -4 >> 0 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 549,
                    "end": 558,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 550,
                      "end": 557,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 550,
                        "end": 552,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 551,
                          "end": 552,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 556,
                        "end": 557,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 567,
      "end": 662,
      "test": {
        "type": "BinaryExpression",
        "start": 571,
        "end": 585,
        "left": {
          "type": "BinaryExpression",
          "start": 571,
          "end": 578,
          "left": {
            "type": "UnaryExpression",
            "start": 571,
            "end": 573,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 572,
              "end": 573,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 577,
            "end": 578,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 583,
          "end": 585,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 584,
            "end": 585,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 587,
        "end": 662,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 592,
            "end": 659,
            "argument": {
              "type": "NewExpression",
              "start": 598,
              "end": 658,
              "callee": {
                "type": "Identifier",
                "start": 602,
                "end": 614,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 615,
                  "end": 657,
                  "left": {
                    "type": "Literal",
                    "start": 615,
                    "end": 645,
                    "value": "#4: -8 >> 0 === -8. Actual: ",
                    "raw": "'#4: -8 >> 0 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 648,
                    "end": 657,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 649,
                      "end": 656,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 649,
                        "end": 651,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 650,
                          "end": 651,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 655,
                        "end": 656,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 666,
      "end": 766,
      "test": {
        "type": "BinaryExpression",
        "start": 670,
        "end": 686,
        "left": {
          "type": "BinaryExpression",
          "start": 670,
          "end": 678,
          "left": {
            "type": "UnaryExpression",
            "start": 670,
            "end": 673,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 671,
              "end": 673,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 677,
            "end": 678,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 683,
          "end": 686,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 684,
            "end": 686,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 688,
        "end": 766,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 693,
            "end": 763,
            "argument": {
              "type": "NewExpression",
              "start": 699,
              "end": 762,
              "callee": {
                "type": "Identifier",
                "start": 703,
                "end": 715,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 716,
                  "end": 761,
                  "left": {
                    "type": "Literal",
                    "start": 716,
                    "end": 748,
                    "value": "#5: -16 >> 0 === -16. Actual: ",
                    "raw": "'#5: -16 >> 0 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 751,
                    "end": 761,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 752,
                      "end": 760,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 752,
                        "end": 755,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 753,
                          "end": 755,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 759,
                        "end": 760,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 770,
      "end": 870,
      "test": {
        "type": "BinaryExpression",
        "start": 774,
        "end": 790,
        "left": {
          "type": "BinaryExpression",
          "start": 774,
          "end": 782,
          "left": {
            "type": "UnaryExpression",
            "start": 774,
            "end": 777,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 775,
              "end": 777,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 781,
            "end": 782,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 787,
          "end": 790,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 788,
            "end": 790,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 792,
        "end": 870,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 797,
            "end": 867,
            "argument": {
              "type": "NewExpression",
              "start": 803,
              "end": 866,
              "callee": {
                "type": "Identifier",
                "start": 807,
                "end": 819,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 820,
                  "end": 865,
                  "left": {
                    "type": "Literal",
                    "start": 820,
                    "end": 852,
                    "value": "#6: -32 >> 0 === -32. Actual: ",
                    "raw": "'#6: -32 >> 0 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 855,
                    "end": 865,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 856,
                      "end": 864,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 856,
                        "end": 859,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 857,
                          "end": 859,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 863,
                        "end": 864,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 874,
      "end": 974,
      "test": {
        "type": "BinaryExpression",
        "start": 878,
        "end": 894,
        "left": {
          "type": "BinaryExpression",
          "start": 878,
          "end": 886,
          "left": {
            "type": "UnaryExpression",
            "start": 878,
            "end": 881,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 879,
              "end": 881,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 885,
            "end": 886,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 891,
          "end": 894,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 892,
            "end": 894,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 896,
        "end": 974,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 901,
            "end": 971,
            "argument": {
              "type": "NewExpression",
              "start": 907,
              "end": 970,
              "callee": {
                "type": "Identifier",
                "start": 911,
                "end": 923,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 924,
                  "end": 969,
                  "left": {
                    "type": "Literal",
                    "start": 924,
                    "end": 956,
                    "value": "#7: -64 >> 0 === -64. Actual: ",
                    "raw": "'#7: -64 >> 0 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 959,
                    "end": 969,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 960,
                      "end": 968,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 960,
                        "end": 963,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 961,
                          "end": 963,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 967,
                        "end": 968,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 978,
      "end": 1083,
      "test": {
        "type": "BinaryExpression",
        "start": 982,
        "end": 1000,
        "left": {
          "type": "BinaryExpression",
          "start": 982,
          "end": 991,
          "left": {
            "type": "UnaryExpression",
            "start": 982,
            "end": 986,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 983,
              "end": 986,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 990,
            "end": 991,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 996,
          "end": 1000,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 997,
            "end": 1000,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1002,
        "end": 1083,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1007,
            "end": 1080,
            "argument": {
              "type": "NewExpression",
              "start": 1013,
              "end": 1079,
              "callee": {
                "type": "Identifier",
                "start": 1017,
                "end": 1029,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1030,
                  "end": 1078,
                  "left": {
                    "type": "Literal",
                    "start": 1030,
                    "end": 1064,
                    "value": "#8: -128 >> 0 === -128. Actual: ",
                    "raw": "'#8: -128 >> 0 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1067,
                    "end": 1078,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1068,
                      "end": 1077,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1068,
                        "end": 1072,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1069,
                          "end": 1072,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1076,
                        "end": 1077,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1087,
      "end": 1192,
      "test": {
        "type": "BinaryExpression",
        "start": 1091,
        "end": 1109,
        "left": {
          "type": "BinaryExpression",
          "start": 1091,
          "end": 1100,
          "left": {
            "type": "UnaryExpression",
            "start": 1091,
            "end": 1095,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1092,
              "end": 1095,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1099,
            "end": 1100,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1105,
          "end": 1109,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1106,
            "end": 1109,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1111,
        "end": 1192,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1116,
            "end": 1189,
            "argument": {
              "type": "NewExpression",
              "start": 1122,
              "end": 1188,
              "callee": {
                "type": "Identifier",
                "start": 1126,
                "end": 1138,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1139,
                  "end": 1187,
                  "left": {
                    "type": "Literal",
                    "start": 1139,
                    "end": 1173,
                    "value": "#9: -256 >> 0 === -256. Actual: ",
                    "raw": "'#9: -256 >> 0 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1176,
                    "end": 1187,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1177,
                      "end": 1186,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1177,
                        "end": 1181,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1178,
                          "end": 1181,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1185,
                        "end": 1186,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1196,
      "end": 1302,
      "test": {
        "type": "BinaryExpression",
        "start": 1200,
        "end": 1218,
        "left": {
          "type": "BinaryExpression",
          "start": 1200,
          "end": 1209,
          "left": {
            "type": "UnaryExpression",
            "start": 1200,
            "end": 1204,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1201,
              "end": 1204,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1208,
            "end": 1209,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1214,
          "end": 1218,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1215,
            "end": 1218,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1220,
        "end": 1302,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1225,
            "end": 1299,
            "argument": {
              "type": "NewExpression",
              "start": 1231,
              "end": 1298,
              "callee": {
                "type": "Identifier",
                "start": 1235,
                "end": 1247,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1248,
                  "end": 1297,
                  "left": {
                    "type": "Literal",
                    "start": 1248,
                    "end": 1283,
                    "value": "#10: -512 >> 0 === -512. Actual: ",
                    "raw": "'#10: -512 >> 0 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1286,
                    "end": 1297,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1287,
                      "end": 1296,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1287,
                        "end": 1291,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1288,
                          "end": 1291,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1295,
                        "end": 1296,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1306,
      "end": 1417,
      "test": {
        "type": "BinaryExpression",
        "start": 1310,
        "end": 1330,
        "left": {
          "type": "BinaryExpression",
          "start": 1310,
          "end": 1320,
          "left": {
            "type": "UnaryExpression",
            "start": 1310,
            "end": 1315,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1311,
              "end": 1315,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1319,
            "end": 1320,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1325,
          "end": 1330,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1326,
            "end": 1330,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1332,
        "end": 1417,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1337,
            "end": 1414,
            "argument": {
              "type": "NewExpression",
              "start": 1343,
              "end": 1413,
              "callee": {
                "type": "Identifier",
                "start": 1347,
                "end": 1359,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1360,
                  "end": 1412,
                  "left": {
                    "type": "Literal",
                    "start": 1360,
                    "end": 1397,
                    "value": "#11: -1024 >> 0 === -1024. Actual: ",
                    "raw": "'#11: -1024 >> 0 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1400,
                    "end": 1412,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1401,
                      "end": 1411,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1401,
                        "end": 1406,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1402,
                          "end": 1406,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1410,
                        "end": 1411,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1421,
      "end": 1532,
      "test": {
        "type": "BinaryExpression",
        "start": 1425,
        "end": 1445,
        "left": {
          "type": "BinaryExpression",
          "start": 1425,
          "end": 1435,
          "left": {
            "type": "UnaryExpression",
            "start": 1425,
            "end": 1430,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1426,
              "end": 1430,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1434,
            "end": 1435,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1440,
          "end": 1445,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1441,
            "end": 1445,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1447,
        "end": 1532,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1452,
            "end": 1529,
            "argument": {
              "type": "NewExpression",
              "start": 1458,
              "end": 1528,
              "callee": {
                "type": "Identifier",
                "start": 1462,
                "end": 1474,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1475,
                  "end": 1527,
                  "left": {
                    "type": "Literal",
                    "start": 1475,
                    "end": 1512,
                    "value": "#12: -2048 >> 0 === -2048. Actual: ",
                    "raw": "'#12: -2048 >> 0 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1515,
                    "end": 1527,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1516,
                      "end": 1526,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1516,
                        "end": 1521,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1517,
                          "end": 1521,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1525,
                        "end": 1526,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1536,
      "end": 1647,
      "test": {
        "type": "BinaryExpression",
        "start": 1540,
        "end": 1560,
        "left": {
          "type": "BinaryExpression",
          "start": 1540,
          "end": 1550,
          "left": {
            "type": "UnaryExpression",
            "start": 1540,
            "end": 1545,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1541,
              "end": 1545,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1549,
            "end": 1550,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1555,
          "end": 1560,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1556,
            "end": 1560,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1562,
        "end": 1647,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1567,
            "end": 1644,
            "argument": {
              "type": "NewExpression",
              "start": 1573,
              "end": 1643,
              "callee": {
                "type": "Identifier",
                "start": 1577,
                "end": 1589,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1590,
                  "end": 1642,
                  "left": {
                    "type": "Literal",
                    "start": 1590,
                    "end": 1627,
                    "value": "#13: -4096 >> 0 === -4096. Actual: ",
                    "raw": "'#13: -4096 >> 0 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1630,
                    "end": 1642,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1631,
                      "end": 1641,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1631,
                        "end": 1636,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1632,
                          "end": 1636,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1640,
                        "end": 1641,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1651,
      "end": 1762,
      "test": {
        "type": "BinaryExpression",
        "start": 1655,
        "end": 1675,
        "left": {
          "type": "BinaryExpression",
          "start": 1655,
          "end": 1665,
          "left": {
            "type": "UnaryExpression",
            "start": 1655,
            "end": 1660,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1656,
              "end": 1660,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1664,
            "end": 1665,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1670,
          "end": 1675,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1671,
            "end": 1675,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1677,
        "end": 1762,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1682,
            "end": 1759,
            "argument": {
              "type": "NewExpression",
              "start": 1688,
              "end": 1758,
              "callee": {
                "type": "Identifier",
                "start": 1692,
                "end": 1704,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1705,
                  "end": 1757,
                  "left": {
                    "type": "Literal",
                    "start": 1705,
                    "end": 1742,
                    "value": "#14: -8192 >> 0 === -8192. Actual: ",
                    "raw": "'#14: -8192 >> 0 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1745,
                    "end": 1757,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1746,
                      "end": 1756,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1746,
                        "end": 1751,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1747,
                          "end": 1751,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1755,
                        "end": 1756,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1766,
      "end": 1882,
      "test": {
        "type": "BinaryExpression",
        "start": 1770,
        "end": 1792,
        "left": {
          "type": "BinaryExpression",
          "start": 1770,
          "end": 1781,
          "left": {
            "type": "UnaryExpression",
            "start": 1770,
            "end": 1776,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1771,
              "end": 1776,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1780,
            "end": 1781,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1786,
          "end": 1792,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1787,
            "end": 1792,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1794,
        "end": 1882,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1799,
            "end": 1879,
            "argument": {
              "type": "NewExpression",
              "start": 1805,
              "end": 1878,
              "callee": {
                "type": "Identifier",
                "start": 1809,
                "end": 1821,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1822,
                  "end": 1877,
                  "left": {
                    "type": "Literal",
                    "start": 1822,
                    "end": 1861,
                    "value": "#15: -16384 >> 0 === -16384. Actual: ",
                    "raw": "'#15: -16384 >> 0 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1864,
                    "end": 1877,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1865,
                      "end": 1876,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1865,
                        "end": 1871,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1866,
                          "end": 1871,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1875,
                        "end": 1876,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1886,
      "end": 2002,
      "test": {
        "type": "BinaryExpression",
        "start": 1890,
        "end": 1912,
        "left": {
          "type": "BinaryExpression",
          "start": 1890,
          "end": 1901,
          "left": {
            "type": "UnaryExpression",
            "start": 1890,
            "end": 1896,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 1891,
              "end": 1896,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1900,
            "end": 1901,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 1906,
          "end": 1912,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 1907,
            "end": 1912,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1914,
        "end": 2002,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1919,
            "end": 1999,
            "argument": {
              "type": "NewExpression",
              "start": 1925,
              "end": 1998,
              "callee": {
                "type": "Identifier",
                "start": 1929,
                "end": 1941,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1942,
                  "end": 1997,
                  "left": {
                    "type": "Literal",
                    "start": 1942,
                    "end": 1981,
                    "value": "#16: -32768 >> 0 === -32768. Actual: ",
                    "raw": "'#16: -32768 >> 0 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1984,
                    "end": 1997,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1985,
                      "end": 1996,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1985,
                        "end": 1991,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1986,
                          "end": 1991,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1995,
                        "end": 1996,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2006,
      "end": 2122,
      "test": {
        "type": "BinaryExpression",
        "start": 2010,
        "end": 2032,
        "left": {
          "type": "BinaryExpression",
          "start": 2010,
          "end": 2021,
          "left": {
            "type": "UnaryExpression",
            "start": 2010,
            "end": 2016,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2011,
              "end": 2016,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2020,
            "end": 2021,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2026,
          "end": 2032,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2027,
            "end": 2032,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2034,
        "end": 2122,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2039,
            "end": 2119,
            "argument": {
              "type": "NewExpression",
              "start": 2045,
              "end": 2118,
              "callee": {
                "type": "Identifier",
                "start": 2049,
                "end": 2061,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2062,
                  "end": 2117,
                  "left": {
                    "type": "Literal",
                    "start": 2062,
                    "end": 2101,
                    "value": "#17: -65536 >> 0 === -65536. Actual: ",
                    "raw": "'#17: -65536 >> 0 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2104,
                    "end": 2117,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2105,
                      "end": 2116,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2105,
                        "end": 2111,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2106,
                          "end": 2111,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2115,
                        "end": 2116,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2126,
      "end": 2247,
      "test": {
        "type": "BinaryExpression",
        "start": 2130,
        "end": 2154,
        "left": {
          "type": "BinaryExpression",
          "start": 2130,
          "end": 2142,
          "left": {
            "type": "UnaryExpression",
            "start": 2130,
            "end": 2137,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2131,
              "end": 2137,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2141,
            "end": 2142,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2147,
          "end": 2154,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2148,
            "end": 2154,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2156,
        "end": 2247,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2161,
            "end": 2244,
            "argument": {
              "type": "NewExpression",
              "start": 2167,
              "end": 2243,
              "callee": {
                "type": "Identifier",
                "start": 2171,
                "end": 2183,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2184,
                  "end": 2242,
                  "left": {
                    "type": "Literal",
                    "start": 2184,
                    "end": 2225,
                    "value": "#18: -131072 >> 0 === -131072. Actual: ",
                    "raw": "'#18: -131072 >> 0 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2228,
                    "end": 2242,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2229,
                      "end": 2241,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2229,
                        "end": 2236,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2230,
                          "end": 2236,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2240,
                        "end": 2241,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2251,
      "end": 2372,
      "test": {
        "type": "BinaryExpression",
        "start": 2255,
        "end": 2279,
        "left": {
          "type": "BinaryExpression",
          "start": 2255,
          "end": 2267,
          "left": {
            "type": "UnaryExpression",
            "start": 2255,
            "end": 2262,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2256,
              "end": 2262,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2266,
            "end": 2267,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2272,
          "end": 2279,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2273,
            "end": 2279,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2281,
        "end": 2372,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2286,
            "end": 2369,
            "argument": {
              "type": "NewExpression",
              "start": 2292,
              "end": 2368,
              "callee": {
                "type": "Identifier",
                "start": 2296,
                "end": 2308,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2309,
                  "end": 2367,
                  "left": {
                    "type": "Literal",
                    "start": 2309,
                    "end": 2350,
                    "value": "#19: -262144 >> 0 === -262144. Actual: ",
                    "raw": "'#19: -262144 >> 0 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2353,
                    "end": 2367,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2354,
                      "end": 2366,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2354,
                        "end": 2361,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2355,
                          "end": 2361,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2365,
                        "end": 2366,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2376,
      "end": 2497,
      "test": {
        "type": "BinaryExpression",
        "start": 2380,
        "end": 2404,
        "left": {
          "type": "BinaryExpression",
          "start": 2380,
          "end": 2392,
          "left": {
            "type": "UnaryExpression",
            "start": 2380,
            "end": 2387,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2381,
              "end": 2387,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2391,
            "end": 2392,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2397,
          "end": 2404,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2398,
            "end": 2404,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2406,
        "end": 2497,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2411,
            "end": 2494,
            "argument": {
              "type": "NewExpression",
              "start": 2417,
              "end": 2493,
              "callee": {
                "type": "Identifier",
                "start": 2421,
                "end": 2433,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2434,
                  "end": 2492,
                  "left": {
                    "type": "Literal",
                    "start": 2434,
                    "end": 2475,
                    "value": "#20: -524288 >> 0 === -524288. Actual: ",
                    "raw": "'#20: -524288 >> 0 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2478,
                    "end": 2492,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2479,
                      "end": 2491,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2479,
                        "end": 2486,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2480,
                          "end": 2486,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2490,
                        "end": 2491,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2501,
      "end": 2627,
      "test": {
        "type": "BinaryExpression",
        "start": 2505,
        "end": 2531,
        "left": {
          "type": "BinaryExpression",
          "start": 2505,
          "end": 2518,
          "left": {
            "type": "UnaryExpression",
            "start": 2505,
            "end": 2513,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2506,
              "end": 2513,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2517,
            "end": 2518,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2523,
          "end": 2531,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2524,
            "end": 2531,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2533,
        "end": 2627,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2538,
            "end": 2624,
            "argument": {
              "type": "NewExpression",
              "start": 2544,
              "end": 2623,
              "callee": {
                "type": "Identifier",
                "start": 2548,
                "end": 2560,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2561,
                  "end": 2622,
                  "left": {
                    "type": "Literal",
                    "start": 2561,
                    "end": 2604,
                    "value": "#21: -1048576 >> 0 === -1048576. Actual: ",
                    "raw": "'#21: -1048576 >> 0 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2607,
                    "end": 2622,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2608,
                      "end": 2621,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2608,
                        "end": 2616,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2609,
                          "end": 2616,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2620,
                        "end": 2621,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2631,
      "end": 2757,
      "test": {
        "type": "BinaryExpression",
        "start": 2635,
        "end": 2661,
        "left": {
          "type": "BinaryExpression",
          "start": 2635,
          "end": 2648,
          "left": {
            "type": "UnaryExpression",
            "start": 2635,
            "end": 2643,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2636,
              "end": 2643,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2647,
            "end": 2648,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2653,
          "end": 2661,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2654,
            "end": 2661,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2663,
        "end": 2757,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2668,
            "end": 2754,
            "argument": {
              "type": "NewExpression",
              "start": 2674,
              "end": 2753,
              "callee": {
                "type": "Identifier",
                "start": 2678,
                "end": 2690,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2691,
                  "end": 2752,
                  "left": {
                    "type": "Literal",
                    "start": 2691,
                    "end": 2734,
                    "value": "#22: -2097152 >> 0 === -2097152. Actual: ",
                    "raw": "'#22: -2097152 >> 0 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2737,
                    "end": 2752,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2738,
                      "end": 2751,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2738,
                        "end": 2746,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2739,
                          "end": 2746,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2750,
                        "end": 2751,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2761,
      "end": 2887,
      "test": {
        "type": "BinaryExpression",
        "start": 2765,
        "end": 2791,
        "left": {
          "type": "BinaryExpression",
          "start": 2765,
          "end": 2778,
          "left": {
            "type": "UnaryExpression",
            "start": 2765,
            "end": 2773,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2766,
              "end": 2773,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2777,
            "end": 2778,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2783,
          "end": 2791,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2784,
            "end": 2791,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2793,
        "end": 2887,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2798,
            "end": 2884,
            "argument": {
              "type": "NewExpression",
              "start": 2804,
              "end": 2883,
              "callee": {
                "type": "Identifier",
                "start": 2808,
                "end": 2820,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2821,
                  "end": 2882,
                  "left": {
                    "type": "Literal",
                    "start": 2821,
                    "end": 2864,
                    "value": "#23: -4194304 >> 0 === -4194304. Actual: ",
                    "raw": "'#23: -4194304 >> 0 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2867,
                    "end": 2882,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2868,
                      "end": 2881,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2868,
                        "end": 2876,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2869,
                          "end": 2876,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2880,
                        "end": 2881,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2891,
      "end": 3017,
      "test": {
        "type": "BinaryExpression",
        "start": 2895,
        "end": 2921,
        "left": {
          "type": "BinaryExpression",
          "start": 2895,
          "end": 2908,
          "left": {
            "type": "UnaryExpression",
            "start": 2895,
            "end": 2903,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 2896,
              "end": 2903,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2907,
            "end": 2908,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 2913,
          "end": 2921,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 2914,
            "end": 2921,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2923,
        "end": 3017,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2928,
            "end": 3014,
            "argument": {
              "type": "NewExpression",
              "start": 2934,
              "end": 3013,
              "callee": {
                "type": "Identifier",
                "start": 2938,
                "end": 2950,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2951,
                  "end": 3012,
                  "left": {
                    "type": "Literal",
                    "start": 2951,
                    "end": 2994,
                    "value": "#24: -8388608 >> 0 === -8388608. Actual: ",
                    "raw": "'#24: -8388608 >> 0 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2997,
                    "end": 3012,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2998,
                      "end": 3011,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2998,
                        "end": 3006,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2999,
                          "end": 3006,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3010,
                        "end": 3011,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3021,
      "end": 3152,
      "test": {
        "type": "BinaryExpression",
        "start": 3025,
        "end": 3053,
        "left": {
          "type": "BinaryExpression",
          "start": 3025,
          "end": 3039,
          "left": {
            "type": "UnaryExpression",
            "start": 3025,
            "end": 3034,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3026,
              "end": 3034,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3038,
            "end": 3039,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3044,
          "end": 3053,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3045,
            "end": 3053,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3055,
        "end": 3152,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3060,
            "end": 3149,
            "argument": {
              "type": "NewExpression",
              "start": 3066,
              "end": 3148,
              "callee": {
                "type": "Identifier",
                "start": 3070,
                "end": 3082,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3083,
                  "end": 3147,
                  "left": {
                    "type": "Literal",
                    "start": 3083,
                    "end": 3128,
                    "value": "#25: -16777216 >> 0 === -16777216. Actual: ",
                    "raw": "'#25: -16777216 >> 0 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3131,
                    "end": 3147,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3132,
                      "end": 3146,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3132,
                        "end": 3141,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3133,
                          "end": 3141,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3145,
                        "end": 3146,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3156,
      "end": 3287,
      "test": {
        "type": "BinaryExpression",
        "start": 3160,
        "end": 3188,
        "left": {
          "type": "BinaryExpression",
          "start": 3160,
          "end": 3174,
          "left": {
            "type": "UnaryExpression",
            "start": 3160,
            "end": 3169,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3161,
              "end": 3169,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3173,
            "end": 3174,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3179,
          "end": 3188,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3180,
            "end": 3188,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3190,
        "end": 3287,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3195,
            "end": 3284,
            "argument": {
              "type": "NewExpression",
              "start": 3201,
              "end": 3283,
              "callee": {
                "type": "Identifier",
                "start": 3205,
                "end": 3217,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3218,
                  "end": 3282,
                  "left": {
                    "type": "Literal",
                    "start": 3218,
                    "end": 3263,
                    "value": "#26: -33554432 >> 0 === -33554432. Actual: ",
                    "raw": "'#26: -33554432 >> 0 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3266,
                    "end": 3282,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3267,
                      "end": 3281,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3267,
                        "end": 3276,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3268,
                          "end": 3276,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3280,
                        "end": 3281,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3291,
      "end": 3422,
      "test": {
        "type": "BinaryExpression",
        "start": 3295,
        "end": 3323,
        "left": {
          "type": "BinaryExpression",
          "start": 3295,
          "end": 3309,
          "left": {
            "type": "UnaryExpression",
            "start": 3295,
            "end": 3304,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3296,
              "end": 3304,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3308,
            "end": 3309,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3314,
          "end": 3323,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3315,
            "end": 3323,
            "value": 67108864,
            "raw": "67108864",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3325,
        "end": 3422,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3330,
            "end": 3419,
            "argument": {
              "type": "NewExpression",
              "start": 3336,
              "end": 3418,
              "callee": {
                "type": "Identifier",
                "start": 3340,
                "end": 3352,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3353,
                  "end": 3417,
                  "left": {
                    "type": "Literal",
                    "start": 3353,
                    "end": 3398,
                    "value": "#27: -67108864 >> 0 === -67108864. Actual: ",
                    "raw": "'#27: -67108864 >> 0 === -67108864. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3401,
                    "end": 3417,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3402,
                      "end": 3416,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3402,
                        "end": 3411,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3403,
                          "end": 3411,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3415,
                        "end": 3416,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3426,
      "end": 3562,
      "test": {
        "type": "BinaryExpression",
        "start": 3430,
        "end": 3460,
        "left": {
          "type": "BinaryExpression",
          "start": 3430,
          "end": 3445,
          "left": {
            "type": "UnaryExpression",
            "start": 3430,
            "end": 3440,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3431,
              "end": 3440,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3444,
            "end": 3445,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3450,
          "end": 3460,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3451,
            "end": 3460,
            "value": 134217728,
            "raw": "134217728",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3462,
        "end": 3562,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3467,
            "end": 3559,
            "argument": {
              "type": "NewExpression",
              "start": 3473,
              "end": 3558,
              "callee": {
                "type": "Identifier",
                "start": 3477,
                "end": 3489,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3490,
                  "end": 3557,
                  "left": {
                    "type": "Literal",
                    "start": 3490,
                    "end": 3537,
                    "value": "#28: -134217728 >> 0 === -134217728. Actual: ",
                    "raw": "'#28: -134217728 >> 0 === -134217728. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3540,
                    "end": 3557,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3541,
                      "end": 3556,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3541,
                        "end": 3551,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3542,
                          "end": 3551,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3555,
                        "end": 3556,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3566,
      "end": 3702,
      "test": {
        "type": "BinaryExpression",
        "start": 3570,
        "end": 3600,
        "left": {
          "type": "BinaryExpression",
          "start": 3570,
          "end": 3585,
          "left": {
            "type": "UnaryExpression",
            "start": 3570,
            "end": 3580,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3571,
              "end": 3580,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3584,
            "end": 3585,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3590,
          "end": 3600,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3591,
            "end": 3600,
            "value": 268435456,
            "raw": "268435456",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3602,
        "end": 3702,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3607,
            "end": 3699,
            "argument": {
              "type": "NewExpression",
              "start": 3613,
              "end": 3698,
              "callee": {
                "type": "Identifier",
                "start": 3617,
                "end": 3629,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3630,
                  "end": 3697,
                  "left": {
                    "type": "Literal",
                    "start": 3630,
                    "end": 3677,
                    "value": "#29: -268435456 >> 0 === -268435456. Actual: ",
                    "raw": "'#29: -268435456 >> 0 === -268435456. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3680,
                    "end": 3697,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3681,
                      "end": 3696,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3681,
                        "end": 3691,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3682,
                          "end": 3691,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3695,
                        "end": 3696,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3706,
      "end": 3842,
      "test": {
        "type": "BinaryExpression",
        "start": 3710,
        "end": 3740,
        "left": {
          "type": "BinaryExpression",
          "start": 3710,
          "end": 3725,
          "left": {
            "type": "UnaryExpression",
            "start": 3710,
            "end": 3720,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3711,
              "end": 3720,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3724,
            "end": 3725,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3730,
          "end": 3740,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3731,
            "end": 3740,
            "value": 536870912,
            "raw": "536870912",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3742,
        "end": 3842,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3747,
            "end": 3839,
            "argument": {
              "type": "NewExpression",
              "start": 3753,
              "end": 3838,
              "callee": {
                "type": "Identifier",
                "start": 3757,
                "end": 3769,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3770,
                  "end": 3837,
                  "left": {
                    "type": "Literal",
                    "start": 3770,
                    "end": 3817,
                    "value": "#30: -536870912 >> 0 === -536870912. Actual: ",
                    "raw": "'#30: -536870912 >> 0 === -536870912. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3820,
                    "end": 3837,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3821,
                      "end": 3836,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3821,
                        "end": 3831,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3822,
                          "end": 3831,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3835,
                        "end": 3836,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3846,
      "end": 3987,
      "test": {
        "type": "BinaryExpression",
        "start": 3850,
        "end": 3882,
        "left": {
          "type": "BinaryExpression",
          "start": 3850,
          "end": 3866,
          "left": {
            "type": "UnaryExpression",
            "start": 3850,
            "end": 3861,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3851,
              "end": 3861,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3865,
            "end": 3866,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 3871,
          "end": 3882,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 3872,
            "end": 3882,
            "value": 1073741824,
            "raw": "1073741824",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3884,
        "end": 3987,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3889,
            "end": 3984,
            "argument": {
              "type": "NewExpression",
              "start": 3895,
              "end": 3983,
              "callee": {
                "type": "Identifier",
                "start": 3899,
                "end": 3911,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3912,
                  "end": 3982,
                  "left": {
                    "type": "Literal",
                    "start": 3912,
                    "end": 3961,
                    "value": "#31: -1073741824 >> 0 === -1073741824. Actual: ",
                    "raw": "'#31: -1073741824 >> 0 === -1073741824. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3964,
                    "end": 3982,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3965,
                      "end": 3981,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 3965,
                        "end": 3976,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 3966,
                          "end": 3976,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3980,
                        "end": 3981,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3991,
      "end": 4132,
      "test": {
        "type": "BinaryExpression",
        "start": 3995,
        "end": 4027,
        "left": {
          "type": "BinaryExpression",
          "start": 3995,
          "end": 4011,
          "left": {
            "type": "UnaryExpression",
            "start": 3995,
            "end": 4006,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 3996,
              "end": 4006,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4010,
            "end": 4011,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4016,
          "end": 4027,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4017,
            "end": 4027,
            "value": 2147483648,
            "raw": "2147483648",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4029,
        "end": 4132,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4034,
            "end": 4129,
            "argument": {
              "type": "NewExpression",
              "start": 4040,
              "end": 4128,
              "callee": {
                "type": "Identifier",
                "start": 4044,
                "end": 4056,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4057,
                  "end": 4127,
                  "left": {
                    "type": "Literal",
                    "start": 4057,
                    "end": 4106,
                    "value": "#32: -2147483648 >> 0 === -2147483648. Actual: ",
                    "raw": "'#32: -2147483648 >> 0 === -2147483648. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4109,
                    "end": 4127,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4110,
                      "end": 4126,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4110,
                        "end": 4121,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4111,
                          "end": 4121,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4125,
                        "end": 4126,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4136,
      "end": 4232,
      "test": {
        "type": "BinaryExpression",
        "start": 4140,
        "end": 4154,
        "left": {
          "type": "BinaryExpression",
          "start": 4140,
          "end": 4147,
          "left": {
            "type": "UnaryExpression",
            "start": 4140,
            "end": 4142,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4141,
              "end": 4142,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4146,
            "end": 4147,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4152,
          "end": 4154,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4153,
            "end": 4154,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4156,
        "end": 4232,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4161,
            "end": 4229,
            "argument": {
              "type": "NewExpression",
              "start": 4167,
              "end": 4228,
              "callee": {
                "type": "Identifier",
                "start": 4171,
                "end": 4183,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4184,
                  "end": 4227,
                  "left": {
                    "type": "Literal",
                    "start": 4184,
                    "end": 4215,
                    "value": "#33: -1 >> 1 === -1. Actual: ",
                    "raw": "'#33: -1 >> 1 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4218,
                    "end": 4227,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4219,
                      "end": 4226,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4219,
                        "end": 4221,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4220,
                          "end": 4221,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4225,
                        "end": 4226,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4236,
      "end": 4332,
      "test": {
        "type": "BinaryExpression",
        "start": 4240,
        "end": 4254,
        "left": {
          "type": "BinaryExpression",
          "start": 4240,
          "end": 4247,
          "left": {
            "type": "UnaryExpression",
            "start": 4240,
            "end": 4242,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4241,
              "end": 4242,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4246,
            "end": 4247,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4252,
          "end": 4254,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4253,
            "end": 4254,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4256,
        "end": 4332,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4261,
            "end": 4329,
            "argument": {
              "type": "NewExpression",
              "start": 4267,
              "end": 4328,
              "callee": {
                "type": "Identifier",
                "start": 4271,
                "end": 4283,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4284,
                  "end": 4327,
                  "left": {
                    "type": "Literal",
                    "start": 4284,
                    "end": 4315,
                    "value": "#34: -2 >> 1 === -1. Actual: ",
                    "raw": "'#34: -2 >> 1 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4318,
                    "end": 4327,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4319,
                      "end": 4326,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4319,
                        "end": 4321,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4320,
                          "end": 4321,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4325,
                        "end": 4326,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4336,
      "end": 4432,
      "test": {
        "type": "BinaryExpression",
        "start": 4340,
        "end": 4354,
        "left": {
          "type": "BinaryExpression",
          "start": 4340,
          "end": 4347,
          "left": {
            "type": "UnaryExpression",
            "start": 4340,
            "end": 4342,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4341,
              "end": 4342,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4346,
            "end": 4347,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4352,
          "end": 4354,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4353,
            "end": 4354,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4356,
        "end": 4432,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4361,
            "end": 4429,
            "argument": {
              "type": "NewExpression",
              "start": 4367,
              "end": 4428,
              "callee": {
                "type": "Identifier",
                "start": 4371,
                "end": 4383,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4384,
                  "end": 4427,
                  "left": {
                    "type": "Literal",
                    "start": 4384,
                    "end": 4415,
                    "value": "#35: -4 >> 1 === -2. Actual: ",
                    "raw": "'#35: -4 >> 1 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4418,
                    "end": 4427,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4419,
                      "end": 4426,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4419,
                        "end": 4421,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4420,
                          "end": 4421,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4425,
                        "end": 4426,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4436,
      "end": 4532,
      "test": {
        "type": "BinaryExpression",
        "start": 4440,
        "end": 4454,
        "left": {
          "type": "BinaryExpression",
          "start": 4440,
          "end": 4447,
          "left": {
            "type": "UnaryExpression",
            "start": 4440,
            "end": 4442,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4441,
              "end": 4442,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4446,
            "end": 4447,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4452,
          "end": 4454,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4453,
            "end": 4454,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4456,
        "end": 4532,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4461,
            "end": 4529,
            "argument": {
              "type": "NewExpression",
              "start": 4467,
              "end": 4528,
              "callee": {
                "type": "Identifier",
                "start": 4471,
                "end": 4483,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4484,
                  "end": 4527,
                  "left": {
                    "type": "Literal",
                    "start": 4484,
                    "end": 4515,
                    "value": "#36: -8 >> 1 === -4. Actual: ",
                    "raw": "'#36: -8 >> 1 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4518,
                    "end": 4527,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4519,
                      "end": 4526,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4519,
                        "end": 4521,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4520,
                          "end": 4521,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4525,
                        "end": 4526,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4536,
      "end": 4635,
      "test": {
        "type": "BinaryExpression",
        "start": 4540,
        "end": 4555,
        "left": {
          "type": "BinaryExpression",
          "start": 4540,
          "end": 4548,
          "left": {
            "type": "UnaryExpression",
            "start": 4540,
            "end": 4543,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4541,
              "end": 4543,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4547,
            "end": 4548,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4553,
          "end": 4555,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4554,
            "end": 4555,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4557,
        "end": 4635,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4562,
            "end": 4632,
            "argument": {
              "type": "NewExpression",
              "start": 4568,
              "end": 4631,
              "callee": {
                "type": "Identifier",
                "start": 4572,
                "end": 4584,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4585,
                  "end": 4630,
                  "left": {
                    "type": "Literal",
                    "start": 4585,
                    "end": 4617,
                    "value": "#37: -16 >> 1 === -8. Actual: ",
                    "raw": "'#37: -16 >> 1 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4620,
                    "end": 4630,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4621,
                      "end": 4629,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4621,
                        "end": 4624,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4622,
                          "end": 4624,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4628,
                        "end": 4629,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4639,
      "end": 4740,
      "test": {
        "type": "BinaryExpression",
        "start": 4643,
        "end": 4659,
        "left": {
          "type": "BinaryExpression",
          "start": 4643,
          "end": 4651,
          "left": {
            "type": "UnaryExpression",
            "start": 4643,
            "end": 4646,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4644,
              "end": 4646,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4650,
            "end": 4651,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4656,
          "end": 4659,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4657,
            "end": 4659,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4661,
        "end": 4740,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4666,
            "end": 4737,
            "argument": {
              "type": "NewExpression",
              "start": 4672,
              "end": 4736,
              "callee": {
                "type": "Identifier",
                "start": 4676,
                "end": 4688,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4689,
                  "end": 4735,
                  "left": {
                    "type": "Literal",
                    "start": 4689,
                    "end": 4722,
                    "value": "#38: -32 >> 1 === -16. Actual: ",
                    "raw": "'#38: -32 >> 1 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4725,
                    "end": 4735,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4726,
                      "end": 4734,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4726,
                        "end": 4729,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4727,
                          "end": 4729,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4733,
                        "end": 4734,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4744,
      "end": 4845,
      "test": {
        "type": "BinaryExpression",
        "start": 4748,
        "end": 4764,
        "left": {
          "type": "BinaryExpression",
          "start": 4748,
          "end": 4756,
          "left": {
            "type": "UnaryExpression",
            "start": 4748,
            "end": 4751,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4749,
              "end": 4751,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4755,
            "end": 4756,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4761,
          "end": 4764,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4762,
            "end": 4764,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4766,
        "end": 4845,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4771,
            "end": 4842,
            "argument": {
              "type": "NewExpression",
              "start": 4777,
              "end": 4841,
              "callee": {
                "type": "Identifier",
                "start": 4781,
                "end": 4793,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4794,
                  "end": 4840,
                  "left": {
                    "type": "Literal",
                    "start": 4794,
                    "end": 4827,
                    "value": "#39: -64 >> 1 === -32. Actual: ",
                    "raw": "'#39: -64 >> 1 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4830,
                    "end": 4840,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4831,
                      "end": 4839,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4831,
                        "end": 4834,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4832,
                          "end": 4834,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4838,
                        "end": 4839,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4849,
      "end": 4953,
      "test": {
        "type": "BinaryExpression",
        "start": 4853,
        "end": 4870,
        "left": {
          "type": "BinaryExpression",
          "start": 4853,
          "end": 4862,
          "left": {
            "type": "UnaryExpression",
            "start": 4853,
            "end": 4857,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4854,
              "end": 4857,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4861,
            "end": 4862,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4867,
          "end": 4870,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4868,
            "end": 4870,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4872,
        "end": 4953,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4877,
            "end": 4950,
            "argument": {
              "type": "NewExpression",
              "start": 4883,
              "end": 4949,
              "callee": {
                "type": "Identifier",
                "start": 4887,
                "end": 4899,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4900,
                  "end": 4948,
                  "left": {
                    "type": "Literal",
                    "start": 4900,
                    "end": 4934,
                    "value": "#40: -128 >> 1 === -64. Actual: ",
                    "raw": "'#40: -128 >> 1 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4937,
                    "end": 4948,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4938,
                      "end": 4947,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 4938,
                        "end": 4942,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 4939,
                          "end": 4942,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4946,
                        "end": 4947,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4957,
      "end": 5063,
      "test": {
        "type": "BinaryExpression",
        "start": 4961,
        "end": 4979,
        "left": {
          "type": "BinaryExpression",
          "start": 4961,
          "end": 4970,
          "left": {
            "type": "UnaryExpression",
            "start": 4961,
            "end": 4965,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 4962,
              "end": 4965,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4969,
            "end": 4970,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 4975,
          "end": 4979,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 4976,
            "end": 4979,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4981,
        "end": 5063,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4986,
            "end": 5060,
            "argument": {
              "type": "NewExpression",
              "start": 4992,
              "end": 5059,
              "callee": {
                "type": "Identifier",
                "start": 4996,
                "end": 5008,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5009,
                  "end": 5058,
                  "left": {
                    "type": "Literal",
                    "start": 5009,
                    "end": 5044,
                    "value": "#41: -256 >> 1 === -128. Actual: ",
                    "raw": "'#41: -256 >> 1 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5047,
                    "end": 5058,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5048,
                      "end": 5057,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5048,
                        "end": 5052,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5049,
                          "end": 5052,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5056,
                        "end": 5057,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5067,
      "end": 5173,
      "test": {
        "type": "BinaryExpression",
        "start": 5071,
        "end": 5089,
        "left": {
          "type": "BinaryExpression",
          "start": 5071,
          "end": 5080,
          "left": {
            "type": "UnaryExpression",
            "start": 5071,
            "end": 5075,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5072,
              "end": 5075,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5079,
            "end": 5080,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5085,
          "end": 5089,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5086,
            "end": 5089,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5091,
        "end": 5173,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5096,
            "end": 5170,
            "argument": {
              "type": "NewExpression",
              "start": 5102,
              "end": 5169,
              "callee": {
                "type": "Identifier",
                "start": 5106,
                "end": 5118,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5119,
                  "end": 5168,
                  "left": {
                    "type": "Literal",
                    "start": 5119,
                    "end": 5154,
                    "value": "#42: -512 >> 1 === -256. Actual: ",
                    "raw": "'#42: -512 >> 1 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5157,
                    "end": 5168,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5158,
                      "end": 5167,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5158,
                        "end": 5162,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5159,
                          "end": 5162,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5166,
                        "end": 5167,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5177,
      "end": 5286,
      "test": {
        "type": "BinaryExpression",
        "start": 5181,
        "end": 5200,
        "left": {
          "type": "BinaryExpression",
          "start": 5181,
          "end": 5191,
          "left": {
            "type": "UnaryExpression",
            "start": 5181,
            "end": 5186,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5182,
              "end": 5186,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5190,
            "end": 5191,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5196,
          "end": 5200,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5197,
            "end": 5200,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5202,
        "end": 5286,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5207,
            "end": 5283,
            "argument": {
              "type": "NewExpression",
              "start": 5213,
              "end": 5282,
              "callee": {
                "type": "Identifier",
                "start": 5217,
                "end": 5229,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5230,
                  "end": 5281,
                  "left": {
                    "type": "Literal",
                    "start": 5230,
                    "end": 5266,
                    "value": "#43: -1024 >> 1 === -512. Actual: ",
                    "raw": "'#43: -1024 >> 1 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5269,
                    "end": 5281,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5270,
                      "end": 5280,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5270,
                        "end": 5275,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5271,
                          "end": 5275,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5279,
                        "end": 5280,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5290,
      "end": 5401,
      "test": {
        "type": "BinaryExpression",
        "start": 5294,
        "end": 5314,
        "left": {
          "type": "BinaryExpression",
          "start": 5294,
          "end": 5304,
          "left": {
            "type": "UnaryExpression",
            "start": 5294,
            "end": 5299,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5295,
              "end": 5299,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5303,
            "end": 5304,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5309,
          "end": 5314,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5310,
            "end": 5314,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5316,
        "end": 5401,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5321,
            "end": 5398,
            "argument": {
              "type": "NewExpression",
              "start": 5327,
              "end": 5397,
              "callee": {
                "type": "Identifier",
                "start": 5331,
                "end": 5343,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5344,
                  "end": 5396,
                  "left": {
                    "type": "Literal",
                    "start": 5344,
                    "end": 5381,
                    "value": "#44: -2048 >> 1 === -1024. Actual: ",
                    "raw": "'#44: -2048 >> 1 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5384,
                    "end": 5396,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5385,
                      "end": 5395,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5385,
                        "end": 5390,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5386,
                          "end": 5390,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5394,
                        "end": 5395,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5405,
      "end": 5516,
      "test": {
        "type": "BinaryExpression",
        "start": 5409,
        "end": 5429,
        "left": {
          "type": "BinaryExpression",
          "start": 5409,
          "end": 5419,
          "left": {
            "type": "UnaryExpression",
            "start": 5409,
            "end": 5414,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5410,
              "end": 5414,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5418,
            "end": 5419,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5424,
          "end": 5429,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5425,
            "end": 5429,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5431,
        "end": 5516,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5436,
            "end": 5513,
            "argument": {
              "type": "NewExpression",
              "start": 5442,
              "end": 5512,
              "callee": {
                "type": "Identifier",
                "start": 5446,
                "end": 5458,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5459,
                  "end": 5511,
                  "left": {
                    "type": "Literal",
                    "start": 5459,
                    "end": 5496,
                    "value": "#45: -4096 >> 1 === -2048. Actual: ",
                    "raw": "'#45: -4096 >> 1 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5499,
                    "end": 5511,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5500,
                      "end": 5510,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5500,
                        "end": 5505,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5501,
                          "end": 5505,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5509,
                        "end": 5510,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5520,
      "end": 5631,
      "test": {
        "type": "BinaryExpression",
        "start": 5524,
        "end": 5544,
        "left": {
          "type": "BinaryExpression",
          "start": 5524,
          "end": 5534,
          "left": {
            "type": "UnaryExpression",
            "start": 5524,
            "end": 5529,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5525,
              "end": 5529,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5533,
            "end": 5534,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5539,
          "end": 5544,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5540,
            "end": 5544,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5546,
        "end": 5631,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5551,
            "end": 5628,
            "argument": {
              "type": "NewExpression",
              "start": 5557,
              "end": 5627,
              "callee": {
                "type": "Identifier",
                "start": 5561,
                "end": 5573,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5574,
                  "end": 5626,
                  "left": {
                    "type": "Literal",
                    "start": 5574,
                    "end": 5611,
                    "value": "#46: -8192 >> 1 === -4096. Actual: ",
                    "raw": "'#46: -8192 >> 1 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5614,
                    "end": 5626,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5615,
                      "end": 5625,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5615,
                        "end": 5620,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5616,
                          "end": 5620,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5624,
                        "end": 5625,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5635,
      "end": 5749,
      "test": {
        "type": "BinaryExpression",
        "start": 5639,
        "end": 5660,
        "left": {
          "type": "BinaryExpression",
          "start": 5639,
          "end": 5650,
          "left": {
            "type": "UnaryExpression",
            "start": 5639,
            "end": 5645,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5640,
              "end": 5645,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5649,
            "end": 5650,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5655,
          "end": 5660,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5656,
            "end": 5660,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5662,
        "end": 5749,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5667,
            "end": 5746,
            "argument": {
              "type": "NewExpression",
              "start": 5673,
              "end": 5745,
              "callee": {
                "type": "Identifier",
                "start": 5677,
                "end": 5689,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5690,
                  "end": 5744,
                  "left": {
                    "type": "Literal",
                    "start": 5690,
                    "end": 5728,
                    "value": "#47: -16384 >> 1 === -8192. Actual: ",
                    "raw": "'#47: -16384 >> 1 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5731,
                    "end": 5744,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5732,
                      "end": 5743,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5732,
                        "end": 5738,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5733,
                          "end": 5738,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5742,
                        "end": 5743,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5753,
      "end": 5869,
      "test": {
        "type": "BinaryExpression",
        "start": 5757,
        "end": 5779,
        "left": {
          "type": "BinaryExpression",
          "start": 5757,
          "end": 5768,
          "left": {
            "type": "UnaryExpression",
            "start": 5757,
            "end": 5763,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5758,
              "end": 5763,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5767,
            "end": 5768,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5773,
          "end": 5779,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5774,
            "end": 5779,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5781,
        "end": 5869,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5786,
            "end": 5866,
            "argument": {
              "type": "NewExpression",
              "start": 5792,
              "end": 5865,
              "callee": {
                "type": "Identifier",
                "start": 5796,
                "end": 5808,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5809,
                  "end": 5864,
                  "left": {
                    "type": "Literal",
                    "start": 5809,
                    "end": 5848,
                    "value": "#48: -32768 >> 1 === -16384. Actual: ",
                    "raw": "'#48: -32768 >> 1 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5851,
                    "end": 5864,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5852,
                      "end": 5863,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5852,
                        "end": 5858,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5853,
                          "end": 5858,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5862,
                        "end": 5863,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5873,
      "end": 5989,
      "test": {
        "type": "BinaryExpression",
        "start": 5877,
        "end": 5899,
        "left": {
          "type": "BinaryExpression",
          "start": 5877,
          "end": 5888,
          "left": {
            "type": "UnaryExpression",
            "start": 5877,
            "end": 5883,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5878,
              "end": 5883,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5887,
            "end": 5888,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 5893,
          "end": 5899,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 5894,
            "end": 5899,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5901,
        "end": 5989,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5906,
            "end": 5986,
            "argument": {
              "type": "NewExpression",
              "start": 5912,
              "end": 5985,
              "callee": {
                "type": "Identifier",
                "start": 5916,
                "end": 5928,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5929,
                  "end": 5984,
                  "left": {
                    "type": "Literal",
                    "start": 5929,
                    "end": 5968,
                    "value": "#49: -65536 >> 1 === -32768. Actual: ",
                    "raw": "'#49: -65536 >> 1 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5971,
                    "end": 5984,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5972,
                      "end": 5983,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 5972,
                        "end": 5978,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 5973,
                          "end": 5978,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5982,
                        "end": 5983,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5993,
      "end": 6112,
      "test": {
        "type": "BinaryExpression",
        "start": 5997,
        "end": 6020,
        "left": {
          "type": "BinaryExpression",
          "start": 5997,
          "end": 6009,
          "left": {
            "type": "UnaryExpression",
            "start": 5997,
            "end": 6004,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 5998,
              "end": 6004,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6008,
            "end": 6009,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6014,
          "end": 6020,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6015,
            "end": 6020,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6022,
        "end": 6112,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6027,
            "end": 6109,
            "argument": {
              "type": "NewExpression",
              "start": 6033,
              "end": 6108,
              "callee": {
                "type": "Identifier",
                "start": 6037,
                "end": 6049,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6050,
                  "end": 6107,
                  "left": {
                    "type": "Literal",
                    "start": 6050,
                    "end": 6090,
                    "value": "#50: -131072 >> 1 === -65536. Actual: ",
                    "raw": "'#50: -131072 >> 1 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6093,
                    "end": 6107,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6094,
                      "end": 6106,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6094,
                        "end": 6101,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6095,
                          "end": 6101,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6105,
                        "end": 6106,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6116,
      "end": 6237,
      "test": {
        "type": "BinaryExpression",
        "start": 6120,
        "end": 6144,
        "left": {
          "type": "BinaryExpression",
          "start": 6120,
          "end": 6132,
          "left": {
            "type": "UnaryExpression",
            "start": 6120,
            "end": 6127,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6121,
              "end": 6127,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6131,
            "end": 6132,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6137,
          "end": 6144,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6138,
            "end": 6144,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6146,
        "end": 6237,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6151,
            "end": 6234,
            "argument": {
              "type": "NewExpression",
              "start": 6157,
              "end": 6233,
              "callee": {
                "type": "Identifier",
                "start": 6161,
                "end": 6173,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6174,
                  "end": 6232,
                  "left": {
                    "type": "Literal",
                    "start": 6174,
                    "end": 6215,
                    "value": "#51: -262144 >> 1 === -131072. Actual: ",
                    "raw": "'#51: -262144 >> 1 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6218,
                    "end": 6232,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6219,
                      "end": 6231,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6219,
                        "end": 6226,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6220,
                          "end": 6226,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6230,
                        "end": 6231,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6241,
      "end": 6362,
      "test": {
        "type": "BinaryExpression",
        "start": 6245,
        "end": 6269,
        "left": {
          "type": "BinaryExpression",
          "start": 6245,
          "end": 6257,
          "left": {
            "type": "UnaryExpression",
            "start": 6245,
            "end": 6252,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6246,
              "end": 6252,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6256,
            "end": 6257,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6262,
          "end": 6269,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6263,
            "end": 6269,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6271,
        "end": 6362,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6276,
            "end": 6359,
            "argument": {
              "type": "NewExpression",
              "start": 6282,
              "end": 6358,
              "callee": {
                "type": "Identifier",
                "start": 6286,
                "end": 6298,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6299,
                  "end": 6357,
                  "left": {
                    "type": "Literal",
                    "start": 6299,
                    "end": 6340,
                    "value": "#52: -524288 >> 1 === -262144. Actual: ",
                    "raw": "'#52: -524288 >> 1 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6343,
                    "end": 6357,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6344,
                      "end": 6356,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6344,
                        "end": 6351,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6345,
                          "end": 6351,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6355,
                        "end": 6356,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6366,
      "end": 6490,
      "test": {
        "type": "BinaryExpression",
        "start": 6370,
        "end": 6395,
        "left": {
          "type": "BinaryExpression",
          "start": 6370,
          "end": 6383,
          "left": {
            "type": "UnaryExpression",
            "start": 6370,
            "end": 6378,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6371,
              "end": 6378,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6382,
            "end": 6383,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6388,
          "end": 6395,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6389,
            "end": 6395,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6397,
        "end": 6490,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6402,
            "end": 6487,
            "argument": {
              "type": "NewExpression",
              "start": 6408,
              "end": 6486,
              "callee": {
                "type": "Identifier",
                "start": 6412,
                "end": 6424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6425,
                  "end": 6485,
                  "left": {
                    "type": "Literal",
                    "start": 6425,
                    "end": 6467,
                    "value": "#53: -1048576 >> 1 === -524288. Actual: ",
                    "raw": "'#53: -1048576 >> 1 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6470,
                    "end": 6485,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6471,
                      "end": 6484,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6471,
                        "end": 6479,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6472,
                          "end": 6479,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6483,
                        "end": 6484,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6494,
      "end": 6620,
      "test": {
        "type": "BinaryExpression",
        "start": 6498,
        "end": 6524,
        "left": {
          "type": "BinaryExpression",
          "start": 6498,
          "end": 6511,
          "left": {
            "type": "UnaryExpression",
            "start": 6498,
            "end": 6506,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6499,
              "end": 6506,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6510,
            "end": 6511,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6516,
          "end": 6524,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6517,
            "end": 6524,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6526,
        "end": 6620,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6531,
            "end": 6617,
            "argument": {
              "type": "NewExpression",
              "start": 6537,
              "end": 6616,
              "callee": {
                "type": "Identifier",
                "start": 6541,
                "end": 6553,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6554,
                  "end": 6615,
                  "left": {
                    "type": "Literal",
                    "start": 6554,
                    "end": 6597,
                    "value": "#54: -2097152 >> 1 === -1048576. Actual: ",
                    "raw": "'#54: -2097152 >> 1 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6600,
                    "end": 6615,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6601,
                      "end": 6614,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6601,
                        "end": 6609,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6602,
                          "end": 6609,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6613,
                        "end": 6614,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6624,
      "end": 6750,
      "test": {
        "type": "BinaryExpression",
        "start": 6628,
        "end": 6654,
        "left": {
          "type": "BinaryExpression",
          "start": 6628,
          "end": 6641,
          "left": {
            "type": "UnaryExpression",
            "start": 6628,
            "end": 6636,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6629,
              "end": 6636,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6640,
            "end": 6641,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6646,
          "end": 6654,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6647,
            "end": 6654,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6656,
        "end": 6750,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6661,
            "end": 6747,
            "argument": {
              "type": "NewExpression",
              "start": 6667,
              "end": 6746,
              "callee": {
                "type": "Identifier",
                "start": 6671,
                "end": 6683,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6684,
                  "end": 6745,
                  "left": {
                    "type": "Literal",
                    "start": 6684,
                    "end": 6727,
                    "value": "#55: -4194304 >> 1 === -2097152. Actual: ",
                    "raw": "'#55: -4194304 >> 1 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6730,
                    "end": 6745,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6731,
                      "end": 6744,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6731,
                        "end": 6739,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6732,
                          "end": 6739,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6743,
                        "end": 6744,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6754,
      "end": 6880,
      "test": {
        "type": "BinaryExpression",
        "start": 6758,
        "end": 6784,
        "left": {
          "type": "BinaryExpression",
          "start": 6758,
          "end": 6771,
          "left": {
            "type": "UnaryExpression",
            "start": 6758,
            "end": 6766,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6759,
              "end": 6766,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6770,
            "end": 6771,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6776,
          "end": 6784,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6777,
            "end": 6784,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6786,
        "end": 6880,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6791,
            "end": 6877,
            "argument": {
              "type": "NewExpression",
              "start": 6797,
              "end": 6876,
              "callee": {
                "type": "Identifier",
                "start": 6801,
                "end": 6813,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6814,
                  "end": 6875,
                  "left": {
                    "type": "Literal",
                    "start": 6814,
                    "end": 6857,
                    "value": "#56: -8388608 >> 1 === -4194304. Actual: ",
                    "raw": "'#56: -8388608 >> 1 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6860,
                    "end": 6875,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6861,
                      "end": 6874,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6861,
                        "end": 6869,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6862,
                          "end": 6869,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6873,
                        "end": 6874,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6884,
      "end": 7013,
      "test": {
        "type": "BinaryExpression",
        "start": 6888,
        "end": 6915,
        "left": {
          "type": "BinaryExpression",
          "start": 6888,
          "end": 6902,
          "left": {
            "type": "UnaryExpression",
            "start": 6888,
            "end": 6897,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 6889,
              "end": 6897,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6901,
            "end": 6902,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 6907,
          "end": 6915,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 6908,
            "end": 6915,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6917,
        "end": 7013,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6922,
            "end": 7010,
            "argument": {
              "type": "NewExpression",
              "start": 6928,
              "end": 7009,
              "callee": {
                "type": "Identifier",
                "start": 6932,
                "end": 6944,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6945,
                  "end": 7008,
                  "left": {
                    "type": "Literal",
                    "start": 6945,
                    "end": 6989,
                    "value": "#57: -16777216 >> 1 === -8388608. Actual: ",
                    "raw": "'#57: -16777216 >> 1 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6992,
                    "end": 7008,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6993,
                      "end": 7007,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 6993,
                        "end": 7002,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 6994,
                          "end": 7002,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7006,
                        "end": 7007,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7017,
      "end": 7148,
      "test": {
        "type": "BinaryExpression",
        "start": 7021,
        "end": 7049,
        "left": {
          "type": "BinaryExpression",
          "start": 7021,
          "end": 7035,
          "left": {
            "type": "UnaryExpression",
            "start": 7021,
            "end": 7030,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7022,
              "end": 7030,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7034,
            "end": 7035,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7040,
          "end": 7049,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7041,
            "end": 7049,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7051,
        "end": 7148,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7056,
            "end": 7145,
            "argument": {
              "type": "NewExpression",
              "start": 7062,
              "end": 7144,
              "callee": {
                "type": "Identifier",
                "start": 7066,
                "end": 7078,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7079,
                  "end": 7143,
                  "left": {
                    "type": "Literal",
                    "start": 7079,
                    "end": 7124,
                    "value": "#58: -33554432 >> 1 === -16777216. Actual: ",
                    "raw": "'#58: -33554432 >> 1 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7127,
                    "end": 7143,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7128,
                      "end": 7142,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7128,
                        "end": 7137,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7129,
                          "end": 7137,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7141,
                        "end": 7142,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7152,
      "end": 7283,
      "test": {
        "type": "BinaryExpression",
        "start": 7156,
        "end": 7184,
        "left": {
          "type": "BinaryExpression",
          "start": 7156,
          "end": 7170,
          "left": {
            "type": "UnaryExpression",
            "start": 7156,
            "end": 7165,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7157,
              "end": 7165,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7169,
            "end": 7170,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7175,
          "end": 7184,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7176,
            "end": 7184,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7186,
        "end": 7283,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7191,
            "end": 7280,
            "argument": {
              "type": "NewExpression",
              "start": 7197,
              "end": 7279,
              "callee": {
                "type": "Identifier",
                "start": 7201,
                "end": 7213,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7214,
                  "end": 7278,
                  "left": {
                    "type": "Literal",
                    "start": 7214,
                    "end": 7259,
                    "value": "#59: -67108864 >> 1 === -33554432. Actual: ",
                    "raw": "'#59: -67108864 >> 1 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7262,
                    "end": 7278,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7263,
                      "end": 7277,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7263,
                        "end": 7272,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7264,
                          "end": 7272,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7276,
                        "end": 7277,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7287,
      "end": 7421,
      "test": {
        "type": "BinaryExpression",
        "start": 7291,
        "end": 7320,
        "left": {
          "type": "BinaryExpression",
          "start": 7291,
          "end": 7306,
          "left": {
            "type": "UnaryExpression",
            "start": 7291,
            "end": 7301,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7292,
              "end": 7301,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7305,
            "end": 7306,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7311,
          "end": 7320,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7312,
            "end": 7320,
            "value": 67108864,
            "raw": "67108864",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7322,
        "end": 7421,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7327,
            "end": 7418,
            "argument": {
              "type": "NewExpression",
              "start": 7333,
              "end": 7417,
              "callee": {
                "type": "Identifier",
                "start": 7337,
                "end": 7349,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7350,
                  "end": 7416,
                  "left": {
                    "type": "Literal",
                    "start": 7350,
                    "end": 7396,
                    "value": "#60: -134217728 >> 1 === -67108864. Actual: ",
                    "raw": "'#60: -134217728 >> 1 === -67108864. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7399,
                    "end": 7416,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7400,
                      "end": 7415,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7400,
                        "end": 7410,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7401,
                          "end": 7410,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7414,
                        "end": 7415,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7425,
      "end": 7561,
      "test": {
        "type": "BinaryExpression",
        "start": 7429,
        "end": 7459,
        "left": {
          "type": "BinaryExpression",
          "start": 7429,
          "end": 7444,
          "left": {
            "type": "UnaryExpression",
            "start": 7429,
            "end": 7439,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7430,
              "end": 7439,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7443,
            "end": 7444,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7449,
          "end": 7459,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7450,
            "end": 7459,
            "value": 134217728,
            "raw": "134217728",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7461,
        "end": 7561,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7466,
            "end": 7558,
            "argument": {
              "type": "NewExpression",
              "start": 7472,
              "end": 7557,
              "callee": {
                "type": "Identifier",
                "start": 7476,
                "end": 7488,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7489,
                  "end": 7556,
                  "left": {
                    "type": "Literal",
                    "start": 7489,
                    "end": 7536,
                    "value": "#61: -268435456 >> 1 === -134217728. Actual: ",
                    "raw": "'#61: -268435456 >> 1 === -134217728. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7539,
                    "end": 7556,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7540,
                      "end": 7555,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7540,
                        "end": 7550,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7541,
                          "end": 7550,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7554,
                        "end": 7555,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7565,
      "end": 7701,
      "test": {
        "type": "BinaryExpression",
        "start": 7569,
        "end": 7599,
        "left": {
          "type": "BinaryExpression",
          "start": 7569,
          "end": 7584,
          "left": {
            "type": "UnaryExpression",
            "start": 7569,
            "end": 7579,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7570,
              "end": 7579,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7583,
            "end": 7584,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7589,
          "end": 7599,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7590,
            "end": 7599,
            "value": 268435456,
            "raw": "268435456",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7601,
        "end": 7701,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7606,
            "end": 7698,
            "argument": {
              "type": "NewExpression",
              "start": 7612,
              "end": 7697,
              "callee": {
                "type": "Identifier",
                "start": 7616,
                "end": 7628,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7629,
                  "end": 7696,
                  "left": {
                    "type": "Literal",
                    "start": 7629,
                    "end": 7676,
                    "value": "#62: -536870912 >> 1 === -268435456. Actual: ",
                    "raw": "'#62: -536870912 >> 1 === -268435456. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7679,
                    "end": 7696,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7680,
                      "end": 7695,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7680,
                        "end": 7690,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7681,
                          "end": 7690,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7694,
                        "end": 7695,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7705,
      "end": 7844,
      "test": {
        "type": "BinaryExpression",
        "start": 7709,
        "end": 7740,
        "left": {
          "type": "BinaryExpression",
          "start": 7709,
          "end": 7725,
          "left": {
            "type": "UnaryExpression",
            "start": 7709,
            "end": 7720,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7710,
              "end": 7720,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7724,
            "end": 7725,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7730,
          "end": 7740,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7731,
            "end": 7740,
            "value": 536870912,
            "raw": "536870912",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7742,
        "end": 7844,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7747,
            "end": 7841,
            "argument": {
              "type": "NewExpression",
              "start": 7753,
              "end": 7840,
              "callee": {
                "type": "Identifier",
                "start": 7757,
                "end": 7769,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7770,
                  "end": 7839,
                  "left": {
                    "type": "Literal",
                    "start": 7770,
                    "end": 7818,
                    "value": "#63: -1073741824 >> 1 === -536870912. Actual: ",
                    "raw": "'#63: -1073741824 >> 1 === -536870912. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7821,
                    "end": 7839,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7822,
                      "end": 7838,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7822,
                        "end": 7833,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7823,
                          "end": 7833,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7837,
                        "end": 7838,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7848,
      "end": 7989,
      "test": {
        "type": "BinaryExpression",
        "start": 7852,
        "end": 7884,
        "left": {
          "type": "BinaryExpression",
          "start": 7852,
          "end": 7868,
          "left": {
            "type": "UnaryExpression",
            "start": 7852,
            "end": 7863,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7853,
              "end": 7863,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7867,
            "end": 7868,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 7873,
          "end": 7884,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 7874,
            "end": 7884,
            "value": 1073741824,
            "raw": "1073741824",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7886,
        "end": 7989,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7891,
            "end": 7986,
            "argument": {
              "type": "NewExpression",
              "start": 7897,
              "end": 7985,
              "callee": {
                "type": "Identifier",
                "start": 7901,
                "end": 7913,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7914,
                  "end": 7984,
                  "left": {
                    "type": "Literal",
                    "start": 7914,
                    "end": 7963,
                    "value": "#64: -2147483648 >> 1 === -1073741824. Actual: ",
                    "raw": "'#64: -2147483648 >> 1 === -1073741824. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7966,
                    "end": 7984,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7967,
                      "end": 7983,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 7967,
                        "end": 7978,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 7968,
                          "end": 7978,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7982,
                        "end": 7983,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7993,
      "end": 8089,
      "test": {
        "type": "BinaryExpression",
        "start": 7997,
        "end": 8011,
        "left": {
          "type": "BinaryExpression",
          "start": 7997,
          "end": 8004,
          "left": {
            "type": "UnaryExpression",
            "start": 7997,
            "end": 7999,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 7998,
              "end": 7999,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8003,
            "end": 8004,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8009,
          "end": 8011,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8010,
            "end": 8011,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8013,
        "end": 8089,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8018,
            "end": 8086,
            "argument": {
              "type": "NewExpression",
              "start": 8024,
              "end": 8085,
              "callee": {
                "type": "Identifier",
                "start": 8028,
                "end": 8040,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8041,
                  "end": 8084,
                  "left": {
                    "type": "Literal",
                    "start": 8041,
                    "end": 8072,
                    "value": "#65: -1 >> 2 === -1. Actual: ",
                    "raw": "'#65: -1 >> 2 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8075,
                    "end": 8084,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8076,
                      "end": 8083,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8076,
                        "end": 8078,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8077,
                          "end": 8078,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8082,
                        "end": 8083,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8093,
      "end": 8189,
      "test": {
        "type": "BinaryExpression",
        "start": 8097,
        "end": 8111,
        "left": {
          "type": "BinaryExpression",
          "start": 8097,
          "end": 8104,
          "left": {
            "type": "UnaryExpression",
            "start": 8097,
            "end": 8099,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8098,
              "end": 8099,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8103,
            "end": 8104,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8109,
          "end": 8111,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8110,
            "end": 8111,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8113,
        "end": 8189,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8118,
            "end": 8186,
            "argument": {
              "type": "NewExpression",
              "start": 8124,
              "end": 8185,
              "callee": {
                "type": "Identifier",
                "start": 8128,
                "end": 8140,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8141,
                  "end": 8184,
                  "left": {
                    "type": "Literal",
                    "start": 8141,
                    "end": 8172,
                    "value": "#66: -2 >> 2 === -1. Actual: ",
                    "raw": "'#66: -2 >> 2 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8175,
                    "end": 8184,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8176,
                      "end": 8183,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8176,
                        "end": 8178,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8177,
                          "end": 8178,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8182,
                        "end": 8183,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8193,
      "end": 8289,
      "test": {
        "type": "BinaryExpression",
        "start": 8197,
        "end": 8211,
        "left": {
          "type": "BinaryExpression",
          "start": 8197,
          "end": 8204,
          "left": {
            "type": "UnaryExpression",
            "start": 8197,
            "end": 8199,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8198,
              "end": 8199,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8203,
            "end": 8204,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8209,
          "end": 8211,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8210,
            "end": 8211,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8213,
        "end": 8289,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8218,
            "end": 8286,
            "argument": {
              "type": "NewExpression",
              "start": 8224,
              "end": 8285,
              "callee": {
                "type": "Identifier",
                "start": 8228,
                "end": 8240,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8241,
                  "end": 8284,
                  "left": {
                    "type": "Literal",
                    "start": 8241,
                    "end": 8272,
                    "value": "#67: -4 >> 2 === -1. Actual: ",
                    "raw": "'#67: -4 >> 2 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8275,
                    "end": 8284,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8276,
                      "end": 8283,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8276,
                        "end": 8278,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8277,
                          "end": 8278,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8282,
                        "end": 8283,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8293,
      "end": 8389,
      "test": {
        "type": "BinaryExpression",
        "start": 8297,
        "end": 8311,
        "left": {
          "type": "BinaryExpression",
          "start": 8297,
          "end": 8304,
          "left": {
            "type": "UnaryExpression",
            "start": 8297,
            "end": 8299,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8298,
              "end": 8299,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8303,
            "end": 8304,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8309,
          "end": 8311,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8310,
            "end": 8311,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8313,
        "end": 8389,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8318,
            "end": 8386,
            "argument": {
              "type": "NewExpression",
              "start": 8324,
              "end": 8385,
              "callee": {
                "type": "Identifier",
                "start": 8328,
                "end": 8340,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8341,
                  "end": 8384,
                  "left": {
                    "type": "Literal",
                    "start": 8341,
                    "end": 8372,
                    "value": "#68: -8 >> 2 === -2. Actual: ",
                    "raw": "'#68: -8 >> 2 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8375,
                    "end": 8384,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8376,
                      "end": 8383,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8376,
                        "end": 8378,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8377,
                          "end": 8378,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8382,
                        "end": 8383,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8393,
      "end": 8492,
      "test": {
        "type": "BinaryExpression",
        "start": 8397,
        "end": 8412,
        "left": {
          "type": "BinaryExpression",
          "start": 8397,
          "end": 8405,
          "left": {
            "type": "UnaryExpression",
            "start": 8397,
            "end": 8400,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8398,
              "end": 8400,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8404,
            "end": 8405,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8410,
          "end": 8412,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8411,
            "end": 8412,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8414,
        "end": 8492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8419,
            "end": 8489,
            "argument": {
              "type": "NewExpression",
              "start": 8425,
              "end": 8488,
              "callee": {
                "type": "Identifier",
                "start": 8429,
                "end": 8441,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8442,
                  "end": 8487,
                  "left": {
                    "type": "Literal",
                    "start": 8442,
                    "end": 8474,
                    "value": "#69: -16 >> 2 === -4. Actual: ",
                    "raw": "'#69: -16 >> 2 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8477,
                    "end": 8487,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8478,
                      "end": 8486,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8478,
                        "end": 8481,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8479,
                          "end": 8481,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8485,
                        "end": 8486,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8496,
      "end": 8595,
      "test": {
        "type": "BinaryExpression",
        "start": 8500,
        "end": 8515,
        "left": {
          "type": "BinaryExpression",
          "start": 8500,
          "end": 8508,
          "left": {
            "type": "UnaryExpression",
            "start": 8500,
            "end": 8503,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8501,
              "end": 8503,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8507,
            "end": 8508,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8513,
          "end": 8515,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8514,
            "end": 8515,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8517,
        "end": 8595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8522,
            "end": 8592,
            "argument": {
              "type": "NewExpression",
              "start": 8528,
              "end": 8591,
              "callee": {
                "type": "Identifier",
                "start": 8532,
                "end": 8544,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8545,
                  "end": 8590,
                  "left": {
                    "type": "Literal",
                    "start": 8545,
                    "end": 8577,
                    "value": "#70: -32 >> 2 === -8. Actual: ",
                    "raw": "'#70: -32 >> 2 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8580,
                    "end": 8590,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8581,
                      "end": 8589,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8581,
                        "end": 8584,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8582,
                          "end": 8584,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8588,
                        "end": 8589,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8599,
      "end": 8700,
      "test": {
        "type": "BinaryExpression",
        "start": 8603,
        "end": 8619,
        "left": {
          "type": "BinaryExpression",
          "start": 8603,
          "end": 8611,
          "left": {
            "type": "UnaryExpression",
            "start": 8603,
            "end": 8606,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8604,
              "end": 8606,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8610,
            "end": 8611,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8616,
          "end": 8619,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8617,
            "end": 8619,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8621,
        "end": 8700,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8626,
            "end": 8697,
            "argument": {
              "type": "NewExpression",
              "start": 8632,
              "end": 8696,
              "callee": {
                "type": "Identifier",
                "start": 8636,
                "end": 8648,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8649,
                  "end": 8695,
                  "left": {
                    "type": "Literal",
                    "start": 8649,
                    "end": 8682,
                    "value": "#71: -64 >> 2 === -16. Actual: ",
                    "raw": "'#71: -64 >> 2 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8685,
                    "end": 8695,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8686,
                      "end": 8694,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8686,
                        "end": 8689,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8687,
                          "end": 8689,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8693,
                        "end": 8694,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8704,
      "end": 8808,
      "test": {
        "type": "BinaryExpression",
        "start": 8708,
        "end": 8725,
        "left": {
          "type": "BinaryExpression",
          "start": 8708,
          "end": 8717,
          "left": {
            "type": "UnaryExpression",
            "start": 8708,
            "end": 8712,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8709,
              "end": 8712,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8716,
            "end": 8717,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8722,
          "end": 8725,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8723,
            "end": 8725,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8727,
        "end": 8808,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8732,
            "end": 8805,
            "argument": {
              "type": "NewExpression",
              "start": 8738,
              "end": 8804,
              "callee": {
                "type": "Identifier",
                "start": 8742,
                "end": 8754,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8755,
                  "end": 8803,
                  "left": {
                    "type": "Literal",
                    "start": 8755,
                    "end": 8789,
                    "value": "#72: -128 >> 2 === -32. Actual: ",
                    "raw": "'#72: -128 >> 2 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8792,
                    "end": 8803,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8793,
                      "end": 8802,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8793,
                        "end": 8797,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8794,
                          "end": 8797,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8801,
                        "end": 8802,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8812,
      "end": 8916,
      "test": {
        "type": "BinaryExpression",
        "start": 8816,
        "end": 8833,
        "left": {
          "type": "BinaryExpression",
          "start": 8816,
          "end": 8825,
          "left": {
            "type": "UnaryExpression",
            "start": 8816,
            "end": 8820,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8817,
              "end": 8820,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8824,
            "end": 8825,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8830,
          "end": 8833,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8831,
            "end": 8833,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8835,
        "end": 8916,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8840,
            "end": 8913,
            "argument": {
              "type": "NewExpression",
              "start": 8846,
              "end": 8912,
              "callee": {
                "type": "Identifier",
                "start": 8850,
                "end": 8862,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8863,
                  "end": 8911,
                  "left": {
                    "type": "Literal",
                    "start": 8863,
                    "end": 8897,
                    "value": "#73: -256 >> 2 === -64. Actual: ",
                    "raw": "'#73: -256 >> 2 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8900,
                    "end": 8911,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8901,
                      "end": 8910,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 8901,
                        "end": 8905,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 8902,
                          "end": 8905,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8909,
                        "end": 8910,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8920,
      "end": 9026,
      "test": {
        "type": "BinaryExpression",
        "start": 8924,
        "end": 8942,
        "left": {
          "type": "BinaryExpression",
          "start": 8924,
          "end": 8933,
          "left": {
            "type": "UnaryExpression",
            "start": 8924,
            "end": 8928,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 8925,
              "end": 8928,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8932,
            "end": 8933,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 8938,
          "end": 8942,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 8939,
            "end": 8942,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8944,
        "end": 9026,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8949,
            "end": 9023,
            "argument": {
              "type": "NewExpression",
              "start": 8955,
              "end": 9022,
              "callee": {
                "type": "Identifier",
                "start": 8959,
                "end": 8971,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8972,
                  "end": 9021,
                  "left": {
                    "type": "Literal",
                    "start": 8972,
                    "end": 9007,
                    "value": "#74: -512 >> 2 === -128. Actual: ",
                    "raw": "'#74: -512 >> 2 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9010,
                    "end": 9021,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9011,
                      "end": 9020,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9011,
                        "end": 9015,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9012,
                          "end": 9015,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9019,
                        "end": 9020,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9030,
      "end": 9139,
      "test": {
        "type": "BinaryExpression",
        "start": 9034,
        "end": 9053,
        "left": {
          "type": "BinaryExpression",
          "start": 9034,
          "end": 9044,
          "left": {
            "type": "UnaryExpression",
            "start": 9034,
            "end": 9039,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9035,
              "end": 9039,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9043,
            "end": 9044,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9049,
          "end": 9053,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9050,
            "end": 9053,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9055,
        "end": 9139,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9060,
            "end": 9136,
            "argument": {
              "type": "NewExpression",
              "start": 9066,
              "end": 9135,
              "callee": {
                "type": "Identifier",
                "start": 9070,
                "end": 9082,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9083,
                  "end": 9134,
                  "left": {
                    "type": "Literal",
                    "start": 9083,
                    "end": 9119,
                    "value": "#75: -1024 >> 2 === -256. Actual: ",
                    "raw": "'#75: -1024 >> 2 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9122,
                    "end": 9134,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9123,
                      "end": 9133,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9123,
                        "end": 9128,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9124,
                          "end": 9128,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9132,
                        "end": 9133,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9143,
      "end": 9252,
      "test": {
        "type": "BinaryExpression",
        "start": 9147,
        "end": 9166,
        "left": {
          "type": "BinaryExpression",
          "start": 9147,
          "end": 9157,
          "left": {
            "type": "UnaryExpression",
            "start": 9147,
            "end": 9152,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9148,
              "end": 9152,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9156,
            "end": 9157,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9162,
          "end": 9166,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9163,
            "end": 9166,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9168,
        "end": 9252,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9173,
            "end": 9249,
            "argument": {
              "type": "NewExpression",
              "start": 9179,
              "end": 9248,
              "callee": {
                "type": "Identifier",
                "start": 9183,
                "end": 9195,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9196,
                  "end": 9247,
                  "left": {
                    "type": "Literal",
                    "start": 9196,
                    "end": 9232,
                    "value": "#76: -2048 >> 2 === -512. Actual: ",
                    "raw": "'#76: -2048 >> 2 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9235,
                    "end": 9247,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9236,
                      "end": 9246,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9236,
                        "end": 9241,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9237,
                          "end": 9241,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9245,
                        "end": 9246,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9256,
      "end": 9367,
      "test": {
        "type": "BinaryExpression",
        "start": 9260,
        "end": 9280,
        "left": {
          "type": "BinaryExpression",
          "start": 9260,
          "end": 9270,
          "left": {
            "type": "UnaryExpression",
            "start": 9260,
            "end": 9265,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9261,
              "end": 9265,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9269,
            "end": 9270,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9275,
          "end": 9280,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9276,
            "end": 9280,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9282,
        "end": 9367,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9287,
            "end": 9364,
            "argument": {
              "type": "NewExpression",
              "start": 9293,
              "end": 9363,
              "callee": {
                "type": "Identifier",
                "start": 9297,
                "end": 9309,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9310,
                  "end": 9362,
                  "left": {
                    "type": "Literal",
                    "start": 9310,
                    "end": 9347,
                    "value": "#77: -4096 >> 2 === -1024. Actual: ",
                    "raw": "'#77: -4096 >> 2 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9350,
                    "end": 9362,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9351,
                      "end": 9361,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9351,
                        "end": 9356,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9352,
                          "end": 9356,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9360,
                        "end": 9361,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9371,
      "end": 9482,
      "test": {
        "type": "BinaryExpression",
        "start": 9375,
        "end": 9395,
        "left": {
          "type": "BinaryExpression",
          "start": 9375,
          "end": 9385,
          "left": {
            "type": "UnaryExpression",
            "start": 9375,
            "end": 9380,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9376,
              "end": 9380,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9384,
            "end": 9385,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9390,
          "end": 9395,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9391,
            "end": 9395,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9397,
        "end": 9482,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9402,
            "end": 9479,
            "argument": {
              "type": "NewExpression",
              "start": 9408,
              "end": 9478,
              "callee": {
                "type": "Identifier",
                "start": 9412,
                "end": 9424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9425,
                  "end": 9477,
                  "left": {
                    "type": "Literal",
                    "start": 9425,
                    "end": 9462,
                    "value": "#78: -8192 >> 2 === -2048. Actual: ",
                    "raw": "'#78: -8192 >> 2 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9465,
                    "end": 9477,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9466,
                      "end": 9476,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9466,
                        "end": 9471,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9467,
                          "end": 9471,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9475,
                        "end": 9476,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9486,
      "end": 9600,
      "test": {
        "type": "BinaryExpression",
        "start": 9490,
        "end": 9511,
        "left": {
          "type": "BinaryExpression",
          "start": 9490,
          "end": 9501,
          "left": {
            "type": "UnaryExpression",
            "start": 9490,
            "end": 9496,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9491,
              "end": 9496,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9500,
            "end": 9501,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9506,
          "end": 9511,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9507,
            "end": 9511,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9513,
        "end": 9600,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9518,
            "end": 9597,
            "argument": {
              "type": "NewExpression",
              "start": 9524,
              "end": 9596,
              "callee": {
                "type": "Identifier",
                "start": 9528,
                "end": 9540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9541,
                  "end": 9595,
                  "left": {
                    "type": "Literal",
                    "start": 9541,
                    "end": 9579,
                    "value": "#79: -16384 >> 2 === -4096. Actual: ",
                    "raw": "'#79: -16384 >> 2 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9582,
                    "end": 9595,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9583,
                      "end": 9594,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9583,
                        "end": 9589,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9584,
                          "end": 9589,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9593,
                        "end": 9594,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9604,
      "end": 9718,
      "test": {
        "type": "BinaryExpression",
        "start": 9608,
        "end": 9629,
        "left": {
          "type": "BinaryExpression",
          "start": 9608,
          "end": 9619,
          "left": {
            "type": "UnaryExpression",
            "start": 9608,
            "end": 9614,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9609,
              "end": 9614,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9618,
            "end": 9619,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9624,
          "end": 9629,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9625,
            "end": 9629,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9631,
        "end": 9718,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9636,
            "end": 9715,
            "argument": {
              "type": "NewExpression",
              "start": 9642,
              "end": 9714,
              "callee": {
                "type": "Identifier",
                "start": 9646,
                "end": 9658,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9659,
                  "end": 9713,
                  "left": {
                    "type": "Literal",
                    "start": 9659,
                    "end": 9697,
                    "value": "#80: -32768 >> 2 === -8192. Actual: ",
                    "raw": "'#80: -32768 >> 2 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9700,
                    "end": 9713,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9701,
                      "end": 9712,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9701,
                        "end": 9707,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9702,
                          "end": 9707,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9711,
                        "end": 9712,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9722,
      "end": 9838,
      "test": {
        "type": "BinaryExpression",
        "start": 9726,
        "end": 9748,
        "left": {
          "type": "BinaryExpression",
          "start": 9726,
          "end": 9737,
          "left": {
            "type": "UnaryExpression",
            "start": 9726,
            "end": 9732,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9727,
              "end": 9732,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9736,
            "end": 9737,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9742,
          "end": 9748,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9743,
            "end": 9748,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9750,
        "end": 9838,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9755,
            "end": 9835,
            "argument": {
              "type": "NewExpression",
              "start": 9761,
              "end": 9834,
              "callee": {
                "type": "Identifier",
                "start": 9765,
                "end": 9777,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9778,
                  "end": 9833,
                  "left": {
                    "type": "Literal",
                    "start": 9778,
                    "end": 9817,
                    "value": "#81: -65536 >> 2 === -16384. Actual: ",
                    "raw": "'#81: -65536 >> 2 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9820,
                    "end": 9833,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9821,
                      "end": 9832,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9821,
                        "end": 9827,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9822,
                          "end": 9827,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9831,
                        "end": 9832,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9842,
      "end": 9961,
      "test": {
        "type": "BinaryExpression",
        "start": 9846,
        "end": 9869,
        "left": {
          "type": "BinaryExpression",
          "start": 9846,
          "end": 9858,
          "left": {
            "type": "UnaryExpression",
            "start": 9846,
            "end": 9853,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9847,
              "end": 9853,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9857,
            "end": 9858,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9863,
          "end": 9869,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9864,
            "end": 9869,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9871,
        "end": 9961,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9876,
            "end": 9958,
            "argument": {
              "type": "NewExpression",
              "start": 9882,
              "end": 9957,
              "callee": {
                "type": "Identifier",
                "start": 9886,
                "end": 9898,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9899,
                  "end": 9956,
                  "left": {
                    "type": "Literal",
                    "start": 9899,
                    "end": 9939,
                    "value": "#82: -131072 >> 2 === -32768. Actual: ",
                    "raw": "'#82: -131072 >> 2 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9942,
                    "end": 9956,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9943,
                      "end": 9955,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 9943,
                        "end": 9950,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 9944,
                          "end": 9950,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9954,
                        "end": 9955,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9965,
      "end": 10084,
      "test": {
        "type": "BinaryExpression",
        "start": 9969,
        "end": 9992,
        "left": {
          "type": "BinaryExpression",
          "start": 9969,
          "end": 9981,
          "left": {
            "type": "UnaryExpression",
            "start": 9969,
            "end": 9976,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 9970,
              "end": 9976,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9980,
            "end": 9981,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 9986,
          "end": 9992,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 9987,
            "end": 9992,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9994,
        "end": 10084,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9999,
            "end": 10081,
            "argument": {
              "type": "NewExpression",
              "start": 10005,
              "end": 10080,
              "callee": {
                "type": "Identifier",
                "start": 10009,
                "end": 10021,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10022,
                  "end": 10079,
                  "left": {
                    "type": "Literal",
                    "start": 10022,
                    "end": 10062,
                    "value": "#83: -262144 >> 2 === -65536. Actual: ",
                    "raw": "'#83: -262144 >> 2 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10065,
                    "end": 10079,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10066,
                      "end": 10078,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10066,
                        "end": 10073,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10067,
                          "end": 10073,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10077,
                        "end": 10078,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10088,
      "end": 10209,
      "test": {
        "type": "BinaryExpression",
        "start": 10092,
        "end": 10116,
        "left": {
          "type": "BinaryExpression",
          "start": 10092,
          "end": 10104,
          "left": {
            "type": "UnaryExpression",
            "start": 10092,
            "end": 10099,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10093,
              "end": 10099,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10103,
            "end": 10104,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10109,
          "end": 10116,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10110,
            "end": 10116,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10118,
        "end": 10209,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10123,
            "end": 10206,
            "argument": {
              "type": "NewExpression",
              "start": 10129,
              "end": 10205,
              "callee": {
                "type": "Identifier",
                "start": 10133,
                "end": 10145,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10146,
                  "end": 10204,
                  "left": {
                    "type": "Literal",
                    "start": 10146,
                    "end": 10187,
                    "value": "#84: -524288 >> 2 === -131072. Actual: ",
                    "raw": "'#84: -524288 >> 2 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10190,
                    "end": 10204,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10191,
                      "end": 10203,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10191,
                        "end": 10198,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10192,
                          "end": 10198,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10202,
                        "end": 10203,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10213,
      "end": 10337,
      "test": {
        "type": "BinaryExpression",
        "start": 10217,
        "end": 10242,
        "left": {
          "type": "BinaryExpression",
          "start": 10217,
          "end": 10230,
          "left": {
            "type": "UnaryExpression",
            "start": 10217,
            "end": 10225,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10218,
              "end": 10225,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10229,
            "end": 10230,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10235,
          "end": 10242,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10236,
            "end": 10242,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10244,
        "end": 10337,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10249,
            "end": 10334,
            "argument": {
              "type": "NewExpression",
              "start": 10255,
              "end": 10333,
              "callee": {
                "type": "Identifier",
                "start": 10259,
                "end": 10271,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10272,
                  "end": 10332,
                  "left": {
                    "type": "Literal",
                    "start": 10272,
                    "end": 10314,
                    "value": "#85: -1048576 >> 2 === -262144. Actual: ",
                    "raw": "'#85: -1048576 >> 2 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10317,
                    "end": 10332,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10318,
                      "end": 10331,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10318,
                        "end": 10326,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10319,
                          "end": 10326,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10330,
                        "end": 10331,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10341,
      "end": 10465,
      "test": {
        "type": "BinaryExpression",
        "start": 10345,
        "end": 10370,
        "left": {
          "type": "BinaryExpression",
          "start": 10345,
          "end": 10358,
          "left": {
            "type": "UnaryExpression",
            "start": 10345,
            "end": 10353,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10346,
              "end": 10353,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10357,
            "end": 10358,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10363,
          "end": 10370,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10364,
            "end": 10370,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10372,
        "end": 10465,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10377,
            "end": 10462,
            "argument": {
              "type": "NewExpression",
              "start": 10383,
              "end": 10461,
              "callee": {
                "type": "Identifier",
                "start": 10387,
                "end": 10399,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10400,
                  "end": 10460,
                  "left": {
                    "type": "Literal",
                    "start": 10400,
                    "end": 10442,
                    "value": "#86: -2097152 >> 2 === -524288. Actual: ",
                    "raw": "'#86: -2097152 >> 2 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10445,
                    "end": 10460,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10446,
                      "end": 10459,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10446,
                        "end": 10454,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10447,
                          "end": 10454,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10458,
                        "end": 10459,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10469,
      "end": 10595,
      "test": {
        "type": "BinaryExpression",
        "start": 10473,
        "end": 10499,
        "left": {
          "type": "BinaryExpression",
          "start": 10473,
          "end": 10486,
          "left": {
            "type": "UnaryExpression",
            "start": 10473,
            "end": 10481,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10474,
              "end": 10481,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10485,
            "end": 10486,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10491,
          "end": 10499,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10492,
            "end": 10499,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10501,
        "end": 10595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10506,
            "end": 10592,
            "argument": {
              "type": "NewExpression",
              "start": 10512,
              "end": 10591,
              "callee": {
                "type": "Identifier",
                "start": 10516,
                "end": 10528,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10529,
                  "end": 10590,
                  "left": {
                    "type": "Literal",
                    "start": 10529,
                    "end": 10572,
                    "value": "#87: -4194304 >> 2 === -1048576. Actual: ",
                    "raw": "'#87: -4194304 >> 2 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10575,
                    "end": 10590,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10576,
                      "end": 10589,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10576,
                        "end": 10584,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10577,
                          "end": 10584,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10588,
                        "end": 10589,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10599,
      "end": 10725,
      "test": {
        "type": "BinaryExpression",
        "start": 10603,
        "end": 10629,
        "left": {
          "type": "BinaryExpression",
          "start": 10603,
          "end": 10616,
          "left": {
            "type": "UnaryExpression",
            "start": 10603,
            "end": 10611,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10604,
              "end": 10611,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10615,
            "end": 10616,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10621,
          "end": 10629,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10622,
            "end": 10629,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10631,
        "end": 10725,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10636,
            "end": 10722,
            "argument": {
              "type": "NewExpression",
              "start": 10642,
              "end": 10721,
              "callee": {
                "type": "Identifier",
                "start": 10646,
                "end": 10658,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10659,
                  "end": 10720,
                  "left": {
                    "type": "Literal",
                    "start": 10659,
                    "end": 10702,
                    "value": "#88: -8388608 >> 2 === -2097152. Actual: ",
                    "raw": "'#88: -8388608 >> 2 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10705,
                    "end": 10720,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10706,
                      "end": 10719,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10706,
                        "end": 10714,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10707,
                          "end": 10714,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10718,
                        "end": 10719,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10729,
      "end": 10858,
      "test": {
        "type": "BinaryExpression",
        "start": 10733,
        "end": 10760,
        "left": {
          "type": "BinaryExpression",
          "start": 10733,
          "end": 10747,
          "left": {
            "type": "UnaryExpression",
            "start": 10733,
            "end": 10742,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10734,
              "end": 10742,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10746,
            "end": 10747,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10752,
          "end": 10760,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10753,
            "end": 10760,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10762,
        "end": 10858,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10767,
            "end": 10855,
            "argument": {
              "type": "NewExpression",
              "start": 10773,
              "end": 10854,
              "callee": {
                "type": "Identifier",
                "start": 10777,
                "end": 10789,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10790,
                  "end": 10853,
                  "left": {
                    "type": "Literal",
                    "start": 10790,
                    "end": 10834,
                    "value": "#89: -16777216 >> 2 === -4194304. Actual: ",
                    "raw": "'#89: -16777216 >> 2 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10837,
                    "end": 10853,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10838,
                      "end": 10852,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10838,
                        "end": 10847,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10839,
                          "end": 10847,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10851,
                        "end": 10852,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10862,
      "end": 10991,
      "test": {
        "type": "BinaryExpression",
        "start": 10866,
        "end": 10893,
        "left": {
          "type": "BinaryExpression",
          "start": 10866,
          "end": 10880,
          "left": {
            "type": "UnaryExpression",
            "start": 10866,
            "end": 10875,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 10867,
              "end": 10875,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10879,
            "end": 10880,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 10885,
          "end": 10893,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 10886,
            "end": 10893,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10895,
        "end": 10991,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10900,
            "end": 10988,
            "argument": {
              "type": "NewExpression",
              "start": 10906,
              "end": 10987,
              "callee": {
                "type": "Identifier",
                "start": 10910,
                "end": 10922,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10923,
                  "end": 10986,
                  "left": {
                    "type": "Literal",
                    "start": 10923,
                    "end": 10967,
                    "value": "#90: -33554432 >> 2 === -8388608. Actual: ",
                    "raw": "'#90: -33554432 >> 2 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10970,
                    "end": 10986,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10971,
                      "end": 10985,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 10971,
                        "end": 10980,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 10972,
                          "end": 10980,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10984,
                        "end": 10985,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10995,
      "end": 11126,
      "test": {
        "type": "BinaryExpression",
        "start": 10999,
        "end": 11027,
        "left": {
          "type": "BinaryExpression",
          "start": 10999,
          "end": 11013,
          "left": {
            "type": "UnaryExpression",
            "start": 10999,
            "end": 11008,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11000,
              "end": 11008,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11012,
            "end": 11013,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11018,
          "end": 11027,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11019,
            "end": 11027,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11029,
        "end": 11126,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11034,
            "end": 11123,
            "argument": {
              "type": "NewExpression",
              "start": 11040,
              "end": 11122,
              "callee": {
                "type": "Identifier",
                "start": 11044,
                "end": 11056,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11057,
                  "end": 11121,
                  "left": {
                    "type": "Literal",
                    "start": 11057,
                    "end": 11102,
                    "value": "#91: -67108864 >> 2 === -16777216. Actual: ",
                    "raw": "'#91: -67108864 >> 2 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11105,
                    "end": 11121,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11106,
                      "end": 11120,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11106,
                        "end": 11115,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11107,
                          "end": 11115,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11119,
                        "end": 11120,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11130,
      "end": 11264,
      "test": {
        "type": "BinaryExpression",
        "start": 11134,
        "end": 11163,
        "left": {
          "type": "BinaryExpression",
          "start": 11134,
          "end": 11149,
          "left": {
            "type": "UnaryExpression",
            "start": 11134,
            "end": 11144,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11135,
              "end": 11144,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11148,
            "end": 11149,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11154,
          "end": 11163,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11155,
            "end": 11163,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11165,
        "end": 11264,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11170,
            "end": 11261,
            "argument": {
              "type": "NewExpression",
              "start": 11176,
              "end": 11260,
              "callee": {
                "type": "Identifier",
                "start": 11180,
                "end": 11192,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11193,
                  "end": 11259,
                  "left": {
                    "type": "Literal",
                    "start": 11193,
                    "end": 11239,
                    "value": "#92: -134217728 >> 2 === -33554432. Actual: ",
                    "raw": "'#92: -134217728 >> 2 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11242,
                    "end": 11259,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11243,
                      "end": 11258,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11243,
                        "end": 11253,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11244,
                          "end": 11253,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11257,
                        "end": 11258,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11268,
      "end": 11402,
      "test": {
        "type": "BinaryExpression",
        "start": 11272,
        "end": 11301,
        "left": {
          "type": "BinaryExpression",
          "start": 11272,
          "end": 11287,
          "left": {
            "type": "UnaryExpression",
            "start": 11272,
            "end": 11282,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11273,
              "end": 11282,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11286,
            "end": 11287,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11292,
          "end": 11301,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11293,
            "end": 11301,
            "value": 67108864,
            "raw": "67108864",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11303,
        "end": 11402,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11308,
            "end": 11399,
            "argument": {
              "type": "NewExpression",
              "start": 11314,
              "end": 11398,
              "callee": {
                "type": "Identifier",
                "start": 11318,
                "end": 11330,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11331,
                  "end": 11397,
                  "left": {
                    "type": "Literal",
                    "start": 11331,
                    "end": 11377,
                    "value": "#93: -268435456 >> 2 === -67108864. Actual: ",
                    "raw": "'#93: -268435456 >> 2 === -67108864. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11380,
                    "end": 11397,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11381,
                      "end": 11396,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11381,
                        "end": 11391,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11382,
                          "end": 11391,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11395,
                        "end": 11396,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11406,
      "end": 11542,
      "test": {
        "type": "BinaryExpression",
        "start": 11410,
        "end": 11440,
        "left": {
          "type": "BinaryExpression",
          "start": 11410,
          "end": 11425,
          "left": {
            "type": "UnaryExpression",
            "start": 11410,
            "end": 11420,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11411,
              "end": 11420,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11424,
            "end": 11425,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11430,
          "end": 11440,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11431,
            "end": 11440,
            "value": 134217728,
            "raw": "134217728",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11442,
        "end": 11542,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11447,
            "end": 11539,
            "argument": {
              "type": "NewExpression",
              "start": 11453,
              "end": 11538,
              "callee": {
                "type": "Identifier",
                "start": 11457,
                "end": 11469,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11470,
                  "end": 11537,
                  "left": {
                    "type": "Literal",
                    "start": 11470,
                    "end": 11517,
                    "value": "#94: -536870912 >> 2 === -134217728. Actual: ",
                    "raw": "'#94: -536870912 >> 2 === -134217728. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11520,
                    "end": 11537,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11521,
                      "end": 11536,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11521,
                        "end": 11531,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11522,
                          "end": 11531,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11535,
                        "end": 11536,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11546,
      "end": 11685,
      "test": {
        "type": "BinaryExpression",
        "start": 11550,
        "end": 11581,
        "left": {
          "type": "BinaryExpression",
          "start": 11550,
          "end": 11566,
          "left": {
            "type": "UnaryExpression",
            "start": 11550,
            "end": 11561,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11551,
              "end": 11561,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11565,
            "end": 11566,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11571,
          "end": 11581,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11572,
            "end": 11581,
            "value": 268435456,
            "raw": "268435456",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11583,
        "end": 11685,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11588,
            "end": 11682,
            "argument": {
              "type": "NewExpression",
              "start": 11594,
              "end": 11681,
              "callee": {
                "type": "Identifier",
                "start": 11598,
                "end": 11610,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11611,
                  "end": 11680,
                  "left": {
                    "type": "Literal",
                    "start": 11611,
                    "end": 11659,
                    "value": "#95: -1073741824 >> 2 === -268435456. Actual: ",
                    "raw": "'#95: -1073741824 >> 2 === -268435456. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11662,
                    "end": 11680,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11663,
                      "end": 11679,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11663,
                        "end": 11674,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11664,
                          "end": 11674,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11678,
                        "end": 11679,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11689,
      "end": 11828,
      "test": {
        "type": "BinaryExpression",
        "start": 11693,
        "end": 11724,
        "left": {
          "type": "BinaryExpression",
          "start": 11693,
          "end": 11709,
          "left": {
            "type": "UnaryExpression",
            "start": 11693,
            "end": 11704,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11694,
              "end": 11704,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11708,
            "end": 11709,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11714,
          "end": 11724,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11715,
            "end": 11724,
            "value": 536870912,
            "raw": "536870912",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11726,
        "end": 11828,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11731,
            "end": 11825,
            "argument": {
              "type": "NewExpression",
              "start": 11737,
              "end": 11824,
              "callee": {
                "type": "Identifier",
                "start": 11741,
                "end": 11753,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11754,
                  "end": 11823,
                  "left": {
                    "type": "Literal",
                    "start": 11754,
                    "end": 11802,
                    "value": "#96: -2147483648 >> 2 === -536870912. Actual: ",
                    "raw": "'#96: -2147483648 >> 2 === -536870912. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11805,
                    "end": 11823,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11806,
                      "end": 11822,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11806,
                        "end": 11817,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11807,
                          "end": 11817,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11821,
                        "end": 11822,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11832,
      "end": 11928,
      "test": {
        "type": "BinaryExpression",
        "start": 11836,
        "end": 11850,
        "left": {
          "type": "BinaryExpression",
          "start": 11836,
          "end": 11843,
          "left": {
            "type": "UnaryExpression",
            "start": 11836,
            "end": 11838,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11837,
              "end": 11838,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11842,
            "end": 11843,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11848,
          "end": 11850,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11849,
            "end": 11850,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11852,
        "end": 11928,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11857,
            "end": 11925,
            "argument": {
              "type": "NewExpression",
              "start": 11863,
              "end": 11924,
              "callee": {
                "type": "Identifier",
                "start": 11867,
                "end": 11879,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11880,
                  "end": 11923,
                  "left": {
                    "type": "Literal",
                    "start": 11880,
                    "end": 11911,
                    "value": "#97: -1 >> 3 === -1. Actual: ",
                    "raw": "'#97: -1 >> 3 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11914,
                    "end": 11923,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11915,
                      "end": 11922,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 11915,
                        "end": 11917,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 11916,
                          "end": 11917,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11921,
                        "end": 11922,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11932,
      "end": 12028,
      "test": {
        "type": "BinaryExpression",
        "start": 11936,
        "end": 11950,
        "left": {
          "type": "BinaryExpression",
          "start": 11936,
          "end": 11943,
          "left": {
            "type": "UnaryExpression",
            "start": 11936,
            "end": 11938,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 11937,
              "end": 11938,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11942,
            "end": 11943,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 11948,
          "end": 11950,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 11949,
            "end": 11950,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11952,
        "end": 12028,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11957,
            "end": 12025,
            "argument": {
              "type": "NewExpression",
              "start": 11963,
              "end": 12024,
              "callee": {
                "type": "Identifier",
                "start": 11967,
                "end": 11979,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11980,
                  "end": 12023,
                  "left": {
                    "type": "Literal",
                    "start": 11980,
                    "end": 12011,
                    "value": "#98: -2 >> 3 === -1. Actual: ",
                    "raw": "'#98: -2 >> 3 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12014,
                    "end": 12023,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12015,
                      "end": 12022,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12015,
                        "end": 12017,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12016,
                          "end": 12017,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12021,
                        "end": 12022,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12032,
      "end": 12128,
      "test": {
        "type": "BinaryExpression",
        "start": 12036,
        "end": 12050,
        "left": {
          "type": "BinaryExpression",
          "start": 12036,
          "end": 12043,
          "left": {
            "type": "UnaryExpression",
            "start": 12036,
            "end": 12038,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12037,
              "end": 12038,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12042,
            "end": 12043,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12048,
          "end": 12050,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12049,
            "end": 12050,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12052,
        "end": 12128,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12057,
            "end": 12125,
            "argument": {
              "type": "NewExpression",
              "start": 12063,
              "end": 12124,
              "callee": {
                "type": "Identifier",
                "start": 12067,
                "end": 12079,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12080,
                  "end": 12123,
                  "left": {
                    "type": "Literal",
                    "start": 12080,
                    "end": 12111,
                    "value": "#99: -4 >> 3 === -1. Actual: ",
                    "raw": "'#99: -4 >> 3 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12114,
                    "end": 12123,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12115,
                      "end": 12122,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12115,
                        "end": 12117,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12116,
                          "end": 12117,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12121,
                        "end": 12122,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12132,
      "end": 12229,
      "test": {
        "type": "BinaryExpression",
        "start": 12136,
        "end": 12150,
        "left": {
          "type": "BinaryExpression",
          "start": 12136,
          "end": 12143,
          "left": {
            "type": "UnaryExpression",
            "start": 12136,
            "end": 12138,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12137,
              "end": 12138,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12142,
            "end": 12143,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12148,
          "end": 12150,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12149,
            "end": 12150,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12152,
        "end": 12229,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12157,
            "end": 12226,
            "argument": {
              "type": "NewExpression",
              "start": 12163,
              "end": 12225,
              "callee": {
                "type": "Identifier",
                "start": 12167,
                "end": 12179,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12180,
                  "end": 12224,
                  "left": {
                    "type": "Literal",
                    "start": 12180,
                    "end": 12212,
                    "value": "#100: -8 >> 3 === -1. Actual: ",
                    "raw": "'#100: -8 >> 3 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12215,
                    "end": 12224,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12216,
                      "end": 12223,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12216,
                        "end": 12218,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12217,
                          "end": 12218,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12222,
                        "end": 12223,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12233,
      "end": 12333,
      "test": {
        "type": "BinaryExpression",
        "start": 12237,
        "end": 12252,
        "left": {
          "type": "BinaryExpression",
          "start": 12237,
          "end": 12245,
          "left": {
            "type": "UnaryExpression",
            "start": 12237,
            "end": 12240,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12238,
              "end": 12240,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12244,
            "end": 12245,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12250,
          "end": 12252,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12251,
            "end": 12252,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12254,
        "end": 12333,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12259,
            "end": 12330,
            "argument": {
              "type": "NewExpression",
              "start": 12265,
              "end": 12329,
              "callee": {
                "type": "Identifier",
                "start": 12269,
                "end": 12281,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12282,
                  "end": 12328,
                  "left": {
                    "type": "Literal",
                    "start": 12282,
                    "end": 12315,
                    "value": "#101: -16 >> 3 === -2. Actual: ",
                    "raw": "'#101: -16 >> 3 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12318,
                    "end": 12328,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12319,
                      "end": 12327,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12319,
                        "end": 12322,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12320,
                          "end": 12322,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12326,
                        "end": 12327,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12337,
      "end": 12437,
      "test": {
        "type": "BinaryExpression",
        "start": 12341,
        "end": 12356,
        "left": {
          "type": "BinaryExpression",
          "start": 12341,
          "end": 12349,
          "left": {
            "type": "UnaryExpression",
            "start": 12341,
            "end": 12344,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12342,
              "end": 12344,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12348,
            "end": 12349,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12354,
          "end": 12356,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12355,
            "end": 12356,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12358,
        "end": 12437,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12363,
            "end": 12434,
            "argument": {
              "type": "NewExpression",
              "start": 12369,
              "end": 12433,
              "callee": {
                "type": "Identifier",
                "start": 12373,
                "end": 12385,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12386,
                  "end": 12432,
                  "left": {
                    "type": "Literal",
                    "start": 12386,
                    "end": 12419,
                    "value": "#102: -32 >> 3 === -4. Actual: ",
                    "raw": "'#102: -32 >> 3 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12422,
                    "end": 12432,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12423,
                      "end": 12431,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12423,
                        "end": 12426,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12424,
                          "end": 12426,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12430,
                        "end": 12431,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12441,
      "end": 12541,
      "test": {
        "type": "BinaryExpression",
        "start": 12445,
        "end": 12460,
        "left": {
          "type": "BinaryExpression",
          "start": 12445,
          "end": 12453,
          "left": {
            "type": "UnaryExpression",
            "start": 12445,
            "end": 12448,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12446,
              "end": 12448,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12452,
            "end": 12453,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12458,
          "end": 12460,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12459,
            "end": 12460,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12462,
        "end": 12541,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12467,
            "end": 12538,
            "argument": {
              "type": "NewExpression",
              "start": 12473,
              "end": 12537,
              "callee": {
                "type": "Identifier",
                "start": 12477,
                "end": 12489,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12490,
                  "end": 12536,
                  "left": {
                    "type": "Literal",
                    "start": 12490,
                    "end": 12523,
                    "value": "#103: -64 >> 3 === -8. Actual: ",
                    "raw": "'#103: -64 >> 3 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12526,
                    "end": 12536,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12527,
                      "end": 12535,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12527,
                        "end": 12530,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12528,
                          "end": 12530,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12534,
                        "end": 12535,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12545,
      "end": 12650,
      "test": {
        "type": "BinaryExpression",
        "start": 12549,
        "end": 12566,
        "left": {
          "type": "BinaryExpression",
          "start": 12549,
          "end": 12558,
          "left": {
            "type": "UnaryExpression",
            "start": 12549,
            "end": 12553,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12550,
              "end": 12553,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12557,
            "end": 12558,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12563,
          "end": 12566,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12564,
            "end": 12566,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12568,
        "end": 12650,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12573,
            "end": 12647,
            "argument": {
              "type": "NewExpression",
              "start": 12579,
              "end": 12646,
              "callee": {
                "type": "Identifier",
                "start": 12583,
                "end": 12595,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12596,
                  "end": 12645,
                  "left": {
                    "type": "Literal",
                    "start": 12596,
                    "end": 12631,
                    "value": "#104: -128 >> 3 === -16. Actual: ",
                    "raw": "'#104: -128 >> 3 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12634,
                    "end": 12645,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12635,
                      "end": 12644,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12635,
                        "end": 12639,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12636,
                          "end": 12639,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12643,
                        "end": 12644,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12654,
      "end": 12759,
      "test": {
        "type": "BinaryExpression",
        "start": 12658,
        "end": 12675,
        "left": {
          "type": "BinaryExpression",
          "start": 12658,
          "end": 12667,
          "left": {
            "type": "UnaryExpression",
            "start": 12658,
            "end": 12662,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12659,
              "end": 12662,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12666,
            "end": 12667,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12672,
          "end": 12675,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12673,
            "end": 12675,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12677,
        "end": 12759,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12682,
            "end": 12756,
            "argument": {
              "type": "NewExpression",
              "start": 12688,
              "end": 12755,
              "callee": {
                "type": "Identifier",
                "start": 12692,
                "end": 12704,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12705,
                  "end": 12754,
                  "left": {
                    "type": "Literal",
                    "start": 12705,
                    "end": 12740,
                    "value": "#105: -256 >> 3 === -32. Actual: ",
                    "raw": "'#105: -256 >> 3 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12743,
                    "end": 12754,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12744,
                      "end": 12753,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12744,
                        "end": 12748,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12745,
                          "end": 12748,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12752,
                        "end": 12753,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12763,
      "end": 12868,
      "test": {
        "type": "BinaryExpression",
        "start": 12767,
        "end": 12784,
        "left": {
          "type": "BinaryExpression",
          "start": 12767,
          "end": 12776,
          "left": {
            "type": "UnaryExpression",
            "start": 12767,
            "end": 12771,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12768,
              "end": 12771,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12775,
            "end": 12776,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12781,
          "end": 12784,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12782,
            "end": 12784,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12786,
        "end": 12868,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12791,
            "end": 12865,
            "argument": {
              "type": "NewExpression",
              "start": 12797,
              "end": 12864,
              "callee": {
                "type": "Identifier",
                "start": 12801,
                "end": 12813,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12814,
                  "end": 12863,
                  "left": {
                    "type": "Literal",
                    "start": 12814,
                    "end": 12849,
                    "value": "#106: -512 >> 3 === -64. Actual: ",
                    "raw": "'#106: -512 >> 3 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12852,
                    "end": 12863,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12853,
                      "end": 12862,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12853,
                        "end": 12857,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12854,
                          "end": 12857,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12861,
                        "end": 12862,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12872,
      "end": 12982,
      "test": {
        "type": "BinaryExpression",
        "start": 12876,
        "end": 12895,
        "left": {
          "type": "BinaryExpression",
          "start": 12876,
          "end": 12886,
          "left": {
            "type": "UnaryExpression",
            "start": 12876,
            "end": 12881,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12877,
              "end": 12881,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12885,
            "end": 12886,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 12891,
          "end": 12895,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 12892,
            "end": 12895,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12897,
        "end": 12982,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12902,
            "end": 12979,
            "argument": {
              "type": "NewExpression",
              "start": 12908,
              "end": 12978,
              "callee": {
                "type": "Identifier",
                "start": 12912,
                "end": 12924,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12925,
                  "end": 12977,
                  "left": {
                    "type": "Literal",
                    "start": 12925,
                    "end": 12962,
                    "value": "#107: -1024 >> 3 === -128. Actual: ",
                    "raw": "'#107: -1024 >> 3 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12965,
                    "end": 12977,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12966,
                      "end": 12976,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 12966,
                        "end": 12971,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 12967,
                          "end": 12971,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12975,
                        "end": 12976,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12986,
      "end": 13096,
      "test": {
        "type": "BinaryExpression",
        "start": 12990,
        "end": 13009,
        "left": {
          "type": "BinaryExpression",
          "start": 12990,
          "end": 13000,
          "left": {
            "type": "UnaryExpression",
            "start": 12990,
            "end": 12995,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 12991,
              "end": 12995,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12999,
            "end": 13000,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13005,
          "end": 13009,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13006,
            "end": 13009,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13011,
        "end": 13096,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13016,
            "end": 13093,
            "argument": {
              "type": "NewExpression",
              "start": 13022,
              "end": 13092,
              "callee": {
                "type": "Identifier",
                "start": 13026,
                "end": 13038,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13039,
                  "end": 13091,
                  "left": {
                    "type": "Literal",
                    "start": 13039,
                    "end": 13076,
                    "value": "#108: -2048 >> 3 === -256. Actual: ",
                    "raw": "'#108: -2048 >> 3 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13079,
                    "end": 13091,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13080,
                      "end": 13090,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13080,
                        "end": 13085,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13081,
                          "end": 13085,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13089,
                        "end": 13090,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13100,
      "end": 13210,
      "test": {
        "type": "BinaryExpression",
        "start": 13104,
        "end": 13123,
        "left": {
          "type": "BinaryExpression",
          "start": 13104,
          "end": 13114,
          "left": {
            "type": "UnaryExpression",
            "start": 13104,
            "end": 13109,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13105,
              "end": 13109,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13113,
            "end": 13114,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13119,
          "end": 13123,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13120,
            "end": 13123,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13125,
        "end": 13210,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13130,
            "end": 13207,
            "argument": {
              "type": "NewExpression",
              "start": 13136,
              "end": 13206,
              "callee": {
                "type": "Identifier",
                "start": 13140,
                "end": 13152,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13153,
                  "end": 13205,
                  "left": {
                    "type": "Literal",
                    "start": 13153,
                    "end": 13190,
                    "value": "#109: -4096 >> 3 === -512. Actual: ",
                    "raw": "'#109: -4096 >> 3 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13193,
                    "end": 13205,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13194,
                      "end": 13204,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13194,
                        "end": 13199,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13195,
                          "end": 13199,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13203,
                        "end": 13204,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13214,
      "end": 13326,
      "test": {
        "type": "BinaryExpression",
        "start": 13218,
        "end": 13238,
        "left": {
          "type": "BinaryExpression",
          "start": 13218,
          "end": 13228,
          "left": {
            "type": "UnaryExpression",
            "start": 13218,
            "end": 13223,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13219,
              "end": 13223,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13227,
            "end": 13228,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13233,
          "end": 13238,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13234,
            "end": 13238,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13240,
        "end": 13326,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13245,
            "end": 13323,
            "argument": {
              "type": "NewExpression",
              "start": 13251,
              "end": 13322,
              "callee": {
                "type": "Identifier",
                "start": 13255,
                "end": 13267,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13268,
                  "end": 13321,
                  "left": {
                    "type": "Literal",
                    "start": 13268,
                    "end": 13306,
                    "value": "#110: -8192 >> 3 === -1024. Actual: ",
                    "raw": "'#110: -8192 >> 3 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13309,
                    "end": 13321,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13310,
                      "end": 13320,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13310,
                        "end": 13315,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13311,
                          "end": 13315,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13319,
                        "end": 13320,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13330,
      "end": 13445,
      "test": {
        "type": "BinaryExpression",
        "start": 13334,
        "end": 13355,
        "left": {
          "type": "BinaryExpression",
          "start": 13334,
          "end": 13345,
          "left": {
            "type": "UnaryExpression",
            "start": 13334,
            "end": 13340,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13335,
              "end": 13340,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13344,
            "end": 13345,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13350,
          "end": 13355,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13351,
            "end": 13355,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13357,
        "end": 13445,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13362,
            "end": 13442,
            "argument": {
              "type": "NewExpression",
              "start": 13368,
              "end": 13441,
              "callee": {
                "type": "Identifier",
                "start": 13372,
                "end": 13384,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13385,
                  "end": 13440,
                  "left": {
                    "type": "Literal",
                    "start": 13385,
                    "end": 13424,
                    "value": "#111: -16384 >> 3 === -2048. Actual: ",
                    "raw": "'#111: -16384 >> 3 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13427,
                    "end": 13440,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13428,
                      "end": 13439,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13428,
                        "end": 13434,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13429,
                          "end": 13434,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13438,
                        "end": 13439,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13449,
      "end": 13564,
      "test": {
        "type": "BinaryExpression",
        "start": 13453,
        "end": 13474,
        "left": {
          "type": "BinaryExpression",
          "start": 13453,
          "end": 13464,
          "left": {
            "type": "UnaryExpression",
            "start": 13453,
            "end": 13459,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13454,
              "end": 13459,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13463,
            "end": 13464,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13469,
          "end": 13474,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13470,
            "end": 13474,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13476,
        "end": 13564,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13481,
            "end": 13561,
            "argument": {
              "type": "NewExpression",
              "start": 13487,
              "end": 13560,
              "callee": {
                "type": "Identifier",
                "start": 13491,
                "end": 13503,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13504,
                  "end": 13559,
                  "left": {
                    "type": "Literal",
                    "start": 13504,
                    "end": 13543,
                    "value": "#112: -32768 >> 3 === -4096. Actual: ",
                    "raw": "'#112: -32768 >> 3 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13546,
                    "end": 13559,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13547,
                      "end": 13558,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13547,
                        "end": 13553,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13548,
                          "end": 13553,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13557,
                        "end": 13558,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13568,
      "end": 13683,
      "test": {
        "type": "BinaryExpression",
        "start": 13572,
        "end": 13593,
        "left": {
          "type": "BinaryExpression",
          "start": 13572,
          "end": 13583,
          "left": {
            "type": "UnaryExpression",
            "start": 13572,
            "end": 13578,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13573,
              "end": 13578,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13582,
            "end": 13583,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13588,
          "end": 13593,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13589,
            "end": 13593,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13595,
        "end": 13683,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13600,
            "end": 13680,
            "argument": {
              "type": "NewExpression",
              "start": 13606,
              "end": 13679,
              "callee": {
                "type": "Identifier",
                "start": 13610,
                "end": 13622,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13623,
                  "end": 13678,
                  "left": {
                    "type": "Literal",
                    "start": 13623,
                    "end": 13662,
                    "value": "#113: -65536 >> 3 === -8192. Actual: ",
                    "raw": "'#113: -65536 >> 3 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13665,
                    "end": 13678,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13666,
                      "end": 13677,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13666,
                        "end": 13672,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13667,
                          "end": 13672,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13676,
                        "end": 13677,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13687,
      "end": 13807,
      "test": {
        "type": "BinaryExpression",
        "start": 13691,
        "end": 13714,
        "left": {
          "type": "BinaryExpression",
          "start": 13691,
          "end": 13703,
          "left": {
            "type": "UnaryExpression",
            "start": 13691,
            "end": 13698,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13692,
              "end": 13698,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13702,
            "end": 13703,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13708,
          "end": 13714,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13709,
            "end": 13714,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13716,
        "end": 13807,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13721,
            "end": 13804,
            "argument": {
              "type": "NewExpression",
              "start": 13727,
              "end": 13803,
              "callee": {
                "type": "Identifier",
                "start": 13731,
                "end": 13743,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13744,
                  "end": 13802,
                  "left": {
                    "type": "Literal",
                    "start": 13744,
                    "end": 13785,
                    "value": "#114: -131072 >> 3 === -16384. Actual: ",
                    "raw": "'#114: -131072 >> 3 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13788,
                    "end": 13802,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13789,
                      "end": 13801,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13789,
                        "end": 13796,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13790,
                          "end": 13796,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13800,
                        "end": 13801,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13811,
      "end": 13931,
      "test": {
        "type": "BinaryExpression",
        "start": 13815,
        "end": 13838,
        "left": {
          "type": "BinaryExpression",
          "start": 13815,
          "end": 13827,
          "left": {
            "type": "UnaryExpression",
            "start": 13815,
            "end": 13822,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13816,
              "end": 13822,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13826,
            "end": 13827,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13832,
          "end": 13838,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13833,
            "end": 13838,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13840,
        "end": 13931,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13845,
            "end": 13928,
            "argument": {
              "type": "NewExpression",
              "start": 13851,
              "end": 13927,
              "callee": {
                "type": "Identifier",
                "start": 13855,
                "end": 13867,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13868,
                  "end": 13926,
                  "left": {
                    "type": "Literal",
                    "start": 13868,
                    "end": 13909,
                    "value": "#115: -262144 >> 3 === -32768. Actual: ",
                    "raw": "'#115: -262144 >> 3 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13912,
                    "end": 13926,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13913,
                      "end": 13925,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 13913,
                        "end": 13920,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 13914,
                          "end": 13920,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13924,
                        "end": 13925,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13935,
      "end": 14055,
      "test": {
        "type": "BinaryExpression",
        "start": 13939,
        "end": 13962,
        "left": {
          "type": "BinaryExpression",
          "start": 13939,
          "end": 13951,
          "left": {
            "type": "UnaryExpression",
            "start": 13939,
            "end": 13946,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 13940,
              "end": 13946,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13950,
            "end": 13951,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 13956,
          "end": 13962,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 13957,
            "end": 13962,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13964,
        "end": 14055,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13969,
            "end": 14052,
            "argument": {
              "type": "NewExpression",
              "start": 13975,
              "end": 14051,
              "callee": {
                "type": "Identifier",
                "start": 13979,
                "end": 13991,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13992,
                  "end": 14050,
                  "left": {
                    "type": "Literal",
                    "start": 13992,
                    "end": 14033,
                    "value": "#116: -524288 >> 3 === -65536. Actual: ",
                    "raw": "'#116: -524288 >> 3 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14036,
                    "end": 14050,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14037,
                      "end": 14049,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14037,
                        "end": 14044,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14038,
                          "end": 14044,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14048,
                        "end": 14049,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14059,
      "end": 14184,
      "test": {
        "type": "BinaryExpression",
        "start": 14063,
        "end": 14088,
        "left": {
          "type": "BinaryExpression",
          "start": 14063,
          "end": 14076,
          "left": {
            "type": "UnaryExpression",
            "start": 14063,
            "end": 14071,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14064,
              "end": 14071,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14075,
            "end": 14076,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14081,
          "end": 14088,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14082,
            "end": 14088,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14090,
        "end": 14184,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14095,
            "end": 14181,
            "argument": {
              "type": "NewExpression",
              "start": 14101,
              "end": 14180,
              "callee": {
                "type": "Identifier",
                "start": 14105,
                "end": 14117,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14118,
                  "end": 14179,
                  "left": {
                    "type": "Literal",
                    "start": 14118,
                    "end": 14161,
                    "value": "#117: -1048576 >> 3 === -131072. Actual: ",
                    "raw": "'#117: -1048576 >> 3 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14164,
                    "end": 14179,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14165,
                      "end": 14178,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14165,
                        "end": 14173,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14166,
                          "end": 14173,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14177,
                        "end": 14178,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14188,
      "end": 14313,
      "test": {
        "type": "BinaryExpression",
        "start": 14192,
        "end": 14217,
        "left": {
          "type": "BinaryExpression",
          "start": 14192,
          "end": 14205,
          "left": {
            "type": "UnaryExpression",
            "start": 14192,
            "end": 14200,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14193,
              "end": 14200,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14204,
            "end": 14205,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14210,
          "end": 14217,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14211,
            "end": 14217,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14219,
        "end": 14313,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14224,
            "end": 14310,
            "argument": {
              "type": "NewExpression",
              "start": 14230,
              "end": 14309,
              "callee": {
                "type": "Identifier",
                "start": 14234,
                "end": 14246,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14247,
                  "end": 14308,
                  "left": {
                    "type": "Literal",
                    "start": 14247,
                    "end": 14290,
                    "value": "#118: -2097152 >> 3 === -262144. Actual: ",
                    "raw": "'#118: -2097152 >> 3 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14293,
                    "end": 14308,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14294,
                      "end": 14307,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14294,
                        "end": 14302,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14295,
                          "end": 14302,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14306,
                        "end": 14307,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14317,
      "end": 14442,
      "test": {
        "type": "BinaryExpression",
        "start": 14321,
        "end": 14346,
        "left": {
          "type": "BinaryExpression",
          "start": 14321,
          "end": 14334,
          "left": {
            "type": "UnaryExpression",
            "start": 14321,
            "end": 14329,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14322,
              "end": 14329,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14333,
            "end": 14334,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14339,
          "end": 14346,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14340,
            "end": 14346,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14348,
        "end": 14442,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14353,
            "end": 14439,
            "argument": {
              "type": "NewExpression",
              "start": 14359,
              "end": 14438,
              "callee": {
                "type": "Identifier",
                "start": 14363,
                "end": 14375,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14376,
                  "end": 14437,
                  "left": {
                    "type": "Literal",
                    "start": 14376,
                    "end": 14419,
                    "value": "#119: -4194304 >> 3 === -524288. Actual: ",
                    "raw": "'#119: -4194304 >> 3 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14422,
                    "end": 14437,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14423,
                      "end": 14436,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14423,
                        "end": 14431,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14424,
                          "end": 14431,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14435,
                        "end": 14436,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14446,
      "end": 14573,
      "test": {
        "type": "BinaryExpression",
        "start": 14450,
        "end": 14476,
        "left": {
          "type": "BinaryExpression",
          "start": 14450,
          "end": 14463,
          "left": {
            "type": "UnaryExpression",
            "start": 14450,
            "end": 14458,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14451,
              "end": 14458,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14462,
            "end": 14463,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14468,
          "end": 14476,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14469,
            "end": 14476,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14478,
        "end": 14573,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14483,
            "end": 14570,
            "argument": {
              "type": "NewExpression",
              "start": 14489,
              "end": 14569,
              "callee": {
                "type": "Identifier",
                "start": 14493,
                "end": 14505,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14506,
                  "end": 14568,
                  "left": {
                    "type": "Literal",
                    "start": 14506,
                    "end": 14550,
                    "value": "#120: -8388608 >> 3 === -1048576. Actual: ",
                    "raw": "'#120: -8388608 >> 3 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14553,
                    "end": 14568,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14554,
                      "end": 14567,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14554,
                        "end": 14562,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14555,
                          "end": 14562,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14566,
                        "end": 14567,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14577,
      "end": 14707,
      "test": {
        "type": "BinaryExpression",
        "start": 14581,
        "end": 14608,
        "left": {
          "type": "BinaryExpression",
          "start": 14581,
          "end": 14595,
          "left": {
            "type": "UnaryExpression",
            "start": 14581,
            "end": 14590,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14582,
              "end": 14590,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14594,
            "end": 14595,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14600,
          "end": 14608,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14601,
            "end": 14608,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14610,
        "end": 14707,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14615,
            "end": 14704,
            "argument": {
              "type": "NewExpression",
              "start": 14621,
              "end": 14703,
              "callee": {
                "type": "Identifier",
                "start": 14625,
                "end": 14637,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14638,
                  "end": 14702,
                  "left": {
                    "type": "Literal",
                    "start": 14638,
                    "end": 14683,
                    "value": "#121: -16777216 >> 3 === -2097152. Actual: ",
                    "raw": "'#121: -16777216 >> 3 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14686,
                    "end": 14702,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14687,
                      "end": 14701,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14687,
                        "end": 14696,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14688,
                          "end": 14696,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14700,
                        "end": 14701,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14711,
      "end": 14841,
      "test": {
        "type": "BinaryExpression",
        "start": 14715,
        "end": 14742,
        "left": {
          "type": "BinaryExpression",
          "start": 14715,
          "end": 14729,
          "left": {
            "type": "UnaryExpression",
            "start": 14715,
            "end": 14724,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14716,
              "end": 14724,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14728,
            "end": 14729,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14734,
          "end": 14742,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14735,
            "end": 14742,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14744,
        "end": 14841,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14749,
            "end": 14838,
            "argument": {
              "type": "NewExpression",
              "start": 14755,
              "end": 14837,
              "callee": {
                "type": "Identifier",
                "start": 14759,
                "end": 14771,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14772,
                  "end": 14836,
                  "left": {
                    "type": "Literal",
                    "start": 14772,
                    "end": 14817,
                    "value": "#122: -33554432 >> 3 === -4194304. Actual: ",
                    "raw": "'#122: -33554432 >> 3 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14820,
                    "end": 14836,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14821,
                      "end": 14835,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14821,
                        "end": 14830,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14822,
                          "end": 14830,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14834,
                        "end": 14835,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14845,
      "end": 14975,
      "test": {
        "type": "BinaryExpression",
        "start": 14849,
        "end": 14876,
        "left": {
          "type": "BinaryExpression",
          "start": 14849,
          "end": 14863,
          "left": {
            "type": "UnaryExpression",
            "start": 14849,
            "end": 14858,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14850,
              "end": 14858,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14862,
            "end": 14863,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 14868,
          "end": 14876,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 14869,
            "end": 14876,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14878,
        "end": 14975,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14883,
            "end": 14972,
            "argument": {
              "type": "NewExpression",
              "start": 14889,
              "end": 14971,
              "callee": {
                "type": "Identifier",
                "start": 14893,
                "end": 14905,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14906,
                  "end": 14970,
                  "left": {
                    "type": "Literal",
                    "start": 14906,
                    "end": 14951,
                    "value": "#123: -67108864 >> 3 === -8388608. Actual: ",
                    "raw": "'#123: -67108864 >> 3 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14954,
                    "end": 14970,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14955,
                      "end": 14969,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 14955,
                        "end": 14964,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 14956,
                          "end": 14964,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14968,
                        "end": 14969,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14979,
      "end": 15114,
      "test": {
        "type": "BinaryExpression",
        "start": 14983,
        "end": 15012,
        "left": {
          "type": "BinaryExpression",
          "start": 14983,
          "end": 14998,
          "left": {
            "type": "UnaryExpression",
            "start": 14983,
            "end": 14993,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 14984,
              "end": 14993,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14997,
            "end": 14998,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15003,
          "end": 15012,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15004,
            "end": 15012,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15014,
        "end": 15114,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15019,
            "end": 15111,
            "argument": {
              "type": "NewExpression",
              "start": 15025,
              "end": 15110,
              "callee": {
                "type": "Identifier",
                "start": 15029,
                "end": 15041,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15042,
                  "end": 15109,
                  "left": {
                    "type": "Literal",
                    "start": 15042,
                    "end": 15089,
                    "value": "#124: -134217728 >> 3 === -16777216. Actual: ",
                    "raw": "'#124: -134217728 >> 3 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15092,
                    "end": 15109,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15093,
                      "end": 15108,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15093,
                        "end": 15103,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15094,
                          "end": 15103,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15107,
                        "end": 15108,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15118,
      "end": 15253,
      "test": {
        "type": "BinaryExpression",
        "start": 15122,
        "end": 15151,
        "left": {
          "type": "BinaryExpression",
          "start": 15122,
          "end": 15137,
          "left": {
            "type": "UnaryExpression",
            "start": 15122,
            "end": 15132,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15123,
              "end": 15132,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15136,
            "end": 15137,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15142,
          "end": 15151,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15143,
            "end": 15151,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15153,
        "end": 15253,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15158,
            "end": 15250,
            "argument": {
              "type": "NewExpression",
              "start": 15164,
              "end": 15249,
              "callee": {
                "type": "Identifier",
                "start": 15168,
                "end": 15180,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15181,
                  "end": 15248,
                  "left": {
                    "type": "Literal",
                    "start": 15181,
                    "end": 15228,
                    "value": "#125: -268435456 >> 3 === -33554432. Actual: ",
                    "raw": "'#125: -268435456 >> 3 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15231,
                    "end": 15248,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15232,
                      "end": 15247,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15232,
                        "end": 15242,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15233,
                          "end": 15242,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15246,
                        "end": 15247,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15257,
      "end": 15392,
      "test": {
        "type": "BinaryExpression",
        "start": 15261,
        "end": 15290,
        "left": {
          "type": "BinaryExpression",
          "start": 15261,
          "end": 15276,
          "left": {
            "type": "UnaryExpression",
            "start": 15261,
            "end": 15271,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15262,
              "end": 15271,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15275,
            "end": 15276,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15281,
          "end": 15290,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15282,
            "end": 15290,
            "value": 67108864,
            "raw": "67108864",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15292,
        "end": 15392,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15297,
            "end": 15389,
            "argument": {
              "type": "NewExpression",
              "start": 15303,
              "end": 15388,
              "callee": {
                "type": "Identifier",
                "start": 15307,
                "end": 15319,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15320,
                  "end": 15387,
                  "left": {
                    "type": "Literal",
                    "start": 15320,
                    "end": 15367,
                    "value": "#126: -536870912 >> 3 === -67108864. Actual: ",
                    "raw": "'#126: -536870912 >> 3 === -67108864. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15370,
                    "end": 15387,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15371,
                      "end": 15386,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15371,
                        "end": 15381,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15372,
                          "end": 15381,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15385,
                        "end": 15386,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15396,
      "end": 15536,
      "test": {
        "type": "BinaryExpression",
        "start": 15400,
        "end": 15431,
        "left": {
          "type": "BinaryExpression",
          "start": 15400,
          "end": 15416,
          "left": {
            "type": "UnaryExpression",
            "start": 15400,
            "end": 15411,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15401,
              "end": 15411,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15415,
            "end": 15416,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15421,
          "end": 15431,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15422,
            "end": 15431,
            "value": 134217728,
            "raw": "134217728",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15433,
        "end": 15536,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15438,
            "end": 15533,
            "argument": {
              "type": "NewExpression",
              "start": 15444,
              "end": 15532,
              "callee": {
                "type": "Identifier",
                "start": 15448,
                "end": 15460,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15461,
                  "end": 15531,
                  "left": {
                    "type": "Literal",
                    "start": 15461,
                    "end": 15510,
                    "value": "#127: -1073741824 >> 3 === -134217728. Actual: ",
                    "raw": "'#127: -1073741824 >> 3 === -134217728. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15513,
                    "end": 15531,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15514,
                      "end": 15530,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15514,
                        "end": 15525,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15515,
                          "end": 15525,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15529,
                        "end": 15530,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15540,
      "end": 15680,
      "test": {
        "type": "BinaryExpression",
        "start": 15544,
        "end": 15575,
        "left": {
          "type": "BinaryExpression",
          "start": 15544,
          "end": 15560,
          "left": {
            "type": "UnaryExpression",
            "start": 15544,
            "end": 15555,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15545,
              "end": 15555,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15559,
            "end": 15560,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15565,
          "end": 15575,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15566,
            "end": 15575,
            "value": 268435456,
            "raw": "268435456",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15577,
        "end": 15680,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15582,
            "end": 15677,
            "argument": {
              "type": "NewExpression",
              "start": 15588,
              "end": 15676,
              "callee": {
                "type": "Identifier",
                "start": 15592,
                "end": 15604,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15605,
                  "end": 15675,
                  "left": {
                    "type": "Literal",
                    "start": 15605,
                    "end": 15654,
                    "value": "#128: -2147483648 >> 3 === -268435456. Actual: ",
                    "raw": "'#128: -2147483648 >> 3 === -268435456. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15657,
                    "end": 15675,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15658,
                      "end": 15674,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15658,
                        "end": 15669,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15659,
                          "end": 15669,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15673,
                        "end": 15674,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15684,
      "end": 15781,
      "test": {
        "type": "BinaryExpression",
        "start": 15688,
        "end": 15702,
        "left": {
          "type": "BinaryExpression",
          "start": 15688,
          "end": 15695,
          "left": {
            "type": "UnaryExpression",
            "start": 15688,
            "end": 15690,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15689,
              "end": 15690,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15694,
            "end": 15695,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15700,
          "end": 15702,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15701,
            "end": 15702,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15704,
        "end": 15781,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15709,
            "end": 15778,
            "argument": {
              "type": "NewExpression",
              "start": 15715,
              "end": 15777,
              "callee": {
                "type": "Identifier",
                "start": 15719,
                "end": 15731,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15732,
                  "end": 15776,
                  "left": {
                    "type": "Literal",
                    "start": 15732,
                    "end": 15764,
                    "value": "#129: -1 >> 4 === -1. Actual: ",
                    "raw": "'#129: -1 >> 4 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15767,
                    "end": 15776,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15768,
                      "end": 15775,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15768,
                        "end": 15770,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15769,
                          "end": 15770,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15774,
                        "end": 15775,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15785,
      "end": 15882,
      "test": {
        "type": "BinaryExpression",
        "start": 15789,
        "end": 15803,
        "left": {
          "type": "BinaryExpression",
          "start": 15789,
          "end": 15796,
          "left": {
            "type": "UnaryExpression",
            "start": 15789,
            "end": 15791,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15790,
              "end": 15791,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15795,
            "end": 15796,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15801,
          "end": 15803,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15802,
            "end": 15803,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15805,
        "end": 15882,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15810,
            "end": 15879,
            "argument": {
              "type": "NewExpression",
              "start": 15816,
              "end": 15878,
              "callee": {
                "type": "Identifier",
                "start": 15820,
                "end": 15832,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15833,
                  "end": 15877,
                  "left": {
                    "type": "Literal",
                    "start": 15833,
                    "end": 15865,
                    "value": "#130: -2 >> 4 === -1. Actual: ",
                    "raw": "'#130: -2 >> 4 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15868,
                    "end": 15877,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15869,
                      "end": 15876,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15869,
                        "end": 15871,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15870,
                          "end": 15871,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15875,
                        "end": 15876,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15886,
      "end": 15983,
      "test": {
        "type": "BinaryExpression",
        "start": 15890,
        "end": 15904,
        "left": {
          "type": "BinaryExpression",
          "start": 15890,
          "end": 15897,
          "left": {
            "type": "UnaryExpression",
            "start": 15890,
            "end": 15892,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15891,
              "end": 15892,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15896,
            "end": 15897,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 15902,
          "end": 15904,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 15903,
            "end": 15904,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15906,
        "end": 15983,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15911,
            "end": 15980,
            "argument": {
              "type": "NewExpression",
              "start": 15917,
              "end": 15979,
              "callee": {
                "type": "Identifier",
                "start": 15921,
                "end": 15933,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15934,
                  "end": 15978,
                  "left": {
                    "type": "Literal",
                    "start": 15934,
                    "end": 15966,
                    "value": "#131: -4 >> 4 === -1. Actual: ",
                    "raw": "'#131: -4 >> 4 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15969,
                    "end": 15978,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15970,
                      "end": 15977,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 15970,
                        "end": 15972,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 15971,
                          "end": 15972,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15976,
                        "end": 15977,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15987,
      "end": 16084,
      "test": {
        "type": "BinaryExpression",
        "start": 15991,
        "end": 16005,
        "left": {
          "type": "BinaryExpression",
          "start": 15991,
          "end": 15998,
          "left": {
            "type": "UnaryExpression",
            "start": 15991,
            "end": 15993,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 15992,
              "end": 15993,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15997,
            "end": 15998,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16003,
          "end": 16005,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16004,
            "end": 16005,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16007,
        "end": 16084,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16012,
            "end": 16081,
            "argument": {
              "type": "NewExpression",
              "start": 16018,
              "end": 16080,
              "callee": {
                "type": "Identifier",
                "start": 16022,
                "end": 16034,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16035,
                  "end": 16079,
                  "left": {
                    "type": "Literal",
                    "start": 16035,
                    "end": 16067,
                    "value": "#132: -8 >> 4 === -1. Actual: ",
                    "raw": "'#132: -8 >> 4 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16070,
                    "end": 16079,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16071,
                      "end": 16078,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16071,
                        "end": 16073,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16072,
                          "end": 16073,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16077,
                        "end": 16078,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16088,
      "end": 16188,
      "test": {
        "type": "BinaryExpression",
        "start": 16092,
        "end": 16107,
        "left": {
          "type": "BinaryExpression",
          "start": 16092,
          "end": 16100,
          "left": {
            "type": "UnaryExpression",
            "start": 16092,
            "end": 16095,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16093,
              "end": 16095,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16099,
            "end": 16100,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16105,
          "end": 16107,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16106,
            "end": 16107,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16109,
        "end": 16188,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16114,
            "end": 16185,
            "argument": {
              "type": "NewExpression",
              "start": 16120,
              "end": 16184,
              "callee": {
                "type": "Identifier",
                "start": 16124,
                "end": 16136,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16137,
                  "end": 16183,
                  "left": {
                    "type": "Literal",
                    "start": 16137,
                    "end": 16170,
                    "value": "#133: -16 >> 4 === -1. Actual: ",
                    "raw": "'#133: -16 >> 4 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16173,
                    "end": 16183,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16174,
                      "end": 16182,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16174,
                        "end": 16177,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16175,
                          "end": 16177,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16181,
                        "end": 16182,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16192,
      "end": 16292,
      "test": {
        "type": "BinaryExpression",
        "start": 16196,
        "end": 16211,
        "left": {
          "type": "BinaryExpression",
          "start": 16196,
          "end": 16204,
          "left": {
            "type": "UnaryExpression",
            "start": 16196,
            "end": 16199,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16197,
              "end": 16199,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16203,
            "end": 16204,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16209,
          "end": 16211,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16210,
            "end": 16211,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16213,
        "end": 16292,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16218,
            "end": 16289,
            "argument": {
              "type": "NewExpression",
              "start": 16224,
              "end": 16288,
              "callee": {
                "type": "Identifier",
                "start": 16228,
                "end": 16240,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16241,
                  "end": 16287,
                  "left": {
                    "type": "Literal",
                    "start": 16241,
                    "end": 16274,
                    "value": "#134: -32 >> 4 === -2. Actual: ",
                    "raw": "'#134: -32 >> 4 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16277,
                    "end": 16287,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16278,
                      "end": 16286,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16278,
                        "end": 16281,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16279,
                          "end": 16281,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16285,
                        "end": 16286,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16296,
      "end": 16396,
      "test": {
        "type": "BinaryExpression",
        "start": 16300,
        "end": 16315,
        "left": {
          "type": "BinaryExpression",
          "start": 16300,
          "end": 16308,
          "left": {
            "type": "UnaryExpression",
            "start": 16300,
            "end": 16303,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16301,
              "end": 16303,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16307,
            "end": 16308,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16313,
          "end": 16315,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16314,
            "end": 16315,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16317,
        "end": 16396,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16322,
            "end": 16393,
            "argument": {
              "type": "NewExpression",
              "start": 16328,
              "end": 16392,
              "callee": {
                "type": "Identifier",
                "start": 16332,
                "end": 16344,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16345,
                  "end": 16391,
                  "left": {
                    "type": "Literal",
                    "start": 16345,
                    "end": 16378,
                    "value": "#135: -64 >> 4 === -4. Actual: ",
                    "raw": "'#135: -64 >> 4 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16381,
                    "end": 16391,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16382,
                      "end": 16390,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16382,
                        "end": 16385,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16383,
                          "end": 16385,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16389,
                        "end": 16390,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16400,
      "end": 16503,
      "test": {
        "type": "BinaryExpression",
        "start": 16404,
        "end": 16420,
        "left": {
          "type": "BinaryExpression",
          "start": 16404,
          "end": 16413,
          "left": {
            "type": "UnaryExpression",
            "start": 16404,
            "end": 16408,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16405,
              "end": 16408,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16412,
            "end": 16413,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16418,
          "end": 16420,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16419,
            "end": 16420,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16422,
        "end": 16503,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16427,
            "end": 16500,
            "argument": {
              "type": "NewExpression",
              "start": 16433,
              "end": 16499,
              "callee": {
                "type": "Identifier",
                "start": 16437,
                "end": 16449,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16450,
                  "end": 16498,
                  "left": {
                    "type": "Literal",
                    "start": 16450,
                    "end": 16484,
                    "value": "#136: -128 >> 4 === -8. Actual: ",
                    "raw": "'#136: -128 >> 4 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16487,
                    "end": 16498,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16488,
                      "end": 16497,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16488,
                        "end": 16492,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16489,
                          "end": 16492,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16496,
                        "end": 16497,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16507,
      "end": 16612,
      "test": {
        "type": "BinaryExpression",
        "start": 16511,
        "end": 16528,
        "left": {
          "type": "BinaryExpression",
          "start": 16511,
          "end": 16520,
          "left": {
            "type": "UnaryExpression",
            "start": 16511,
            "end": 16515,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16512,
              "end": 16515,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16519,
            "end": 16520,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16525,
          "end": 16528,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16526,
            "end": 16528,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16530,
        "end": 16612,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16535,
            "end": 16609,
            "argument": {
              "type": "NewExpression",
              "start": 16541,
              "end": 16608,
              "callee": {
                "type": "Identifier",
                "start": 16545,
                "end": 16557,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16558,
                  "end": 16607,
                  "left": {
                    "type": "Literal",
                    "start": 16558,
                    "end": 16593,
                    "value": "#137: -256 >> 4 === -16. Actual: ",
                    "raw": "'#137: -256 >> 4 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16596,
                    "end": 16607,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16597,
                      "end": 16606,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16597,
                        "end": 16601,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16598,
                          "end": 16601,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16605,
                        "end": 16606,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16616,
      "end": 16721,
      "test": {
        "type": "BinaryExpression",
        "start": 16620,
        "end": 16637,
        "left": {
          "type": "BinaryExpression",
          "start": 16620,
          "end": 16629,
          "left": {
            "type": "UnaryExpression",
            "start": 16620,
            "end": 16624,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16621,
              "end": 16624,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16628,
            "end": 16629,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16634,
          "end": 16637,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16635,
            "end": 16637,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16639,
        "end": 16721,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16644,
            "end": 16718,
            "argument": {
              "type": "NewExpression",
              "start": 16650,
              "end": 16717,
              "callee": {
                "type": "Identifier",
                "start": 16654,
                "end": 16666,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16667,
                  "end": 16716,
                  "left": {
                    "type": "Literal",
                    "start": 16667,
                    "end": 16702,
                    "value": "#138: -512 >> 4 === -32. Actual: ",
                    "raw": "'#138: -512 >> 4 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16705,
                    "end": 16716,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16706,
                      "end": 16715,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16706,
                        "end": 16710,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16707,
                          "end": 16710,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16714,
                        "end": 16715,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16725,
      "end": 16833,
      "test": {
        "type": "BinaryExpression",
        "start": 16729,
        "end": 16747,
        "left": {
          "type": "BinaryExpression",
          "start": 16729,
          "end": 16739,
          "left": {
            "type": "UnaryExpression",
            "start": 16729,
            "end": 16734,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16730,
              "end": 16734,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16738,
            "end": 16739,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16744,
          "end": 16747,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16745,
            "end": 16747,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16749,
        "end": 16833,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16754,
            "end": 16830,
            "argument": {
              "type": "NewExpression",
              "start": 16760,
              "end": 16829,
              "callee": {
                "type": "Identifier",
                "start": 16764,
                "end": 16776,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16777,
                  "end": 16828,
                  "left": {
                    "type": "Literal",
                    "start": 16777,
                    "end": 16813,
                    "value": "#139: -1024 >> 4 === -64. Actual: ",
                    "raw": "'#139: -1024 >> 4 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16816,
                    "end": 16828,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16817,
                      "end": 16827,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16817,
                        "end": 16822,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16818,
                          "end": 16822,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16826,
                        "end": 16827,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16837,
      "end": 16947,
      "test": {
        "type": "BinaryExpression",
        "start": 16841,
        "end": 16860,
        "left": {
          "type": "BinaryExpression",
          "start": 16841,
          "end": 16851,
          "left": {
            "type": "UnaryExpression",
            "start": 16841,
            "end": 16846,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16842,
              "end": 16846,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16850,
            "end": 16851,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16856,
          "end": 16860,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16857,
            "end": 16860,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16862,
        "end": 16947,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16867,
            "end": 16944,
            "argument": {
              "type": "NewExpression",
              "start": 16873,
              "end": 16943,
              "callee": {
                "type": "Identifier",
                "start": 16877,
                "end": 16889,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16890,
                  "end": 16942,
                  "left": {
                    "type": "Literal",
                    "start": 16890,
                    "end": 16927,
                    "value": "#140: -2048 >> 4 === -128. Actual: ",
                    "raw": "'#140: -2048 >> 4 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16930,
                    "end": 16942,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16931,
                      "end": 16941,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 16931,
                        "end": 16936,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 16932,
                          "end": 16936,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16940,
                        "end": 16941,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16951,
      "end": 17061,
      "test": {
        "type": "BinaryExpression",
        "start": 16955,
        "end": 16974,
        "left": {
          "type": "BinaryExpression",
          "start": 16955,
          "end": 16965,
          "left": {
            "type": "UnaryExpression",
            "start": 16955,
            "end": 16960,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 16956,
              "end": 16960,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16964,
            "end": 16965,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 16970,
          "end": 16974,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 16971,
            "end": 16974,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16976,
        "end": 17061,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16981,
            "end": 17058,
            "argument": {
              "type": "NewExpression",
              "start": 16987,
              "end": 17057,
              "callee": {
                "type": "Identifier",
                "start": 16991,
                "end": 17003,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17004,
                  "end": 17056,
                  "left": {
                    "type": "Literal",
                    "start": 17004,
                    "end": 17041,
                    "value": "#141: -4096 >> 4 === -256. Actual: ",
                    "raw": "'#141: -4096 >> 4 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17044,
                    "end": 17056,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17045,
                      "end": 17055,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17045,
                        "end": 17050,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17046,
                          "end": 17050,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17054,
                        "end": 17055,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17065,
      "end": 17175,
      "test": {
        "type": "BinaryExpression",
        "start": 17069,
        "end": 17088,
        "left": {
          "type": "BinaryExpression",
          "start": 17069,
          "end": 17079,
          "left": {
            "type": "UnaryExpression",
            "start": 17069,
            "end": 17074,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17070,
              "end": 17074,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17078,
            "end": 17079,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17084,
          "end": 17088,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17085,
            "end": 17088,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17090,
        "end": 17175,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17095,
            "end": 17172,
            "argument": {
              "type": "NewExpression",
              "start": 17101,
              "end": 17171,
              "callee": {
                "type": "Identifier",
                "start": 17105,
                "end": 17117,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17118,
                  "end": 17170,
                  "left": {
                    "type": "Literal",
                    "start": 17118,
                    "end": 17155,
                    "value": "#142: -8192 >> 4 === -512. Actual: ",
                    "raw": "'#142: -8192 >> 4 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17158,
                    "end": 17170,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17159,
                      "end": 17169,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17159,
                        "end": 17164,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17160,
                          "end": 17164,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17168,
                        "end": 17169,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17179,
      "end": 17294,
      "test": {
        "type": "BinaryExpression",
        "start": 17183,
        "end": 17204,
        "left": {
          "type": "BinaryExpression",
          "start": 17183,
          "end": 17194,
          "left": {
            "type": "UnaryExpression",
            "start": 17183,
            "end": 17189,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17184,
              "end": 17189,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17193,
            "end": 17194,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17199,
          "end": 17204,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17200,
            "end": 17204,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17206,
        "end": 17294,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17211,
            "end": 17291,
            "argument": {
              "type": "NewExpression",
              "start": 17217,
              "end": 17290,
              "callee": {
                "type": "Identifier",
                "start": 17221,
                "end": 17233,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17234,
                  "end": 17289,
                  "left": {
                    "type": "Literal",
                    "start": 17234,
                    "end": 17273,
                    "value": "#143: -16384 >> 4 === -1024. Actual: ",
                    "raw": "'#143: -16384 >> 4 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17276,
                    "end": 17289,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17277,
                      "end": 17288,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17277,
                        "end": 17283,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17278,
                          "end": 17283,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17287,
                        "end": 17288,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17298,
      "end": 17413,
      "test": {
        "type": "BinaryExpression",
        "start": 17302,
        "end": 17323,
        "left": {
          "type": "BinaryExpression",
          "start": 17302,
          "end": 17313,
          "left": {
            "type": "UnaryExpression",
            "start": 17302,
            "end": 17308,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17303,
              "end": 17308,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17312,
            "end": 17313,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17318,
          "end": 17323,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17319,
            "end": 17323,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17325,
        "end": 17413,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17330,
            "end": 17410,
            "argument": {
              "type": "NewExpression",
              "start": 17336,
              "end": 17409,
              "callee": {
                "type": "Identifier",
                "start": 17340,
                "end": 17352,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17353,
                  "end": 17408,
                  "left": {
                    "type": "Literal",
                    "start": 17353,
                    "end": 17392,
                    "value": "#144: -32768 >> 4 === -2048. Actual: ",
                    "raw": "'#144: -32768 >> 4 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17395,
                    "end": 17408,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17396,
                      "end": 17407,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17396,
                        "end": 17402,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17397,
                          "end": 17402,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17406,
                        "end": 17407,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17417,
      "end": 17532,
      "test": {
        "type": "BinaryExpression",
        "start": 17421,
        "end": 17442,
        "left": {
          "type": "BinaryExpression",
          "start": 17421,
          "end": 17432,
          "left": {
            "type": "UnaryExpression",
            "start": 17421,
            "end": 17427,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17422,
              "end": 17427,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17431,
            "end": 17432,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17437,
          "end": 17442,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17438,
            "end": 17442,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17444,
        "end": 17532,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17449,
            "end": 17529,
            "argument": {
              "type": "NewExpression",
              "start": 17455,
              "end": 17528,
              "callee": {
                "type": "Identifier",
                "start": 17459,
                "end": 17471,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17472,
                  "end": 17527,
                  "left": {
                    "type": "Literal",
                    "start": 17472,
                    "end": 17511,
                    "value": "#145: -65536 >> 4 === -4096. Actual: ",
                    "raw": "'#145: -65536 >> 4 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17514,
                    "end": 17527,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17515,
                      "end": 17526,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17515,
                        "end": 17521,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17516,
                          "end": 17521,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17525,
                        "end": 17526,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17536,
      "end": 17654,
      "test": {
        "type": "BinaryExpression",
        "start": 17540,
        "end": 17562,
        "left": {
          "type": "BinaryExpression",
          "start": 17540,
          "end": 17552,
          "left": {
            "type": "UnaryExpression",
            "start": 17540,
            "end": 17547,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17541,
              "end": 17547,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17551,
            "end": 17552,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17557,
          "end": 17562,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17558,
            "end": 17562,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17564,
        "end": 17654,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17569,
            "end": 17651,
            "argument": {
              "type": "NewExpression",
              "start": 17575,
              "end": 17650,
              "callee": {
                "type": "Identifier",
                "start": 17579,
                "end": 17591,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17592,
                  "end": 17649,
                  "left": {
                    "type": "Literal",
                    "start": 17592,
                    "end": 17632,
                    "value": "#146: -131072 >> 4 === -8192. Actual: ",
                    "raw": "'#146: -131072 >> 4 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17635,
                    "end": 17649,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17636,
                      "end": 17648,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17636,
                        "end": 17643,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17637,
                          "end": 17643,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17647,
                        "end": 17648,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17658,
      "end": 17778,
      "test": {
        "type": "BinaryExpression",
        "start": 17662,
        "end": 17685,
        "left": {
          "type": "BinaryExpression",
          "start": 17662,
          "end": 17674,
          "left": {
            "type": "UnaryExpression",
            "start": 17662,
            "end": 17669,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17663,
              "end": 17669,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17673,
            "end": 17674,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17679,
          "end": 17685,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17680,
            "end": 17685,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17687,
        "end": 17778,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17692,
            "end": 17775,
            "argument": {
              "type": "NewExpression",
              "start": 17698,
              "end": 17774,
              "callee": {
                "type": "Identifier",
                "start": 17702,
                "end": 17714,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17715,
                  "end": 17773,
                  "left": {
                    "type": "Literal",
                    "start": 17715,
                    "end": 17756,
                    "value": "#147: -262144 >> 4 === -16384. Actual: ",
                    "raw": "'#147: -262144 >> 4 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17759,
                    "end": 17773,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17760,
                      "end": 17772,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17760,
                        "end": 17767,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17761,
                          "end": 17767,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17771,
                        "end": 17772,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17782,
      "end": 17902,
      "test": {
        "type": "BinaryExpression",
        "start": 17786,
        "end": 17809,
        "left": {
          "type": "BinaryExpression",
          "start": 17786,
          "end": 17798,
          "left": {
            "type": "UnaryExpression",
            "start": 17786,
            "end": 17793,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17787,
              "end": 17793,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17797,
            "end": 17798,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17803,
          "end": 17809,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17804,
            "end": 17809,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17811,
        "end": 17902,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17816,
            "end": 17899,
            "argument": {
              "type": "NewExpression",
              "start": 17822,
              "end": 17898,
              "callee": {
                "type": "Identifier",
                "start": 17826,
                "end": 17838,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17839,
                  "end": 17897,
                  "left": {
                    "type": "Literal",
                    "start": 17839,
                    "end": 17880,
                    "value": "#148: -524288 >> 4 === -32768. Actual: ",
                    "raw": "'#148: -524288 >> 4 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17883,
                    "end": 17897,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17884,
                      "end": 17896,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 17884,
                        "end": 17891,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 17885,
                          "end": 17891,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17895,
                        "end": 17896,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17906,
      "end": 18029,
      "test": {
        "type": "BinaryExpression",
        "start": 17910,
        "end": 17934,
        "left": {
          "type": "BinaryExpression",
          "start": 17910,
          "end": 17923,
          "left": {
            "type": "UnaryExpression",
            "start": 17910,
            "end": 17918,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 17911,
              "end": 17918,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17922,
            "end": 17923,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 17928,
          "end": 17934,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 17929,
            "end": 17934,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17936,
        "end": 18029,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17941,
            "end": 18026,
            "argument": {
              "type": "NewExpression",
              "start": 17947,
              "end": 18025,
              "callee": {
                "type": "Identifier",
                "start": 17951,
                "end": 17963,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17964,
                  "end": 18024,
                  "left": {
                    "type": "Literal",
                    "start": 17964,
                    "end": 18006,
                    "value": "#149: -1048576 >> 4 === -65536. Actual: ",
                    "raw": "'#149: -1048576 >> 4 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18009,
                    "end": 18024,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18010,
                      "end": 18023,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18010,
                        "end": 18018,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18011,
                          "end": 18018,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18022,
                        "end": 18023,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18033,
      "end": 18158,
      "test": {
        "type": "BinaryExpression",
        "start": 18037,
        "end": 18062,
        "left": {
          "type": "BinaryExpression",
          "start": 18037,
          "end": 18050,
          "left": {
            "type": "UnaryExpression",
            "start": 18037,
            "end": 18045,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18038,
              "end": 18045,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18049,
            "end": 18050,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18055,
          "end": 18062,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18056,
            "end": 18062,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18064,
        "end": 18158,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18069,
            "end": 18155,
            "argument": {
              "type": "NewExpression",
              "start": 18075,
              "end": 18154,
              "callee": {
                "type": "Identifier",
                "start": 18079,
                "end": 18091,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18092,
                  "end": 18153,
                  "left": {
                    "type": "Literal",
                    "start": 18092,
                    "end": 18135,
                    "value": "#150: -2097152 >> 4 === -131072. Actual: ",
                    "raw": "'#150: -2097152 >> 4 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18138,
                    "end": 18153,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18139,
                      "end": 18152,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18139,
                        "end": 18147,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18140,
                          "end": 18147,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18151,
                        "end": 18152,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18162,
      "end": 18287,
      "test": {
        "type": "BinaryExpression",
        "start": 18166,
        "end": 18191,
        "left": {
          "type": "BinaryExpression",
          "start": 18166,
          "end": 18179,
          "left": {
            "type": "UnaryExpression",
            "start": 18166,
            "end": 18174,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18167,
              "end": 18174,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18178,
            "end": 18179,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18184,
          "end": 18191,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18185,
            "end": 18191,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18193,
        "end": 18287,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18198,
            "end": 18284,
            "argument": {
              "type": "NewExpression",
              "start": 18204,
              "end": 18283,
              "callee": {
                "type": "Identifier",
                "start": 18208,
                "end": 18220,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18221,
                  "end": 18282,
                  "left": {
                    "type": "Literal",
                    "start": 18221,
                    "end": 18264,
                    "value": "#151: -4194304 >> 4 === -262144. Actual: ",
                    "raw": "'#151: -4194304 >> 4 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18267,
                    "end": 18282,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18268,
                      "end": 18281,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18268,
                        "end": 18276,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18269,
                          "end": 18276,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18280,
                        "end": 18281,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18291,
      "end": 18416,
      "test": {
        "type": "BinaryExpression",
        "start": 18295,
        "end": 18320,
        "left": {
          "type": "BinaryExpression",
          "start": 18295,
          "end": 18308,
          "left": {
            "type": "UnaryExpression",
            "start": 18295,
            "end": 18303,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18296,
              "end": 18303,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18307,
            "end": 18308,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18313,
          "end": 18320,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18314,
            "end": 18320,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18322,
        "end": 18416,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18327,
            "end": 18413,
            "argument": {
              "type": "NewExpression",
              "start": 18333,
              "end": 18412,
              "callee": {
                "type": "Identifier",
                "start": 18337,
                "end": 18349,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18350,
                  "end": 18411,
                  "left": {
                    "type": "Literal",
                    "start": 18350,
                    "end": 18393,
                    "value": "#152: -8388608 >> 4 === -524288. Actual: ",
                    "raw": "'#152: -8388608 >> 4 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18396,
                    "end": 18411,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18397,
                      "end": 18410,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18397,
                        "end": 18405,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18398,
                          "end": 18405,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18409,
                        "end": 18410,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18420,
      "end": 18550,
      "test": {
        "type": "BinaryExpression",
        "start": 18424,
        "end": 18451,
        "left": {
          "type": "BinaryExpression",
          "start": 18424,
          "end": 18438,
          "left": {
            "type": "UnaryExpression",
            "start": 18424,
            "end": 18433,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18425,
              "end": 18433,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18437,
            "end": 18438,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18443,
          "end": 18451,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18444,
            "end": 18451,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18453,
        "end": 18550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18458,
            "end": 18547,
            "argument": {
              "type": "NewExpression",
              "start": 18464,
              "end": 18546,
              "callee": {
                "type": "Identifier",
                "start": 18468,
                "end": 18480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18481,
                  "end": 18545,
                  "left": {
                    "type": "Literal",
                    "start": 18481,
                    "end": 18526,
                    "value": "#153: -16777216 >> 4 === -1048576. Actual: ",
                    "raw": "'#153: -16777216 >> 4 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18529,
                    "end": 18545,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18530,
                      "end": 18544,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18530,
                        "end": 18539,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18531,
                          "end": 18539,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18543,
                        "end": 18544,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18554,
      "end": 18684,
      "test": {
        "type": "BinaryExpression",
        "start": 18558,
        "end": 18585,
        "left": {
          "type": "BinaryExpression",
          "start": 18558,
          "end": 18572,
          "left": {
            "type": "UnaryExpression",
            "start": 18558,
            "end": 18567,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18559,
              "end": 18567,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18571,
            "end": 18572,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18577,
          "end": 18585,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18578,
            "end": 18585,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18587,
        "end": 18684,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18592,
            "end": 18681,
            "argument": {
              "type": "NewExpression",
              "start": 18598,
              "end": 18680,
              "callee": {
                "type": "Identifier",
                "start": 18602,
                "end": 18614,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18615,
                  "end": 18679,
                  "left": {
                    "type": "Literal",
                    "start": 18615,
                    "end": 18660,
                    "value": "#154: -33554432 >> 4 === -2097152. Actual: ",
                    "raw": "'#154: -33554432 >> 4 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18663,
                    "end": 18679,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18664,
                      "end": 18678,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18664,
                        "end": 18673,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18665,
                          "end": 18673,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18677,
                        "end": 18678,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18688,
      "end": 18818,
      "test": {
        "type": "BinaryExpression",
        "start": 18692,
        "end": 18719,
        "left": {
          "type": "BinaryExpression",
          "start": 18692,
          "end": 18706,
          "left": {
            "type": "UnaryExpression",
            "start": 18692,
            "end": 18701,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18693,
              "end": 18701,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18705,
            "end": 18706,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18711,
          "end": 18719,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18712,
            "end": 18719,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18721,
        "end": 18818,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18726,
            "end": 18815,
            "argument": {
              "type": "NewExpression",
              "start": 18732,
              "end": 18814,
              "callee": {
                "type": "Identifier",
                "start": 18736,
                "end": 18748,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18749,
                  "end": 18813,
                  "left": {
                    "type": "Literal",
                    "start": 18749,
                    "end": 18794,
                    "value": "#155: -67108864 >> 4 === -4194304. Actual: ",
                    "raw": "'#155: -67108864 >> 4 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18797,
                    "end": 18813,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18798,
                      "end": 18812,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18798,
                        "end": 18807,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18799,
                          "end": 18807,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18811,
                        "end": 18812,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18822,
      "end": 18955,
      "test": {
        "type": "BinaryExpression",
        "start": 18826,
        "end": 18854,
        "left": {
          "type": "BinaryExpression",
          "start": 18826,
          "end": 18841,
          "left": {
            "type": "UnaryExpression",
            "start": 18826,
            "end": 18836,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18827,
              "end": 18836,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18840,
            "end": 18841,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18846,
          "end": 18854,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18847,
            "end": 18854,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18856,
        "end": 18955,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18861,
            "end": 18952,
            "argument": {
              "type": "NewExpression",
              "start": 18867,
              "end": 18951,
              "callee": {
                "type": "Identifier",
                "start": 18871,
                "end": 18883,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18884,
                  "end": 18950,
                  "left": {
                    "type": "Literal",
                    "start": 18884,
                    "end": 18930,
                    "value": "#156: -134217728 >> 4 === -8388608. Actual: ",
                    "raw": "'#156: -134217728 >> 4 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18933,
                    "end": 18950,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18934,
                      "end": 18949,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 18934,
                        "end": 18944,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 18935,
                          "end": 18944,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18948,
                        "end": 18949,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18959,
      "end": 19094,
      "test": {
        "type": "BinaryExpression",
        "start": 18963,
        "end": 18992,
        "left": {
          "type": "BinaryExpression",
          "start": 18963,
          "end": 18978,
          "left": {
            "type": "UnaryExpression",
            "start": 18963,
            "end": 18973,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 18964,
              "end": 18973,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18977,
            "end": 18978,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 18983,
          "end": 18992,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 18984,
            "end": 18992,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18994,
        "end": 19094,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18999,
            "end": 19091,
            "argument": {
              "type": "NewExpression",
              "start": 19005,
              "end": 19090,
              "callee": {
                "type": "Identifier",
                "start": 19009,
                "end": 19021,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19022,
                  "end": 19089,
                  "left": {
                    "type": "Literal",
                    "start": 19022,
                    "end": 19069,
                    "value": "#157: -268435456 >> 4 === -16777216. Actual: ",
                    "raw": "'#157: -268435456 >> 4 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19072,
                    "end": 19089,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19073,
                      "end": 19088,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19073,
                        "end": 19083,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19074,
                          "end": 19083,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19087,
                        "end": 19088,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19098,
      "end": 19233,
      "test": {
        "type": "BinaryExpression",
        "start": 19102,
        "end": 19131,
        "left": {
          "type": "BinaryExpression",
          "start": 19102,
          "end": 19117,
          "left": {
            "type": "UnaryExpression",
            "start": 19102,
            "end": 19112,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19103,
              "end": 19112,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19116,
            "end": 19117,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19122,
          "end": 19131,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19123,
            "end": 19131,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19133,
        "end": 19233,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19138,
            "end": 19230,
            "argument": {
              "type": "NewExpression",
              "start": 19144,
              "end": 19229,
              "callee": {
                "type": "Identifier",
                "start": 19148,
                "end": 19160,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19161,
                  "end": 19228,
                  "left": {
                    "type": "Literal",
                    "start": 19161,
                    "end": 19208,
                    "value": "#158: -536870912 >> 4 === -33554432. Actual: ",
                    "raw": "'#158: -536870912 >> 4 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19211,
                    "end": 19228,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19212,
                      "end": 19227,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19212,
                        "end": 19222,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19213,
                          "end": 19222,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19226,
                        "end": 19227,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19237,
      "end": 19375,
      "test": {
        "type": "BinaryExpression",
        "start": 19241,
        "end": 19271,
        "left": {
          "type": "BinaryExpression",
          "start": 19241,
          "end": 19257,
          "left": {
            "type": "UnaryExpression",
            "start": 19241,
            "end": 19252,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19242,
              "end": 19252,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19256,
            "end": 19257,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19262,
          "end": 19271,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19263,
            "end": 19271,
            "value": 67108864,
            "raw": "67108864",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19273,
        "end": 19375,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19278,
            "end": 19372,
            "argument": {
              "type": "NewExpression",
              "start": 19284,
              "end": 19371,
              "callee": {
                "type": "Identifier",
                "start": 19288,
                "end": 19300,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19301,
                  "end": 19370,
                  "left": {
                    "type": "Literal",
                    "start": 19301,
                    "end": 19349,
                    "value": "#159: -1073741824 >> 4 === -67108864. Actual: ",
                    "raw": "'#159: -1073741824 >> 4 === -67108864. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19352,
                    "end": 19370,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19353,
                      "end": 19369,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19353,
                        "end": 19364,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19354,
                          "end": 19364,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19368,
                        "end": 19369,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19379,
      "end": 19519,
      "test": {
        "type": "BinaryExpression",
        "start": 19383,
        "end": 19414,
        "left": {
          "type": "BinaryExpression",
          "start": 19383,
          "end": 19399,
          "left": {
            "type": "UnaryExpression",
            "start": 19383,
            "end": 19394,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19384,
              "end": 19394,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19398,
            "end": 19399,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19404,
          "end": 19414,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19405,
            "end": 19414,
            "value": 134217728,
            "raw": "134217728",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19416,
        "end": 19519,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19421,
            "end": 19516,
            "argument": {
              "type": "NewExpression",
              "start": 19427,
              "end": 19515,
              "callee": {
                "type": "Identifier",
                "start": 19431,
                "end": 19443,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19444,
                  "end": 19514,
                  "left": {
                    "type": "Literal",
                    "start": 19444,
                    "end": 19493,
                    "value": "#160: -2147483648 >> 4 === -134217728. Actual: ",
                    "raw": "'#160: -2147483648 >> 4 === -134217728. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19496,
                    "end": 19514,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19497,
                      "end": 19513,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19497,
                        "end": 19508,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19498,
                          "end": 19508,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19512,
                        "end": 19513,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19523,
      "end": 19620,
      "test": {
        "type": "BinaryExpression",
        "start": 19527,
        "end": 19541,
        "left": {
          "type": "BinaryExpression",
          "start": 19527,
          "end": 19534,
          "left": {
            "type": "UnaryExpression",
            "start": 19527,
            "end": 19529,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19528,
              "end": 19529,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19533,
            "end": 19534,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19539,
          "end": 19541,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19540,
            "end": 19541,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19543,
        "end": 19620,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19548,
            "end": 19617,
            "argument": {
              "type": "NewExpression",
              "start": 19554,
              "end": 19616,
              "callee": {
                "type": "Identifier",
                "start": 19558,
                "end": 19570,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19571,
                  "end": 19615,
                  "left": {
                    "type": "Literal",
                    "start": 19571,
                    "end": 19603,
                    "value": "#161: -1 >> 5 === -1. Actual: ",
                    "raw": "'#161: -1 >> 5 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19606,
                    "end": 19615,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19607,
                      "end": 19614,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19607,
                        "end": 19609,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19608,
                          "end": 19609,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19613,
                        "end": 19614,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19624,
      "end": 19721,
      "test": {
        "type": "BinaryExpression",
        "start": 19628,
        "end": 19642,
        "left": {
          "type": "BinaryExpression",
          "start": 19628,
          "end": 19635,
          "left": {
            "type": "UnaryExpression",
            "start": 19628,
            "end": 19630,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19629,
              "end": 19630,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19634,
            "end": 19635,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19640,
          "end": 19642,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19641,
            "end": 19642,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19644,
        "end": 19721,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19649,
            "end": 19718,
            "argument": {
              "type": "NewExpression",
              "start": 19655,
              "end": 19717,
              "callee": {
                "type": "Identifier",
                "start": 19659,
                "end": 19671,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19672,
                  "end": 19716,
                  "left": {
                    "type": "Literal",
                    "start": 19672,
                    "end": 19704,
                    "value": "#162: -2 >> 5 === -1. Actual: ",
                    "raw": "'#162: -2 >> 5 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19707,
                    "end": 19716,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19708,
                      "end": 19715,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19708,
                        "end": 19710,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19709,
                          "end": 19710,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19714,
                        "end": 19715,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19725,
      "end": 19822,
      "test": {
        "type": "BinaryExpression",
        "start": 19729,
        "end": 19743,
        "left": {
          "type": "BinaryExpression",
          "start": 19729,
          "end": 19736,
          "left": {
            "type": "UnaryExpression",
            "start": 19729,
            "end": 19731,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19730,
              "end": 19731,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19735,
            "end": 19736,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19741,
          "end": 19743,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19742,
            "end": 19743,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19745,
        "end": 19822,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19750,
            "end": 19819,
            "argument": {
              "type": "NewExpression",
              "start": 19756,
              "end": 19818,
              "callee": {
                "type": "Identifier",
                "start": 19760,
                "end": 19772,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19773,
                  "end": 19817,
                  "left": {
                    "type": "Literal",
                    "start": 19773,
                    "end": 19805,
                    "value": "#163: -4 >> 5 === -1. Actual: ",
                    "raw": "'#163: -4 >> 5 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19808,
                    "end": 19817,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19809,
                      "end": 19816,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19809,
                        "end": 19811,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19810,
                          "end": 19811,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19815,
                        "end": 19816,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19826,
      "end": 19923,
      "test": {
        "type": "BinaryExpression",
        "start": 19830,
        "end": 19844,
        "left": {
          "type": "BinaryExpression",
          "start": 19830,
          "end": 19837,
          "left": {
            "type": "UnaryExpression",
            "start": 19830,
            "end": 19832,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19831,
              "end": 19832,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19836,
            "end": 19837,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19842,
          "end": 19844,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19843,
            "end": 19844,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19846,
        "end": 19923,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19851,
            "end": 19920,
            "argument": {
              "type": "NewExpression",
              "start": 19857,
              "end": 19919,
              "callee": {
                "type": "Identifier",
                "start": 19861,
                "end": 19873,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19874,
                  "end": 19918,
                  "left": {
                    "type": "Literal",
                    "start": 19874,
                    "end": 19906,
                    "value": "#164: -8 >> 5 === -1. Actual: ",
                    "raw": "'#164: -8 >> 5 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19909,
                    "end": 19918,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19910,
                      "end": 19917,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 19910,
                        "end": 19912,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 19911,
                          "end": 19912,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19916,
                        "end": 19917,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19927,
      "end": 20027,
      "test": {
        "type": "BinaryExpression",
        "start": 19931,
        "end": 19946,
        "left": {
          "type": "BinaryExpression",
          "start": 19931,
          "end": 19939,
          "left": {
            "type": "UnaryExpression",
            "start": 19931,
            "end": 19934,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 19932,
              "end": 19934,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19938,
            "end": 19939,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 19944,
          "end": 19946,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 19945,
            "end": 19946,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19948,
        "end": 20027,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19953,
            "end": 20024,
            "argument": {
              "type": "NewExpression",
              "start": 19959,
              "end": 20023,
              "callee": {
                "type": "Identifier",
                "start": 19963,
                "end": 19975,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19976,
                  "end": 20022,
                  "left": {
                    "type": "Literal",
                    "start": 19976,
                    "end": 20009,
                    "value": "#165: -16 >> 5 === -1. Actual: ",
                    "raw": "'#165: -16 >> 5 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20012,
                    "end": 20022,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20013,
                      "end": 20021,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20013,
                        "end": 20016,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20014,
                          "end": 20016,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20020,
                        "end": 20021,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20031,
      "end": 20131,
      "test": {
        "type": "BinaryExpression",
        "start": 20035,
        "end": 20050,
        "left": {
          "type": "BinaryExpression",
          "start": 20035,
          "end": 20043,
          "left": {
            "type": "UnaryExpression",
            "start": 20035,
            "end": 20038,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20036,
              "end": 20038,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20042,
            "end": 20043,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20048,
          "end": 20050,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20049,
            "end": 20050,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20052,
        "end": 20131,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20057,
            "end": 20128,
            "argument": {
              "type": "NewExpression",
              "start": 20063,
              "end": 20127,
              "callee": {
                "type": "Identifier",
                "start": 20067,
                "end": 20079,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20080,
                  "end": 20126,
                  "left": {
                    "type": "Literal",
                    "start": 20080,
                    "end": 20113,
                    "value": "#166: -32 >> 5 === -1. Actual: ",
                    "raw": "'#166: -32 >> 5 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20116,
                    "end": 20126,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20117,
                      "end": 20125,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20117,
                        "end": 20120,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20118,
                          "end": 20120,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20124,
                        "end": 20125,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20135,
      "end": 20235,
      "test": {
        "type": "BinaryExpression",
        "start": 20139,
        "end": 20154,
        "left": {
          "type": "BinaryExpression",
          "start": 20139,
          "end": 20147,
          "left": {
            "type": "UnaryExpression",
            "start": 20139,
            "end": 20142,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20140,
              "end": 20142,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20146,
            "end": 20147,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20152,
          "end": 20154,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20153,
            "end": 20154,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20156,
        "end": 20235,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20161,
            "end": 20232,
            "argument": {
              "type": "NewExpression",
              "start": 20167,
              "end": 20231,
              "callee": {
                "type": "Identifier",
                "start": 20171,
                "end": 20183,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20184,
                  "end": 20230,
                  "left": {
                    "type": "Literal",
                    "start": 20184,
                    "end": 20217,
                    "value": "#167: -64 >> 5 === -2. Actual: ",
                    "raw": "'#167: -64 >> 5 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20220,
                    "end": 20230,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20221,
                      "end": 20229,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20221,
                        "end": 20224,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20222,
                          "end": 20224,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20228,
                        "end": 20229,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20239,
      "end": 20342,
      "test": {
        "type": "BinaryExpression",
        "start": 20243,
        "end": 20259,
        "left": {
          "type": "BinaryExpression",
          "start": 20243,
          "end": 20252,
          "left": {
            "type": "UnaryExpression",
            "start": 20243,
            "end": 20247,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20244,
              "end": 20247,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20251,
            "end": 20252,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20257,
          "end": 20259,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20258,
            "end": 20259,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20261,
        "end": 20342,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20266,
            "end": 20339,
            "argument": {
              "type": "NewExpression",
              "start": 20272,
              "end": 20338,
              "callee": {
                "type": "Identifier",
                "start": 20276,
                "end": 20288,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20289,
                  "end": 20337,
                  "left": {
                    "type": "Literal",
                    "start": 20289,
                    "end": 20323,
                    "value": "#168: -128 >> 5 === -4. Actual: ",
                    "raw": "'#168: -128 >> 5 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20326,
                    "end": 20337,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20327,
                      "end": 20336,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20327,
                        "end": 20331,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20328,
                          "end": 20331,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20335,
                        "end": 20336,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20346,
      "end": 20449,
      "test": {
        "type": "BinaryExpression",
        "start": 20350,
        "end": 20366,
        "left": {
          "type": "BinaryExpression",
          "start": 20350,
          "end": 20359,
          "left": {
            "type": "UnaryExpression",
            "start": 20350,
            "end": 20354,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20351,
              "end": 20354,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20358,
            "end": 20359,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20364,
          "end": 20366,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20365,
            "end": 20366,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20368,
        "end": 20449,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20373,
            "end": 20446,
            "argument": {
              "type": "NewExpression",
              "start": 20379,
              "end": 20445,
              "callee": {
                "type": "Identifier",
                "start": 20383,
                "end": 20395,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20396,
                  "end": 20444,
                  "left": {
                    "type": "Literal",
                    "start": 20396,
                    "end": 20430,
                    "value": "#169: -256 >> 5 === -8. Actual: ",
                    "raw": "'#169: -256 >> 5 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20433,
                    "end": 20444,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20434,
                      "end": 20443,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20434,
                        "end": 20438,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20435,
                          "end": 20438,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20442,
                        "end": 20443,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20453,
      "end": 20558,
      "test": {
        "type": "BinaryExpression",
        "start": 20457,
        "end": 20474,
        "left": {
          "type": "BinaryExpression",
          "start": 20457,
          "end": 20466,
          "left": {
            "type": "UnaryExpression",
            "start": 20457,
            "end": 20461,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20458,
              "end": 20461,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20465,
            "end": 20466,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20471,
          "end": 20474,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20472,
            "end": 20474,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20476,
        "end": 20558,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20481,
            "end": 20555,
            "argument": {
              "type": "NewExpression",
              "start": 20487,
              "end": 20554,
              "callee": {
                "type": "Identifier",
                "start": 20491,
                "end": 20503,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20504,
                  "end": 20553,
                  "left": {
                    "type": "Literal",
                    "start": 20504,
                    "end": 20539,
                    "value": "#170: -512 >> 5 === -16. Actual: ",
                    "raw": "'#170: -512 >> 5 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20542,
                    "end": 20553,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20543,
                      "end": 20552,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20543,
                        "end": 20547,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20544,
                          "end": 20547,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20551,
                        "end": 20552,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20562,
      "end": 20670,
      "test": {
        "type": "BinaryExpression",
        "start": 20566,
        "end": 20584,
        "left": {
          "type": "BinaryExpression",
          "start": 20566,
          "end": 20576,
          "left": {
            "type": "UnaryExpression",
            "start": 20566,
            "end": 20571,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20567,
              "end": 20571,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20575,
            "end": 20576,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20581,
          "end": 20584,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20582,
            "end": 20584,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20586,
        "end": 20670,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20591,
            "end": 20667,
            "argument": {
              "type": "NewExpression",
              "start": 20597,
              "end": 20666,
              "callee": {
                "type": "Identifier",
                "start": 20601,
                "end": 20613,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20614,
                  "end": 20665,
                  "left": {
                    "type": "Literal",
                    "start": 20614,
                    "end": 20650,
                    "value": "#171: -1024 >> 5 === -32. Actual: ",
                    "raw": "'#171: -1024 >> 5 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20653,
                    "end": 20665,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20654,
                      "end": 20664,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20654,
                        "end": 20659,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20655,
                          "end": 20659,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20663,
                        "end": 20664,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20674,
      "end": 20782,
      "test": {
        "type": "BinaryExpression",
        "start": 20678,
        "end": 20696,
        "left": {
          "type": "BinaryExpression",
          "start": 20678,
          "end": 20688,
          "left": {
            "type": "UnaryExpression",
            "start": 20678,
            "end": 20683,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20679,
              "end": 20683,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20687,
            "end": 20688,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20693,
          "end": 20696,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20694,
            "end": 20696,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20698,
        "end": 20782,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20703,
            "end": 20779,
            "argument": {
              "type": "NewExpression",
              "start": 20709,
              "end": 20778,
              "callee": {
                "type": "Identifier",
                "start": 20713,
                "end": 20725,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20726,
                  "end": 20777,
                  "left": {
                    "type": "Literal",
                    "start": 20726,
                    "end": 20762,
                    "value": "#172: -2048 >> 5 === -64. Actual: ",
                    "raw": "'#172: -2048 >> 5 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20765,
                    "end": 20777,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20766,
                      "end": 20776,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20766,
                        "end": 20771,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20767,
                          "end": 20771,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20775,
                        "end": 20776,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20786,
      "end": 20896,
      "test": {
        "type": "BinaryExpression",
        "start": 20790,
        "end": 20809,
        "left": {
          "type": "BinaryExpression",
          "start": 20790,
          "end": 20800,
          "left": {
            "type": "UnaryExpression",
            "start": 20790,
            "end": 20795,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20791,
              "end": 20795,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20799,
            "end": 20800,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20805,
          "end": 20809,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20806,
            "end": 20809,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20811,
        "end": 20896,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20816,
            "end": 20893,
            "argument": {
              "type": "NewExpression",
              "start": 20822,
              "end": 20892,
              "callee": {
                "type": "Identifier",
                "start": 20826,
                "end": 20838,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20839,
                  "end": 20891,
                  "left": {
                    "type": "Literal",
                    "start": 20839,
                    "end": 20876,
                    "value": "#173: -4096 >> 5 === -128. Actual: ",
                    "raw": "'#173: -4096 >> 5 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20879,
                    "end": 20891,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20880,
                      "end": 20890,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20880,
                        "end": 20885,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20881,
                          "end": 20885,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20889,
                        "end": 20890,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20900,
      "end": 21010,
      "test": {
        "type": "BinaryExpression",
        "start": 20904,
        "end": 20923,
        "left": {
          "type": "BinaryExpression",
          "start": 20904,
          "end": 20914,
          "left": {
            "type": "UnaryExpression",
            "start": 20904,
            "end": 20909,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 20905,
              "end": 20909,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20913,
            "end": 20914,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 20919,
          "end": 20923,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 20920,
            "end": 20923,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20925,
        "end": 21010,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20930,
            "end": 21007,
            "argument": {
              "type": "NewExpression",
              "start": 20936,
              "end": 21006,
              "callee": {
                "type": "Identifier",
                "start": 20940,
                "end": 20952,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20953,
                  "end": 21005,
                  "left": {
                    "type": "Literal",
                    "start": 20953,
                    "end": 20990,
                    "value": "#174: -8192 >> 5 === -256. Actual: ",
                    "raw": "'#174: -8192 >> 5 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20993,
                    "end": 21005,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20994,
                      "end": 21004,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 20994,
                        "end": 20999,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 20995,
                          "end": 20999,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21003,
                        "end": 21004,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21014,
      "end": 21127,
      "test": {
        "type": "BinaryExpression",
        "start": 21018,
        "end": 21038,
        "left": {
          "type": "BinaryExpression",
          "start": 21018,
          "end": 21029,
          "left": {
            "type": "UnaryExpression",
            "start": 21018,
            "end": 21024,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21019,
              "end": 21024,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21028,
            "end": 21029,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21034,
          "end": 21038,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21035,
            "end": 21038,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21040,
        "end": 21127,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21045,
            "end": 21124,
            "argument": {
              "type": "NewExpression",
              "start": 21051,
              "end": 21123,
              "callee": {
                "type": "Identifier",
                "start": 21055,
                "end": 21067,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21068,
                  "end": 21122,
                  "left": {
                    "type": "Literal",
                    "start": 21068,
                    "end": 21106,
                    "value": "#175: -16384 >> 5 === -512. Actual: ",
                    "raw": "'#175: -16384 >> 5 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21109,
                    "end": 21122,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21110,
                      "end": 21121,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21110,
                        "end": 21116,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21111,
                          "end": 21116,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21120,
                        "end": 21121,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21131,
      "end": 21246,
      "test": {
        "type": "BinaryExpression",
        "start": 21135,
        "end": 21156,
        "left": {
          "type": "BinaryExpression",
          "start": 21135,
          "end": 21146,
          "left": {
            "type": "UnaryExpression",
            "start": 21135,
            "end": 21141,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21136,
              "end": 21141,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21145,
            "end": 21146,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21151,
          "end": 21156,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21152,
            "end": 21156,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21158,
        "end": 21246,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21163,
            "end": 21243,
            "argument": {
              "type": "NewExpression",
              "start": 21169,
              "end": 21242,
              "callee": {
                "type": "Identifier",
                "start": 21173,
                "end": 21185,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21186,
                  "end": 21241,
                  "left": {
                    "type": "Literal",
                    "start": 21186,
                    "end": 21225,
                    "value": "#176: -32768 >> 5 === -1024. Actual: ",
                    "raw": "'#176: -32768 >> 5 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21228,
                    "end": 21241,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21229,
                      "end": 21240,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21229,
                        "end": 21235,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21230,
                          "end": 21235,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21239,
                        "end": 21240,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21250,
      "end": 21365,
      "test": {
        "type": "BinaryExpression",
        "start": 21254,
        "end": 21275,
        "left": {
          "type": "BinaryExpression",
          "start": 21254,
          "end": 21265,
          "left": {
            "type": "UnaryExpression",
            "start": 21254,
            "end": 21260,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21255,
              "end": 21260,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21264,
            "end": 21265,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21270,
          "end": 21275,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21271,
            "end": 21275,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21277,
        "end": 21365,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21282,
            "end": 21362,
            "argument": {
              "type": "NewExpression",
              "start": 21288,
              "end": 21361,
              "callee": {
                "type": "Identifier",
                "start": 21292,
                "end": 21304,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21305,
                  "end": 21360,
                  "left": {
                    "type": "Literal",
                    "start": 21305,
                    "end": 21344,
                    "value": "#177: -65536 >> 5 === -2048. Actual: ",
                    "raw": "'#177: -65536 >> 5 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21347,
                    "end": 21360,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21348,
                      "end": 21359,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21348,
                        "end": 21354,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21349,
                          "end": 21354,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21358,
                        "end": 21359,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21369,
      "end": 21487,
      "test": {
        "type": "BinaryExpression",
        "start": 21373,
        "end": 21395,
        "left": {
          "type": "BinaryExpression",
          "start": 21373,
          "end": 21385,
          "left": {
            "type": "UnaryExpression",
            "start": 21373,
            "end": 21380,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21374,
              "end": 21380,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21384,
            "end": 21385,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21390,
          "end": 21395,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21391,
            "end": 21395,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21397,
        "end": 21487,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21402,
            "end": 21484,
            "argument": {
              "type": "NewExpression",
              "start": 21408,
              "end": 21483,
              "callee": {
                "type": "Identifier",
                "start": 21412,
                "end": 21424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21425,
                  "end": 21482,
                  "left": {
                    "type": "Literal",
                    "start": 21425,
                    "end": 21465,
                    "value": "#178: -131072 >> 5 === -4096. Actual: ",
                    "raw": "'#178: -131072 >> 5 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21468,
                    "end": 21482,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21469,
                      "end": 21481,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21469,
                        "end": 21476,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21470,
                          "end": 21476,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21480,
                        "end": 21481,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21491,
      "end": 21609,
      "test": {
        "type": "BinaryExpression",
        "start": 21495,
        "end": 21517,
        "left": {
          "type": "BinaryExpression",
          "start": 21495,
          "end": 21507,
          "left": {
            "type": "UnaryExpression",
            "start": 21495,
            "end": 21502,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21496,
              "end": 21502,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21506,
            "end": 21507,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21512,
          "end": 21517,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21513,
            "end": 21517,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21519,
        "end": 21609,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21524,
            "end": 21606,
            "argument": {
              "type": "NewExpression",
              "start": 21530,
              "end": 21605,
              "callee": {
                "type": "Identifier",
                "start": 21534,
                "end": 21546,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21547,
                  "end": 21604,
                  "left": {
                    "type": "Literal",
                    "start": 21547,
                    "end": 21587,
                    "value": "#179: -262144 >> 5 === -8192. Actual: ",
                    "raw": "'#179: -262144 >> 5 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21590,
                    "end": 21604,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21591,
                      "end": 21603,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21591,
                        "end": 21598,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21592,
                          "end": 21598,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21602,
                        "end": 21603,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21613,
      "end": 21733,
      "test": {
        "type": "BinaryExpression",
        "start": 21617,
        "end": 21640,
        "left": {
          "type": "BinaryExpression",
          "start": 21617,
          "end": 21629,
          "left": {
            "type": "UnaryExpression",
            "start": 21617,
            "end": 21624,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21618,
              "end": 21624,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21628,
            "end": 21629,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21634,
          "end": 21640,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21635,
            "end": 21640,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21642,
        "end": 21733,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21647,
            "end": 21730,
            "argument": {
              "type": "NewExpression",
              "start": 21653,
              "end": 21729,
              "callee": {
                "type": "Identifier",
                "start": 21657,
                "end": 21669,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21670,
                  "end": 21728,
                  "left": {
                    "type": "Literal",
                    "start": 21670,
                    "end": 21711,
                    "value": "#180: -524288 >> 5 === -16384. Actual: ",
                    "raw": "'#180: -524288 >> 5 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21714,
                    "end": 21728,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21715,
                      "end": 21727,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21715,
                        "end": 21722,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21716,
                          "end": 21722,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21726,
                        "end": 21727,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21737,
      "end": 21860,
      "test": {
        "type": "BinaryExpression",
        "start": 21741,
        "end": 21765,
        "left": {
          "type": "BinaryExpression",
          "start": 21741,
          "end": 21754,
          "left": {
            "type": "UnaryExpression",
            "start": 21741,
            "end": 21749,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21742,
              "end": 21749,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21753,
            "end": 21754,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21759,
          "end": 21765,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21760,
            "end": 21765,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21767,
        "end": 21860,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21772,
            "end": 21857,
            "argument": {
              "type": "NewExpression",
              "start": 21778,
              "end": 21856,
              "callee": {
                "type": "Identifier",
                "start": 21782,
                "end": 21794,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21795,
                  "end": 21855,
                  "left": {
                    "type": "Literal",
                    "start": 21795,
                    "end": 21837,
                    "value": "#181: -1048576 >> 5 === -32768. Actual: ",
                    "raw": "'#181: -1048576 >> 5 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21840,
                    "end": 21855,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21841,
                      "end": 21854,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21841,
                        "end": 21849,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21842,
                          "end": 21849,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21853,
                        "end": 21854,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21864,
      "end": 21987,
      "test": {
        "type": "BinaryExpression",
        "start": 21868,
        "end": 21892,
        "left": {
          "type": "BinaryExpression",
          "start": 21868,
          "end": 21881,
          "left": {
            "type": "UnaryExpression",
            "start": 21868,
            "end": 21876,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21869,
              "end": 21876,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21880,
            "end": 21881,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 21886,
          "end": 21892,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 21887,
            "end": 21892,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21894,
        "end": 21987,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21899,
            "end": 21984,
            "argument": {
              "type": "NewExpression",
              "start": 21905,
              "end": 21983,
              "callee": {
                "type": "Identifier",
                "start": 21909,
                "end": 21921,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21922,
                  "end": 21982,
                  "left": {
                    "type": "Literal",
                    "start": 21922,
                    "end": 21964,
                    "value": "#182: -2097152 >> 5 === -65536. Actual: ",
                    "raw": "'#182: -2097152 >> 5 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21967,
                    "end": 21982,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21968,
                      "end": 21981,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 21968,
                        "end": 21976,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 21969,
                          "end": 21976,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21980,
                        "end": 21981,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21991,
      "end": 22116,
      "test": {
        "type": "BinaryExpression",
        "start": 21995,
        "end": 22020,
        "left": {
          "type": "BinaryExpression",
          "start": 21995,
          "end": 22008,
          "left": {
            "type": "UnaryExpression",
            "start": 21995,
            "end": 22003,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 21996,
              "end": 22003,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22007,
            "end": 22008,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22013,
          "end": 22020,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22014,
            "end": 22020,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22022,
        "end": 22116,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22027,
            "end": 22113,
            "argument": {
              "type": "NewExpression",
              "start": 22033,
              "end": 22112,
              "callee": {
                "type": "Identifier",
                "start": 22037,
                "end": 22049,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22050,
                  "end": 22111,
                  "left": {
                    "type": "Literal",
                    "start": 22050,
                    "end": 22093,
                    "value": "#183: -4194304 >> 5 === -131072. Actual: ",
                    "raw": "'#183: -4194304 >> 5 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22096,
                    "end": 22111,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22097,
                      "end": 22110,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22097,
                        "end": 22105,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22098,
                          "end": 22105,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22109,
                        "end": 22110,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22120,
      "end": 22245,
      "test": {
        "type": "BinaryExpression",
        "start": 22124,
        "end": 22149,
        "left": {
          "type": "BinaryExpression",
          "start": 22124,
          "end": 22137,
          "left": {
            "type": "UnaryExpression",
            "start": 22124,
            "end": 22132,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22125,
              "end": 22132,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22136,
            "end": 22137,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22142,
          "end": 22149,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22143,
            "end": 22149,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22151,
        "end": 22245,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22156,
            "end": 22242,
            "argument": {
              "type": "NewExpression",
              "start": 22162,
              "end": 22241,
              "callee": {
                "type": "Identifier",
                "start": 22166,
                "end": 22178,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22179,
                  "end": 22240,
                  "left": {
                    "type": "Literal",
                    "start": 22179,
                    "end": 22222,
                    "value": "#184: -8388608 >> 5 === -262144. Actual: ",
                    "raw": "'#184: -8388608 >> 5 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22225,
                    "end": 22240,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22226,
                      "end": 22239,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22226,
                        "end": 22234,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22227,
                          "end": 22234,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22238,
                        "end": 22239,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22249,
      "end": 22377,
      "test": {
        "type": "BinaryExpression",
        "start": 22253,
        "end": 22279,
        "left": {
          "type": "BinaryExpression",
          "start": 22253,
          "end": 22267,
          "left": {
            "type": "UnaryExpression",
            "start": 22253,
            "end": 22262,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22254,
              "end": 22262,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22266,
            "end": 22267,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22272,
          "end": 22279,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22273,
            "end": 22279,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22281,
        "end": 22377,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22286,
            "end": 22374,
            "argument": {
              "type": "NewExpression",
              "start": 22292,
              "end": 22373,
              "callee": {
                "type": "Identifier",
                "start": 22296,
                "end": 22308,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22309,
                  "end": 22372,
                  "left": {
                    "type": "Literal",
                    "start": 22309,
                    "end": 22353,
                    "value": "#185: -16777216 >> 5 === -524288. Actual: ",
                    "raw": "'#185: -16777216 >> 5 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22356,
                    "end": 22372,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22357,
                      "end": 22371,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22357,
                        "end": 22366,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22358,
                          "end": 22366,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22370,
                        "end": 22371,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22381,
      "end": 22511,
      "test": {
        "type": "BinaryExpression",
        "start": 22385,
        "end": 22412,
        "left": {
          "type": "BinaryExpression",
          "start": 22385,
          "end": 22399,
          "left": {
            "type": "UnaryExpression",
            "start": 22385,
            "end": 22394,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22386,
              "end": 22394,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22398,
            "end": 22399,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22404,
          "end": 22412,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22405,
            "end": 22412,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22414,
        "end": 22511,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22419,
            "end": 22508,
            "argument": {
              "type": "NewExpression",
              "start": 22425,
              "end": 22507,
              "callee": {
                "type": "Identifier",
                "start": 22429,
                "end": 22441,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22442,
                  "end": 22506,
                  "left": {
                    "type": "Literal",
                    "start": 22442,
                    "end": 22487,
                    "value": "#186: -33554432 >> 5 === -1048576. Actual: ",
                    "raw": "'#186: -33554432 >> 5 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22490,
                    "end": 22506,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22491,
                      "end": 22505,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22491,
                        "end": 22500,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22492,
                          "end": 22500,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22504,
                        "end": 22505,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22515,
      "end": 22645,
      "test": {
        "type": "BinaryExpression",
        "start": 22519,
        "end": 22546,
        "left": {
          "type": "BinaryExpression",
          "start": 22519,
          "end": 22533,
          "left": {
            "type": "UnaryExpression",
            "start": 22519,
            "end": 22528,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22520,
              "end": 22528,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22532,
            "end": 22533,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22538,
          "end": 22546,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22539,
            "end": 22546,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22548,
        "end": 22645,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22553,
            "end": 22642,
            "argument": {
              "type": "NewExpression",
              "start": 22559,
              "end": 22641,
              "callee": {
                "type": "Identifier",
                "start": 22563,
                "end": 22575,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22576,
                  "end": 22640,
                  "left": {
                    "type": "Literal",
                    "start": 22576,
                    "end": 22621,
                    "value": "#187: -67108864 >> 5 === -2097152. Actual: ",
                    "raw": "'#187: -67108864 >> 5 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22624,
                    "end": 22640,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22625,
                      "end": 22639,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22625,
                        "end": 22634,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22626,
                          "end": 22634,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22638,
                        "end": 22639,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22649,
      "end": 22782,
      "test": {
        "type": "BinaryExpression",
        "start": 22653,
        "end": 22681,
        "left": {
          "type": "BinaryExpression",
          "start": 22653,
          "end": 22668,
          "left": {
            "type": "UnaryExpression",
            "start": 22653,
            "end": 22663,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22654,
              "end": 22663,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22667,
            "end": 22668,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22673,
          "end": 22681,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22674,
            "end": 22681,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22683,
        "end": 22782,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22688,
            "end": 22779,
            "argument": {
              "type": "NewExpression",
              "start": 22694,
              "end": 22778,
              "callee": {
                "type": "Identifier",
                "start": 22698,
                "end": 22710,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22711,
                  "end": 22777,
                  "left": {
                    "type": "Literal",
                    "start": 22711,
                    "end": 22757,
                    "value": "#188: -134217728 >> 5 === -4194304. Actual: ",
                    "raw": "'#188: -134217728 >> 5 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22760,
                    "end": 22777,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22761,
                      "end": 22776,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22761,
                        "end": 22771,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22762,
                          "end": 22771,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22775,
                        "end": 22776,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22786,
      "end": 22919,
      "test": {
        "type": "BinaryExpression",
        "start": 22790,
        "end": 22818,
        "left": {
          "type": "BinaryExpression",
          "start": 22790,
          "end": 22805,
          "left": {
            "type": "UnaryExpression",
            "start": 22790,
            "end": 22800,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22791,
              "end": 22800,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22804,
            "end": 22805,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22810,
          "end": 22818,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22811,
            "end": 22818,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22820,
        "end": 22919,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22825,
            "end": 22916,
            "argument": {
              "type": "NewExpression",
              "start": 22831,
              "end": 22915,
              "callee": {
                "type": "Identifier",
                "start": 22835,
                "end": 22847,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22848,
                  "end": 22914,
                  "left": {
                    "type": "Literal",
                    "start": 22848,
                    "end": 22894,
                    "value": "#189: -268435456 >> 5 === -8388608. Actual: ",
                    "raw": "'#189: -268435456 >> 5 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22897,
                    "end": 22914,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22898,
                      "end": 22913,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 22898,
                        "end": 22908,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 22899,
                          "end": 22908,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22912,
                        "end": 22913,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22923,
      "end": 23058,
      "test": {
        "type": "BinaryExpression",
        "start": 22927,
        "end": 22956,
        "left": {
          "type": "BinaryExpression",
          "start": 22927,
          "end": 22942,
          "left": {
            "type": "UnaryExpression",
            "start": 22927,
            "end": 22937,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 22928,
              "end": 22937,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22941,
            "end": 22942,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 22947,
          "end": 22956,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 22948,
            "end": 22956,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22958,
        "end": 23058,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22963,
            "end": 23055,
            "argument": {
              "type": "NewExpression",
              "start": 22969,
              "end": 23054,
              "callee": {
                "type": "Identifier",
                "start": 22973,
                "end": 22985,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22986,
                  "end": 23053,
                  "left": {
                    "type": "Literal",
                    "start": 22986,
                    "end": 23033,
                    "value": "#190: -536870912 >> 5 === -16777216. Actual: ",
                    "raw": "'#190: -536870912 >> 5 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23036,
                    "end": 23053,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23037,
                      "end": 23052,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23037,
                        "end": 23047,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23038,
                          "end": 23047,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23051,
                        "end": 23052,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23062,
      "end": 23200,
      "test": {
        "type": "BinaryExpression",
        "start": 23066,
        "end": 23096,
        "left": {
          "type": "BinaryExpression",
          "start": 23066,
          "end": 23082,
          "left": {
            "type": "UnaryExpression",
            "start": 23066,
            "end": 23077,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23067,
              "end": 23077,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23081,
            "end": 23082,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23087,
          "end": 23096,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23088,
            "end": 23096,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23098,
        "end": 23200,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23103,
            "end": 23197,
            "argument": {
              "type": "NewExpression",
              "start": 23109,
              "end": 23196,
              "callee": {
                "type": "Identifier",
                "start": 23113,
                "end": 23125,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23126,
                  "end": 23195,
                  "left": {
                    "type": "Literal",
                    "start": 23126,
                    "end": 23174,
                    "value": "#191: -1073741824 >> 5 === -33554432. Actual: ",
                    "raw": "'#191: -1073741824 >> 5 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23177,
                    "end": 23195,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23178,
                      "end": 23194,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23178,
                        "end": 23189,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23179,
                          "end": 23189,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23193,
                        "end": 23194,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23204,
      "end": 23342,
      "test": {
        "type": "BinaryExpression",
        "start": 23208,
        "end": 23238,
        "left": {
          "type": "BinaryExpression",
          "start": 23208,
          "end": 23224,
          "left": {
            "type": "UnaryExpression",
            "start": 23208,
            "end": 23219,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23209,
              "end": 23219,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23223,
            "end": 23224,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23229,
          "end": 23238,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23230,
            "end": 23238,
            "value": 67108864,
            "raw": "67108864",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23240,
        "end": 23342,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23245,
            "end": 23339,
            "argument": {
              "type": "NewExpression",
              "start": 23251,
              "end": 23338,
              "callee": {
                "type": "Identifier",
                "start": 23255,
                "end": 23267,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23268,
                  "end": 23337,
                  "left": {
                    "type": "Literal",
                    "start": 23268,
                    "end": 23316,
                    "value": "#192: -2147483648 >> 5 === -67108864. Actual: ",
                    "raw": "'#192: -2147483648 >> 5 === -67108864. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23319,
                    "end": 23337,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23320,
                      "end": 23336,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23320,
                        "end": 23331,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23321,
                          "end": 23331,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23335,
                        "end": 23336,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23346,
      "end": 23443,
      "test": {
        "type": "BinaryExpression",
        "start": 23350,
        "end": 23364,
        "left": {
          "type": "BinaryExpression",
          "start": 23350,
          "end": 23357,
          "left": {
            "type": "UnaryExpression",
            "start": 23350,
            "end": 23352,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23351,
              "end": 23352,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23356,
            "end": 23357,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23362,
          "end": 23364,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23363,
            "end": 23364,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23366,
        "end": 23443,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23371,
            "end": 23440,
            "argument": {
              "type": "NewExpression",
              "start": 23377,
              "end": 23439,
              "callee": {
                "type": "Identifier",
                "start": 23381,
                "end": 23393,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23394,
                  "end": 23438,
                  "left": {
                    "type": "Literal",
                    "start": 23394,
                    "end": 23426,
                    "value": "#193: -1 >> 6 === -1. Actual: ",
                    "raw": "'#193: -1 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23429,
                    "end": 23438,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23430,
                      "end": 23437,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23430,
                        "end": 23432,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23431,
                          "end": 23432,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23436,
                        "end": 23437,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23447,
      "end": 23544,
      "test": {
        "type": "BinaryExpression",
        "start": 23451,
        "end": 23465,
        "left": {
          "type": "BinaryExpression",
          "start": 23451,
          "end": 23458,
          "left": {
            "type": "UnaryExpression",
            "start": 23451,
            "end": 23453,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23452,
              "end": 23453,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23457,
            "end": 23458,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23463,
          "end": 23465,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23464,
            "end": 23465,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23467,
        "end": 23544,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23472,
            "end": 23541,
            "argument": {
              "type": "NewExpression",
              "start": 23478,
              "end": 23540,
              "callee": {
                "type": "Identifier",
                "start": 23482,
                "end": 23494,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23495,
                  "end": 23539,
                  "left": {
                    "type": "Literal",
                    "start": 23495,
                    "end": 23527,
                    "value": "#194: -2 >> 6 === -1. Actual: ",
                    "raw": "'#194: -2 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23530,
                    "end": 23539,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23531,
                      "end": 23538,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23531,
                        "end": 23533,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23532,
                          "end": 23533,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23537,
                        "end": 23538,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23548,
      "end": 23645,
      "test": {
        "type": "BinaryExpression",
        "start": 23552,
        "end": 23566,
        "left": {
          "type": "BinaryExpression",
          "start": 23552,
          "end": 23559,
          "left": {
            "type": "UnaryExpression",
            "start": 23552,
            "end": 23554,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23553,
              "end": 23554,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23558,
            "end": 23559,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23564,
          "end": 23566,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23565,
            "end": 23566,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23568,
        "end": 23645,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23573,
            "end": 23642,
            "argument": {
              "type": "NewExpression",
              "start": 23579,
              "end": 23641,
              "callee": {
                "type": "Identifier",
                "start": 23583,
                "end": 23595,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23596,
                  "end": 23640,
                  "left": {
                    "type": "Literal",
                    "start": 23596,
                    "end": 23628,
                    "value": "#195: -4 >> 6 === -1. Actual: ",
                    "raw": "'#195: -4 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23631,
                    "end": 23640,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23632,
                      "end": 23639,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23632,
                        "end": 23634,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23633,
                          "end": 23634,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23638,
                        "end": 23639,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23649,
      "end": 23746,
      "test": {
        "type": "BinaryExpression",
        "start": 23653,
        "end": 23667,
        "left": {
          "type": "BinaryExpression",
          "start": 23653,
          "end": 23660,
          "left": {
            "type": "UnaryExpression",
            "start": 23653,
            "end": 23655,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23654,
              "end": 23655,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23659,
            "end": 23660,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23665,
          "end": 23667,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23666,
            "end": 23667,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23669,
        "end": 23746,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23674,
            "end": 23743,
            "argument": {
              "type": "NewExpression",
              "start": 23680,
              "end": 23742,
              "callee": {
                "type": "Identifier",
                "start": 23684,
                "end": 23696,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23697,
                  "end": 23741,
                  "left": {
                    "type": "Literal",
                    "start": 23697,
                    "end": 23729,
                    "value": "#196: -8 >> 6 === -1. Actual: ",
                    "raw": "'#196: -8 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23732,
                    "end": 23741,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23733,
                      "end": 23740,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23733,
                        "end": 23735,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23734,
                          "end": 23735,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23739,
                        "end": 23740,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23750,
      "end": 23850,
      "test": {
        "type": "BinaryExpression",
        "start": 23754,
        "end": 23769,
        "left": {
          "type": "BinaryExpression",
          "start": 23754,
          "end": 23762,
          "left": {
            "type": "UnaryExpression",
            "start": 23754,
            "end": 23757,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23755,
              "end": 23757,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23761,
            "end": 23762,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23767,
          "end": 23769,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23768,
            "end": 23769,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23771,
        "end": 23850,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23776,
            "end": 23847,
            "argument": {
              "type": "NewExpression",
              "start": 23782,
              "end": 23846,
              "callee": {
                "type": "Identifier",
                "start": 23786,
                "end": 23798,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23799,
                  "end": 23845,
                  "left": {
                    "type": "Literal",
                    "start": 23799,
                    "end": 23832,
                    "value": "#197: -16 >> 6 === -1. Actual: ",
                    "raw": "'#197: -16 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23835,
                    "end": 23845,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23836,
                      "end": 23844,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23836,
                        "end": 23839,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23837,
                          "end": 23839,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23843,
                        "end": 23844,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23854,
      "end": 23954,
      "test": {
        "type": "BinaryExpression",
        "start": 23858,
        "end": 23873,
        "left": {
          "type": "BinaryExpression",
          "start": 23858,
          "end": 23866,
          "left": {
            "type": "UnaryExpression",
            "start": 23858,
            "end": 23861,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23859,
              "end": 23861,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23865,
            "end": 23866,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23871,
          "end": 23873,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23872,
            "end": 23873,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23875,
        "end": 23954,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23880,
            "end": 23951,
            "argument": {
              "type": "NewExpression",
              "start": 23886,
              "end": 23950,
              "callee": {
                "type": "Identifier",
                "start": 23890,
                "end": 23902,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23903,
                  "end": 23949,
                  "left": {
                    "type": "Literal",
                    "start": 23903,
                    "end": 23936,
                    "value": "#198: -32 >> 6 === -1. Actual: ",
                    "raw": "'#198: -32 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23939,
                    "end": 23949,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23940,
                      "end": 23948,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 23940,
                        "end": 23943,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 23941,
                          "end": 23943,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23947,
                        "end": 23948,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23958,
      "end": 24058,
      "test": {
        "type": "BinaryExpression",
        "start": 23962,
        "end": 23977,
        "left": {
          "type": "BinaryExpression",
          "start": 23962,
          "end": 23970,
          "left": {
            "type": "UnaryExpression",
            "start": 23962,
            "end": 23965,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 23963,
              "end": 23965,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23969,
            "end": 23970,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 23975,
          "end": 23977,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 23976,
            "end": 23977,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23979,
        "end": 24058,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23984,
            "end": 24055,
            "argument": {
              "type": "NewExpression",
              "start": 23990,
              "end": 24054,
              "callee": {
                "type": "Identifier",
                "start": 23994,
                "end": 24006,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24007,
                  "end": 24053,
                  "left": {
                    "type": "Literal",
                    "start": 24007,
                    "end": 24040,
                    "value": "#199: -64 >> 6 === -1. Actual: ",
                    "raw": "'#199: -64 >> 6 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24043,
                    "end": 24053,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24044,
                      "end": 24052,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24044,
                        "end": 24047,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24045,
                          "end": 24047,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24051,
                        "end": 24052,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24062,
      "end": 24165,
      "test": {
        "type": "BinaryExpression",
        "start": 24066,
        "end": 24082,
        "left": {
          "type": "BinaryExpression",
          "start": 24066,
          "end": 24075,
          "left": {
            "type": "UnaryExpression",
            "start": 24066,
            "end": 24070,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24067,
              "end": 24070,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24074,
            "end": 24075,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24080,
          "end": 24082,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24081,
            "end": 24082,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24084,
        "end": 24165,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24089,
            "end": 24162,
            "argument": {
              "type": "NewExpression",
              "start": 24095,
              "end": 24161,
              "callee": {
                "type": "Identifier",
                "start": 24099,
                "end": 24111,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24112,
                  "end": 24160,
                  "left": {
                    "type": "Literal",
                    "start": 24112,
                    "end": 24146,
                    "value": "#200: -128 >> 6 === -2. Actual: ",
                    "raw": "'#200: -128 >> 6 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24149,
                    "end": 24160,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24150,
                      "end": 24159,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24150,
                        "end": 24154,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24151,
                          "end": 24154,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24158,
                        "end": 24159,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24169,
      "end": 24272,
      "test": {
        "type": "BinaryExpression",
        "start": 24173,
        "end": 24189,
        "left": {
          "type": "BinaryExpression",
          "start": 24173,
          "end": 24182,
          "left": {
            "type": "UnaryExpression",
            "start": 24173,
            "end": 24177,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24174,
              "end": 24177,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24181,
            "end": 24182,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24187,
          "end": 24189,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24188,
            "end": 24189,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24191,
        "end": 24272,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24196,
            "end": 24269,
            "argument": {
              "type": "NewExpression",
              "start": 24202,
              "end": 24268,
              "callee": {
                "type": "Identifier",
                "start": 24206,
                "end": 24218,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24219,
                  "end": 24267,
                  "left": {
                    "type": "Literal",
                    "start": 24219,
                    "end": 24253,
                    "value": "#201: -256 >> 6 === -4. Actual: ",
                    "raw": "'#201: -256 >> 6 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24256,
                    "end": 24267,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24257,
                      "end": 24266,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24257,
                        "end": 24261,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24258,
                          "end": 24261,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24265,
                        "end": 24266,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24276,
      "end": 24379,
      "test": {
        "type": "BinaryExpression",
        "start": 24280,
        "end": 24296,
        "left": {
          "type": "BinaryExpression",
          "start": 24280,
          "end": 24289,
          "left": {
            "type": "UnaryExpression",
            "start": 24280,
            "end": 24284,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24281,
              "end": 24284,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24288,
            "end": 24289,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24294,
          "end": 24296,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24295,
            "end": 24296,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24298,
        "end": 24379,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24303,
            "end": 24376,
            "argument": {
              "type": "NewExpression",
              "start": 24309,
              "end": 24375,
              "callee": {
                "type": "Identifier",
                "start": 24313,
                "end": 24325,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24326,
                  "end": 24374,
                  "left": {
                    "type": "Literal",
                    "start": 24326,
                    "end": 24360,
                    "value": "#202: -512 >> 6 === -8. Actual: ",
                    "raw": "'#202: -512 >> 6 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24363,
                    "end": 24374,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24364,
                      "end": 24373,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24364,
                        "end": 24368,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24365,
                          "end": 24368,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24372,
                        "end": 24373,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24383,
      "end": 24491,
      "test": {
        "type": "BinaryExpression",
        "start": 24387,
        "end": 24405,
        "left": {
          "type": "BinaryExpression",
          "start": 24387,
          "end": 24397,
          "left": {
            "type": "UnaryExpression",
            "start": 24387,
            "end": 24392,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24388,
              "end": 24392,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24396,
            "end": 24397,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24402,
          "end": 24405,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24403,
            "end": 24405,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24407,
        "end": 24491,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24412,
            "end": 24488,
            "argument": {
              "type": "NewExpression",
              "start": 24418,
              "end": 24487,
              "callee": {
                "type": "Identifier",
                "start": 24422,
                "end": 24434,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24435,
                  "end": 24486,
                  "left": {
                    "type": "Literal",
                    "start": 24435,
                    "end": 24471,
                    "value": "#203: -1024 >> 6 === -16. Actual: ",
                    "raw": "'#203: -1024 >> 6 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24474,
                    "end": 24486,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24475,
                      "end": 24485,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24475,
                        "end": 24480,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24476,
                          "end": 24480,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24484,
                        "end": 24485,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24495,
      "end": 24603,
      "test": {
        "type": "BinaryExpression",
        "start": 24499,
        "end": 24517,
        "left": {
          "type": "BinaryExpression",
          "start": 24499,
          "end": 24509,
          "left": {
            "type": "UnaryExpression",
            "start": 24499,
            "end": 24504,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24500,
              "end": 24504,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24508,
            "end": 24509,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24514,
          "end": 24517,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24515,
            "end": 24517,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24519,
        "end": 24603,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24524,
            "end": 24600,
            "argument": {
              "type": "NewExpression",
              "start": 24530,
              "end": 24599,
              "callee": {
                "type": "Identifier",
                "start": 24534,
                "end": 24546,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24547,
                  "end": 24598,
                  "left": {
                    "type": "Literal",
                    "start": 24547,
                    "end": 24583,
                    "value": "#204: -2048 >> 6 === -32. Actual: ",
                    "raw": "'#204: -2048 >> 6 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24586,
                    "end": 24598,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24587,
                      "end": 24597,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24587,
                        "end": 24592,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24588,
                          "end": 24592,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24596,
                        "end": 24597,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24607,
      "end": 24715,
      "test": {
        "type": "BinaryExpression",
        "start": 24611,
        "end": 24629,
        "left": {
          "type": "BinaryExpression",
          "start": 24611,
          "end": 24621,
          "left": {
            "type": "UnaryExpression",
            "start": 24611,
            "end": 24616,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24612,
              "end": 24616,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24620,
            "end": 24621,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24626,
          "end": 24629,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24627,
            "end": 24629,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24631,
        "end": 24715,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24636,
            "end": 24712,
            "argument": {
              "type": "NewExpression",
              "start": 24642,
              "end": 24711,
              "callee": {
                "type": "Identifier",
                "start": 24646,
                "end": 24658,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24659,
                  "end": 24710,
                  "left": {
                    "type": "Literal",
                    "start": 24659,
                    "end": 24695,
                    "value": "#205: -4096 >> 6 === -64. Actual: ",
                    "raw": "'#205: -4096 >> 6 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24698,
                    "end": 24710,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24699,
                      "end": 24709,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24699,
                        "end": 24704,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24700,
                          "end": 24704,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24708,
                        "end": 24709,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24719,
      "end": 24829,
      "test": {
        "type": "BinaryExpression",
        "start": 24723,
        "end": 24742,
        "left": {
          "type": "BinaryExpression",
          "start": 24723,
          "end": 24733,
          "left": {
            "type": "UnaryExpression",
            "start": 24723,
            "end": 24728,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24724,
              "end": 24728,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24732,
            "end": 24733,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24738,
          "end": 24742,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24739,
            "end": 24742,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24744,
        "end": 24829,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24749,
            "end": 24826,
            "argument": {
              "type": "NewExpression",
              "start": 24755,
              "end": 24825,
              "callee": {
                "type": "Identifier",
                "start": 24759,
                "end": 24771,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24772,
                  "end": 24824,
                  "left": {
                    "type": "Literal",
                    "start": 24772,
                    "end": 24809,
                    "value": "#206: -8192 >> 6 === -128. Actual: ",
                    "raw": "'#206: -8192 >> 6 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24812,
                    "end": 24824,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24813,
                      "end": 24823,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24813,
                        "end": 24818,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24814,
                          "end": 24818,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24822,
                        "end": 24823,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24833,
      "end": 24946,
      "test": {
        "type": "BinaryExpression",
        "start": 24837,
        "end": 24857,
        "left": {
          "type": "BinaryExpression",
          "start": 24837,
          "end": 24848,
          "left": {
            "type": "UnaryExpression",
            "start": 24837,
            "end": 24843,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24838,
              "end": 24843,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24847,
            "end": 24848,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24853,
          "end": 24857,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24854,
            "end": 24857,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24859,
        "end": 24946,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24864,
            "end": 24943,
            "argument": {
              "type": "NewExpression",
              "start": 24870,
              "end": 24942,
              "callee": {
                "type": "Identifier",
                "start": 24874,
                "end": 24886,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24887,
                  "end": 24941,
                  "left": {
                    "type": "Literal",
                    "start": 24887,
                    "end": 24925,
                    "value": "#207: -16384 >> 6 === -256. Actual: ",
                    "raw": "'#207: -16384 >> 6 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24928,
                    "end": 24941,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24929,
                      "end": 24940,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 24929,
                        "end": 24935,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 24930,
                          "end": 24935,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24939,
                        "end": 24940,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24950,
      "end": 25063,
      "test": {
        "type": "BinaryExpression",
        "start": 24954,
        "end": 24974,
        "left": {
          "type": "BinaryExpression",
          "start": 24954,
          "end": 24965,
          "left": {
            "type": "UnaryExpression",
            "start": 24954,
            "end": 24960,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 24955,
              "end": 24960,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24964,
            "end": 24965,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 24970,
          "end": 24974,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 24971,
            "end": 24974,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24976,
        "end": 25063,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24981,
            "end": 25060,
            "argument": {
              "type": "NewExpression",
              "start": 24987,
              "end": 25059,
              "callee": {
                "type": "Identifier",
                "start": 24991,
                "end": 25003,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25004,
                  "end": 25058,
                  "left": {
                    "type": "Literal",
                    "start": 25004,
                    "end": 25042,
                    "value": "#208: -32768 >> 6 === -512. Actual: ",
                    "raw": "'#208: -32768 >> 6 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25045,
                    "end": 25058,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25046,
                      "end": 25057,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25046,
                        "end": 25052,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25047,
                          "end": 25052,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25056,
                        "end": 25057,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25067,
      "end": 25182,
      "test": {
        "type": "BinaryExpression",
        "start": 25071,
        "end": 25092,
        "left": {
          "type": "BinaryExpression",
          "start": 25071,
          "end": 25082,
          "left": {
            "type": "UnaryExpression",
            "start": 25071,
            "end": 25077,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25072,
              "end": 25077,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25081,
            "end": 25082,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25087,
          "end": 25092,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25088,
            "end": 25092,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25094,
        "end": 25182,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25099,
            "end": 25179,
            "argument": {
              "type": "NewExpression",
              "start": 25105,
              "end": 25178,
              "callee": {
                "type": "Identifier",
                "start": 25109,
                "end": 25121,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25122,
                  "end": 25177,
                  "left": {
                    "type": "Literal",
                    "start": 25122,
                    "end": 25161,
                    "value": "#209: -65536 >> 6 === -1024. Actual: ",
                    "raw": "'#209: -65536 >> 6 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25164,
                    "end": 25177,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25165,
                      "end": 25176,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25165,
                        "end": 25171,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25166,
                          "end": 25171,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25175,
                        "end": 25176,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25186,
      "end": 25304,
      "test": {
        "type": "BinaryExpression",
        "start": 25190,
        "end": 25212,
        "left": {
          "type": "BinaryExpression",
          "start": 25190,
          "end": 25202,
          "left": {
            "type": "UnaryExpression",
            "start": 25190,
            "end": 25197,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25191,
              "end": 25197,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25201,
            "end": 25202,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25207,
          "end": 25212,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25208,
            "end": 25212,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25214,
        "end": 25304,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25219,
            "end": 25301,
            "argument": {
              "type": "NewExpression",
              "start": 25225,
              "end": 25300,
              "callee": {
                "type": "Identifier",
                "start": 25229,
                "end": 25241,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25242,
                  "end": 25299,
                  "left": {
                    "type": "Literal",
                    "start": 25242,
                    "end": 25282,
                    "value": "#210: -131072 >> 6 === -2048. Actual: ",
                    "raw": "'#210: -131072 >> 6 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25285,
                    "end": 25299,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25286,
                      "end": 25298,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25286,
                        "end": 25293,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25287,
                          "end": 25293,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25297,
                        "end": 25298,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25308,
      "end": 25426,
      "test": {
        "type": "BinaryExpression",
        "start": 25312,
        "end": 25334,
        "left": {
          "type": "BinaryExpression",
          "start": 25312,
          "end": 25324,
          "left": {
            "type": "UnaryExpression",
            "start": 25312,
            "end": 25319,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25313,
              "end": 25319,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25323,
            "end": 25324,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25329,
          "end": 25334,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25330,
            "end": 25334,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25336,
        "end": 25426,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25341,
            "end": 25423,
            "argument": {
              "type": "NewExpression",
              "start": 25347,
              "end": 25422,
              "callee": {
                "type": "Identifier",
                "start": 25351,
                "end": 25363,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25364,
                  "end": 25421,
                  "left": {
                    "type": "Literal",
                    "start": 25364,
                    "end": 25404,
                    "value": "#211: -262144 >> 6 === -4096. Actual: ",
                    "raw": "'#211: -262144 >> 6 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25407,
                    "end": 25421,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25408,
                      "end": 25420,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25408,
                        "end": 25415,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25409,
                          "end": 25415,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25419,
                        "end": 25420,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25430,
      "end": 25548,
      "test": {
        "type": "BinaryExpression",
        "start": 25434,
        "end": 25456,
        "left": {
          "type": "BinaryExpression",
          "start": 25434,
          "end": 25446,
          "left": {
            "type": "UnaryExpression",
            "start": 25434,
            "end": 25441,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25435,
              "end": 25441,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25445,
            "end": 25446,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25451,
          "end": 25456,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25452,
            "end": 25456,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25458,
        "end": 25548,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25463,
            "end": 25545,
            "argument": {
              "type": "NewExpression",
              "start": 25469,
              "end": 25544,
              "callee": {
                "type": "Identifier",
                "start": 25473,
                "end": 25485,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25486,
                  "end": 25543,
                  "left": {
                    "type": "Literal",
                    "start": 25486,
                    "end": 25526,
                    "value": "#212: -524288 >> 6 === -8192. Actual: ",
                    "raw": "'#212: -524288 >> 6 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25529,
                    "end": 25543,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25530,
                      "end": 25542,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25530,
                        "end": 25537,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25531,
                          "end": 25537,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25541,
                        "end": 25542,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25552,
      "end": 25675,
      "test": {
        "type": "BinaryExpression",
        "start": 25556,
        "end": 25580,
        "left": {
          "type": "BinaryExpression",
          "start": 25556,
          "end": 25569,
          "left": {
            "type": "UnaryExpression",
            "start": 25556,
            "end": 25564,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25557,
              "end": 25564,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25568,
            "end": 25569,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25574,
          "end": 25580,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25575,
            "end": 25580,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25582,
        "end": 25675,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25587,
            "end": 25672,
            "argument": {
              "type": "NewExpression",
              "start": 25593,
              "end": 25671,
              "callee": {
                "type": "Identifier",
                "start": 25597,
                "end": 25609,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25610,
                  "end": 25670,
                  "left": {
                    "type": "Literal",
                    "start": 25610,
                    "end": 25652,
                    "value": "#213: -1048576 >> 6 === -16384. Actual: ",
                    "raw": "'#213: -1048576 >> 6 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25655,
                    "end": 25670,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25656,
                      "end": 25669,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25656,
                        "end": 25664,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25657,
                          "end": 25664,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25668,
                        "end": 25669,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25679,
      "end": 25802,
      "test": {
        "type": "BinaryExpression",
        "start": 25683,
        "end": 25707,
        "left": {
          "type": "BinaryExpression",
          "start": 25683,
          "end": 25696,
          "left": {
            "type": "UnaryExpression",
            "start": 25683,
            "end": 25691,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25684,
              "end": 25691,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25695,
            "end": 25696,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25701,
          "end": 25707,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25702,
            "end": 25707,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25709,
        "end": 25802,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25714,
            "end": 25799,
            "argument": {
              "type": "NewExpression",
              "start": 25720,
              "end": 25798,
              "callee": {
                "type": "Identifier",
                "start": 25724,
                "end": 25736,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25737,
                  "end": 25797,
                  "left": {
                    "type": "Literal",
                    "start": 25737,
                    "end": 25779,
                    "value": "#214: -2097152 >> 6 === -32768. Actual: ",
                    "raw": "'#214: -2097152 >> 6 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25782,
                    "end": 25797,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25783,
                      "end": 25796,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25783,
                        "end": 25791,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25784,
                          "end": 25791,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25795,
                        "end": 25796,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25806,
      "end": 25929,
      "test": {
        "type": "BinaryExpression",
        "start": 25810,
        "end": 25834,
        "left": {
          "type": "BinaryExpression",
          "start": 25810,
          "end": 25823,
          "left": {
            "type": "UnaryExpression",
            "start": 25810,
            "end": 25818,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25811,
              "end": 25818,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25822,
            "end": 25823,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25828,
          "end": 25834,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25829,
            "end": 25834,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25836,
        "end": 25929,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25841,
            "end": 25926,
            "argument": {
              "type": "NewExpression",
              "start": 25847,
              "end": 25925,
              "callee": {
                "type": "Identifier",
                "start": 25851,
                "end": 25863,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25864,
                  "end": 25924,
                  "left": {
                    "type": "Literal",
                    "start": 25864,
                    "end": 25906,
                    "value": "#215: -4194304 >> 6 === -65536. Actual: ",
                    "raw": "'#215: -4194304 >> 6 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25909,
                    "end": 25924,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25910,
                      "end": 25923,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 25910,
                        "end": 25918,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 25911,
                          "end": 25918,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25922,
                        "end": 25923,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25933,
      "end": 26058,
      "test": {
        "type": "BinaryExpression",
        "start": 25937,
        "end": 25962,
        "left": {
          "type": "BinaryExpression",
          "start": 25937,
          "end": 25950,
          "left": {
            "type": "UnaryExpression",
            "start": 25937,
            "end": 25945,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 25938,
              "end": 25945,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25949,
            "end": 25950,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 25955,
          "end": 25962,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 25956,
            "end": 25962,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25964,
        "end": 26058,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25969,
            "end": 26055,
            "argument": {
              "type": "NewExpression",
              "start": 25975,
              "end": 26054,
              "callee": {
                "type": "Identifier",
                "start": 25979,
                "end": 25991,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25992,
                  "end": 26053,
                  "left": {
                    "type": "Literal",
                    "start": 25992,
                    "end": 26035,
                    "value": "#216: -8388608 >> 6 === -131072. Actual: ",
                    "raw": "'#216: -8388608 >> 6 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26038,
                    "end": 26053,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26039,
                      "end": 26052,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26039,
                        "end": 26047,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26040,
                          "end": 26047,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26051,
                        "end": 26052,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26062,
      "end": 26190,
      "test": {
        "type": "BinaryExpression",
        "start": 26066,
        "end": 26092,
        "left": {
          "type": "BinaryExpression",
          "start": 26066,
          "end": 26080,
          "left": {
            "type": "UnaryExpression",
            "start": 26066,
            "end": 26075,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26067,
              "end": 26075,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26079,
            "end": 26080,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26085,
          "end": 26092,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26086,
            "end": 26092,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26094,
        "end": 26190,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26099,
            "end": 26187,
            "argument": {
              "type": "NewExpression",
              "start": 26105,
              "end": 26186,
              "callee": {
                "type": "Identifier",
                "start": 26109,
                "end": 26121,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26122,
                  "end": 26185,
                  "left": {
                    "type": "Literal",
                    "start": 26122,
                    "end": 26166,
                    "value": "#217: -16777216 >> 6 === -262144. Actual: ",
                    "raw": "'#217: -16777216 >> 6 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26169,
                    "end": 26185,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26170,
                      "end": 26184,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26170,
                        "end": 26179,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26171,
                          "end": 26179,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26183,
                        "end": 26184,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26194,
      "end": 26322,
      "test": {
        "type": "BinaryExpression",
        "start": 26198,
        "end": 26224,
        "left": {
          "type": "BinaryExpression",
          "start": 26198,
          "end": 26212,
          "left": {
            "type": "UnaryExpression",
            "start": 26198,
            "end": 26207,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26199,
              "end": 26207,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26211,
            "end": 26212,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26217,
          "end": 26224,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26218,
            "end": 26224,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26226,
        "end": 26322,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26231,
            "end": 26319,
            "argument": {
              "type": "NewExpression",
              "start": 26237,
              "end": 26318,
              "callee": {
                "type": "Identifier",
                "start": 26241,
                "end": 26253,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26254,
                  "end": 26317,
                  "left": {
                    "type": "Literal",
                    "start": 26254,
                    "end": 26298,
                    "value": "#218: -33554432 >> 6 === -524288. Actual: ",
                    "raw": "'#218: -33554432 >> 6 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26301,
                    "end": 26317,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26302,
                      "end": 26316,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26302,
                        "end": 26311,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26303,
                          "end": 26311,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26315,
                        "end": 26316,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26326,
      "end": 26456,
      "test": {
        "type": "BinaryExpression",
        "start": 26330,
        "end": 26357,
        "left": {
          "type": "BinaryExpression",
          "start": 26330,
          "end": 26344,
          "left": {
            "type": "UnaryExpression",
            "start": 26330,
            "end": 26339,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26331,
              "end": 26339,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26343,
            "end": 26344,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26349,
          "end": 26357,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26350,
            "end": 26357,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26359,
        "end": 26456,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26364,
            "end": 26453,
            "argument": {
              "type": "NewExpression",
              "start": 26370,
              "end": 26452,
              "callee": {
                "type": "Identifier",
                "start": 26374,
                "end": 26386,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26387,
                  "end": 26451,
                  "left": {
                    "type": "Literal",
                    "start": 26387,
                    "end": 26432,
                    "value": "#219: -67108864 >> 6 === -1048576. Actual: ",
                    "raw": "'#219: -67108864 >> 6 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26435,
                    "end": 26451,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26436,
                      "end": 26450,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26436,
                        "end": 26445,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26437,
                          "end": 26445,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26449,
                        "end": 26450,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26460,
      "end": 26593,
      "test": {
        "type": "BinaryExpression",
        "start": 26464,
        "end": 26492,
        "left": {
          "type": "BinaryExpression",
          "start": 26464,
          "end": 26479,
          "left": {
            "type": "UnaryExpression",
            "start": 26464,
            "end": 26474,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26465,
              "end": 26474,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26478,
            "end": 26479,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26484,
          "end": 26492,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26485,
            "end": 26492,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26494,
        "end": 26593,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26499,
            "end": 26590,
            "argument": {
              "type": "NewExpression",
              "start": 26505,
              "end": 26589,
              "callee": {
                "type": "Identifier",
                "start": 26509,
                "end": 26521,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26522,
                  "end": 26588,
                  "left": {
                    "type": "Literal",
                    "start": 26522,
                    "end": 26568,
                    "value": "#220: -134217728 >> 6 === -2097152. Actual: ",
                    "raw": "'#220: -134217728 >> 6 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26571,
                    "end": 26588,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26572,
                      "end": 26587,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26572,
                        "end": 26582,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26573,
                          "end": 26582,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26586,
                        "end": 26587,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26597,
      "end": 26730,
      "test": {
        "type": "BinaryExpression",
        "start": 26601,
        "end": 26629,
        "left": {
          "type": "BinaryExpression",
          "start": 26601,
          "end": 26616,
          "left": {
            "type": "UnaryExpression",
            "start": 26601,
            "end": 26611,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26602,
              "end": 26611,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26615,
            "end": 26616,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26621,
          "end": 26629,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26622,
            "end": 26629,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26631,
        "end": 26730,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26636,
            "end": 26727,
            "argument": {
              "type": "NewExpression",
              "start": 26642,
              "end": 26726,
              "callee": {
                "type": "Identifier",
                "start": 26646,
                "end": 26658,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26659,
                  "end": 26725,
                  "left": {
                    "type": "Literal",
                    "start": 26659,
                    "end": 26705,
                    "value": "#221: -268435456 >> 6 === -4194304. Actual: ",
                    "raw": "'#221: -268435456 >> 6 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26708,
                    "end": 26725,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26709,
                      "end": 26724,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26709,
                        "end": 26719,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26710,
                          "end": 26719,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26723,
                        "end": 26724,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26734,
      "end": 26867,
      "test": {
        "type": "BinaryExpression",
        "start": 26738,
        "end": 26766,
        "left": {
          "type": "BinaryExpression",
          "start": 26738,
          "end": 26753,
          "left": {
            "type": "UnaryExpression",
            "start": 26738,
            "end": 26748,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26739,
              "end": 26748,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26752,
            "end": 26753,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26758,
          "end": 26766,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26759,
            "end": 26766,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26768,
        "end": 26867,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26773,
            "end": 26864,
            "argument": {
              "type": "NewExpression",
              "start": 26779,
              "end": 26863,
              "callee": {
                "type": "Identifier",
                "start": 26783,
                "end": 26795,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26796,
                  "end": 26862,
                  "left": {
                    "type": "Literal",
                    "start": 26796,
                    "end": 26842,
                    "value": "#222: -536870912 >> 6 === -8388608. Actual: ",
                    "raw": "'#222: -536870912 >> 6 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26845,
                    "end": 26862,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26846,
                      "end": 26861,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26846,
                        "end": 26856,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26847,
                          "end": 26856,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26860,
                        "end": 26861,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26871,
      "end": 27009,
      "test": {
        "type": "BinaryExpression",
        "start": 26875,
        "end": 26905,
        "left": {
          "type": "BinaryExpression",
          "start": 26875,
          "end": 26891,
          "left": {
            "type": "UnaryExpression",
            "start": 26875,
            "end": 26886,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 26876,
              "end": 26886,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26890,
            "end": 26891,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 26896,
          "end": 26905,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 26897,
            "end": 26905,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26907,
        "end": 27009,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26912,
            "end": 27006,
            "argument": {
              "type": "NewExpression",
              "start": 26918,
              "end": 27005,
              "callee": {
                "type": "Identifier",
                "start": 26922,
                "end": 26934,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26935,
                  "end": 27004,
                  "left": {
                    "type": "Literal",
                    "start": 26935,
                    "end": 26983,
                    "value": "#223: -1073741824 >> 6 === -16777216. Actual: ",
                    "raw": "'#223: -1073741824 >> 6 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26986,
                    "end": 27004,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26987,
                      "end": 27003,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 26987,
                        "end": 26998,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 26988,
                          "end": 26998,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27002,
                        "end": 27003,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27013,
      "end": 27151,
      "test": {
        "type": "BinaryExpression",
        "start": 27017,
        "end": 27047,
        "left": {
          "type": "BinaryExpression",
          "start": 27017,
          "end": 27033,
          "left": {
            "type": "UnaryExpression",
            "start": 27017,
            "end": 27028,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27018,
              "end": 27028,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27032,
            "end": 27033,
            "value": 6,
            "raw": "6",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27038,
          "end": 27047,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27039,
            "end": 27047,
            "value": 33554432,
            "raw": "33554432",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27049,
        "end": 27151,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27054,
            "end": 27148,
            "argument": {
              "type": "NewExpression",
              "start": 27060,
              "end": 27147,
              "callee": {
                "type": "Identifier",
                "start": 27064,
                "end": 27076,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27077,
                  "end": 27146,
                  "left": {
                    "type": "Literal",
                    "start": 27077,
                    "end": 27125,
                    "value": "#224: -2147483648 >> 6 === -33554432. Actual: ",
                    "raw": "'#224: -2147483648 >> 6 === -33554432. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27128,
                    "end": 27146,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27129,
                      "end": 27145,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27129,
                        "end": 27140,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27130,
                          "end": 27140,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27144,
                        "end": 27145,
                        "value": 6,
                        "raw": "6",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27155,
      "end": 27252,
      "test": {
        "type": "BinaryExpression",
        "start": 27159,
        "end": 27173,
        "left": {
          "type": "BinaryExpression",
          "start": 27159,
          "end": 27166,
          "left": {
            "type": "UnaryExpression",
            "start": 27159,
            "end": 27161,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27160,
              "end": 27161,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27165,
            "end": 27166,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27171,
          "end": 27173,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27172,
            "end": 27173,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27175,
        "end": 27252,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27180,
            "end": 27249,
            "argument": {
              "type": "NewExpression",
              "start": 27186,
              "end": 27248,
              "callee": {
                "type": "Identifier",
                "start": 27190,
                "end": 27202,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27203,
                  "end": 27247,
                  "left": {
                    "type": "Literal",
                    "start": 27203,
                    "end": 27235,
                    "value": "#225: -1 >> 7 === -1. Actual: ",
                    "raw": "'#225: -1 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27238,
                    "end": 27247,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27239,
                      "end": 27246,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27239,
                        "end": 27241,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27240,
                          "end": 27241,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27245,
                        "end": 27246,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27256,
      "end": 27353,
      "test": {
        "type": "BinaryExpression",
        "start": 27260,
        "end": 27274,
        "left": {
          "type": "BinaryExpression",
          "start": 27260,
          "end": 27267,
          "left": {
            "type": "UnaryExpression",
            "start": 27260,
            "end": 27262,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27261,
              "end": 27262,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27266,
            "end": 27267,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27272,
          "end": 27274,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27273,
            "end": 27274,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27276,
        "end": 27353,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27281,
            "end": 27350,
            "argument": {
              "type": "NewExpression",
              "start": 27287,
              "end": 27349,
              "callee": {
                "type": "Identifier",
                "start": 27291,
                "end": 27303,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27304,
                  "end": 27348,
                  "left": {
                    "type": "Literal",
                    "start": 27304,
                    "end": 27336,
                    "value": "#226: -2 >> 7 === -1. Actual: ",
                    "raw": "'#226: -2 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27339,
                    "end": 27348,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27340,
                      "end": 27347,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27340,
                        "end": 27342,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27341,
                          "end": 27342,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27346,
                        "end": 27347,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27357,
      "end": 27454,
      "test": {
        "type": "BinaryExpression",
        "start": 27361,
        "end": 27375,
        "left": {
          "type": "BinaryExpression",
          "start": 27361,
          "end": 27368,
          "left": {
            "type": "UnaryExpression",
            "start": 27361,
            "end": 27363,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27362,
              "end": 27363,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27367,
            "end": 27368,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27373,
          "end": 27375,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27374,
            "end": 27375,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27377,
        "end": 27454,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27382,
            "end": 27451,
            "argument": {
              "type": "NewExpression",
              "start": 27388,
              "end": 27450,
              "callee": {
                "type": "Identifier",
                "start": 27392,
                "end": 27404,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27405,
                  "end": 27449,
                  "left": {
                    "type": "Literal",
                    "start": 27405,
                    "end": 27437,
                    "value": "#227: -4 >> 7 === -1. Actual: ",
                    "raw": "'#227: -4 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27440,
                    "end": 27449,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27441,
                      "end": 27448,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27441,
                        "end": 27443,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27442,
                          "end": 27443,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27447,
                        "end": 27448,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27458,
      "end": 27555,
      "test": {
        "type": "BinaryExpression",
        "start": 27462,
        "end": 27476,
        "left": {
          "type": "BinaryExpression",
          "start": 27462,
          "end": 27469,
          "left": {
            "type": "UnaryExpression",
            "start": 27462,
            "end": 27464,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27463,
              "end": 27464,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27468,
            "end": 27469,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27474,
          "end": 27476,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27475,
            "end": 27476,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27478,
        "end": 27555,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27483,
            "end": 27552,
            "argument": {
              "type": "NewExpression",
              "start": 27489,
              "end": 27551,
              "callee": {
                "type": "Identifier",
                "start": 27493,
                "end": 27505,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27506,
                  "end": 27550,
                  "left": {
                    "type": "Literal",
                    "start": 27506,
                    "end": 27538,
                    "value": "#228: -8 >> 7 === -1. Actual: ",
                    "raw": "'#228: -8 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27541,
                    "end": 27550,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27542,
                      "end": 27549,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27542,
                        "end": 27544,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27543,
                          "end": 27544,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27548,
                        "end": 27549,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27559,
      "end": 27659,
      "test": {
        "type": "BinaryExpression",
        "start": 27563,
        "end": 27578,
        "left": {
          "type": "BinaryExpression",
          "start": 27563,
          "end": 27571,
          "left": {
            "type": "UnaryExpression",
            "start": 27563,
            "end": 27566,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27564,
              "end": 27566,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27570,
            "end": 27571,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27576,
          "end": 27578,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27577,
            "end": 27578,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27580,
        "end": 27659,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27585,
            "end": 27656,
            "argument": {
              "type": "NewExpression",
              "start": 27591,
              "end": 27655,
              "callee": {
                "type": "Identifier",
                "start": 27595,
                "end": 27607,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27608,
                  "end": 27654,
                  "left": {
                    "type": "Literal",
                    "start": 27608,
                    "end": 27641,
                    "value": "#229: -16 >> 7 === -1. Actual: ",
                    "raw": "'#229: -16 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27644,
                    "end": 27654,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27645,
                      "end": 27653,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27645,
                        "end": 27648,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27646,
                          "end": 27648,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27652,
                        "end": 27653,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27663,
      "end": 27763,
      "test": {
        "type": "BinaryExpression",
        "start": 27667,
        "end": 27682,
        "left": {
          "type": "BinaryExpression",
          "start": 27667,
          "end": 27675,
          "left": {
            "type": "UnaryExpression",
            "start": 27667,
            "end": 27670,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27668,
              "end": 27670,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27674,
            "end": 27675,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27680,
          "end": 27682,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27681,
            "end": 27682,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27684,
        "end": 27763,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27689,
            "end": 27760,
            "argument": {
              "type": "NewExpression",
              "start": 27695,
              "end": 27759,
              "callee": {
                "type": "Identifier",
                "start": 27699,
                "end": 27711,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27712,
                  "end": 27758,
                  "left": {
                    "type": "Literal",
                    "start": 27712,
                    "end": 27745,
                    "value": "#230: -32 >> 7 === -1. Actual: ",
                    "raw": "'#230: -32 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27748,
                    "end": 27758,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27749,
                      "end": 27757,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27749,
                        "end": 27752,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27750,
                          "end": 27752,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27756,
                        "end": 27757,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27767,
      "end": 27867,
      "test": {
        "type": "BinaryExpression",
        "start": 27771,
        "end": 27786,
        "left": {
          "type": "BinaryExpression",
          "start": 27771,
          "end": 27779,
          "left": {
            "type": "UnaryExpression",
            "start": 27771,
            "end": 27774,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27772,
              "end": 27774,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27778,
            "end": 27779,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27784,
          "end": 27786,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27785,
            "end": 27786,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27788,
        "end": 27867,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27793,
            "end": 27864,
            "argument": {
              "type": "NewExpression",
              "start": 27799,
              "end": 27863,
              "callee": {
                "type": "Identifier",
                "start": 27803,
                "end": 27815,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27816,
                  "end": 27862,
                  "left": {
                    "type": "Literal",
                    "start": 27816,
                    "end": 27849,
                    "value": "#231: -64 >> 7 === -1. Actual: ",
                    "raw": "'#231: -64 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27852,
                    "end": 27862,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27853,
                      "end": 27861,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27853,
                        "end": 27856,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27854,
                          "end": 27856,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27860,
                        "end": 27861,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27871,
      "end": 27974,
      "test": {
        "type": "BinaryExpression",
        "start": 27875,
        "end": 27891,
        "left": {
          "type": "BinaryExpression",
          "start": 27875,
          "end": 27884,
          "left": {
            "type": "UnaryExpression",
            "start": 27875,
            "end": 27879,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27876,
              "end": 27879,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27883,
            "end": 27884,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27889,
          "end": 27891,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27890,
            "end": 27891,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27893,
        "end": 27974,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27898,
            "end": 27971,
            "argument": {
              "type": "NewExpression",
              "start": 27904,
              "end": 27970,
              "callee": {
                "type": "Identifier",
                "start": 27908,
                "end": 27920,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27921,
                  "end": 27969,
                  "left": {
                    "type": "Literal",
                    "start": 27921,
                    "end": 27955,
                    "value": "#232: -128 >> 7 === -1. Actual: ",
                    "raw": "'#232: -128 >> 7 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27958,
                    "end": 27969,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27959,
                      "end": 27968,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 27959,
                        "end": 27963,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 27960,
                          "end": 27963,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27967,
                        "end": 27968,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27978,
      "end": 28081,
      "test": {
        "type": "BinaryExpression",
        "start": 27982,
        "end": 27998,
        "left": {
          "type": "BinaryExpression",
          "start": 27982,
          "end": 27991,
          "left": {
            "type": "UnaryExpression",
            "start": 27982,
            "end": 27986,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 27983,
              "end": 27986,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27990,
            "end": 27991,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 27996,
          "end": 27998,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 27997,
            "end": 27998,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28000,
        "end": 28081,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28005,
            "end": 28078,
            "argument": {
              "type": "NewExpression",
              "start": 28011,
              "end": 28077,
              "callee": {
                "type": "Identifier",
                "start": 28015,
                "end": 28027,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28028,
                  "end": 28076,
                  "left": {
                    "type": "Literal",
                    "start": 28028,
                    "end": 28062,
                    "value": "#233: -256 >> 7 === -2. Actual: ",
                    "raw": "'#233: -256 >> 7 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28065,
                    "end": 28076,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28066,
                      "end": 28075,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28066,
                        "end": 28070,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28067,
                          "end": 28070,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28074,
                        "end": 28075,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28085,
      "end": 28188,
      "test": {
        "type": "BinaryExpression",
        "start": 28089,
        "end": 28105,
        "left": {
          "type": "BinaryExpression",
          "start": 28089,
          "end": 28098,
          "left": {
            "type": "UnaryExpression",
            "start": 28089,
            "end": 28093,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28090,
              "end": 28093,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28097,
            "end": 28098,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28103,
          "end": 28105,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28104,
            "end": 28105,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28107,
        "end": 28188,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28112,
            "end": 28185,
            "argument": {
              "type": "NewExpression",
              "start": 28118,
              "end": 28184,
              "callee": {
                "type": "Identifier",
                "start": 28122,
                "end": 28134,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28135,
                  "end": 28183,
                  "left": {
                    "type": "Literal",
                    "start": 28135,
                    "end": 28169,
                    "value": "#234: -512 >> 7 === -4. Actual: ",
                    "raw": "'#234: -512 >> 7 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28172,
                    "end": 28183,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28173,
                      "end": 28182,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28173,
                        "end": 28177,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28174,
                          "end": 28177,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28181,
                        "end": 28182,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28192,
      "end": 28298,
      "test": {
        "type": "BinaryExpression",
        "start": 28196,
        "end": 28213,
        "left": {
          "type": "BinaryExpression",
          "start": 28196,
          "end": 28206,
          "left": {
            "type": "UnaryExpression",
            "start": 28196,
            "end": 28201,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28197,
              "end": 28201,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28205,
            "end": 28206,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28211,
          "end": 28213,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28212,
            "end": 28213,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28215,
        "end": 28298,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28220,
            "end": 28295,
            "argument": {
              "type": "NewExpression",
              "start": 28226,
              "end": 28294,
              "callee": {
                "type": "Identifier",
                "start": 28230,
                "end": 28242,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28243,
                  "end": 28293,
                  "left": {
                    "type": "Literal",
                    "start": 28243,
                    "end": 28278,
                    "value": "#235: -1024 >> 7 === -8. Actual: ",
                    "raw": "'#235: -1024 >> 7 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28281,
                    "end": 28293,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28282,
                      "end": 28292,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28282,
                        "end": 28287,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28283,
                          "end": 28287,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28291,
                        "end": 28292,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28302,
      "end": 28410,
      "test": {
        "type": "BinaryExpression",
        "start": 28306,
        "end": 28324,
        "left": {
          "type": "BinaryExpression",
          "start": 28306,
          "end": 28316,
          "left": {
            "type": "UnaryExpression",
            "start": 28306,
            "end": 28311,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28307,
              "end": 28311,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28315,
            "end": 28316,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28321,
          "end": 28324,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28322,
            "end": 28324,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28326,
        "end": 28410,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28331,
            "end": 28407,
            "argument": {
              "type": "NewExpression",
              "start": 28337,
              "end": 28406,
              "callee": {
                "type": "Identifier",
                "start": 28341,
                "end": 28353,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28354,
                  "end": 28405,
                  "left": {
                    "type": "Literal",
                    "start": 28354,
                    "end": 28390,
                    "value": "#236: -2048 >> 7 === -16. Actual: ",
                    "raw": "'#236: -2048 >> 7 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28393,
                    "end": 28405,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28394,
                      "end": 28404,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28394,
                        "end": 28399,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28395,
                          "end": 28399,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28403,
                        "end": 28404,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28414,
      "end": 28522,
      "test": {
        "type": "BinaryExpression",
        "start": 28418,
        "end": 28436,
        "left": {
          "type": "BinaryExpression",
          "start": 28418,
          "end": 28428,
          "left": {
            "type": "UnaryExpression",
            "start": 28418,
            "end": 28423,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28419,
              "end": 28423,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28427,
            "end": 28428,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28433,
          "end": 28436,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28434,
            "end": 28436,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28438,
        "end": 28522,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28443,
            "end": 28519,
            "argument": {
              "type": "NewExpression",
              "start": 28449,
              "end": 28518,
              "callee": {
                "type": "Identifier",
                "start": 28453,
                "end": 28465,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28466,
                  "end": 28517,
                  "left": {
                    "type": "Literal",
                    "start": 28466,
                    "end": 28502,
                    "value": "#237: -4096 >> 7 === -32. Actual: ",
                    "raw": "'#237: -4096 >> 7 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28505,
                    "end": 28517,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28506,
                      "end": 28516,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28506,
                        "end": 28511,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28507,
                          "end": 28511,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28515,
                        "end": 28516,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28526,
      "end": 28634,
      "test": {
        "type": "BinaryExpression",
        "start": 28530,
        "end": 28548,
        "left": {
          "type": "BinaryExpression",
          "start": 28530,
          "end": 28540,
          "left": {
            "type": "UnaryExpression",
            "start": 28530,
            "end": 28535,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28531,
              "end": 28535,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28539,
            "end": 28540,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28545,
          "end": 28548,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28546,
            "end": 28548,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28550,
        "end": 28634,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28555,
            "end": 28631,
            "argument": {
              "type": "NewExpression",
              "start": 28561,
              "end": 28630,
              "callee": {
                "type": "Identifier",
                "start": 28565,
                "end": 28577,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28578,
                  "end": 28629,
                  "left": {
                    "type": "Literal",
                    "start": 28578,
                    "end": 28614,
                    "value": "#238: -8192 >> 7 === -64. Actual: ",
                    "raw": "'#238: -8192 >> 7 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28617,
                    "end": 28629,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28618,
                      "end": 28628,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28618,
                        "end": 28623,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28619,
                          "end": 28623,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28627,
                        "end": 28628,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28638,
      "end": 28751,
      "test": {
        "type": "BinaryExpression",
        "start": 28642,
        "end": 28662,
        "left": {
          "type": "BinaryExpression",
          "start": 28642,
          "end": 28653,
          "left": {
            "type": "UnaryExpression",
            "start": 28642,
            "end": 28648,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28643,
              "end": 28648,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28652,
            "end": 28653,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28658,
          "end": 28662,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28659,
            "end": 28662,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28664,
        "end": 28751,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28669,
            "end": 28748,
            "argument": {
              "type": "NewExpression",
              "start": 28675,
              "end": 28747,
              "callee": {
                "type": "Identifier",
                "start": 28679,
                "end": 28691,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28692,
                  "end": 28746,
                  "left": {
                    "type": "Literal",
                    "start": 28692,
                    "end": 28730,
                    "value": "#239: -16384 >> 7 === -128. Actual: ",
                    "raw": "'#239: -16384 >> 7 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28733,
                    "end": 28746,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28734,
                      "end": 28745,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28734,
                        "end": 28740,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28735,
                          "end": 28740,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28744,
                        "end": 28745,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28755,
      "end": 28868,
      "test": {
        "type": "BinaryExpression",
        "start": 28759,
        "end": 28779,
        "left": {
          "type": "BinaryExpression",
          "start": 28759,
          "end": 28770,
          "left": {
            "type": "UnaryExpression",
            "start": 28759,
            "end": 28765,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28760,
              "end": 28765,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28769,
            "end": 28770,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28775,
          "end": 28779,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28776,
            "end": 28779,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28781,
        "end": 28868,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28786,
            "end": 28865,
            "argument": {
              "type": "NewExpression",
              "start": 28792,
              "end": 28864,
              "callee": {
                "type": "Identifier",
                "start": 28796,
                "end": 28808,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28809,
                  "end": 28863,
                  "left": {
                    "type": "Literal",
                    "start": 28809,
                    "end": 28847,
                    "value": "#240: -32768 >> 7 === -256. Actual: ",
                    "raw": "'#240: -32768 >> 7 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28850,
                    "end": 28863,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28851,
                      "end": 28862,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28851,
                        "end": 28857,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28852,
                          "end": 28857,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28861,
                        "end": 28862,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28872,
      "end": 28985,
      "test": {
        "type": "BinaryExpression",
        "start": 28876,
        "end": 28896,
        "left": {
          "type": "BinaryExpression",
          "start": 28876,
          "end": 28887,
          "left": {
            "type": "UnaryExpression",
            "start": 28876,
            "end": 28882,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28877,
              "end": 28882,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28886,
            "end": 28887,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 28892,
          "end": 28896,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 28893,
            "end": 28896,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28898,
        "end": 28985,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28903,
            "end": 28982,
            "argument": {
              "type": "NewExpression",
              "start": 28909,
              "end": 28981,
              "callee": {
                "type": "Identifier",
                "start": 28913,
                "end": 28925,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28926,
                  "end": 28980,
                  "left": {
                    "type": "Literal",
                    "start": 28926,
                    "end": 28964,
                    "value": "#241: -65536 >> 7 === -512. Actual: ",
                    "raw": "'#241: -65536 >> 7 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28967,
                    "end": 28980,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28968,
                      "end": 28979,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 28968,
                        "end": 28974,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 28969,
                          "end": 28974,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28978,
                        "end": 28979,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28989,
      "end": 29107,
      "test": {
        "type": "BinaryExpression",
        "start": 28993,
        "end": 29015,
        "left": {
          "type": "BinaryExpression",
          "start": 28993,
          "end": 29005,
          "left": {
            "type": "UnaryExpression",
            "start": 28993,
            "end": 29000,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 28994,
              "end": 29000,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29004,
            "end": 29005,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29010,
          "end": 29015,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29011,
            "end": 29015,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29017,
        "end": 29107,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29022,
            "end": 29104,
            "argument": {
              "type": "NewExpression",
              "start": 29028,
              "end": 29103,
              "callee": {
                "type": "Identifier",
                "start": 29032,
                "end": 29044,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29045,
                  "end": 29102,
                  "left": {
                    "type": "Literal",
                    "start": 29045,
                    "end": 29085,
                    "value": "#242: -131072 >> 7 === -1024. Actual: ",
                    "raw": "'#242: -131072 >> 7 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29088,
                    "end": 29102,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29089,
                      "end": 29101,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29089,
                        "end": 29096,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29090,
                          "end": 29096,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29100,
                        "end": 29101,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29111,
      "end": 29229,
      "test": {
        "type": "BinaryExpression",
        "start": 29115,
        "end": 29137,
        "left": {
          "type": "BinaryExpression",
          "start": 29115,
          "end": 29127,
          "left": {
            "type": "UnaryExpression",
            "start": 29115,
            "end": 29122,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29116,
              "end": 29122,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29126,
            "end": 29127,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29132,
          "end": 29137,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29133,
            "end": 29137,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29139,
        "end": 29229,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29144,
            "end": 29226,
            "argument": {
              "type": "NewExpression",
              "start": 29150,
              "end": 29225,
              "callee": {
                "type": "Identifier",
                "start": 29154,
                "end": 29166,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29167,
                  "end": 29224,
                  "left": {
                    "type": "Literal",
                    "start": 29167,
                    "end": 29207,
                    "value": "#243: -262144 >> 7 === -2048. Actual: ",
                    "raw": "'#243: -262144 >> 7 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29210,
                    "end": 29224,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29211,
                      "end": 29223,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29211,
                        "end": 29218,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29212,
                          "end": 29218,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29222,
                        "end": 29223,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29233,
      "end": 29351,
      "test": {
        "type": "BinaryExpression",
        "start": 29237,
        "end": 29259,
        "left": {
          "type": "BinaryExpression",
          "start": 29237,
          "end": 29249,
          "left": {
            "type": "UnaryExpression",
            "start": 29237,
            "end": 29244,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29238,
              "end": 29244,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29248,
            "end": 29249,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29254,
          "end": 29259,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29255,
            "end": 29259,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29261,
        "end": 29351,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29266,
            "end": 29348,
            "argument": {
              "type": "NewExpression",
              "start": 29272,
              "end": 29347,
              "callee": {
                "type": "Identifier",
                "start": 29276,
                "end": 29288,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29289,
                  "end": 29346,
                  "left": {
                    "type": "Literal",
                    "start": 29289,
                    "end": 29329,
                    "value": "#244: -524288 >> 7 === -4096. Actual: ",
                    "raw": "'#244: -524288 >> 7 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29332,
                    "end": 29346,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29333,
                      "end": 29345,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29333,
                        "end": 29340,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29334,
                          "end": 29340,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29344,
                        "end": 29345,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29355,
      "end": 29476,
      "test": {
        "type": "BinaryExpression",
        "start": 29359,
        "end": 29382,
        "left": {
          "type": "BinaryExpression",
          "start": 29359,
          "end": 29372,
          "left": {
            "type": "UnaryExpression",
            "start": 29359,
            "end": 29367,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29360,
              "end": 29367,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29371,
            "end": 29372,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29377,
          "end": 29382,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29378,
            "end": 29382,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29384,
        "end": 29476,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29389,
            "end": 29473,
            "argument": {
              "type": "NewExpression",
              "start": 29395,
              "end": 29472,
              "callee": {
                "type": "Identifier",
                "start": 29399,
                "end": 29411,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29412,
                  "end": 29471,
                  "left": {
                    "type": "Literal",
                    "start": 29412,
                    "end": 29453,
                    "value": "#245: -1048576 >> 7 === -8192. Actual: ",
                    "raw": "'#245: -1048576 >> 7 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29456,
                    "end": 29471,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29457,
                      "end": 29470,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29457,
                        "end": 29465,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29458,
                          "end": 29465,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29469,
                        "end": 29470,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29480,
      "end": 29603,
      "test": {
        "type": "BinaryExpression",
        "start": 29484,
        "end": 29508,
        "left": {
          "type": "BinaryExpression",
          "start": 29484,
          "end": 29497,
          "left": {
            "type": "UnaryExpression",
            "start": 29484,
            "end": 29492,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29485,
              "end": 29492,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29496,
            "end": 29497,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29502,
          "end": 29508,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29503,
            "end": 29508,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29510,
        "end": 29603,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29515,
            "end": 29600,
            "argument": {
              "type": "NewExpression",
              "start": 29521,
              "end": 29599,
              "callee": {
                "type": "Identifier",
                "start": 29525,
                "end": 29537,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29538,
                  "end": 29598,
                  "left": {
                    "type": "Literal",
                    "start": 29538,
                    "end": 29580,
                    "value": "#246: -2097152 >> 7 === -16384. Actual: ",
                    "raw": "'#246: -2097152 >> 7 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29583,
                    "end": 29598,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29584,
                      "end": 29597,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29584,
                        "end": 29592,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29585,
                          "end": 29592,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29596,
                        "end": 29597,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29607,
      "end": 29730,
      "test": {
        "type": "BinaryExpression",
        "start": 29611,
        "end": 29635,
        "left": {
          "type": "BinaryExpression",
          "start": 29611,
          "end": 29624,
          "left": {
            "type": "UnaryExpression",
            "start": 29611,
            "end": 29619,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29612,
              "end": 29619,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29623,
            "end": 29624,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29629,
          "end": 29635,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29630,
            "end": 29635,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29637,
        "end": 29730,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29642,
            "end": 29727,
            "argument": {
              "type": "NewExpression",
              "start": 29648,
              "end": 29726,
              "callee": {
                "type": "Identifier",
                "start": 29652,
                "end": 29664,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29665,
                  "end": 29725,
                  "left": {
                    "type": "Literal",
                    "start": 29665,
                    "end": 29707,
                    "value": "#247: -4194304 >> 7 === -32768. Actual: ",
                    "raw": "'#247: -4194304 >> 7 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29710,
                    "end": 29725,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29711,
                      "end": 29724,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29711,
                        "end": 29719,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29712,
                          "end": 29719,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29723,
                        "end": 29724,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29734,
      "end": 29857,
      "test": {
        "type": "BinaryExpression",
        "start": 29738,
        "end": 29762,
        "left": {
          "type": "BinaryExpression",
          "start": 29738,
          "end": 29751,
          "left": {
            "type": "UnaryExpression",
            "start": 29738,
            "end": 29746,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29739,
              "end": 29746,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29750,
            "end": 29751,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29756,
          "end": 29762,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29757,
            "end": 29762,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29764,
        "end": 29857,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29769,
            "end": 29854,
            "argument": {
              "type": "NewExpression",
              "start": 29775,
              "end": 29853,
              "callee": {
                "type": "Identifier",
                "start": 29779,
                "end": 29791,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29792,
                  "end": 29852,
                  "left": {
                    "type": "Literal",
                    "start": 29792,
                    "end": 29834,
                    "value": "#248: -8388608 >> 7 === -65536. Actual: ",
                    "raw": "'#248: -8388608 >> 7 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29837,
                    "end": 29852,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29838,
                      "end": 29851,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29838,
                        "end": 29846,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29839,
                          "end": 29846,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29850,
                        "end": 29851,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29861,
      "end": 29989,
      "test": {
        "type": "BinaryExpression",
        "start": 29865,
        "end": 29891,
        "left": {
          "type": "BinaryExpression",
          "start": 29865,
          "end": 29879,
          "left": {
            "type": "UnaryExpression",
            "start": 29865,
            "end": 29874,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29866,
              "end": 29874,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29878,
            "end": 29879,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 29884,
          "end": 29891,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 29885,
            "end": 29891,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29893,
        "end": 29989,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29898,
            "end": 29986,
            "argument": {
              "type": "NewExpression",
              "start": 29904,
              "end": 29985,
              "callee": {
                "type": "Identifier",
                "start": 29908,
                "end": 29920,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29921,
                  "end": 29984,
                  "left": {
                    "type": "Literal",
                    "start": 29921,
                    "end": 29965,
                    "value": "#249: -16777216 >> 7 === -131072. Actual: ",
                    "raw": "'#249: -16777216 >> 7 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29968,
                    "end": 29984,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29969,
                      "end": 29983,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 29969,
                        "end": 29978,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 29970,
                          "end": 29978,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29982,
                        "end": 29983,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29993,
      "end": 30121,
      "test": {
        "type": "BinaryExpression",
        "start": 29997,
        "end": 30023,
        "left": {
          "type": "BinaryExpression",
          "start": 29997,
          "end": 30011,
          "left": {
            "type": "UnaryExpression",
            "start": 29997,
            "end": 30006,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 29998,
              "end": 30006,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30010,
            "end": 30011,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30016,
          "end": 30023,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30017,
            "end": 30023,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30025,
        "end": 30121,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30030,
            "end": 30118,
            "argument": {
              "type": "NewExpression",
              "start": 30036,
              "end": 30117,
              "callee": {
                "type": "Identifier",
                "start": 30040,
                "end": 30052,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30053,
                  "end": 30116,
                  "left": {
                    "type": "Literal",
                    "start": 30053,
                    "end": 30097,
                    "value": "#250: -33554432 >> 7 === -262144. Actual: ",
                    "raw": "'#250: -33554432 >> 7 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30100,
                    "end": 30116,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30101,
                      "end": 30115,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30101,
                        "end": 30110,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30102,
                          "end": 30110,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30114,
                        "end": 30115,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30125,
      "end": 30253,
      "test": {
        "type": "BinaryExpression",
        "start": 30129,
        "end": 30155,
        "left": {
          "type": "BinaryExpression",
          "start": 30129,
          "end": 30143,
          "left": {
            "type": "UnaryExpression",
            "start": 30129,
            "end": 30138,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30130,
              "end": 30138,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30142,
            "end": 30143,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30148,
          "end": 30155,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30149,
            "end": 30155,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30157,
        "end": 30253,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30162,
            "end": 30250,
            "argument": {
              "type": "NewExpression",
              "start": 30168,
              "end": 30249,
              "callee": {
                "type": "Identifier",
                "start": 30172,
                "end": 30184,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30185,
                  "end": 30248,
                  "left": {
                    "type": "Literal",
                    "start": 30185,
                    "end": 30229,
                    "value": "#251: -67108864 >> 7 === -524288. Actual: ",
                    "raw": "'#251: -67108864 >> 7 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30232,
                    "end": 30248,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30233,
                      "end": 30247,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30233,
                        "end": 30242,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30234,
                          "end": 30242,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30246,
                        "end": 30247,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30257,
      "end": 30390,
      "test": {
        "type": "BinaryExpression",
        "start": 30261,
        "end": 30289,
        "left": {
          "type": "BinaryExpression",
          "start": 30261,
          "end": 30276,
          "left": {
            "type": "UnaryExpression",
            "start": 30261,
            "end": 30271,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30262,
              "end": 30271,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30275,
            "end": 30276,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30281,
          "end": 30289,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30282,
            "end": 30289,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30291,
        "end": 30390,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30296,
            "end": 30387,
            "argument": {
              "type": "NewExpression",
              "start": 30302,
              "end": 30386,
              "callee": {
                "type": "Identifier",
                "start": 30306,
                "end": 30318,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30319,
                  "end": 30385,
                  "left": {
                    "type": "Literal",
                    "start": 30319,
                    "end": 30365,
                    "value": "#252: -134217728 >> 7 === -1048576. Actual: ",
                    "raw": "'#252: -134217728 >> 7 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30368,
                    "end": 30385,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30369,
                      "end": 30384,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30369,
                        "end": 30379,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30370,
                          "end": 30379,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30383,
                        "end": 30384,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30394,
      "end": 30527,
      "test": {
        "type": "BinaryExpression",
        "start": 30398,
        "end": 30426,
        "left": {
          "type": "BinaryExpression",
          "start": 30398,
          "end": 30413,
          "left": {
            "type": "UnaryExpression",
            "start": 30398,
            "end": 30408,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30399,
              "end": 30408,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30412,
            "end": 30413,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30418,
          "end": 30426,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30419,
            "end": 30426,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30428,
        "end": 30527,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30433,
            "end": 30524,
            "argument": {
              "type": "NewExpression",
              "start": 30439,
              "end": 30523,
              "callee": {
                "type": "Identifier",
                "start": 30443,
                "end": 30455,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30456,
                  "end": 30522,
                  "left": {
                    "type": "Literal",
                    "start": 30456,
                    "end": 30502,
                    "value": "#253: -268435456 >> 7 === -2097152. Actual: ",
                    "raw": "'#253: -268435456 >> 7 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30505,
                    "end": 30522,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30506,
                      "end": 30521,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30506,
                        "end": 30516,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30507,
                          "end": 30516,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30520,
                        "end": 30521,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30531,
      "end": 30664,
      "test": {
        "type": "BinaryExpression",
        "start": 30535,
        "end": 30563,
        "left": {
          "type": "BinaryExpression",
          "start": 30535,
          "end": 30550,
          "left": {
            "type": "UnaryExpression",
            "start": 30535,
            "end": 30545,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30536,
              "end": 30545,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30549,
            "end": 30550,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30555,
          "end": 30563,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30556,
            "end": 30563,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30565,
        "end": 30664,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30570,
            "end": 30661,
            "argument": {
              "type": "NewExpression",
              "start": 30576,
              "end": 30660,
              "callee": {
                "type": "Identifier",
                "start": 30580,
                "end": 30592,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30593,
                  "end": 30659,
                  "left": {
                    "type": "Literal",
                    "start": 30593,
                    "end": 30639,
                    "value": "#254: -536870912 >> 7 === -4194304. Actual: ",
                    "raw": "'#254: -536870912 >> 7 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30642,
                    "end": 30659,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30643,
                      "end": 30658,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30643,
                        "end": 30653,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30644,
                          "end": 30653,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30657,
                        "end": 30658,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30668,
      "end": 30804,
      "test": {
        "type": "BinaryExpression",
        "start": 30672,
        "end": 30701,
        "left": {
          "type": "BinaryExpression",
          "start": 30672,
          "end": 30688,
          "left": {
            "type": "UnaryExpression",
            "start": 30672,
            "end": 30683,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30673,
              "end": 30683,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30687,
            "end": 30688,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30693,
          "end": 30701,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30694,
            "end": 30701,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30703,
        "end": 30804,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30708,
            "end": 30801,
            "argument": {
              "type": "NewExpression",
              "start": 30714,
              "end": 30800,
              "callee": {
                "type": "Identifier",
                "start": 30718,
                "end": 30730,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30731,
                  "end": 30799,
                  "left": {
                    "type": "Literal",
                    "start": 30731,
                    "end": 30778,
                    "value": "#255: -1073741824 >> 7 === -8388608. Actual: ",
                    "raw": "'#255: -1073741824 >> 7 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30781,
                    "end": 30799,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30782,
                      "end": 30798,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30782,
                        "end": 30793,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30783,
                          "end": 30793,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30797,
                        "end": 30798,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30808,
      "end": 30946,
      "test": {
        "type": "BinaryExpression",
        "start": 30812,
        "end": 30842,
        "left": {
          "type": "BinaryExpression",
          "start": 30812,
          "end": 30828,
          "left": {
            "type": "UnaryExpression",
            "start": 30812,
            "end": 30823,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30813,
              "end": 30823,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30827,
            "end": 30828,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30833,
          "end": 30842,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30834,
            "end": 30842,
            "value": 16777216,
            "raw": "16777216",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30844,
        "end": 30946,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30849,
            "end": 30943,
            "argument": {
              "type": "NewExpression",
              "start": 30855,
              "end": 30942,
              "callee": {
                "type": "Identifier",
                "start": 30859,
                "end": 30871,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30872,
                  "end": 30941,
                  "left": {
                    "type": "Literal",
                    "start": 30872,
                    "end": 30920,
                    "value": "#256: -2147483648 >> 7 === -16777216. Actual: ",
                    "raw": "'#256: -2147483648 >> 7 === -16777216. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30923,
                    "end": 30941,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30924,
                      "end": 30940,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 30924,
                        "end": 30935,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 30925,
                          "end": 30935,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30939,
                        "end": 30940,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30950,
      "end": 31047,
      "test": {
        "type": "BinaryExpression",
        "start": 30954,
        "end": 30968,
        "left": {
          "type": "BinaryExpression",
          "start": 30954,
          "end": 30961,
          "left": {
            "type": "UnaryExpression",
            "start": 30954,
            "end": 30956,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 30955,
              "end": 30956,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30960,
            "end": 30961,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 30966,
          "end": 30968,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 30967,
            "end": 30968,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30970,
        "end": 31047,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30975,
            "end": 31044,
            "argument": {
              "type": "NewExpression",
              "start": 30981,
              "end": 31043,
              "callee": {
                "type": "Identifier",
                "start": 30985,
                "end": 30997,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30998,
                  "end": 31042,
                  "left": {
                    "type": "Literal",
                    "start": 30998,
                    "end": 31030,
                    "value": "#257: -1 >> 8 === -1. Actual: ",
                    "raw": "'#257: -1 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31033,
                    "end": 31042,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31034,
                      "end": 31041,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31034,
                        "end": 31036,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31035,
                          "end": 31036,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31040,
                        "end": 31041,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31051,
      "end": 31148,
      "test": {
        "type": "BinaryExpression",
        "start": 31055,
        "end": 31069,
        "left": {
          "type": "BinaryExpression",
          "start": 31055,
          "end": 31062,
          "left": {
            "type": "UnaryExpression",
            "start": 31055,
            "end": 31057,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31056,
              "end": 31057,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31061,
            "end": 31062,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31067,
          "end": 31069,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31068,
            "end": 31069,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31071,
        "end": 31148,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31076,
            "end": 31145,
            "argument": {
              "type": "NewExpression",
              "start": 31082,
              "end": 31144,
              "callee": {
                "type": "Identifier",
                "start": 31086,
                "end": 31098,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31099,
                  "end": 31143,
                  "left": {
                    "type": "Literal",
                    "start": 31099,
                    "end": 31131,
                    "value": "#258: -2 >> 8 === -1. Actual: ",
                    "raw": "'#258: -2 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31134,
                    "end": 31143,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31135,
                      "end": 31142,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31135,
                        "end": 31137,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31136,
                          "end": 31137,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31141,
                        "end": 31142,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31152,
      "end": 31249,
      "test": {
        "type": "BinaryExpression",
        "start": 31156,
        "end": 31170,
        "left": {
          "type": "BinaryExpression",
          "start": 31156,
          "end": 31163,
          "left": {
            "type": "UnaryExpression",
            "start": 31156,
            "end": 31158,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31157,
              "end": 31158,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31162,
            "end": 31163,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31168,
          "end": 31170,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31169,
            "end": 31170,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31172,
        "end": 31249,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31177,
            "end": 31246,
            "argument": {
              "type": "NewExpression",
              "start": 31183,
              "end": 31245,
              "callee": {
                "type": "Identifier",
                "start": 31187,
                "end": 31199,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31200,
                  "end": 31244,
                  "left": {
                    "type": "Literal",
                    "start": 31200,
                    "end": 31232,
                    "value": "#259: -4 >> 8 === -1. Actual: ",
                    "raw": "'#259: -4 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31235,
                    "end": 31244,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31236,
                      "end": 31243,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31236,
                        "end": 31238,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31237,
                          "end": 31238,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31242,
                        "end": 31243,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31253,
      "end": 31350,
      "test": {
        "type": "BinaryExpression",
        "start": 31257,
        "end": 31271,
        "left": {
          "type": "BinaryExpression",
          "start": 31257,
          "end": 31264,
          "left": {
            "type": "UnaryExpression",
            "start": 31257,
            "end": 31259,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31258,
              "end": 31259,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31263,
            "end": 31264,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31269,
          "end": 31271,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31270,
            "end": 31271,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31273,
        "end": 31350,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31278,
            "end": 31347,
            "argument": {
              "type": "NewExpression",
              "start": 31284,
              "end": 31346,
              "callee": {
                "type": "Identifier",
                "start": 31288,
                "end": 31300,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31301,
                  "end": 31345,
                  "left": {
                    "type": "Literal",
                    "start": 31301,
                    "end": 31333,
                    "value": "#260: -8 >> 8 === -1. Actual: ",
                    "raw": "'#260: -8 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31336,
                    "end": 31345,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31337,
                      "end": 31344,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31337,
                        "end": 31339,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31338,
                          "end": 31339,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31343,
                        "end": 31344,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31354,
      "end": 31454,
      "test": {
        "type": "BinaryExpression",
        "start": 31358,
        "end": 31373,
        "left": {
          "type": "BinaryExpression",
          "start": 31358,
          "end": 31366,
          "left": {
            "type": "UnaryExpression",
            "start": 31358,
            "end": 31361,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31359,
              "end": 31361,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31365,
            "end": 31366,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31371,
          "end": 31373,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31372,
            "end": 31373,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31375,
        "end": 31454,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31380,
            "end": 31451,
            "argument": {
              "type": "NewExpression",
              "start": 31386,
              "end": 31450,
              "callee": {
                "type": "Identifier",
                "start": 31390,
                "end": 31402,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31403,
                  "end": 31449,
                  "left": {
                    "type": "Literal",
                    "start": 31403,
                    "end": 31436,
                    "value": "#261: -16 >> 8 === -1. Actual: ",
                    "raw": "'#261: -16 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31439,
                    "end": 31449,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31440,
                      "end": 31448,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31440,
                        "end": 31443,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31441,
                          "end": 31443,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31447,
                        "end": 31448,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31458,
      "end": 31558,
      "test": {
        "type": "BinaryExpression",
        "start": 31462,
        "end": 31477,
        "left": {
          "type": "BinaryExpression",
          "start": 31462,
          "end": 31470,
          "left": {
            "type": "UnaryExpression",
            "start": 31462,
            "end": 31465,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31463,
              "end": 31465,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31469,
            "end": 31470,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31475,
          "end": 31477,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31476,
            "end": 31477,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31479,
        "end": 31558,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31484,
            "end": 31555,
            "argument": {
              "type": "NewExpression",
              "start": 31490,
              "end": 31554,
              "callee": {
                "type": "Identifier",
                "start": 31494,
                "end": 31506,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31507,
                  "end": 31553,
                  "left": {
                    "type": "Literal",
                    "start": 31507,
                    "end": 31540,
                    "value": "#262: -32 >> 8 === -1. Actual: ",
                    "raw": "'#262: -32 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31543,
                    "end": 31553,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31544,
                      "end": 31552,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31544,
                        "end": 31547,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31545,
                          "end": 31547,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31551,
                        "end": 31552,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31562,
      "end": 31662,
      "test": {
        "type": "BinaryExpression",
        "start": 31566,
        "end": 31581,
        "left": {
          "type": "BinaryExpression",
          "start": 31566,
          "end": 31574,
          "left": {
            "type": "UnaryExpression",
            "start": 31566,
            "end": 31569,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31567,
              "end": 31569,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31573,
            "end": 31574,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31579,
          "end": 31581,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31580,
            "end": 31581,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31583,
        "end": 31662,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31588,
            "end": 31659,
            "argument": {
              "type": "NewExpression",
              "start": 31594,
              "end": 31658,
              "callee": {
                "type": "Identifier",
                "start": 31598,
                "end": 31610,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31611,
                  "end": 31657,
                  "left": {
                    "type": "Literal",
                    "start": 31611,
                    "end": 31644,
                    "value": "#263: -64 >> 8 === -1. Actual: ",
                    "raw": "'#263: -64 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31647,
                    "end": 31657,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31648,
                      "end": 31656,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31648,
                        "end": 31651,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31649,
                          "end": 31651,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31655,
                        "end": 31656,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31666,
      "end": 31769,
      "test": {
        "type": "BinaryExpression",
        "start": 31670,
        "end": 31686,
        "left": {
          "type": "BinaryExpression",
          "start": 31670,
          "end": 31679,
          "left": {
            "type": "UnaryExpression",
            "start": 31670,
            "end": 31674,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31671,
              "end": 31674,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31678,
            "end": 31679,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31684,
          "end": 31686,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31685,
            "end": 31686,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31688,
        "end": 31769,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31693,
            "end": 31766,
            "argument": {
              "type": "NewExpression",
              "start": 31699,
              "end": 31765,
              "callee": {
                "type": "Identifier",
                "start": 31703,
                "end": 31715,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31716,
                  "end": 31764,
                  "left": {
                    "type": "Literal",
                    "start": 31716,
                    "end": 31750,
                    "value": "#264: -128 >> 8 === -1. Actual: ",
                    "raw": "'#264: -128 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31753,
                    "end": 31764,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31754,
                      "end": 31763,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31754,
                        "end": 31758,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31755,
                          "end": 31758,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31762,
                        "end": 31763,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31773,
      "end": 31876,
      "test": {
        "type": "BinaryExpression",
        "start": 31777,
        "end": 31793,
        "left": {
          "type": "BinaryExpression",
          "start": 31777,
          "end": 31786,
          "left": {
            "type": "UnaryExpression",
            "start": 31777,
            "end": 31781,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31778,
              "end": 31781,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31785,
            "end": 31786,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31791,
          "end": 31793,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31792,
            "end": 31793,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31795,
        "end": 31876,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31800,
            "end": 31873,
            "argument": {
              "type": "NewExpression",
              "start": 31806,
              "end": 31872,
              "callee": {
                "type": "Identifier",
                "start": 31810,
                "end": 31822,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31823,
                  "end": 31871,
                  "left": {
                    "type": "Literal",
                    "start": 31823,
                    "end": 31857,
                    "value": "#265: -256 >> 8 === -1. Actual: ",
                    "raw": "'#265: -256 >> 8 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31860,
                    "end": 31871,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31861,
                      "end": 31870,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31861,
                        "end": 31865,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31862,
                          "end": 31865,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31869,
                        "end": 31870,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31880,
      "end": 31983,
      "test": {
        "type": "BinaryExpression",
        "start": 31884,
        "end": 31900,
        "left": {
          "type": "BinaryExpression",
          "start": 31884,
          "end": 31893,
          "left": {
            "type": "UnaryExpression",
            "start": 31884,
            "end": 31888,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31885,
              "end": 31888,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31892,
            "end": 31893,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 31898,
          "end": 31900,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 31899,
            "end": 31900,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31902,
        "end": 31983,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31907,
            "end": 31980,
            "argument": {
              "type": "NewExpression",
              "start": 31913,
              "end": 31979,
              "callee": {
                "type": "Identifier",
                "start": 31917,
                "end": 31929,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31930,
                  "end": 31978,
                  "left": {
                    "type": "Literal",
                    "start": 31930,
                    "end": 31964,
                    "value": "#266: -512 >> 8 === -2. Actual: ",
                    "raw": "'#266: -512 >> 8 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31967,
                    "end": 31978,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31968,
                      "end": 31977,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 31968,
                        "end": 31972,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 31969,
                          "end": 31972,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31976,
                        "end": 31977,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31987,
      "end": 32093,
      "test": {
        "type": "BinaryExpression",
        "start": 31991,
        "end": 32008,
        "left": {
          "type": "BinaryExpression",
          "start": 31991,
          "end": 32001,
          "left": {
            "type": "UnaryExpression",
            "start": 31991,
            "end": 31996,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 31992,
              "end": 31996,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32000,
            "end": 32001,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32006,
          "end": 32008,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32007,
            "end": 32008,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32010,
        "end": 32093,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32015,
            "end": 32090,
            "argument": {
              "type": "NewExpression",
              "start": 32021,
              "end": 32089,
              "callee": {
                "type": "Identifier",
                "start": 32025,
                "end": 32037,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32038,
                  "end": 32088,
                  "left": {
                    "type": "Literal",
                    "start": 32038,
                    "end": 32073,
                    "value": "#267: -1024 >> 8 === -4. Actual: ",
                    "raw": "'#267: -1024 >> 8 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32076,
                    "end": 32088,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32077,
                      "end": 32087,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32077,
                        "end": 32082,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32078,
                          "end": 32082,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32086,
                        "end": 32087,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32097,
      "end": 32203,
      "test": {
        "type": "BinaryExpression",
        "start": 32101,
        "end": 32118,
        "left": {
          "type": "BinaryExpression",
          "start": 32101,
          "end": 32111,
          "left": {
            "type": "UnaryExpression",
            "start": 32101,
            "end": 32106,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32102,
              "end": 32106,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32110,
            "end": 32111,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32116,
          "end": 32118,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32117,
            "end": 32118,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32120,
        "end": 32203,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32125,
            "end": 32200,
            "argument": {
              "type": "NewExpression",
              "start": 32131,
              "end": 32199,
              "callee": {
                "type": "Identifier",
                "start": 32135,
                "end": 32147,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32148,
                  "end": 32198,
                  "left": {
                    "type": "Literal",
                    "start": 32148,
                    "end": 32183,
                    "value": "#268: -2048 >> 8 === -8. Actual: ",
                    "raw": "'#268: -2048 >> 8 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32186,
                    "end": 32198,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32187,
                      "end": 32197,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32187,
                        "end": 32192,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32188,
                          "end": 32192,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32196,
                        "end": 32197,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32207,
      "end": 32315,
      "test": {
        "type": "BinaryExpression",
        "start": 32211,
        "end": 32229,
        "left": {
          "type": "BinaryExpression",
          "start": 32211,
          "end": 32221,
          "left": {
            "type": "UnaryExpression",
            "start": 32211,
            "end": 32216,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32212,
              "end": 32216,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32220,
            "end": 32221,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32226,
          "end": 32229,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32227,
            "end": 32229,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32231,
        "end": 32315,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32236,
            "end": 32312,
            "argument": {
              "type": "NewExpression",
              "start": 32242,
              "end": 32311,
              "callee": {
                "type": "Identifier",
                "start": 32246,
                "end": 32258,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32259,
                  "end": 32310,
                  "left": {
                    "type": "Literal",
                    "start": 32259,
                    "end": 32295,
                    "value": "#269: -4096 >> 8 === -16. Actual: ",
                    "raw": "'#269: -4096 >> 8 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32298,
                    "end": 32310,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32299,
                      "end": 32309,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32299,
                        "end": 32304,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32300,
                          "end": 32304,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32308,
                        "end": 32309,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32319,
      "end": 32427,
      "test": {
        "type": "BinaryExpression",
        "start": 32323,
        "end": 32341,
        "left": {
          "type": "BinaryExpression",
          "start": 32323,
          "end": 32333,
          "left": {
            "type": "UnaryExpression",
            "start": 32323,
            "end": 32328,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32324,
              "end": 32328,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32332,
            "end": 32333,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32338,
          "end": 32341,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32339,
            "end": 32341,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32343,
        "end": 32427,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32348,
            "end": 32424,
            "argument": {
              "type": "NewExpression",
              "start": 32354,
              "end": 32423,
              "callee": {
                "type": "Identifier",
                "start": 32358,
                "end": 32370,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32371,
                  "end": 32422,
                  "left": {
                    "type": "Literal",
                    "start": 32371,
                    "end": 32407,
                    "value": "#270: -8192 >> 8 === -32. Actual: ",
                    "raw": "'#270: -8192 >> 8 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32410,
                    "end": 32422,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32411,
                      "end": 32421,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32411,
                        "end": 32416,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32412,
                          "end": 32416,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32420,
                        "end": 32421,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32431,
      "end": 32542,
      "test": {
        "type": "BinaryExpression",
        "start": 32435,
        "end": 32454,
        "left": {
          "type": "BinaryExpression",
          "start": 32435,
          "end": 32446,
          "left": {
            "type": "UnaryExpression",
            "start": 32435,
            "end": 32441,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32436,
              "end": 32441,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32445,
            "end": 32446,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32451,
          "end": 32454,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32452,
            "end": 32454,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32456,
        "end": 32542,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32461,
            "end": 32539,
            "argument": {
              "type": "NewExpression",
              "start": 32467,
              "end": 32538,
              "callee": {
                "type": "Identifier",
                "start": 32471,
                "end": 32483,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32484,
                  "end": 32537,
                  "left": {
                    "type": "Literal",
                    "start": 32484,
                    "end": 32521,
                    "value": "#271: -16384 >> 8 === -64. Actual: ",
                    "raw": "'#271: -16384 >> 8 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32524,
                    "end": 32537,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32525,
                      "end": 32536,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32525,
                        "end": 32531,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32526,
                          "end": 32531,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32535,
                        "end": 32536,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32546,
      "end": 32659,
      "test": {
        "type": "BinaryExpression",
        "start": 32550,
        "end": 32570,
        "left": {
          "type": "BinaryExpression",
          "start": 32550,
          "end": 32561,
          "left": {
            "type": "UnaryExpression",
            "start": 32550,
            "end": 32556,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32551,
              "end": 32556,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32560,
            "end": 32561,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32566,
          "end": 32570,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32567,
            "end": 32570,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32572,
        "end": 32659,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32577,
            "end": 32656,
            "argument": {
              "type": "NewExpression",
              "start": 32583,
              "end": 32655,
              "callee": {
                "type": "Identifier",
                "start": 32587,
                "end": 32599,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32600,
                  "end": 32654,
                  "left": {
                    "type": "Literal",
                    "start": 32600,
                    "end": 32638,
                    "value": "#272: -32768 >> 8 === -128. Actual: ",
                    "raw": "'#272: -32768 >> 8 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32641,
                    "end": 32654,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32642,
                      "end": 32653,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32642,
                        "end": 32648,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32643,
                          "end": 32648,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32652,
                        "end": 32653,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32663,
      "end": 32776,
      "test": {
        "type": "BinaryExpression",
        "start": 32667,
        "end": 32687,
        "left": {
          "type": "BinaryExpression",
          "start": 32667,
          "end": 32678,
          "left": {
            "type": "UnaryExpression",
            "start": 32667,
            "end": 32673,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32668,
              "end": 32673,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32677,
            "end": 32678,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32683,
          "end": 32687,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32684,
            "end": 32687,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32689,
        "end": 32776,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32694,
            "end": 32773,
            "argument": {
              "type": "NewExpression",
              "start": 32700,
              "end": 32772,
              "callee": {
                "type": "Identifier",
                "start": 32704,
                "end": 32716,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32717,
                  "end": 32771,
                  "left": {
                    "type": "Literal",
                    "start": 32717,
                    "end": 32755,
                    "value": "#273: -65536 >> 8 === -256. Actual: ",
                    "raw": "'#273: -65536 >> 8 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32758,
                    "end": 32771,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32759,
                      "end": 32770,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32759,
                        "end": 32765,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32760,
                          "end": 32765,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32769,
                        "end": 32770,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32780,
      "end": 32896,
      "test": {
        "type": "BinaryExpression",
        "start": 32784,
        "end": 32805,
        "left": {
          "type": "BinaryExpression",
          "start": 32784,
          "end": 32796,
          "left": {
            "type": "UnaryExpression",
            "start": 32784,
            "end": 32791,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32785,
              "end": 32791,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32795,
            "end": 32796,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32801,
          "end": 32805,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32802,
            "end": 32805,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32807,
        "end": 32896,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32812,
            "end": 32893,
            "argument": {
              "type": "NewExpression",
              "start": 32818,
              "end": 32892,
              "callee": {
                "type": "Identifier",
                "start": 32822,
                "end": 32834,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32835,
                  "end": 32891,
                  "left": {
                    "type": "Literal",
                    "start": 32835,
                    "end": 32874,
                    "value": "#274: -131072 >> 8 === -512. Actual: ",
                    "raw": "'#274: -131072 >> 8 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32877,
                    "end": 32891,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32878,
                      "end": 32890,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 32878,
                        "end": 32885,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 32879,
                          "end": 32885,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32889,
                        "end": 32890,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32900,
      "end": 33018,
      "test": {
        "type": "BinaryExpression",
        "start": 32904,
        "end": 32926,
        "left": {
          "type": "BinaryExpression",
          "start": 32904,
          "end": 32916,
          "left": {
            "type": "UnaryExpression",
            "start": 32904,
            "end": 32911,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 32905,
              "end": 32911,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32915,
            "end": 32916,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 32921,
          "end": 32926,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 32922,
            "end": 32926,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32928,
        "end": 33018,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32933,
            "end": 33015,
            "argument": {
              "type": "NewExpression",
              "start": 32939,
              "end": 33014,
              "callee": {
                "type": "Identifier",
                "start": 32943,
                "end": 32955,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32956,
                  "end": 33013,
                  "left": {
                    "type": "Literal",
                    "start": 32956,
                    "end": 32996,
                    "value": "#275: -262144 >> 8 === -1024. Actual: ",
                    "raw": "'#275: -262144 >> 8 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32999,
                    "end": 33013,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33000,
                      "end": 33012,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33000,
                        "end": 33007,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33001,
                          "end": 33007,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33011,
                        "end": 33012,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33022,
      "end": 33140,
      "test": {
        "type": "BinaryExpression",
        "start": 33026,
        "end": 33048,
        "left": {
          "type": "BinaryExpression",
          "start": 33026,
          "end": 33038,
          "left": {
            "type": "UnaryExpression",
            "start": 33026,
            "end": 33033,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33027,
              "end": 33033,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33037,
            "end": 33038,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33043,
          "end": 33048,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33044,
            "end": 33048,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33050,
        "end": 33140,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33055,
            "end": 33137,
            "argument": {
              "type": "NewExpression",
              "start": 33061,
              "end": 33136,
              "callee": {
                "type": "Identifier",
                "start": 33065,
                "end": 33077,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33078,
                  "end": 33135,
                  "left": {
                    "type": "Literal",
                    "start": 33078,
                    "end": 33118,
                    "value": "#276: -524288 >> 8 === -2048. Actual: ",
                    "raw": "'#276: -524288 >> 8 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33121,
                    "end": 33135,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33122,
                      "end": 33134,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33122,
                        "end": 33129,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33123,
                          "end": 33129,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33133,
                        "end": 33134,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33144,
      "end": 33265,
      "test": {
        "type": "BinaryExpression",
        "start": 33148,
        "end": 33171,
        "left": {
          "type": "BinaryExpression",
          "start": 33148,
          "end": 33161,
          "left": {
            "type": "UnaryExpression",
            "start": 33148,
            "end": 33156,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33149,
              "end": 33156,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33160,
            "end": 33161,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33166,
          "end": 33171,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33167,
            "end": 33171,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33173,
        "end": 33265,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33178,
            "end": 33262,
            "argument": {
              "type": "NewExpression",
              "start": 33184,
              "end": 33261,
              "callee": {
                "type": "Identifier",
                "start": 33188,
                "end": 33200,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33201,
                  "end": 33260,
                  "left": {
                    "type": "Literal",
                    "start": 33201,
                    "end": 33242,
                    "value": "#277: -1048576 >> 8 === -4096. Actual: ",
                    "raw": "'#277: -1048576 >> 8 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33245,
                    "end": 33260,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33246,
                      "end": 33259,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33246,
                        "end": 33254,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33247,
                          "end": 33254,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33258,
                        "end": 33259,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33269,
      "end": 33390,
      "test": {
        "type": "BinaryExpression",
        "start": 33273,
        "end": 33296,
        "left": {
          "type": "BinaryExpression",
          "start": 33273,
          "end": 33286,
          "left": {
            "type": "UnaryExpression",
            "start": 33273,
            "end": 33281,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33274,
              "end": 33281,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33285,
            "end": 33286,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33291,
          "end": 33296,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33292,
            "end": 33296,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33298,
        "end": 33390,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33303,
            "end": 33387,
            "argument": {
              "type": "NewExpression",
              "start": 33309,
              "end": 33386,
              "callee": {
                "type": "Identifier",
                "start": 33313,
                "end": 33325,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33326,
                  "end": 33385,
                  "left": {
                    "type": "Literal",
                    "start": 33326,
                    "end": 33367,
                    "value": "#278: -2097152 >> 8 === -8192. Actual: ",
                    "raw": "'#278: -2097152 >> 8 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33370,
                    "end": 33385,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33371,
                      "end": 33384,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33371,
                        "end": 33379,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33372,
                          "end": 33379,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33383,
                        "end": 33384,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33394,
      "end": 33517,
      "test": {
        "type": "BinaryExpression",
        "start": 33398,
        "end": 33422,
        "left": {
          "type": "BinaryExpression",
          "start": 33398,
          "end": 33411,
          "left": {
            "type": "UnaryExpression",
            "start": 33398,
            "end": 33406,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33399,
              "end": 33406,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33410,
            "end": 33411,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33416,
          "end": 33422,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33417,
            "end": 33422,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33424,
        "end": 33517,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33429,
            "end": 33514,
            "argument": {
              "type": "NewExpression",
              "start": 33435,
              "end": 33513,
              "callee": {
                "type": "Identifier",
                "start": 33439,
                "end": 33451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33452,
                  "end": 33512,
                  "left": {
                    "type": "Literal",
                    "start": 33452,
                    "end": 33494,
                    "value": "#279: -4194304 >> 8 === -16384. Actual: ",
                    "raw": "'#279: -4194304 >> 8 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33497,
                    "end": 33512,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33498,
                      "end": 33511,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33498,
                        "end": 33506,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33499,
                          "end": 33506,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33510,
                        "end": 33511,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33521,
      "end": 33644,
      "test": {
        "type": "BinaryExpression",
        "start": 33525,
        "end": 33549,
        "left": {
          "type": "BinaryExpression",
          "start": 33525,
          "end": 33538,
          "left": {
            "type": "UnaryExpression",
            "start": 33525,
            "end": 33533,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33526,
              "end": 33533,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33537,
            "end": 33538,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33543,
          "end": 33549,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33544,
            "end": 33549,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33551,
        "end": 33644,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33556,
            "end": 33641,
            "argument": {
              "type": "NewExpression",
              "start": 33562,
              "end": 33640,
              "callee": {
                "type": "Identifier",
                "start": 33566,
                "end": 33578,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33579,
                  "end": 33639,
                  "left": {
                    "type": "Literal",
                    "start": 33579,
                    "end": 33621,
                    "value": "#280: -8388608 >> 8 === -32768. Actual: ",
                    "raw": "'#280: -8388608 >> 8 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33624,
                    "end": 33639,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33625,
                      "end": 33638,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33625,
                        "end": 33633,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33626,
                          "end": 33633,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33637,
                        "end": 33638,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33648,
      "end": 33774,
      "test": {
        "type": "BinaryExpression",
        "start": 33652,
        "end": 33677,
        "left": {
          "type": "BinaryExpression",
          "start": 33652,
          "end": 33666,
          "left": {
            "type": "UnaryExpression",
            "start": 33652,
            "end": 33661,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33653,
              "end": 33661,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33665,
            "end": 33666,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33671,
          "end": 33677,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33672,
            "end": 33677,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33679,
        "end": 33774,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33684,
            "end": 33771,
            "argument": {
              "type": "NewExpression",
              "start": 33690,
              "end": 33770,
              "callee": {
                "type": "Identifier",
                "start": 33694,
                "end": 33706,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33707,
                  "end": 33769,
                  "left": {
                    "type": "Literal",
                    "start": 33707,
                    "end": 33750,
                    "value": "#281: -16777216 >> 8 === -65536. Actual: ",
                    "raw": "'#281: -16777216 >> 8 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33753,
                    "end": 33769,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33754,
                      "end": 33768,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33754,
                        "end": 33763,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33755,
                          "end": 33763,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33767,
                        "end": 33768,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33778,
      "end": 33906,
      "test": {
        "type": "BinaryExpression",
        "start": 33782,
        "end": 33808,
        "left": {
          "type": "BinaryExpression",
          "start": 33782,
          "end": 33796,
          "left": {
            "type": "UnaryExpression",
            "start": 33782,
            "end": 33791,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33783,
              "end": 33791,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33795,
            "end": 33796,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33801,
          "end": 33808,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33802,
            "end": 33808,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33810,
        "end": 33906,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33815,
            "end": 33903,
            "argument": {
              "type": "NewExpression",
              "start": 33821,
              "end": 33902,
              "callee": {
                "type": "Identifier",
                "start": 33825,
                "end": 33837,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33838,
                  "end": 33901,
                  "left": {
                    "type": "Literal",
                    "start": 33838,
                    "end": 33882,
                    "value": "#282: -33554432 >> 8 === -131072. Actual: ",
                    "raw": "'#282: -33554432 >> 8 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33885,
                    "end": 33901,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33886,
                      "end": 33900,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 33886,
                        "end": 33895,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 33887,
                          "end": 33895,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33899,
                        "end": 33900,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33910,
      "end": 34038,
      "test": {
        "type": "BinaryExpression",
        "start": 33914,
        "end": 33940,
        "left": {
          "type": "BinaryExpression",
          "start": 33914,
          "end": 33928,
          "left": {
            "type": "UnaryExpression",
            "start": 33914,
            "end": 33923,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 33915,
              "end": 33923,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33927,
            "end": 33928,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 33933,
          "end": 33940,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 33934,
            "end": 33940,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33942,
        "end": 34038,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33947,
            "end": 34035,
            "argument": {
              "type": "NewExpression",
              "start": 33953,
              "end": 34034,
              "callee": {
                "type": "Identifier",
                "start": 33957,
                "end": 33969,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33970,
                  "end": 34033,
                  "left": {
                    "type": "Literal",
                    "start": 33970,
                    "end": 34014,
                    "value": "#283: -67108864 >> 8 === -262144. Actual: ",
                    "raw": "'#283: -67108864 >> 8 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34017,
                    "end": 34033,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34018,
                      "end": 34032,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34018,
                        "end": 34027,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34019,
                          "end": 34027,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34031,
                        "end": 34032,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34042,
      "end": 34173,
      "test": {
        "type": "BinaryExpression",
        "start": 34046,
        "end": 34073,
        "left": {
          "type": "BinaryExpression",
          "start": 34046,
          "end": 34061,
          "left": {
            "type": "UnaryExpression",
            "start": 34046,
            "end": 34056,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34047,
              "end": 34056,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34060,
            "end": 34061,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34066,
          "end": 34073,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34067,
            "end": 34073,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34075,
        "end": 34173,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34080,
            "end": 34170,
            "argument": {
              "type": "NewExpression",
              "start": 34086,
              "end": 34169,
              "callee": {
                "type": "Identifier",
                "start": 34090,
                "end": 34102,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34103,
                  "end": 34168,
                  "left": {
                    "type": "Literal",
                    "start": 34103,
                    "end": 34148,
                    "value": "#284: -134217728 >> 8 === -524288. Actual: ",
                    "raw": "'#284: -134217728 >> 8 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34151,
                    "end": 34168,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34152,
                      "end": 34167,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34152,
                        "end": 34162,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34153,
                          "end": 34162,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34166,
                        "end": 34167,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34177,
      "end": 34310,
      "test": {
        "type": "BinaryExpression",
        "start": 34181,
        "end": 34209,
        "left": {
          "type": "BinaryExpression",
          "start": 34181,
          "end": 34196,
          "left": {
            "type": "UnaryExpression",
            "start": 34181,
            "end": 34191,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34182,
              "end": 34191,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34195,
            "end": 34196,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34201,
          "end": 34209,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34202,
            "end": 34209,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34211,
        "end": 34310,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34216,
            "end": 34307,
            "argument": {
              "type": "NewExpression",
              "start": 34222,
              "end": 34306,
              "callee": {
                "type": "Identifier",
                "start": 34226,
                "end": 34238,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34239,
                  "end": 34305,
                  "left": {
                    "type": "Literal",
                    "start": 34239,
                    "end": 34285,
                    "value": "#285: -268435456 >> 8 === -1048576. Actual: ",
                    "raw": "'#285: -268435456 >> 8 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34288,
                    "end": 34305,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34289,
                      "end": 34304,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34289,
                        "end": 34299,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34290,
                          "end": 34299,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34303,
                        "end": 34304,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34314,
      "end": 34447,
      "test": {
        "type": "BinaryExpression",
        "start": 34318,
        "end": 34346,
        "left": {
          "type": "BinaryExpression",
          "start": 34318,
          "end": 34333,
          "left": {
            "type": "UnaryExpression",
            "start": 34318,
            "end": 34328,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34319,
              "end": 34328,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34332,
            "end": 34333,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34338,
          "end": 34346,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34339,
            "end": 34346,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34348,
        "end": 34447,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34353,
            "end": 34444,
            "argument": {
              "type": "NewExpression",
              "start": 34359,
              "end": 34443,
              "callee": {
                "type": "Identifier",
                "start": 34363,
                "end": 34375,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34376,
                  "end": 34442,
                  "left": {
                    "type": "Literal",
                    "start": 34376,
                    "end": 34422,
                    "value": "#286: -536870912 >> 8 === -2097152. Actual: ",
                    "raw": "'#286: -536870912 >> 8 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34425,
                    "end": 34442,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34426,
                      "end": 34441,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34426,
                        "end": 34436,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34427,
                          "end": 34436,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34440,
                        "end": 34441,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34451,
      "end": 34587,
      "test": {
        "type": "BinaryExpression",
        "start": 34455,
        "end": 34484,
        "left": {
          "type": "BinaryExpression",
          "start": 34455,
          "end": 34471,
          "left": {
            "type": "UnaryExpression",
            "start": 34455,
            "end": 34466,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34456,
              "end": 34466,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34470,
            "end": 34471,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34476,
          "end": 34484,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34477,
            "end": 34484,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34486,
        "end": 34587,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34491,
            "end": 34584,
            "argument": {
              "type": "NewExpression",
              "start": 34497,
              "end": 34583,
              "callee": {
                "type": "Identifier",
                "start": 34501,
                "end": 34513,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34514,
                  "end": 34582,
                  "left": {
                    "type": "Literal",
                    "start": 34514,
                    "end": 34561,
                    "value": "#287: -1073741824 >> 8 === -4194304. Actual: ",
                    "raw": "'#287: -1073741824 >> 8 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34564,
                    "end": 34582,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34565,
                      "end": 34581,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34565,
                        "end": 34576,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34566,
                          "end": 34576,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34580,
                        "end": 34581,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34591,
      "end": 34727,
      "test": {
        "type": "BinaryExpression",
        "start": 34595,
        "end": 34624,
        "left": {
          "type": "BinaryExpression",
          "start": 34595,
          "end": 34611,
          "left": {
            "type": "UnaryExpression",
            "start": 34595,
            "end": 34606,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34596,
              "end": 34606,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34610,
            "end": 34611,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34616,
          "end": 34624,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34617,
            "end": 34624,
            "value": 8388608,
            "raw": "8388608",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34626,
        "end": 34727,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34631,
            "end": 34724,
            "argument": {
              "type": "NewExpression",
              "start": 34637,
              "end": 34723,
              "callee": {
                "type": "Identifier",
                "start": 34641,
                "end": 34653,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34654,
                  "end": 34722,
                  "left": {
                    "type": "Literal",
                    "start": 34654,
                    "end": 34701,
                    "value": "#288: -2147483648 >> 8 === -8388608. Actual: ",
                    "raw": "'#288: -2147483648 >> 8 === -8388608. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34704,
                    "end": 34722,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34705,
                      "end": 34721,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34705,
                        "end": 34716,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34706,
                          "end": 34716,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34720,
                        "end": 34721,
                        "value": 8,
                        "raw": "8",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34731,
      "end": 34828,
      "test": {
        "type": "BinaryExpression",
        "start": 34735,
        "end": 34749,
        "left": {
          "type": "BinaryExpression",
          "start": 34735,
          "end": 34742,
          "left": {
            "type": "UnaryExpression",
            "start": 34735,
            "end": 34737,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34736,
              "end": 34737,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34741,
            "end": 34742,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34747,
          "end": 34749,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34748,
            "end": 34749,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34751,
        "end": 34828,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34756,
            "end": 34825,
            "argument": {
              "type": "NewExpression",
              "start": 34762,
              "end": 34824,
              "callee": {
                "type": "Identifier",
                "start": 34766,
                "end": 34778,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34779,
                  "end": 34823,
                  "left": {
                    "type": "Literal",
                    "start": 34779,
                    "end": 34811,
                    "value": "#289: -1 >> 9 === -1. Actual: ",
                    "raw": "'#289: -1 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34814,
                    "end": 34823,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34815,
                      "end": 34822,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34815,
                        "end": 34817,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34816,
                          "end": 34817,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34821,
                        "end": 34822,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34832,
      "end": 34929,
      "test": {
        "type": "BinaryExpression",
        "start": 34836,
        "end": 34850,
        "left": {
          "type": "BinaryExpression",
          "start": 34836,
          "end": 34843,
          "left": {
            "type": "UnaryExpression",
            "start": 34836,
            "end": 34838,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34837,
              "end": 34838,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34842,
            "end": 34843,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34848,
          "end": 34850,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34849,
            "end": 34850,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34852,
        "end": 34929,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34857,
            "end": 34926,
            "argument": {
              "type": "NewExpression",
              "start": 34863,
              "end": 34925,
              "callee": {
                "type": "Identifier",
                "start": 34867,
                "end": 34879,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34880,
                  "end": 34924,
                  "left": {
                    "type": "Literal",
                    "start": 34880,
                    "end": 34912,
                    "value": "#290: -2 >> 9 === -1. Actual: ",
                    "raw": "'#290: -2 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34915,
                    "end": 34924,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34916,
                      "end": 34923,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 34916,
                        "end": 34918,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 34917,
                          "end": 34918,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34922,
                        "end": 34923,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34933,
      "end": 35030,
      "test": {
        "type": "BinaryExpression",
        "start": 34937,
        "end": 34951,
        "left": {
          "type": "BinaryExpression",
          "start": 34937,
          "end": 34944,
          "left": {
            "type": "UnaryExpression",
            "start": 34937,
            "end": 34939,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 34938,
              "end": 34939,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34943,
            "end": 34944,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 34949,
          "end": 34951,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 34950,
            "end": 34951,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34953,
        "end": 35030,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34958,
            "end": 35027,
            "argument": {
              "type": "NewExpression",
              "start": 34964,
              "end": 35026,
              "callee": {
                "type": "Identifier",
                "start": 34968,
                "end": 34980,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34981,
                  "end": 35025,
                  "left": {
                    "type": "Literal",
                    "start": 34981,
                    "end": 35013,
                    "value": "#291: -4 >> 9 === -1. Actual: ",
                    "raw": "'#291: -4 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35016,
                    "end": 35025,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35017,
                      "end": 35024,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35017,
                        "end": 35019,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35018,
                          "end": 35019,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35023,
                        "end": 35024,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35034,
      "end": 35131,
      "test": {
        "type": "BinaryExpression",
        "start": 35038,
        "end": 35052,
        "left": {
          "type": "BinaryExpression",
          "start": 35038,
          "end": 35045,
          "left": {
            "type": "UnaryExpression",
            "start": 35038,
            "end": 35040,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35039,
              "end": 35040,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35044,
            "end": 35045,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35050,
          "end": 35052,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35051,
            "end": 35052,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35054,
        "end": 35131,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35059,
            "end": 35128,
            "argument": {
              "type": "NewExpression",
              "start": 35065,
              "end": 35127,
              "callee": {
                "type": "Identifier",
                "start": 35069,
                "end": 35081,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35082,
                  "end": 35126,
                  "left": {
                    "type": "Literal",
                    "start": 35082,
                    "end": 35114,
                    "value": "#292: -8 >> 9 === -1. Actual: ",
                    "raw": "'#292: -8 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35117,
                    "end": 35126,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35118,
                      "end": 35125,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35118,
                        "end": 35120,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35119,
                          "end": 35120,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35124,
                        "end": 35125,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35135,
      "end": 35235,
      "test": {
        "type": "BinaryExpression",
        "start": 35139,
        "end": 35154,
        "left": {
          "type": "BinaryExpression",
          "start": 35139,
          "end": 35147,
          "left": {
            "type": "UnaryExpression",
            "start": 35139,
            "end": 35142,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35140,
              "end": 35142,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35146,
            "end": 35147,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35152,
          "end": 35154,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35153,
            "end": 35154,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35156,
        "end": 35235,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35161,
            "end": 35232,
            "argument": {
              "type": "NewExpression",
              "start": 35167,
              "end": 35231,
              "callee": {
                "type": "Identifier",
                "start": 35171,
                "end": 35183,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35184,
                  "end": 35230,
                  "left": {
                    "type": "Literal",
                    "start": 35184,
                    "end": 35217,
                    "value": "#293: -16 >> 9 === -1. Actual: ",
                    "raw": "'#293: -16 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35220,
                    "end": 35230,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35221,
                      "end": 35229,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35221,
                        "end": 35224,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35222,
                          "end": 35224,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35228,
                        "end": 35229,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35239,
      "end": 35339,
      "test": {
        "type": "BinaryExpression",
        "start": 35243,
        "end": 35258,
        "left": {
          "type": "BinaryExpression",
          "start": 35243,
          "end": 35251,
          "left": {
            "type": "UnaryExpression",
            "start": 35243,
            "end": 35246,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35244,
              "end": 35246,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35250,
            "end": 35251,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35256,
          "end": 35258,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35257,
            "end": 35258,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35260,
        "end": 35339,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35265,
            "end": 35336,
            "argument": {
              "type": "NewExpression",
              "start": 35271,
              "end": 35335,
              "callee": {
                "type": "Identifier",
                "start": 35275,
                "end": 35287,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35288,
                  "end": 35334,
                  "left": {
                    "type": "Literal",
                    "start": 35288,
                    "end": 35321,
                    "value": "#294: -32 >> 9 === -1. Actual: ",
                    "raw": "'#294: -32 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35324,
                    "end": 35334,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35325,
                      "end": 35333,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35325,
                        "end": 35328,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35326,
                          "end": 35328,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35332,
                        "end": 35333,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35343,
      "end": 35443,
      "test": {
        "type": "BinaryExpression",
        "start": 35347,
        "end": 35362,
        "left": {
          "type": "BinaryExpression",
          "start": 35347,
          "end": 35355,
          "left": {
            "type": "UnaryExpression",
            "start": 35347,
            "end": 35350,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35348,
              "end": 35350,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35354,
            "end": 35355,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35360,
          "end": 35362,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35361,
            "end": 35362,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35364,
        "end": 35443,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35369,
            "end": 35440,
            "argument": {
              "type": "NewExpression",
              "start": 35375,
              "end": 35439,
              "callee": {
                "type": "Identifier",
                "start": 35379,
                "end": 35391,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35392,
                  "end": 35438,
                  "left": {
                    "type": "Literal",
                    "start": 35392,
                    "end": 35425,
                    "value": "#295: -64 >> 9 === -1. Actual: ",
                    "raw": "'#295: -64 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35428,
                    "end": 35438,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35429,
                      "end": 35437,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35429,
                        "end": 35432,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35430,
                          "end": 35432,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35436,
                        "end": 35437,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35447,
      "end": 35550,
      "test": {
        "type": "BinaryExpression",
        "start": 35451,
        "end": 35467,
        "left": {
          "type": "BinaryExpression",
          "start": 35451,
          "end": 35460,
          "left": {
            "type": "UnaryExpression",
            "start": 35451,
            "end": 35455,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35452,
              "end": 35455,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35459,
            "end": 35460,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35465,
          "end": 35467,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35466,
            "end": 35467,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35469,
        "end": 35550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35474,
            "end": 35547,
            "argument": {
              "type": "NewExpression",
              "start": 35480,
              "end": 35546,
              "callee": {
                "type": "Identifier",
                "start": 35484,
                "end": 35496,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35497,
                  "end": 35545,
                  "left": {
                    "type": "Literal",
                    "start": 35497,
                    "end": 35531,
                    "value": "#296: -128 >> 9 === -1. Actual: ",
                    "raw": "'#296: -128 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35534,
                    "end": 35545,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35535,
                      "end": 35544,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35535,
                        "end": 35539,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35536,
                          "end": 35539,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35543,
                        "end": 35544,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35554,
      "end": 35657,
      "test": {
        "type": "BinaryExpression",
        "start": 35558,
        "end": 35574,
        "left": {
          "type": "BinaryExpression",
          "start": 35558,
          "end": 35567,
          "left": {
            "type": "UnaryExpression",
            "start": 35558,
            "end": 35562,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35559,
              "end": 35562,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35566,
            "end": 35567,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35572,
          "end": 35574,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35573,
            "end": 35574,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35576,
        "end": 35657,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35581,
            "end": 35654,
            "argument": {
              "type": "NewExpression",
              "start": 35587,
              "end": 35653,
              "callee": {
                "type": "Identifier",
                "start": 35591,
                "end": 35603,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35604,
                  "end": 35652,
                  "left": {
                    "type": "Literal",
                    "start": 35604,
                    "end": 35638,
                    "value": "#297: -256 >> 9 === -1. Actual: ",
                    "raw": "'#297: -256 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35641,
                    "end": 35652,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35642,
                      "end": 35651,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35642,
                        "end": 35646,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35643,
                          "end": 35646,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35650,
                        "end": 35651,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35661,
      "end": 35764,
      "test": {
        "type": "BinaryExpression",
        "start": 35665,
        "end": 35681,
        "left": {
          "type": "BinaryExpression",
          "start": 35665,
          "end": 35674,
          "left": {
            "type": "UnaryExpression",
            "start": 35665,
            "end": 35669,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35666,
              "end": 35669,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35673,
            "end": 35674,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35679,
          "end": 35681,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35680,
            "end": 35681,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35683,
        "end": 35764,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35688,
            "end": 35761,
            "argument": {
              "type": "NewExpression",
              "start": 35694,
              "end": 35760,
              "callee": {
                "type": "Identifier",
                "start": 35698,
                "end": 35710,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35711,
                  "end": 35759,
                  "left": {
                    "type": "Literal",
                    "start": 35711,
                    "end": 35745,
                    "value": "#298: -512 >> 9 === -1. Actual: ",
                    "raw": "'#298: -512 >> 9 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35748,
                    "end": 35759,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35749,
                      "end": 35758,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35749,
                        "end": 35753,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35750,
                          "end": 35753,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35757,
                        "end": 35758,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35768,
      "end": 35874,
      "test": {
        "type": "BinaryExpression",
        "start": 35772,
        "end": 35789,
        "left": {
          "type": "BinaryExpression",
          "start": 35772,
          "end": 35782,
          "left": {
            "type": "UnaryExpression",
            "start": 35772,
            "end": 35777,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35773,
              "end": 35777,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35781,
            "end": 35782,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35787,
          "end": 35789,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35788,
            "end": 35789,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35791,
        "end": 35874,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35796,
            "end": 35871,
            "argument": {
              "type": "NewExpression",
              "start": 35802,
              "end": 35870,
              "callee": {
                "type": "Identifier",
                "start": 35806,
                "end": 35818,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35819,
                  "end": 35869,
                  "left": {
                    "type": "Literal",
                    "start": 35819,
                    "end": 35854,
                    "value": "#299: -1024 >> 9 === -2. Actual: ",
                    "raw": "'#299: -1024 >> 9 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35857,
                    "end": 35869,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35858,
                      "end": 35868,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35858,
                        "end": 35863,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35859,
                          "end": 35863,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35867,
                        "end": 35868,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35878,
      "end": 35984,
      "test": {
        "type": "BinaryExpression",
        "start": 35882,
        "end": 35899,
        "left": {
          "type": "BinaryExpression",
          "start": 35882,
          "end": 35892,
          "left": {
            "type": "UnaryExpression",
            "start": 35882,
            "end": 35887,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35883,
              "end": 35887,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35891,
            "end": 35892,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 35897,
          "end": 35899,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 35898,
            "end": 35899,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35901,
        "end": 35984,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35906,
            "end": 35981,
            "argument": {
              "type": "NewExpression",
              "start": 35912,
              "end": 35980,
              "callee": {
                "type": "Identifier",
                "start": 35916,
                "end": 35928,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35929,
                  "end": 35979,
                  "left": {
                    "type": "Literal",
                    "start": 35929,
                    "end": 35964,
                    "value": "#300: -2048 >> 9 === -4. Actual: ",
                    "raw": "'#300: -2048 >> 9 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35967,
                    "end": 35979,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35968,
                      "end": 35978,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 35968,
                        "end": 35973,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 35969,
                          "end": 35973,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35977,
                        "end": 35978,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35988,
      "end": 36094,
      "test": {
        "type": "BinaryExpression",
        "start": 35992,
        "end": 36009,
        "left": {
          "type": "BinaryExpression",
          "start": 35992,
          "end": 36002,
          "left": {
            "type": "UnaryExpression",
            "start": 35992,
            "end": 35997,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 35993,
              "end": 35997,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36001,
            "end": 36002,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36007,
          "end": 36009,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36008,
            "end": 36009,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36011,
        "end": 36094,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36016,
            "end": 36091,
            "argument": {
              "type": "NewExpression",
              "start": 36022,
              "end": 36090,
              "callee": {
                "type": "Identifier",
                "start": 36026,
                "end": 36038,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36039,
                  "end": 36089,
                  "left": {
                    "type": "Literal",
                    "start": 36039,
                    "end": 36074,
                    "value": "#301: -4096 >> 9 === -8. Actual: ",
                    "raw": "'#301: -4096 >> 9 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36077,
                    "end": 36089,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36078,
                      "end": 36088,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36078,
                        "end": 36083,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36079,
                          "end": 36083,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36087,
                        "end": 36088,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36098,
      "end": 36206,
      "test": {
        "type": "BinaryExpression",
        "start": 36102,
        "end": 36120,
        "left": {
          "type": "BinaryExpression",
          "start": 36102,
          "end": 36112,
          "left": {
            "type": "UnaryExpression",
            "start": 36102,
            "end": 36107,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36103,
              "end": 36107,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36111,
            "end": 36112,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36117,
          "end": 36120,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36118,
            "end": 36120,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36122,
        "end": 36206,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36127,
            "end": 36203,
            "argument": {
              "type": "NewExpression",
              "start": 36133,
              "end": 36202,
              "callee": {
                "type": "Identifier",
                "start": 36137,
                "end": 36149,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36150,
                  "end": 36201,
                  "left": {
                    "type": "Literal",
                    "start": 36150,
                    "end": 36186,
                    "value": "#302: -8192 >> 9 === -16. Actual: ",
                    "raw": "'#302: -8192 >> 9 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36189,
                    "end": 36201,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36190,
                      "end": 36200,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36190,
                        "end": 36195,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36191,
                          "end": 36195,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36199,
                        "end": 36200,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36210,
      "end": 36321,
      "test": {
        "type": "BinaryExpression",
        "start": 36214,
        "end": 36233,
        "left": {
          "type": "BinaryExpression",
          "start": 36214,
          "end": 36225,
          "left": {
            "type": "UnaryExpression",
            "start": 36214,
            "end": 36220,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36215,
              "end": 36220,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36224,
            "end": 36225,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36230,
          "end": 36233,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36231,
            "end": 36233,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36235,
        "end": 36321,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36240,
            "end": 36318,
            "argument": {
              "type": "NewExpression",
              "start": 36246,
              "end": 36317,
              "callee": {
                "type": "Identifier",
                "start": 36250,
                "end": 36262,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36263,
                  "end": 36316,
                  "left": {
                    "type": "Literal",
                    "start": 36263,
                    "end": 36300,
                    "value": "#303: -16384 >> 9 === -32. Actual: ",
                    "raw": "'#303: -16384 >> 9 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36303,
                    "end": 36316,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36304,
                      "end": 36315,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36304,
                        "end": 36310,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36305,
                          "end": 36310,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36314,
                        "end": 36315,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36325,
      "end": 36436,
      "test": {
        "type": "BinaryExpression",
        "start": 36329,
        "end": 36348,
        "left": {
          "type": "BinaryExpression",
          "start": 36329,
          "end": 36340,
          "left": {
            "type": "UnaryExpression",
            "start": 36329,
            "end": 36335,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36330,
              "end": 36335,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36339,
            "end": 36340,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36345,
          "end": 36348,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36346,
            "end": 36348,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36350,
        "end": 36436,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36355,
            "end": 36433,
            "argument": {
              "type": "NewExpression",
              "start": 36361,
              "end": 36432,
              "callee": {
                "type": "Identifier",
                "start": 36365,
                "end": 36377,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36378,
                  "end": 36431,
                  "left": {
                    "type": "Literal",
                    "start": 36378,
                    "end": 36415,
                    "value": "#304: -32768 >> 9 === -64. Actual: ",
                    "raw": "'#304: -32768 >> 9 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36418,
                    "end": 36431,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36419,
                      "end": 36430,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36419,
                        "end": 36425,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36420,
                          "end": 36425,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36429,
                        "end": 36430,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36440,
      "end": 36553,
      "test": {
        "type": "BinaryExpression",
        "start": 36444,
        "end": 36464,
        "left": {
          "type": "BinaryExpression",
          "start": 36444,
          "end": 36455,
          "left": {
            "type": "UnaryExpression",
            "start": 36444,
            "end": 36450,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36445,
              "end": 36450,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36454,
            "end": 36455,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36460,
          "end": 36464,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36461,
            "end": 36464,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36466,
        "end": 36553,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36471,
            "end": 36550,
            "argument": {
              "type": "NewExpression",
              "start": 36477,
              "end": 36549,
              "callee": {
                "type": "Identifier",
                "start": 36481,
                "end": 36493,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36494,
                  "end": 36548,
                  "left": {
                    "type": "Literal",
                    "start": 36494,
                    "end": 36532,
                    "value": "#305: -65536 >> 9 === -128. Actual: ",
                    "raw": "'#305: -65536 >> 9 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36535,
                    "end": 36548,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36536,
                      "end": 36547,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36536,
                        "end": 36542,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36537,
                          "end": 36542,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36546,
                        "end": 36547,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36557,
      "end": 36673,
      "test": {
        "type": "BinaryExpression",
        "start": 36561,
        "end": 36582,
        "left": {
          "type": "BinaryExpression",
          "start": 36561,
          "end": 36573,
          "left": {
            "type": "UnaryExpression",
            "start": 36561,
            "end": 36568,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36562,
              "end": 36568,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36572,
            "end": 36573,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36578,
          "end": 36582,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36579,
            "end": 36582,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36584,
        "end": 36673,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36589,
            "end": 36670,
            "argument": {
              "type": "NewExpression",
              "start": 36595,
              "end": 36669,
              "callee": {
                "type": "Identifier",
                "start": 36599,
                "end": 36611,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36612,
                  "end": 36668,
                  "left": {
                    "type": "Literal",
                    "start": 36612,
                    "end": 36651,
                    "value": "#306: -131072 >> 9 === -256. Actual: ",
                    "raw": "'#306: -131072 >> 9 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36654,
                    "end": 36668,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36655,
                      "end": 36667,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36655,
                        "end": 36662,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36656,
                          "end": 36662,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36666,
                        "end": 36667,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36677,
      "end": 36793,
      "test": {
        "type": "BinaryExpression",
        "start": 36681,
        "end": 36702,
        "left": {
          "type": "BinaryExpression",
          "start": 36681,
          "end": 36693,
          "left": {
            "type": "UnaryExpression",
            "start": 36681,
            "end": 36688,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36682,
              "end": 36688,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36692,
            "end": 36693,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36698,
          "end": 36702,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36699,
            "end": 36702,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36704,
        "end": 36793,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36709,
            "end": 36790,
            "argument": {
              "type": "NewExpression",
              "start": 36715,
              "end": 36789,
              "callee": {
                "type": "Identifier",
                "start": 36719,
                "end": 36731,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36732,
                  "end": 36788,
                  "left": {
                    "type": "Literal",
                    "start": 36732,
                    "end": 36771,
                    "value": "#307: -262144 >> 9 === -512. Actual: ",
                    "raw": "'#307: -262144 >> 9 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36774,
                    "end": 36788,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36775,
                      "end": 36787,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36775,
                        "end": 36782,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36776,
                          "end": 36782,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36786,
                        "end": 36787,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36797,
      "end": 36915,
      "test": {
        "type": "BinaryExpression",
        "start": 36801,
        "end": 36823,
        "left": {
          "type": "BinaryExpression",
          "start": 36801,
          "end": 36813,
          "left": {
            "type": "UnaryExpression",
            "start": 36801,
            "end": 36808,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36802,
              "end": 36808,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36812,
            "end": 36813,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36818,
          "end": 36823,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36819,
            "end": 36823,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36825,
        "end": 36915,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36830,
            "end": 36912,
            "argument": {
              "type": "NewExpression",
              "start": 36836,
              "end": 36911,
              "callee": {
                "type": "Identifier",
                "start": 36840,
                "end": 36852,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36853,
                  "end": 36910,
                  "left": {
                    "type": "Literal",
                    "start": 36853,
                    "end": 36893,
                    "value": "#308: -524288 >> 9 === -1024. Actual: ",
                    "raw": "'#308: -524288 >> 9 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36896,
                    "end": 36910,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36897,
                      "end": 36909,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 36897,
                        "end": 36904,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 36898,
                          "end": 36904,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36908,
                        "end": 36909,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36919,
      "end": 37040,
      "test": {
        "type": "BinaryExpression",
        "start": 36923,
        "end": 36946,
        "left": {
          "type": "BinaryExpression",
          "start": 36923,
          "end": 36936,
          "left": {
            "type": "UnaryExpression",
            "start": 36923,
            "end": 36931,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 36924,
              "end": 36931,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36935,
            "end": 36936,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 36941,
          "end": 36946,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 36942,
            "end": 36946,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36948,
        "end": 37040,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36953,
            "end": 37037,
            "argument": {
              "type": "NewExpression",
              "start": 36959,
              "end": 37036,
              "callee": {
                "type": "Identifier",
                "start": 36963,
                "end": 36975,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36976,
                  "end": 37035,
                  "left": {
                    "type": "Literal",
                    "start": 36976,
                    "end": 37017,
                    "value": "#309: -1048576 >> 9 === -2048. Actual: ",
                    "raw": "'#309: -1048576 >> 9 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37020,
                    "end": 37035,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37021,
                      "end": 37034,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37021,
                        "end": 37029,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37022,
                          "end": 37029,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37033,
                        "end": 37034,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37044,
      "end": 37165,
      "test": {
        "type": "BinaryExpression",
        "start": 37048,
        "end": 37071,
        "left": {
          "type": "BinaryExpression",
          "start": 37048,
          "end": 37061,
          "left": {
            "type": "UnaryExpression",
            "start": 37048,
            "end": 37056,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37049,
              "end": 37056,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37060,
            "end": 37061,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37066,
          "end": 37071,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37067,
            "end": 37071,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37073,
        "end": 37165,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37078,
            "end": 37162,
            "argument": {
              "type": "NewExpression",
              "start": 37084,
              "end": 37161,
              "callee": {
                "type": "Identifier",
                "start": 37088,
                "end": 37100,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37101,
                  "end": 37160,
                  "left": {
                    "type": "Literal",
                    "start": 37101,
                    "end": 37142,
                    "value": "#310: -2097152 >> 9 === -4096. Actual: ",
                    "raw": "'#310: -2097152 >> 9 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37145,
                    "end": 37160,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37146,
                      "end": 37159,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37146,
                        "end": 37154,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37147,
                          "end": 37154,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37158,
                        "end": 37159,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37169,
      "end": 37290,
      "test": {
        "type": "BinaryExpression",
        "start": 37173,
        "end": 37196,
        "left": {
          "type": "BinaryExpression",
          "start": 37173,
          "end": 37186,
          "left": {
            "type": "UnaryExpression",
            "start": 37173,
            "end": 37181,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37174,
              "end": 37181,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37185,
            "end": 37186,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37191,
          "end": 37196,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37192,
            "end": 37196,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37198,
        "end": 37290,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37203,
            "end": 37287,
            "argument": {
              "type": "NewExpression",
              "start": 37209,
              "end": 37286,
              "callee": {
                "type": "Identifier",
                "start": 37213,
                "end": 37225,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37226,
                  "end": 37285,
                  "left": {
                    "type": "Literal",
                    "start": 37226,
                    "end": 37267,
                    "value": "#311: -4194304 >> 9 === -8192. Actual: ",
                    "raw": "'#311: -4194304 >> 9 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37270,
                    "end": 37285,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37271,
                      "end": 37284,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37271,
                        "end": 37279,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37272,
                          "end": 37279,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37283,
                        "end": 37284,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37294,
      "end": 37417,
      "test": {
        "type": "BinaryExpression",
        "start": 37298,
        "end": 37322,
        "left": {
          "type": "BinaryExpression",
          "start": 37298,
          "end": 37311,
          "left": {
            "type": "UnaryExpression",
            "start": 37298,
            "end": 37306,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37299,
              "end": 37306,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37310,
            "end": 37311,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37316,
          "end": 37322,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37317,
            "end": 37322,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37324,
        "end": 37417,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37329,
            "end": 37414,
            "argument": {
              "type": "NewExpression",
              "start": 37335,
              "end": 37413,
              "callee": {
                "type": "Identifier",
                "start": 37339,
                "end": 37351,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37352,
                  "end": 37412,
                  "left": {
                    "type": "Literal",
                    "start": 37352,
                    "end": 37394,
                    "value": "#312: -8388608 >> 9 === -16384. Actual: ",
                    "raw": "'#312: -8388608 >> 9 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37397,
                    "end": 37412,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37398,
                      "end": 37411,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37398,
                        "end": 37406,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37399,
                          "end": 37406,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37410,
                        "end": 37411,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37421,
      "end": 37547,
      "test": {
        "type": "BinaryExpression",
        "start": 37425,
        "end": 37450,
        "left": {
          "type": "BinaryExpression",
          "start": 37425,
          "end": 37439,
          "left": {
            "type": "UnaryExpression",
            "start": 37425,
            "end": 37434,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37426,
              "end": 37434,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37438,
            "end": 37439,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37444,
          "end": 37450,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37445,
            "end": 37450,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37452,
        "end": 37547,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37457,
            "end": 37544,
            "argument": {
              "type": "NewExpression",
              "start": 37463,
              "end": 37543,
              "callee": {
                "type": "Identifier",
                "start": 37467,
                "end": 37479,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37480,
                  "end": 37542,
                  "left": {
                    "type": "Literal",
                    "start": 37480,
                    "end": 37523,
                    "value": "#313: -16777216 >> 9 === -32768. Actual: ",
                    "raw": "'#313: -16777216 >> 9 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37526,
                    "end": 37542,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37527,
                      "end": 37541,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37527,
                        "end": 37536,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37528,
                          "end": 37536,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37540,
                        "end": 37541,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37551,
      "end": 37677,
      "test": {
        "type": "BinaryExpression",
        "start": 37555,
        "end": 37580,
        "left": {
          "type": "BinaryExpression",
          "start": 37555,
          "end": 37569,
          "left": {
            "type": "UnaryExpression",
            "start": 37555,
            "end": 37564,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37556,
              "end": 37564,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37568,
            "end": 37569,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37574,
          "end": 37580,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37575,
            "end": 37580,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37582,
        "end": 37677,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37587,
            "end": 37674,
            "argument": {
              "type": "NewExpression",
              "start": 37593,
              "end": 37673,
              "callee": {
                "type": "Identifier",
                "start": 37597,
                "end": 37609,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37610,
                  "end": 37672,
                  "left": {
                    "type": "Literal",
                    "start": 37610,
                    "end": 37653,
                    "value": "#314: -33554432 >> 9 === -65536. Actual: ",
                    "raw": "'#314: -33554432 >> 9 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37656,
                    "end": 37672,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37657,
                      "end": 37671,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37657,
                        "end": 37666,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37658,
                          "end": 37666,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37670,
                        "end": 37671,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37681,
      "end": 37809,
      "test": {
        "type": "BinaryExpression",
        "start": 37685,
        "end": 37711,
        "left": {
          "type": "BinaryExpression",
          "start": 37685,
          "end": 37699,
          "left": {
            "type": "UnaryExpression",
            "start": 37685,
            "end": 37694,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37686,
              "end": 37694,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37698,
            "end": 37699,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37704,
          "end": 37711,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37705,
            "end": 37711,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37713,
        "end": 37809,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37718,
            "end": 37806,
            "argument": {
              "type": "NewExpression",
              "start": 37724,
              "end": 37805,
              "callee": {
                "type": "Identifier",
                "start": 37728,
                "end": 37740,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37741,
                  "end": 37804,
                  "left": {
                    "type": "Literal",
                    "start": 37741,
                    "end": 37785,
                    "value": "#315: -67108864 >> 9 === -131072. Actual: ",
                    "raw": "'#315: -67108864 >> 9 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37788,
                    "end": 37804,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37789,
                      "end": 37803,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37789,
                        "end": 37798,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37790,
                          "end": 37798,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37802,
                        "end": 37803,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37813,
      "end": 37944,
      "test": {
        "type": "BinaryExpression",
        "start": 37817,
        "end": 37844,
        "left": {
          "type": "BinaryExpression",
          "start": 37817,
          "end": 37832,
          "left": {
            "type": "UnaryExpression",
            "start": 37817,
            "end": 37827,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37818,
              "end": 37827,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37831,
            "end": 37832,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37837,
          "end": 37844,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37838,
            "end": 37844,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37846,
        "end": 37944,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37851,
            "end": 37941,
            "argument": {
              "type": "NewExpression",
              "start": 37857,
              "end": 37940,
              "callee": {
                "type": "Identifier",
                "start": 37861,
                "end": 37873,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37874,
                  "end": 37939,
                  "left": {
                    "type": "Literal",
                    "start": 37874,
                    "end": 37919,
                    "value": "#316: -134217728 >> 9 === -262144. Actual: ",
                    "raw": "'#316: -134217728 >> 9 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37922,
                    "end": 37939,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37923,
                      "end": 37938,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 37923,
                        "end": 37933,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 37924,
                          "end": 37933,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37937,
                        "end": 37938,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37948,
      "end": 38079,
      "test": {
        "type": "BinaryExpression",
        "start": 37952,
        "end": 37979,
        "left": {
          "type": "BinaryExpression",
          "start": 37952,
          "end": 37967,
          "left": {
            "type": "UnaryExpression",
            "start": 37952,
            "end": 37962,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 37953,
              "end": 37962,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37966,
            "end": 37967,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 37972,
          "end": 37979,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 37973,
            "end": 37979,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37981,
        "end": 38079,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37986,
            "end": 38076,
            "argument": {
              "type": "NewExpression",
              "start": 37992,
              "end": 38075,
              "callee": {
                "type": "Identifier",
                "start": 37996,
                "end": 38008,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38009,
                  "end": 38074,
                  "left": {
                    "type": "Literal",
                    "start": 38009,
                    "end": 38054,
                    "value": "#317: -268435456 >> 9 === -524288. Actual: ",
                    "raw": "'#317: -268435456 >> 9 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38057,
                    "end": 38074,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38058,
                      "end": 38073,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38058,
                        "end": 38068,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38059,
                          "end": 38068,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38072,
                        "end": 38073,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38083,
      "end": 38216,
      "test": {
        "type": "BinaryExpression",
        "start": 38087,
        "end": 38115,
        "left": {
          "type": "BinaryExpression",
          "start": 38087,
          "end": 38102,
          "left": {
            "type": "UnaryExpression",
            "start": 38087,
            "end": 38097,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38088,
              "end": 38097,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38101,
            "end": 38102,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38107,
          "end": 38115,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38108,
            "end": 38115,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38117,
        "end": 38216,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38122,
            "end": 38213,
            "argument": {
              "type": "NewExpression",
              "start": 38128,
              "end": 38212,
              "callee": {
                "type": "Identifier",
                "start": 38132,
                "end": 38144,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38145,
                  "end": 38211,
                  "left": {
                    "type": "Literal",
                    "start": 38145,
                    "end": 38191,
                    "value": "#318: -536870912 >> 9 === -1048576. Actual: ",
                    "raw": "'#318: -536870912 >> 9 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38194,
                    "end": 38211,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38195,
                      "end": 38210,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38195,
                        "end": 38205,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38196,
                          "end": 38205,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38209,
                        "end": 38210,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38220,
      "end": 38356,
      "test": {
        "type": "BinaryExpression",
        "start": 38224,
        "end": 38253,
        "left": {
          "type": "BinaryExpression",
          "start": 38224,
          "end": 38240,
          "left": {
            "type": "UnaryExpression",
            "start": 38224,
            "end": 38235,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38225,
              "end": 38235,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38239,
            "end": 38240,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38245,
          "end": 38253,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38246,
            "end": 38253,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38255,
        "end": 38356,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38260,
            "end": 38353,
            "argument": {
              "type": "NewExpression",
              "start": 38266,
              "end": 38352,
              "callee": {
                "type": "Identifier",
                "start": 38270,
                "end": 38282,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38283,
                  "end": 38351,
                  "left": {
                    "type": "Literal",
                    "start": 38283,
                    "end": 38330,
                    "value": "#319: -1073741824 >> 9 === -2097152. Actual: ",
                    "raw": "'#319: -1073741824 >> 9 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38333,
                    "end": 38351,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38334,
                      "end": 38350,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38334,
                        "end": 38345,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38335,
                          "end": 38345,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38349,
                        "end": 38350,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38360,
      "end": 38496,
      "test": {
        "type": "BinaryExpression",
        "start": 38364,
        "end": 38393,
        "left": {
          "type": "BinaryExpression",
          "start": 38364,
          "end": 38380,
          "left": {
            "type": "UnaryExpression",
            "start": 38364,
            "end": 38375,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38365,
              "end": 38375,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38379,
            "end": 38380,
            "value": 9,
            "raw": "9",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38385,
          "end": 38393,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38386,
            "end": 38393,
            "value": 4194304,
            "raw": "4194304",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38395,
        "end": 38496,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38400,
            "end": 38493,
            "argument": {
              "type": "NewExpression",
              "start": 38406,
              "end": 38492,
              "callee": {
                "type": "Identifier",
                "start": 38410,
                "end": 38422,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38423,
                  "end": 38491,
                  "left": {
                    "type": "Literal",
                    "start": 38423,
                    "end": 38470,
                    "value": "#320: -2147483648 >> 9 === -4194304. Actual: ",
                    "raw": "'#320: -2147483648 >> 9 === -4194304. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38473,
                    "end": 38491,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38474,
                      "end": 38490,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38474,
                        "end": 38485,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38475,
                          "end": 38485,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38489,
                        "end": 38490,
                        "value": 9,
                        "raw": "9",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38500,
      "end": 38600,
      "test": {
        "type": "BinaryExpression",
        "start": 38504,
        "end": 38519,
        "left": {
          "type": "BinaryExpression",
          "start": 38504,
          "end": 38512,
          "left": {
            "type": "UnaryExpression",
            "start": 38504,
            "end": 38506,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38505,
              "end": 38506,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38510,
            "end": 38512,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38517,
          "end": 38519,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38518,
            "end": 38519,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38521,
        "end": 38600,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38526,
            "end": 38597,
            "argument": {
              "type": "NewExpression",
              "start": 38532,
              "end": 38596,
              "callee": {
                "type": "Identifier",
                "start": 38536,
                "end": 38548,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38549,
                  "end": 38595,
                  "left": {
                    "type": "Literal",
                    "start": 38549,
                    "end": 38582,
                    "value": "#321: -1 >> 10 === -1. Actual: ",
                    "raw": "'#321: -1 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38585,
                    "end": 38595,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38586,
                      "end": 38594,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38586,
                        "end": 38588,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38587,
                          "end": 38588,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38592,
                        "end": 38594,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38604,
      "end": 38704,
      "test": {
        "type": "BinaryExpression",
        "start": 38608,
        "end": 38623,
        "left": {
          "type": "BinaryExpression",
          "start": 38608,
          "end": 38616,
          "left": {
            "type": "UnaryExpression",
            "start": 38608,
            "end": 38610,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38609,
              "end": 38610,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38614,
            "end": 38616,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38621,
          "end": 38623,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38622,
            "end": 38623,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38625,
        "end": 38704,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38630,
            "end": 38701,
            "argument": {
              "type": "NewExpression",
              "start": 38636,
              "end": 38700,
              "callee": {
                "type": "Identifier",
                "start": 38640,
                "end": 38652,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38653,
                  "end": 38699,
                  "left": {
                    "type": "Literal",
                    "start": 38653,
                    "end": 38686,
                    "value": "#322: -2 >> 10 === -1. Actual: ",
                    "raw": "'#322: -2 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38689,
                    "end": 38699,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38690,
                      "end": 38698,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38690,
                        "end": 38692,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38691,
                          "end": 38692,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38696,
                        "end": 38698,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38708,
      "end": 38808,
      "test": {
        "type": "BinaryExpression",
        "start": 38712,
        "end": 38727,
        "left": {
          "type": "BinaryExpression",
          "start": 38712,
          "end": 38720,
          "left": {
            "type": "UnaryExpression",
            "start": 38712,
            "end": 38714,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38713,
              "end": 38714,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38718,
            "end": 38720,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38725,
          "end": 38727,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38726,
            "end": 38727,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38729,
        "end": 38808,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38734,
            "end": 38805,
            "argument": {
              "type": "NewExpression",
              "start": 38740,
              "end": 38804,
              "callee": {
                "type": "Identifier",
                "start": 38744,
                "end": 38756,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38757,
                  "end": 38803,
                  "left": {
                    "type": "Literal",
                    "start": 38757,
                    "end": 38790,
                    "value": "#323: -4 >> 10 === -1. Actual: ",
                    "raw": "'#323: -4 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38793,
                    "end": 38803,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38794,
                      "end": 38802,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38794,
                        "end": 38796,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38795,
                          "end": 38796,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38800,
                        "end": 38802,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38812,
      "end": 38912,
      "test": {
        "type": "BinaryExpression",
        "start": 38816,
        "end": 38831,
        "left": {
          "type": "BinaryExpression",
          "start": 38816,
          "end": 38824,
          "left": {
            "type": "UnaryExpression",
            "start": 38816,
            "end": 38818,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38817,
              "end": 38818,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38822,
            "end": 38824,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38829,
          "end": 38831,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38830,
            "end": 38831,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38833,
        "end": 38912,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38838,
            "end": 38909,
            "argument": {
              "type": "NewExpression",
              "start": 38844,
              "end": 38908,
              "callee": {
                "type": "Identifier",
                "start": 38848,
                "end": 38860,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38861,
                  "end": 38907,
                  "left": {
                    "type": "Literal",
                    "start": 38861,
                    "end": 38894,
                    "value": "#324: -8 >> 10 === -1. Actual: ",
                    "raw": "'#324: -8 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38897,
                    "end": 38907,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38898,
                      "end": 38906,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 38898,
                        "end": 38900,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 38899,
                          "end": 38900,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38904,
                        "end": 38906,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38916,
      "end": 39019,
      "test": {
        "type": "BinaryExpression",
        "start": 38920,
        "end": 38936,
        "left": {
          "type": "BinaryExpression",
          "start": 38920,
          "end": 38929,
          "left": {
            "type": "UnaryExpression",
            "start": 38920,
            "end": 38923,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 38921,
              "end": 38923,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38927,
            "end": 38929,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 38934,
          "end": 38936,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 38935,
            "end": 38936,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38938,
        "end": 39019,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38943,
            "end": 39016,
            "argument": {
              "type": "NewExpression",
              "start": 38949,
              "end": 39015,
              "callee": {
                "type": "Identifier",
                "start": 38953,
                "end": 38965,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38966,
                  "end": 39014,
                  "left": {
                    "type": "Literal",
                    "start": 38966,
                    "end": 39000,
                    "value": "#325: -16 >> 10 === -1. Actual: ",
                    "raw": "'#325: -16 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39003,
                    "end": 39014,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39004,
                      "end": 39013,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39004,
                        "end": 39007,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39005,
                          "end": 39007,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39011,
                        "end": 39013,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39023,
      "end": 39126,
      "test": {
        "type": "BinaryExpression",
        "start": 39027,
        "end": 39043,
        "left": {
          "type": "BinaryExpression",
          "start": 39027,
          "end": 39036,
          "left": {
            "type": "UnaryExpression",
            "start": 39027,
            "end": 39030,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39028,
              "end": 39030,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39034,
            "end": 39036,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39041,
          "end": 39043,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39042,
            "end": 39043,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39045,
        "end": 39126,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39050,
            "end": 39123,
            "argument": {
              "type": "NewExpression",
              "start": 39056,
              "end": 39122,
              "callee": {
                "type": "Identifier",
                "start": 39060,
                "end": 39072,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39073,
                  "end": 39121,
                  "left": {
                    "type": "Literal",
                    "start": 39073,
                    "end": 39107,
                    "value": "#326: -32 >> 10 === -1. Actual: ",
                    "raw": "'#326: -32 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39110,
                    "end": 39121,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39111,
                      "end": 39120,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39111,
                        "end": 39114,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39112,
                          "end": 39114,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39118,
                        "end": 39120,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39130,
      "end": 39233,
      "test": {
        "type": "BinaryExpression",
        "start": 39134,
        "end": 39150,
        "left": {
          "type": "BinaryExpression",
          "start": 39134,
          "end": 39143,
          "left": {
            "type": "UnaryExpression",
            "start": 39134,
            "end": 39137,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39135,
              "end": 39137,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39141,
            "end": 39143,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39148,
          "end": 39150,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39149,
            "end": 39150,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39152,
        "end": 39233,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39157,
            "end": 39230,
            "argument": {
              "type": "NewExpression",
              "start": 39163,
              "end": 39229,
              "callee": {
                "type": "Identifier",
                "start": 39167,
                "end": 39179,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39180,
                  "end": 39228,
                  "left": {
                    "type": "Literal",
                    "start": 39180,
                    "end": 39214,
                    "value": "#327: -64 >> 10 === -1. Actual: ",
                    "raw": "'#327: -64 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39217,
                    "end": 39228,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39218,
                      "end": 39227,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39218,
                        "end": 39221,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39219,
                          "end": 39221,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39225,
                        "end": 39227,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39237,
      "end": 39343,
      "test": {
        "type": "BinaryExpression",
        "start": 39241,
        "end": 39258,
        "left": {
          "type": "BinaryExpression",
          "start": 39241,
          "end": 39251,
          "left": {
            "type": "UnaryExpression",
            "start": 39241,
            "end": 39245,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39242,
              "end": 39245,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39249,
            "end": 39251,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39256,
          "end": 39258,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39257,
            "end": 39258,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39260,
        "end": 39343,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39265,
            "end": 39340,
            "argument": {
              "type": "NewExpression",
              "start": 39271,
              "end": 39339,
              "callee": {
                "type": "Identifier",
                "start": 39275,
                "end": 39287,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39288,
                  "end": 39338,
                  "left": {
                    "type": "Literal",
                    "start": 39288,
                    "end": 39323,
                    "value": "#328: -128 >> 10 === -1. Actual: ",
                    "raw": "'#328: -128 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39326,
                    "end": 39338,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39327,
                      "end": 39337,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39327,
                        "end": 39331,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39328,
                          "end": 39331,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39335,
                        "end": 39337,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39347,
      "end": 39453,
      "test": {
        "type": "BinaryExpression",
        "start": 39351,
        "end": 39368,
        "left": {
          "type": "BinaryExpression",
          "start": 39351,
          "end": 39361,
          "left": {
            "type": "UnaryExpression",
            "start": 39351,
            "end": 39355,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39352,
              "end": 39355,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39359,
            "end": 39361,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39366,
          "end": 39368,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39367,
            "end": 39368,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39370,
        "end": 39453,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39375,
            "end": 39450,
            "argument": {
              "type": "NewExpression",
              "start": 39381,
              "end": 39449,
              "callee": {
                "type": "Identifier",
                "start": 39385,
                "end": 39397,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39398,
                  "end": 39448,
                  "left": {
                    "type": "Literal",
                    "start": 39398,
                    "end": 39433,
                    "value": "#329: -256 >> 10 === -1. Actual: ",
                    "raw": "'#329: -256 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39436,
                    "end": 39448,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39437,
                      "end": 39447,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39437,
                        "end": 39441,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39438,
                          "end": 39441,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39445,
                        "end": 39447,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39457,
      "end": 39563,
      "test": {
        "type": "BinaryExpression",
        "start": 39461,
        "end": 39478,
        "left": {
          "type": "BinaryExpression",
          "start": 39461,
          "end": 39471,
          "left": {
            "type": "UnaryExpression",
            "start": 39461,
            "end": 39465,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39462,
              "end": 39465,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39469,
            "end": 39471,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39476,
          "end": 39478,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39477,
            "end": 39478,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39480,
        "end": 39563,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39485,
            "end": 39560,
            "argument": {
              "type": "NewExpression",
              "start": 39491,
              "end": 39559,
              "callee": {
                "type": "Identifier",
                "start": 39495,
                "end": 39507,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39508,
                  "end": 39558,
                  "left": {
                    "type": "Literal",
                    "start": 39508,
                    "end": 39543,
                    "value": "#330: -512 >> 10 === -1. Actual: ",
                    "raw": "'#330: -512 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39546,
                    "end": 39558,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39547,
                      "end": 39557,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39547,
                        "end": 39551,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39548,
                          "end": 39551,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39555,
                        "end": 39557,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39567,
      "end": 39676,
      "test": {
        "type": "BinaryExpression",
        "start": 39571,
        "end": 39589,
        "left": {
          "type": "BinaryExpression",
          "start": 39571,
          "end": 39582,
          "left": {
            "type": "UnaryExpression",
            "start": 39571,
            "end": 39576,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39572,
              "end": 39576,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39580,
            "end": 39582,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39587,
          "end": 39589,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39588,
            "end": 39589,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39591,
        "end": 39676,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39596,
            "end": 39673,
            "argument": {
              "type": "NewExpression",
              "start": 39602,
              "end": 39672,
              "callee": {
                "type": "Identifier",
                "start": 39606,
                "end": 39618,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39619,
                  "end": 39671,
                  "left": {
                    "type": "Literal",
                    "start": 39619,
                    "end": 39655,
                    "value": "#331: -1024 >> 10 === -1. Actual: ",
                    "raw": "'#331: -1024 >> 10 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39658,
                    "end": 39671,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39659,
                      "end": 39670,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39659,
                        "end": 39664,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39660,
                          "end": 39664,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39668,
                        "end": 39670,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39680,
      "end": 39789,
      "test": {
        "type": "BinaryExpression",
        "start": 39684,
        "end": 39702,
        "left": {
          "type": "BinaryExpression",
          "start": 39684,
          "end": 39695,
          "left": {
            "type": "UnaryExpression",
            "start": 39684,
            "end": 39689,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39685,
              "end": 39689,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39693,
            "end": 39695,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39700,
          "end": 39702,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39701,
            "end": 39702,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39704,
        "end": 39789,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39709,
            "end": 39786,
            "argument": {
              "type": "NewExpression",
              "start": 39715,
              "end": 39785,
              "callee": {
                "type": "Identifier",
                "start": 39719,
                "end": 39731,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39732,
                  "end": 39784,
                  "left": {
                    "type": "Literal",
                    "start": 39732,
                    "end": 39768,
                    "value": "#332: -2048 >> 10 === -2. Actual: ",
                    "raw": "'#332: -2048 >> 10 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39771,
                    "end": 39784,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39772,
                      "end": 39783,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39772,
                        "end": 39777,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39773,
                          "end": 39777,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39781,
                        "end": 39783,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39793,
      "end": 39902,
      "test": {
        "type": "BinaryExpression",
        "start": 39797,
        "end": 39815,
        "left": {
          "type": "BinaryExpression",
          "start": 39797,
          "end": 39808,
          "left": {
            "type": "UnaryExpression",
            "start": 39797,
            "end": 39802,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39798,
              "end": 39802,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39806,
            "end": 39808,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39813,
          "end": 39815,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39814,
            "end": 39815,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39817,
        "end": 39902,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39822,
            "end": 39899,
            "argument": {
              "type": "NewExpression",
              "start": 39828,
              "end": 39898,
              "callee": {
                "type": "Identifier",
                "start": 39832,
                "end": 39844,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39845,
                  "end": 39897,
                  "left": {
                    "type": "Literal",
                    "start": 39845,
                    "end": 39881,
                    "value": "#333: -4096 >> 10 === -4. Actual: ",
                    "raw": "'#333: -4096 >> 10 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39884,
                    "end": 39897,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39885,
                      "end": 39896,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39885,
                        "end": 39890,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39886,
                          "end": 39890,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39894,
                        "end": 39896,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39906,
      "end": 40015,
      "test": {
        "type": "BinaryExpression",
        "start": 39910,
        "end": 39928,
        "left": {
          "type": "BinaryExpression",
          "start": 39910,
          "end": 39921,
          "left": {
            "type": "UnaryExpression",
            "start": 39910,
            "end": 39915,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 39911,
              "end": 39915,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39919,
            "end": 39921,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 39926,
          "end": 39928,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 39927,
            "end": 39928,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39930,
        "end": 40015,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39935,
            "end": 40012,
            "argument": {
              "type": "NewExpression",
              "start": 39941,
              "end": 40011,
              "callee": {
                "type": "Identifier",
                "start": 39945,
                "end": 39957,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39958,
                  "end": 40010,
                  "left": {
                    "type": "Literal",
                    "start": 39958,
                    "end": 39994,
                    "value": "#334: -8192 >> 10 === -8. Actual: ",
                    "raw": "'#334: -8192 >> 10 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39997,
                    "end": 40010,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39998,
                      "end": 40009,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 39998,
                        "end": 40003,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 39999,
                          "end": 40003,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40007,
                        "end": 40009,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40019,
      "end": 40133,
      "test": {
        "type": "BinaryExpression",
        "start": 40023,
        "end": 40043,
        "left": {
          "type": "BinaryExpression",
          "start": 40023,
          "end": 40035,
          "left": {
            "type": "UnaryExpression",
            "start": 40023,
            "end": 40029,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40024,
              "end": 40029,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40033,
            "end": 40035,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40040,
          "end": 40043,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40041,
            "end": 40043,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40045,
        "end": 40133,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40050,
            "end": 40130,
            "argument": {
              "type": "NewExpression",
              "start": 40056,
              "end": 40129,
              "callee": {
                "type": "Identifier",
                "start": 40060,
                "end": 40072,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40073,
                  "end": 40128,
                  "left": {
                    "type": "Literal",
                    "start": 40073,
                    "end": 40111,
                    "value": "#335: -16384 >> 10 === -16. Actual: ",
                    "raw": "'#335: -16384 >> 10 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40114,
                    "end": 40128,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40115,
                      "end": 40127,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40115,
                        "end": 40121,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40116,
                          "end": 40121,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40125,
                        "end": 40127,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40137,
      "end": 40251,
      "test": {
        "type": "BinaryExpression",
        "start": 40141,
        "end": 40161,
        "left": {
          "type": "BinaryExpression",
          "start": 40141,
          "end": 40153,
          "left": {
            "type": "UnaryExpression",
            "start": 40141,
            "end": 40147,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40142,
              "end": 40147,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40151,
            "end": 40153,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40158,
          "end": 40161,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40159,
            "end": 40161,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40163,
        "end": 40251,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40168,
            "end": 40248,
            "argument": {
              "type": "NewExpression",
              "start": 40174,
              "end": 40247,
              "callee": {
                "type": "Identifier",
                "start": 40178,
                "end": 40190,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40191,
                  "end": 40246,
                  "left": {
                    "type": "Literal",
                    "start": 40191,
                    "end": 40229,
                    "value": "#336: -32768 >> 10 === -32. Actual: ",
                    "raw": "'#336: -32768 >> 10 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40232,
                    "end": 40246,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40233,
                      "end": 40245,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40233,
                        "end": 40239,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40234,
                          "end": 40239,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40243,
                        "end": 40245,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40255,
      "end": 40369,
      "test": {
        "type": "BinaryExpression",
        "start": 40259,
        "end": 40279,
        "left": {
          "type": "BinaryExpression",
          "start": 40259,
          "end": 40271,
          "left": {
            "type": "UnaryExpression",
            "start": 40259,
            "end": 40265,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40260,
              "end": 40265,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40269,
            "end": 40271,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40276,
          "end": 40279,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40277,
            "end": 40279,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40281,
        "end": 40369,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40286,
            "end": 40366,
            "argument": {
              "type": "NewExpression",
              "start": 40292,
              "end": 40365,
              "callee": {
                "type": "Identifier",
                "start": 40296,
                "end": 40308,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40309,
                  "end": 40364,
                  "left": {
                    "type": "Literal",
                    "start": 40309,
                    "end": 40347,
                    "value": "#337: -65536 >> 10 === -64. Actual: ",
                    "raw": "'#337: -65536 >> 10 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40350,
                    "end": 40364,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40351,
                      "end": 40363,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40351,
                        "end": 40357,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40352,
                          "end": 40357,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40361,
                        "end": 40363,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40373,
      "end": 40492,
      "test": {
        "type": "BinaryExpression",
        "start": 40377,
        "end": 40399,
        "left": {
          "type": "BinaryExpression",
          "start": 40377,
          "end": 40390,
          "left": {
            "type": "UnaryExpression",
            "start": 40377,
            "end": 40384,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40378,
              "end": 40384,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40388,
            "end": 40390,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40395,
          "end": 40399,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40396,
            "end": 40399,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40401,
        "end": 40492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40406,
            "end": 40489,
            "argument": {
              "type": "NewExpression",
              "start": 40412,
              "end": 40488,
              "callee": {
                "type": "Identifier",
                "start": 40416,
                "end": 40428,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40429,
                  "end": 40487,
                  "left": {
                    "type": "Literal",
                    "start": 40429,
                    "end": 40469,
                    "value": "#338: -131072 >> 10 === -128. Actual: ",
                    "raw": "'#338: -131072 >> 10 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40472,
                    "end": 40487,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40473,
                      "end": 40486,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40473,
                        "end": 40480,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40474,
                          "end": 40480,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40484,
                        "end": 40486,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40496,
      "end": 40615,
      "test": {
        "type": "BinaryExpression",
        "start": 40500,
        "end": 40522,
        "left": {
          "type": "BinaryExpression",
          "start": 40500,
          "end": 40513,
          "left": {
            "type": "UnaryExpression",
            "start": 40500,
            "end": 40507,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40501,
              "end": 40507,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40511,
            "end": 40513,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40518,
          "end": 40522,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40519,
            "end": 40522,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40524,
        "end": 40615,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40529,
            "end": 40612,
            "argument": {
              "type": "NewExpression",
              "start": 40535,
              "end": 40611,
              "callee": {
                "type": "Identifier",
                "start": 40539,
                "end": 40551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40552,
                  "end": 40610,
                  "left": {
                    "type": "Literal",
                    "start": 40552,
                    "end": 40592,
                    "value": "#339: -262144 >> 10 === -256. Actual: ",
                    "raw": "'#339: -262144 >> 10 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40595,
                    "end": 40610,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40596,
                      "end": 40609,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40596,
                        "end": 40603,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40597,
                          "end": 40603,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40607,
                        "end": 40609,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40619,
      "end": 40738,
      "test": {
        "type": "BinaryExpression",
        "start": 40623,
        "end": 40645,
        "left": {
          "type": "BinaryExpression",
          "start": 40623,
          "end": 40636,
          "left": {
            "type": "UnaryExpression",
            "start": 40623,
            "end": 40630,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40624,
              "end": 40630,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40634,
            "end": 40636,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40641,
          "end": 40645,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40642,
            "end": 40645,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40647,
        "end": 40738,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40652,
            "end": 40735,
            "argument": {
              "type": "NewExpression",
              "start": 40658,
              "end": 40734,
              "callee": {
                "type": "Identifier",
                "start": 40662,
                "end": 40674,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40675,
                  "end": 40733,
                  "left": {
                    "type": "Literal",
                    "start": 40675,
                    "end": 40715,
                    "value": "#340: -524288 >> 10 === -512. Actual: ",
                    "raw": "'#340: -524288 >> 10 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40718,
                    "end": 40733,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40719,
                      "end": 40732,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40719,
                        "end": 40726,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40720,
                          "end": 40726,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40730,
                        "end": 40732,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40742,
      "end": 40866,
      "test": {
        "type": "BinaryExpression",
        "start": 40746,
        "end": 40770,
        "left": {
          "type": "BinaryExpression",
          "start": 40746,
          "end": 40760,
          "left": {
            "type": "UnaryExpression",
            "start": 40746,
            "end": 40754,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40747,
              "end": 40754,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40758,
            "end": 40760,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40765,
          "end": 40770,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40766,
            "end": 40770,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40772,
        "end": 40866,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40777,
            "end": 40863,
            "argument": {
              "type": "NewExpression",
              "start": 40783,
              "end": 40862,
              "callee": {
                "type": "Identifier",
                "start": 40787,
                "end": 40799,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40800,
                  "end": 40861,
                  "left": {
                    "type": "Literal",
                    "start": 40800,
                    "end": 40842,
                    "value": "#341: -1048576 >> 10 === -1024. Actual: ",
                    "raw": "'#341: -1048576 >> 10 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40845,
                    "end": 40861,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40846,
                      "end": 40860,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40846,
                        "end": 40854,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40847,
                          "end": 40854,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40858,
                        "end": 40860,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40870,
      "end": 40994,
      "test": {
        "type": "BinaryExpression",
        "start": 40874,
        "end": 40898,
        "left": {
          "type": "BinaryExpression",
          "start": 40874,
          "end": 40888,
          "left": {
            "type": "UnaryExpression",
            "start": 40874,
            "end": 40882,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 40875,
              "end": 40882,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40886,
            "end": 40888,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 40893,
          "end": 40898,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 40894,
            "end": 40898,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40900,
        "end": 40994,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40905,
            "end": 40991,
            "argument": {
              "type": "NewExpression",
              "start": 40911,
              "end": 40990,
              "callee": {
                "type": "Identifier",
                "start": 40915,
                "end": 40927,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40928,
                  "end": 40989,
                  "left": {
                    "type": "Literal",
                    "start": 40928,
                    "end": 40970,
                    "value": "#342: -2097152 >> 10 === -2048. Actual: ",
                    "raw": "'#342: -2097152 >> 10 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40973,
                    "end": 40989,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40974,
                      "end": 40988,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 40974,
                        "end": 40982,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 40975,
                          "end": 40982,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40986,
                        "end": 40988,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40998,
      "end": 41122,
      "test": {
        "type": "BinaryExpression",
        "start": 41002,
        "end": 41026,
        "left": {
          "type": "BinaryExpression",
          "start": 41002,
          "end": 41016,
          "left": {
            "type": "UnaryExpression",
            "start": 41002,
            "end": 41010,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41003,
              "end": 41010,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41014,
            "end": 41016,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41021,
          "end": 41026,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41022,
            "end": 41026,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41028,
        "end": 41122,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41033,
            "end": 41119,
            "argument": {
              "type": "NewExpression",
              "start": 41039,
              "end": 41118,
              "callee": {
                "type": "Identifier",
                "start": 41043,
                "end": 41055,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41056,
                  "end": 41117,
                  "left": {
                    "type": "Literal",
                    "start": 41056,
                    "end": 41098,
                    "value": "#343: -4194304 >> 10 === -4096. Actual: ",
                    "raw": "'#343: -4194304 >> 10 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41101,
                    "end": 41117,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41102,
                      "end": 41116,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41102,
                        "end": 41110,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41103,
                          "end": 41110,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41114,
                        "end": 41116,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41126,
      "end": 41250,
      "test": {
        "type": "BinaryExpression",
        "start": 41130,
        "end": 41154,
        "left": {
          "type": "BinaryExpression",
          "start": 41130,
          "end": 41144,
          "left": {
            "type": "UnaryExpression",
            "start": 41130,
            "end": 41138,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41131,
              "end": 41138,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41142,
            "end": 41144,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41149,
          "end": 41154,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41150,
            "end": 41154,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41156,
        "end": 41250,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41161,
            "end": 41247,
            "argument": {
              "type": "NewExpression",
              "start": 41167,
              "end": 41246,
              "callee": {
                "type": "Identifier",
                "start": 41171,
                "end": 41183,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41184,
                  "end": 41245,
                  "left": {
                    "type": "Literal",
                    "start": 41184,
                    "end": 41226,
                    "value": "#344: -8388608 >> 10 === -8192. Actual: ",
                    "raw": "'#344: -8388608 >> 10 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41229,
                    "end": 41245,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41230,
                      "end": 41244,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41230,
                        "end": 41238,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41231,
                          "end": 41238,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41242,
                        "end": 41244,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41254,
      "end": 41383,
      "test": {
        "type": "BinaryExpression",
        "start": 41258,
        "end": 41284,
        "left": {
          "type": "BinaryExpression",
          "start": 41258,
          "end": 41273,
          "left": {
            "type": "UnaryExpression",
            "start": 41258,
            "end": 41267,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41259,
              "end": 41267,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41271,
            "end": 41273,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41278,
          "end": 41284,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41279,
            "end": 41284,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41286,
        "end": 41383,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41291,
            "end": 41380,
            "argument": {
              "type": "NewExpression",
              "start": 41297,
              "end": 41379,
              "callee": {
                "type": "Identifier",
                "start": 41301,
                "end": 41313,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41314,
                  "end": 41378,
                  "left": {
                    "type": "Literal",
                    "start": 41314,
                    "end": 41358,
                    "value": "#345: -16777216 >> 10 === -16384. Actual: ",
                    "raw": "'#345: -16777216 >> 10 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41361,
                    "end": 41378,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41362,
                      "end": 41377,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41362,
                        "end": 41371,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41363,
                          "end": 41371,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41375,
                        "end": 41377,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41387,
      "end": 41516,
      "test": {
        "type": "BinaryExpression",
        "start": 41391,
        "end": 41417,
        "left": {
          "type": "BinaryExpression",
          "start": 41391,
          "end": 41406,
          "left": {
            "type": "UnaryExpression",
            "start": 41391,
            "end": 41400,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41392,
              "end": 41400,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41404,
            "end": 41406,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41411,
          "end": 41417,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41412,
            "end": 41417,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41419,
        "end": 41516,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41424,
            "end": 41513,
            "argument": {
              "type": "NewExpression",
              "start": 41430,
              "end": 41512,
              "callee": {
                "type": "Identifier",
                "start": 41434,
                "end": 41446,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41447,
                  "end": 41511,
                  "left": {
                    "type": "Literal",
                    "start": 41447,
                    "end": 41491,
                    "value": "#346: -33554432 >> 10 === -32768. Actual: ",
                    "raw": "'#346: -33554432 >> 10 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41494,
                    "end": 41511,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41495,
                      "end": 41510,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41495,
                        "end": 41504,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41496,
                          "end": 41504,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41508,
                        "end": 41510,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41520,
      "end": 41649,
      "test": {
        "type": "BinaryExpression",
        "start": 41524,
        "end": 41550,
        "left": {
          "type": "BinaryExpression",
          "start": 41524,
          "end": 41539,
          "left": {
            "type": "UnaryExpression",
            "start": 41524,
            "end": 41533,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41525,
              "end": 41533,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41537,
            "end": 41539,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41544,
          "end": 41550,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41545,
            "end": 41550,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41552,
        "end": 41649,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41557,
            "end": 41646,
            "argument": {
              "type": "NewExpression",
              "start": 41563,
              "end": 41645,
              "callee": {
                "type": "Identifier",
                "start": 41567,
                "end": 41579,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41580,
                  "end": 41644,
                  "left": {
                    "type": "Literal",
                    "start": 41580,
                    "end": 41624,
                    "value": "#347: -67108864 >> 10 === -65536. Actual: ",
                    "raw": "'#347: -67108864 >> 10 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41627,
                    "end": 41644,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41628,
                      "end": 41643,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41628,
                        "end": 41637,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41629,
                          "end": 41637,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41641,
                        "end": 41643,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41653,
      "end": 41787,
      "test": {
        "type": "BinaryExpression",
        "start": 41657,
        "end": 41685,
        "left": {
          "type": "BinaryExpression",
          "start": 41657,
          "end": 41673,
          "left": {
            "type": "UnaryExpression",
            "start": 41657,
            "end": 41667,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41658,
              "end": 41667,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41671,
            "end": 41673,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41678,
          "end": 41685,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41679,
            "end": 41685,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41687,
        "end": 41787,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41692,
            "end": 41784,
            "argument": {
              "type": "NewExpression",
              "start": 41698,
              "end": 41783,
              "callee": {
                "type": "Identifier",
                "start": 41702,
                "end": 41714,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41715,
                  "end": 41782,
                  "left": {
                    "type": "Literal",
                    "start": 41715,
                    "end": 41761,
                    "value": "#348: -134217728 >> 10 === -131072. Actual: ",
                    "raw": "'#348: -134217728 >> 10 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41764,
                    "end": 41782,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41765,
                      "end": 41781,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41765,
                        "end": 41775,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41766,
                          "end": 41775,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41779,
                        "end": 41781,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41791,
      "end": 41925,
      "test": {
        "type": "BinaryExpression",
        "start": 41795,
        "end": 41823,
        "left": {
          "type": "BinaryExpression",
          "start": 41795,
          "end": 41811,
          "left": {
            "type": "UnaryExpression",
            "start": 41795,
            "end": 41805,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41796,
              "end": 41805,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41809,
            "end": 41811,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41816,
          "end": 41823,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41817,
            "end": 41823,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41825,
        "end": 41925,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41830,
            "end": 41922,
            "argument": {
              "type": "NewExpression",
              "start": 41836,
              "end": 41921,
              "callee": {
                "type": "Identifier",
                "start": 41840,
                "end": 41852,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41853,
                  "end": 41920,
                  "left": {
                    "type": "Literal",
                    "start": 41853,
                    "end": 41899,
                    "value": "#349: -268435456 >> 10 === -262144. Actual: ",
                    "raw": "'#349: -268435456 >> 10 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41902,
                    "end": 41920,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41903,
                      "end": 41919,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 41903,
                        "end": 41913,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 41904,
                          "end": 41913,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41917,
                        "end": 41919,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41929,
      "end": 42063,
      "test": {
        "type": "BinaryExpression",
        "start": 41933,
        "end": 41961,
        "left": {
          "type": "BinaryExpression",
          "start": 41933,
          "end": 41949,
          "left": {
            "type": "UnaryExpression",
            "start": 41933,
            "end": 41943,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 41934,
              "end": 41943,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41947,
            "end": 41949,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 41954,
          "end": 41961,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 41955,
            "end": 41961,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41963,
        "end": 42063,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41968,
            "end": 42060,
            "argument": {
              "type": "NewExpression",
              "start": 41974,
              "end": 42059,
              "callee": {
                "type": "Identifier",
                "start": 41978,
                "end": 41990,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41991,
                  "end": 42058,
                  "left": {
                    "type": "Literal",
                    "start": 41991,
                    "end": 42037,
                    "value": "#350: -536870912 >> 10 === -524288. Actual: ",
                    "raw": "'#350: -536870912 >> 10 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42040,
                    "end": 42058,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42041,
                      "end": 42057,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42041,
                        "end": 42051,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42042,
                          "end": 42051,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42055,
                        "end": 42057,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42067,
      "end": 42206,
      "test": {
        "type": "BinaryExpression",
        "start": 42071,
        "end": 42101,
        "left": {
          "type": "BinaryExpression",
          "start": 42071,
          "end": 42088,
          "left": {
            "type": "UnaryExpression",
            "start": 42071,
            "end": 42082,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42072,
              "end": 42082,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42086,
            "end": 42088,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42093,
          "end": 42101,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42094,
            "end": 42101,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42103,
        "end": 42206,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42108,
            "end": 42203,
            "argument": {
              "type": "NewExpression",
              "start": 42114,
              "end": 42202,
              "callee": {
                "type": "Identifier",
                "start": 42118,
                "end": 42130,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42131,
                  "end": 42201,
                  "left": {
                    "type": "Literal",
                    "start": 42131,
                    "end": 42179,
                    "value": "#351: -1073741824 >> 10 === -1048576. Actual: ",
                    "raw": "'#351: -1073741824 >> 10 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42182,
                    "end": 42201,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42183,
                      "end": 42200,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42183,
                        "end": 42194,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42184,
                          "end": 42194,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42198,
                        "end": 42200,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42210,
      "end": 42349,
      "test": {
        "type": "BinaryExpression",
        "start": 42214,
        "end": 42244,
        "left": {
          "type": "BinaryExpression",
          "start": 42214,
          "end": 42231,
          "left": {
            "type": "UnaryExpression",
            "start": 42214,
            "end": 42225,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42215,
              "end": 42225,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42229,
            "end": 42231,
            "value": 10,
            "raw": "10",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42236,
          "end": 42244,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42237,
            "end": 42244,
            "value": 2097152,
            "raw": "2097152",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42246,
        "end": 42349,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42251,
            "end": 42346,
            "argument": {
              "type": "NewExpression",
              "start": 42257,
              "end": 42345,
              "callee": {
                "type": "Identifier",
                "start": 42261,
                "end": 42273,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42274,
                  "end": 42344,
                  "left": {
                    "type": "Literal",
                    "start": 42274,
                    "end": 42322,
                    "value": "#352: -2147483648 >> 10 === -2097152. Actual: ",
                    "raw": "'#352: -2147483648 >> 10 === -2097152. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42325,
                    "end": 42344,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42326,
                      "end": 42343,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42326,
                        "end": 42337,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42327,
                          "end": 42337,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42341,
                        "end": 42343,
                        "value": 10,
                        "raw": "10",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42353,
      "end": 42453,
      "test": {
        "type": "BinaryExpression",
        "start": 42357,
        "end": 42372,
        "left": {
          "type": "BinaryExpression",
          "start": 42357,
          "end": 42365,
          "left": {
            "type": "UnaryExpression",
            "start": 42357,
            "end": 42359,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42358,
              "end": 42359,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42363,
            "end": 42365,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42370,
          "end": 42372,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42371,
            "end": 42372,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42374,
        "end": 42453,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42379,
            "end": 42450,
            "argument": {
              "type": "NewExpression",
              "start": 42385,
              "end": 42449,
              "callee": {
                "type": "Identifier",
                "start": 42389,
                "end": 42401,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42402,
                  "end": 42448,
                  "left": {
                    "type": "Literal",
                    "start": 42402,
                    "end": 42435,
                    "value": "#353: -1 >> 11 === -1. Actual: ",
                    "raw": "'#353: -1 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42438,
                    "end": 42448,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42439,
                      "end": 42447,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42439,
                        "end": 42441,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42440,
                          "end": 42441,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42445,
                        "end": 42447,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42457,
      "end": 42557,
      "test": {
        "type": "BinaryExpression",
        "start": 42461,
        "end": 42476,
        "left": {
          "type": "BinaryExpression",
          "start": 42461,
          "end": 42469,
          "left": {
            "type": "UnaryExpression",
            "start": 42461,
            "end": 42463,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42462,
              "end": 42463,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42467,
            "end": 42469,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42474,
          "end": 42476,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42475,
            "end": 42476,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42478,
        "end": 42557,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42483,
            "end": 42554,
            "argument": {
              "type": "NewExpression",
              "start": 42489,
              "end": 42553,
              "callee": {
                "type": "Identifier",
                "start": 42493,
                "end": 42505,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42506,
                  "end": 42552,
                  "left": {
                    "type": "Literal",
                    "start": 42506,
                    "end": 42539,
                    "value": "#354: -2 >> 11 === -1. Actual: ",
                    "raw": "'#354: -2 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42542,
                    "end": 42552,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42543,
                      "end": 42551,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42543,
                        "end": 42545,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42544,
                          "end": 42545,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42549,
                        "end": 42551,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42561,
      "end": 42661,
      "test": {
        "type": "BinaryExpression",
        "start": 42565,
        "end": 42580,
        "left": {
          "type": "BinaryExpression",
          "start": 42565,
          "end": 42573,
          "left": {
            "type": "UnaryExpression",
            "start": 42565,
            "end": 42567,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42566,
              "end": 42567,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42571,
            "end": 42573,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42578,
          "end": 42580,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42579,
            "end": 42580,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42582,
        "end": 42661,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42587,
            "end": 42658,
            "argument": {
              "type": "NewExpression",
              "start": 42593,
              "end": 42657,
              "callee": {
                "type": "Identifier",
                "start": 42597,
                "end": 42609,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42610,
                  "end": 42656,
                  "left": {
                    "type": "Literal",
                    "start": 42610,
                    "end": 42643,
                    "value": "#355: -4 >> 11 === -1. Actual: ",
                    "raw": "'#355: -4 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42646,
                    "end": 42656,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42647,
                      "end": 42655,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42647,
                        "end": 42649,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42648,
                          "end": 42649,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42653,
                        "end": 42655,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42665,
      "end": 42765,
      "test": {
        "type": "BinaryExpression",
        "start": 42669,
        "end": 42684,
        "left": {
          "type": "BinaryExpression",
          "start": 42669,
          "end": 42677,
          "left": {
            "type": "UnaryExpression",
            "start": 42669,
            "end": 42671,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42670,
              "end": 42671,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42675,
            "end": 42677,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42682,
          "end": 42684,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42683,
            "end": 42684,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42686,
        "end": 42765,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42691,
            "end": 42762,
            "argument": {
              "type": "NewExpression",
              "start": 42697,
              "end": 42761,
              "callee": {
                "type": "Identifier",
                "start": 42701,
                "end": 42713,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42714,
                  "end": 42760,
                  "left": {
                    "type": "Literal",
                    "start": 42714,
                    "end": 42747,
                    "value": "#356: -8 >> 11 === -1. Actual: ",
                    "raw": "'#356: -8 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42750,
                    "end": 42760,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42751,
                      "end": 42759,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42751,
                        "end": 42753,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42752,
                          "end": 42753,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42757,
                        "end": 42759,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42769,
      "end": 42872,
      "test": {
        "type": "BinaryExpression",
        "start": 42773,
        "end": 42789,
        "left": {
          "type": "BinaryExpression",
          "start": 42773,
          "end": 42782,
          "left": {
            "type": "UnaryExpression",
            "start": 42773,
            "end": 42776,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42774,
              "end": 42776,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42780,
            "end": 42782,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42787,
          "end": 42789,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42788,
            "end": 42789,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42791,
        "end": 42872,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42796,
            "end": 42869,
            "argument": {
              "type": "NewExpression",
              "start": 42802,
              "end": 42868,
              "callee": {
                "type": "Identifier",
                "start": 42806,
                "end": 42818,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42819,
                  "end": 42867,
                  "left": {
                    "type": "Literal",
                    "start": 42819,
                    "end": 42853,
                    "value": "#357: -16 >> 11 === -1. Actual: ",
                    "raw": "'#357: -16 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42856,
                    "end": 42867,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42857,
                      "end": 42866,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42857,
                        "end": 42860,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42858,
                          "end": 42860,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42864,
                        "end": 42866,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42876,
      "end": 42979,
      "test": {
        "type": "BinaryExpression",
        "start": 42880,
        "end": 42896,
        "left": {
          "type": "BinaryExpression",
          "start": 42880,
          "end": 42889,
          "left": {
            "type": "UnaryExpression",
            "start": 42880,
            "end": 42883,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42881,
              "end": 42883,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42887,
            "end": 42889,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 42894,
          "end": 42896,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 42895,
            "end": 42896,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42898,
        "end": 42979,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42903,
            "end": 42976,
            "argument": {
              "type": "NewExpression",
              "start": 42909,
              "end": 42975,
              "callee": {
                "type": "Identifier",
                "start": 42913,
                "end": 42925,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42926,
                  "end": 42974,
                  "left": {
                    "type": "Literal",
                    "start": 42926,
                    "end": 42960,
                    "value": "#358: -32 >> 11 === -1. Actual: ",
                    "raw": "'#358: -32 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42963,
                    "end": 42974,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42964,
                      "end": 42973,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 42964,
                        "end": 42967,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 42965,
                          "end": 42967,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42971,
                        "end": 42973,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42983,
      "end": 43086,
      "test": {
        "type": "BinaryExpression",
        "start": 42987,
        "end": 43003,
        "left": {
          "type": "BinaryExpression",
          "start": 42987,
          "end": 42996,
          "left": {
            "type": "UnaryExpression",
            "start": 42987,
            "end": 42990,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 42988,
              "end": 42990,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42994,
            "end": 42996,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43001,
          "end": 43003,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43002,
            "end": 43003,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43005,
        "end": 43086,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43010,
            "end": 43083,
            "argument": {
              "type": "NewExpression",
              "start": 43016,
              "end": 43082,
              "callee": {
                "type": "Identifier",
                "start": 43020,
                "end": 43032,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43033,
                  "end": 43081,
                  "left": {
                    "type": "Literal",
                    "start": 43033,
                    "end": 43067,
                    "value": "#359: -64 >> 11 === -1. Actual: ",
                    "raw": "'#359: -64 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43070,
                    "end": 43081,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43071,
                      "end": 43080,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43071,
                        "end": 43074,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43072,
                          "end": 43074,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43078,
                        "end": 43080,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43090,
      "end": 43196,
      "test": {
        "type": "BinaryExpression",
        "start": 43094,
        "end": 43111,
        "left": {
          "type": "BinaryExpression",
          "start": 43094,
          "end": 43104,
          "left": {
            "type": "UnaryExpression",
            "start": 43094,
            "end": 43098,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43095,
              "end": 43098,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43102,
            "end": 43104,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43109,
          "end": 43111,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43110,
            "end": 43111,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43113,
        "end": 43196,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43118,
            "end": 43193,
            "argument": {
              "type": "NewExpression",
              "start": 43124,
              "end": 43192,
              "callee": {
                "type": "Identifier",
                "start": 43128,
                "end": 43140,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43141,
                  "end": 43191,
                  "left": {
                    "type": "Literal",
                    "start": 43141,
                    "end": 43176,
                    "value": "#360: -128 >> 11 === -1. Actual: ",
                    "raw": "'#360: -128 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43179,
                    "end": 43191,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43180,
                      "end": 43190,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43180,
                        "end": 43184,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43181,
                          "end": 43184,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43188,
                        "end": 43190,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43200,
      "end": 43306,
      "test": {
        "type": "BinaryExpression",
        "start": 43204,
        "end": 43221,
        "left": {
          "type": "BinaryExpression",
          "start": 43204,
          "end": 43214,
          "left": {
            "type": "UnaryExpression",
            "start": 43204,
            "end": 43208,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43205,
              "end": 43208,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43212,
            "end": 43214,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43219,
          "end": 43221,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43220,
            "end": 43221,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43223,
        "end": 43306,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43228,
            "end": 43303,
            "argument": {
              "type": "NewExpression",
              "start": 43234,
              "end": 43302,
              "callee": {
                "type": "Identifier",
                "start": 43238,
                "end": 43250,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43251,
                  "end": 43301,
                  "left": {
                    "type": "Literal",
                    "start": 43251,
                    "end": 43286,
                    "value": "#361: -256 >> 11 === -1. Actual: ",
                    "raw": "'#361: -256 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43289,
                    "end": 43301,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43290,
                      "end": 43300,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43290,
                        "end": 43294,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43291,
                          "end": 43294,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43298,
                        "end": 43300,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43310,
      "end": 43416,
      "test": {
        "type": "BinaryExpression",
        "start": 43314,
        "end": 43331,
        "left": {
          "type": "BinaryExpression",
          "start": 43314,
          "end": 43324,
          "left": {
            "type": "UnaryExpression",
            "start": 43314,
            "end": 43318,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43315,
              "end": 43318,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43322,
            "end": 43324,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43329,
          "end": 43331,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43330,
            "end": 43331,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43333,
        "end": 43416,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43338,
            "end": 43413,
            "argument": {
              "type": "NewExpression",
              "start": 43344,
              "end": 43412,
              "callee": {
                "type": "Identifier",
                "start": 43348,
                "end": 43360,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43361,
                  "end": 43411,
                  "left": {
                    "type": "Literal",
                    "start": 43361,
                    "end": 43396,
                    "value": "#362: -512 >> 11 === -1. Actual: ",
                    "raw": "'#362: -512 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43399,
                    "end": 43411,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43400,
                      "end": 43410,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43400,
                        "end": 43404,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43401,
                          "end": 43404,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43408,
                        "end": 43410,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43420,
      "end": 43529,
      "test": {
        "type": "BinaryExpression",
        "start": 43424,
        "end": 43442,
        "left": {
          "type": "BinaryExpression",
          "start": 43424,
          "end": 43435,
          "left": {
            "type": "UnaryExpression",
            "start": 43424,
            "end": 43429,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43425,
              "end": 43429,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43433,
            "end": 43435,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43440,
          "end": 43442,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43441,
            "end": 43442,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43444,
        "end": 43529,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43449,
            "end": 43526,
            "argument": {
              "type": "NewExpression",
              "start": 43455,
              "end": 43525,
              "callee": {
                "type": "Identifier",
                "start": 43459,
                "end": 43471,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43472,
                  "end": 43524,
                  "left": {
                    "type": "Literal",
                    "start": 43472,
                    "end": 43508,
                    "value": "#363: -1024 >> 11 === -1. Actual: ",
                    "raw": "'#363: -1024 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43511,
                    "end": 43524,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43512,
                      "end": 43523,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43512,
                        "end": 43517,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43513,
                          "end": 43517,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43521,
                        "end": 43523,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43533,
      "end": 43642,
      "test": {
        "type": "BinaryExpression",
        "start": 43537,
        "end": 43555,
        "left": {
          "type": "BinaryExpression",
          "start": 43537,
          "end": 43548,
          "left": {
            "type": "UnaryExpression",
            "start": 43537,
            "end": 43542,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43538,
              "end": 43542,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43546,
            "end": 43548,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43553,
          "end": 43555,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43554,
            "end": 43555,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43557,
        "end": 43642,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43562,
            "end": 43639,
            "argument": {
              "type": "NewExpression",
              "start": 43568,
              "end": 43638,
              "callee": {
                "type": "Identifier",
                "start": 43572,
                "end": 43584,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43585,
                  "end": 43637,
                  "left": {
                    "type": "Literal",
                    "start": 43585,
                    "end": 43621,
                    "value": "#364: -2048 >> 11 === -1. Actual: ",
                    "raw": "'#364: -2048 >> 11 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43624,
                    "end": 43637,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43625,
                      "end": 43636,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43625,
                        "end": 43630,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43626,
                          "end": 43630,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43634,
                        "end": 43636,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43646,
      "end": 43755,
      "test": {
        "type": "BinaryExpression",
        "start": 43650,
        "end": 43668,
        "left": {
          "type": "BinaryExpression",
          "start": 43650,
          "end": 43661,
          "left": {
            "type": "UnaryExpression",
            "start": 43650,
            "end": 43655,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43651,
              "end": 43655,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43659,
            "end": 43661,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43666,
          "end": 43668,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43667,
            "end": 43668,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43670,
        "end": 43755,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43675,
            "end": 43752,
            "argument": {
              "type": "NewExpression",
              "start": 43681,
              "end": 43751,
              "callee": {
                "type": "Identifier",
                "start": 43685,
                "end": 43697,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43698,
                  "end": 43750,
                  "left": {
                    "type": "Literal",
                    "start": 43698,
                    "end": 43734,
                    "value": "#365: -4096 >> 11 === -2. Actual: ",
                    "raw": "'#365: -4096 >> 11 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43737,
                    "end": 43750,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43738,
                      "end": 43749,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43738,
                        "end": 43743,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43739,
                          "end": 43743,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43747,
                        "end": 43749,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43759,
      "end": 43868,
      "test": {
        "type": "BinaryExpression",
        "start": 43763,
        "end": 43781,
        "left": {
          "type": "BinaryExpression",
          "start": 43763,
          "end": 43774,
          "left": {
            "type": "UnaryExpression",
            "start": 43763,
            "end": 43768,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43764,
              "end": 43768,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43772,
            "end": 43774,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43779,
          "end": 43781,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43780,
            "end": 43781,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43783,
        "end": 43868,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43788,
            "end": 43865,
            "argument": {
              "type": "NewExpression",
              "start": 43794,
              "end": 43864,
              "callee": {
                "type": "Identifier",
                "start": 43798,
                "end": 43810,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43811,
                  "end": 43863,
                  "left": {
                    "type": "Literal",
                    "start": 43811,
                    "end": 43847,
                    "value": "#366: -8192 >> 11 === -4. Actual: ",
                    "raw": "'#366: -8192 >> 11 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43850,
                    "end": 43863,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43851,
                      "end": 43862,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43851,
                        "end": 43856,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43852,
                          "end": 43856,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43860,
                        "end": 43862,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43872,
      "end": 43984,
      "test": {
        "type": "BinaryExpression",
        "start": 43876,
        "end": 43895,
        "left": {
          "type": "BinaryExpression",
          "start": 43876,
          "end": 43888,
          "left": {
            "type": "UnaryExpression",
            "start": 43876,
            "end": 43882,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43877,
              "end": 43882,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43886,
            "end": 43888,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 43893,
          "end": 43895,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 43894,
            "end": 43895,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43897,
        "end": 43984,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43902,
            "end": 43981,
            "argument": {
              "type": "NewExpression",
              "start": 43908,
              "end": 43980,
              "callee": {
                "type": "Identifier",
                "start": 43912,
                "end": 43924,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43925,
                  "end": 43979,
                  "left": {
                    "type": "Literal",
                    "start": 43925,
                    "end": 43962,
                    "value": "#367: -16384 >> 11 === -8. Actual: ",
                    "raw": "'#367: -16384 >> 11 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43965,
                    "end": 43979,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43966,
                      "end": 43978,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 43966,
                        "end": 43972,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 43967,
                          "end": 43972,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43976,
                        "end": 43978,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43988,
      "end": 44102,
      "test": {
        "type": "BinaryExpression",
        "start": 43992,
        "end": 44012,
        "left": {
          "type": "BinaryExpression",
          "start": 43992,
          "end": 44004,
          "left": {
            "type": "UnaryExpression",
            "start": 43992,
            "end": 43998,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 43993,
              "end": 43998,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44002,
            "end": 44004,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44009,
          "end": 44012,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44010,
            "end": 44012,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44014,
        "end": 44102,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44019,
            "end": 44099,
            "argument": {
              "type": "NewExpression",
              "start": 44025,
              "end": 44098,
              "callee": {
                "type": "Identifier",
                "start": 44029,
                "end": 44041,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44042,
                  "end": 44097,
                  "left": {
                    "type": "Literal",
                    "start": 44042,
                    "end": 44080,
                    "value": "#368: -32768 >> 11 === -16. Actual: ",
                    "raw": "'#368: -32768 >> 11 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44083,
                    "end": 44097,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44084,
                      "end": 44096,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44084,
                        "end": 44090,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44085,
                          "end": 44090,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44094,
                        "end": 44096,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44106,
      "end": 44220,
      "test": {
        "type": "BinaryExpression",
        "start": 44110,
        "end": 44130,
        "left": {
          "type": "BinaryExpression",
          "start": 44110,
          "end": 44122,
          "left": {
            "type": "UnaryExpression",
            "start": 44110,
            "end": 44116,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44111,
              "end": 44116,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44120,
            "end": 44122,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44127,
          "end": 44130,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44128,
            "end": 44130,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44132,
        "end": 44220,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44137,
            "end": 44217,
            "argument": {
              "type": "NewExpression",
              "start": 44143,
              "end": 44216,
              "callee": {
                "type": "Identifier",
                "start": 44147,
                "end": 44159,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44160,
                  "end": 44215,
                  "left": {
                    "type": "Literal",
                    "start": 44160,
                    "end": 44198,
                    "value": "#369: -65536 >> 11 === -32. Actual: ",
                    "raw": "'#369: -65536 >> 11 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44201,
                    "end": 44215,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44202,
                      "end": 44214,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44202,
                        "end": 44208,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44203,
                          "end": 44208,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44212,
                        "end": 44214,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44224,
      "end": 44341,
      "test": {
        "type": "BinaryExpression",
        "start": 44228,
        "end": 44249,
        "left": {
          "type": "BinaryExpression",
          "start": 44228,
          "end": 44241,
          "left": {
            "type": "UnaryExpression",
            "start": 44228,
            "end": 44235,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44229,
              "end": 44235,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44239,
            "end": 44241,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44246,
          "end": 44249,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44247,
            "end": 44249,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44251,
        "end": 44341,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44256,
            "end": 44338,
            "argument": {
              "type": "NewExpression",
              "start": 44262,
              "end": 44337,
              "callee": {
                "type": "Identifier",
                "start": 44266,
                "end": 44278,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44279,
                  "end": 44336,
                  "left": {
                    "type": "Literal",
                    "start": 44279,
                    "end": 44318,
                    "value": "#370: -131072 >> 11 === -64. Actual: ",
                    "raw": "'#370: -131072 >> 11 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44321,
                    "end": 44336,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44322,
                      "end": 44335,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44322,
                        "end": 44329,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44323,
                          "end": 44329,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44333,
                        "end": 44335,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44345,
      "end": 44464,
      "test": {
        "type": "BinaryExpression",
        "start": 44349,
        "end": 44371,
        "left": {
          "type": "BinaryExpression",
          "start": 44349,
          "end": 44362,
          "left": {
            "type": "UnaryExpression",
            "start": 44349,
            "end": 44356,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44350,
              "end": 44356,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44360,
            "end": 44362,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44367,
          "end": 44371,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44368,
            "end": 44371,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44373,
        "end": 44464,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44378,
            "end": 44461,
            "argument": {
              "type": "NewExpression",
              "start": 44384,
              "end": 44460,
              "callee": {
                "type": "Identifier",
                "start": 44388,
                "end": 44400,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44401,
                  "end": 44459,
                  "left": {
                    "type": "Literal",
                    "start": 44401,
                    "end": 44441,
                    "value": "#371: -262144 >> 11 === -128. Actual: ",
                    "raw": "'#371: -262144 >> 11 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44444,
                    "end": 44459,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44445,
                      "end": 44458,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44445,
                        "end": 44452,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44446,
                          "end": 44452,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44456,
                        "end": 44458,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44468,
      "end": 44587,
      "test": {
        "type": "BinaryExpression",
        "start": 44472,
        "end": 44494,
        "left": {
          "type": "BinaryExpression",
          "start": 44472,
          "end": 44485,
          "left": {
            "type": "UnaryExpression",
            "start": 44472,
            "end": 44479,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44473,
              "end": 44479,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44483,
            "end": 44485,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44490,
          "end": 44494,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44491,
            "end": 44494,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44496,
        "end": 44587,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44501,
            "end": 44584,
            "argument": {
              "type": "NewExpression",
              "start": 44507,
              "end": 44583,
              "callee": {
                "type": "Identifier",
                "start": 44511,
                "end": 44523,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44524,
                  "end": 44582,
                  "left": {
                    "type": "Literal",
                    "start": 44524,
                    "end": 44564,
                    "value": "#372: -524288 >> 11 === -256. Actual: ",
                    "raw": "'#372: -524288 >> 11 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44567,
                    "end": 44582,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44568,
                      "end": 44581,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44568,
                        "end": 44575,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44569,
                          "end": 44575,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44579,
                        "end": 44581,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44591,
      "end": 44713,
      "test": {
        "type": "BinaryExpression",
        "start": 44595,
        "end": 44618,
        "left": {
          "type": "BinaryExpression",
          "start": 44595,
          "end": 44609,
          "left": {
            "type": "UnaryExpression",
            "start": 44595,
            "end": 44603,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44596,
              "end": 44603,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44607,
            "end": 44609,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44614,
          "end": 44618,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44615,
            "end": 44618,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44620,
        "end": 44713,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44625,
            "end": 44710,
            "argument": {
              "type": "NewExpression",
              "start": 44631,
              "end": 44709,
              "callee": {
                "type": "Identifier",
                "start": 44635,
                "end": 44647,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44648,
                  "end": 44708,
                  "left": {
                    "type": "Literal",
                    "start": 44648,
                    "end": 44689,
                    "value": "#373: -1048576 >> 11 === -512. Actual: ",
                    "raw": "'#373: -1048576 >> 11 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44692,
                    "end": 44708,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44693,
                      "end": 44707,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44693,
                        "end": 44701,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44694,
                          "end": 44701,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44705,
                        "end": 44707,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44717,
      "end": 44841,
      "test": {
        "type": "BinaryExpression",
        "start": 44721,
        "end": 44745,
        "left": {
          "type": "BinaryExpression",
          "start": 44721,
          "end": 44735,
          "left": {
            "type": "UnaryExpression",
            "start": 44721,
            "end": 44729,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44722,
              "end": 44729,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44733,
            "end": 44735,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44740,
          "end": 44745,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44741,
            "end": 44745,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44747,
        "end": 44841,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44752,
            "end": 44838,
            "argument": {
              "type": "NewExpression",
              "start": 44758,
              "end": 44837,
              "callee": {
                "type": "Identifier",
                "start": 44762,
                "end": 44774,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44775,
                  "end": 44836,
                  "left": {
                    "type": "Literal",
                    "start": 44775,
                    "end": 44817,
                    "value": "#374: -2097152 >> 11 === -1024. Actual: ",
                    "raw": "'#374: -2097152 >> 11 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44820,
                    "end": 44836,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44821,
                      "end": 44835,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44821,
                        "end": 44829,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44822,
                          "end": 44829,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44833,
                        "end": 44835,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44845,
      "end": 44969,
      "test": {
        "type": "BinaryExpression",
        "start": 44849,
        "end": 44873,
        "left": {
          "type": "BinaryExpression",
          "start": 44849,
          "end": 44863,
          "left": {
            "type": "UnaryExpression",
            "start": 44849,
            "end": 44857,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44850,
              "end": 44857,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44861,
            "end": 44863,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44868,
          "end": 44873,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44869,
            "end": 44873,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44875,
        "end": 44969,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44880,
            "end": 44966,
            "argument": {
              "type": "NewExpression",
              "start": 44886,
              "end": 44965,
              "callee": {
                "type": "Identifier",
                "start": 44890,
                "end": 44902,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44903,
                  "end": 44964,
                  "left": {
                    "type": "Literal",
                    "start": 44903,
                    "end": 44945,
                    "value": "#375: -4194304 >> 11 === -2048. Actual: ",
                    "raw": "'#375: -4194304 >> 11 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44948,
                    "end": 44964,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44949,
                      "end": 44963,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 44949,
                        "end": 44957,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 44950,
                          "end": 44957,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44961,
                        "end": 44963,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44973,
      "end": 45097,
      "test": {
        "type": "BinaryExpression",
        "start": 44977,
        "end": 45001,
        "left": {
          "type": "BinaryExpression",
          "start": 44977,
          "end": 44991,
          "left": {
            "type": "UnaryExpression",
            "start": 44977,
            "end": 44985,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 44978,
              "end": 44985,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44989,
            "end": 44991,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 44996,
          "end": 45001,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 44997,
            "end": 45001,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45003,
        "end": 45097,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45008,
            "end": 45094,
            "argument": {
              "type": "NewExpression",
              "start": 45014,
              "end": 45093,
              "callee": {
                "type": "Identifier",
                "start": 45018,
                "end": 45030,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45031,
                  "end": 45092,
                  "left": {
                    "type": "Literal",
                    "start": 45031,
                    "end": 45073,
                    "value": "#376: -8388608 >> 11 === -4096. Actual: ",
                    "raw": "'#376: -8388608 >> 11 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45076,
                    "end": 45092,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45077,
                      "end": 45091,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45077,
                        "end": 45085,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45078,
                          "end": 45085,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45089,
                        "end": 45091,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45101,
      "end": 45228,
      "test": {
        "type": "BinaryExpression",
        "start": 45105,
        "end": 45130,
        "left": {
          "type": "BinaryExpression",
          "start": 45105,
          "end": 45120,
          "left": {
            "type": "UnaryExpression",
            "start": 45105,
            "end": 45114,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45106,
              "end": 45114,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45118,
            "end": 45120,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45125,
          "end": 45130,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45126,
            "end": 45130,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45132,
        "end": 45228,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45137,
            "end": 45225,
            "argument": {
              "type": "NewExpression",
              "start": 45143,
              "end": 45224,
              "callee": {
                "type": "Identifier",
                "start": 45147,
                "end": 45159,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45160,
                  "end": 45223,
                  "left": {
                    "type": "Literal",
                    "start": 45160,
                    "end": 45203,
                    "value": "#377: -16777216 >> 11 === -8192. Actual: ",
                    "raw": "'#377: -16777216 >> 11 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45206,
                    "end": 45223,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45207,
                      "end": 45222,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45207,
                        "end": 45216,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45208,
                          "end": 45216,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45220,
                        "end": 45222,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45232,
      "end": 45361,
      "test": {
        "type": "BinaryExpression",
        "start": 45236,
        "end": 45262,
        "left": {
          "type": "BinaryExpression",
          "start": 45236,
          "end": 45251,
          "left": {
            "type": "UnaryExpression",
            "start": 45236,
            "end": 45245,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45237,
              "end": 45245,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45249,
            "end": 45251,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45256,
          "end": 45262,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45257,
            "end": 45262,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45264,
        "end": 45361,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45269,
            "end": 45358,
            "argument": {
              "type": "NewExpression",
              "start": 45275,
              "end": 45357,
              "callee": {
                "type": "Identifier",
                "start": 45279,
                "end": 45291,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45292,
                  "end": 45356,
                  "left": {
                    "type": "Literal",
                    "start": 45292,
                    "end": 45336,
                    "value": "#378: -33554432 >> 11 === -16384. Actual: ",
                    "raw": "'#378: -33554432 >> 11 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45339,
                    "end": 45356,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45340,
                      "end": 45355,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45340,
                        "end": 45349,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45341,
                          "end": 45349,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45353,
                        "end": 45355,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45365,
      "end": 45494,
      "test": {
        "type": "BinaryExpression",
        "start": 45369,
        "end": 45395,
        "left": {
          "type": "BinaryExpression",
          "start": 45369,
          "end": 45384,
          "left": {
            "type": "UnaryExpression",
            "start": 45369,
            "end": 45378,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45370,
              "end": 45378,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45382,
            "end": 45384,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45389,
          "end": 45395,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45390,
            "end": 45395,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45397,
        "end": 45494,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45402,
            "end": 45491,
            "argument": {
              "type": "NewExpression",
              "start": 45408,
              "end": 45490,
              "callee": {
                "type": "Identifier",
                "start": 45412,
                "end": 45424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45425,
                  "end": 45489,
                  "left": {
                    "type": "Literal",
                    "start": 45425,
                    "end": 45469,
                    "value": "#379: -67108864 >> 11 === -32768. Actual: ",
                    "raw": "'#379: -67108864 >> 11 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45472,
                    "end": 45489,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45473,
                      "end": 45488,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45473,
                        "end": 45482,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45474,
                          "end": 45482,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45486,
                        "end": 45488,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45498,
      "end": 45630,
      "test": {
        "type": "BinaryExpression",
        "start": 45502,
        "end": 45529,
        "left": {
          "type": "BinaryExpression",
          "start": 45502,
          "end": 45518,
          "left": {
            "type": "UnaryExpression",
            "start": 45502,
            "end": 45512,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45503,
              "end": 45512,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45516,
            "end": 45518,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45523,
          "end": 45529,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45524,
            "end": 45529,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45531,
        "end": 45630,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45536,
            "end": 45627,
            "argument": {
              "type": "NewExpression",
              "start": 45542,
              "end": 45626,
              "callee": {
                "type": "Identifier",
                "start": 45546,
                "end": 45558,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45559,
                  "end": 45625,
                  "left": {
                    "type": "Literal",
                    "start": 45559,
                    "end": 45604,
                    "value": "#380: -134217728 >> 11 === -65536. Actual: ",
                    "raw": "'#380: -134217728 >> 11 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45607,
                    "end": 45625,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45608,
                      "end": 45624,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45608,
                        "end": 45618,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45609,
                          "end": 45618,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45622,
                        "end": 45624,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45634,
      "end": 45768,
      "test": {
        "type": "BinaryExpression",
        "start": 45638,
        "end": 45666,
        "left": {
          "type": "BinaryExpression",
          "start": 45638,
          "end": 45654,
          "left": {
            "type": "UnaryExpression",
            "start": 45638,
            "end": 45648,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45639,
              "end": 45648,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45652,
            "end": 45654,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45659,
          "end": 45666,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45660,
            "end": 45666,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45668,
        "end": 45768,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45673,
            "end": 45765,
            "argument": {
              "type": "NewExpression",
              "start": 45679,
              "end": 45764,
              "callee": {
                "type": "Identifier",
                "start": 45683,
                "end": 45695,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45696,
                  "end": 45763,
                  "left": {
                    "type": "Literal",
                    "start": 45696,
                    "end": 45742,
                    "value": "#381: -268435456 >> 11 === -131072. Actual: ",
                    "raw": "'#381: -268435456 >> 11 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45745,
                    "end": 45763,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45746,
                      "end": 45762,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45746,
                        "end": 45756,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45747,
                          "end": 45756,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45760,
                        "end": 45762,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45772,
      "end": 45906,
      "test": {
        "type": "BinaryExpression",
        "start": 45776,
        "end": 45804,
        "left": {
          "type": "BinaryExpression",
          "start": 45776,
          "end": 45792,
          "left": {
            "type": "UnaryExpression",
            "start": 45776,
            "end": 45786,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45777,
              "end": 45786,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45790,
            "end": 45792,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45797,
          "end": 45804,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45798,
            "end": 45804,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45806,
        "end": 45906,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45811,
            "end": 45903,
            "argument": {
              "type": "NewExpression",
              "start": 45817,
              "end": 45902,
              "callee": {
                "type": "Identifier",
                "start": 45821,
                "end": 45833,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45834,
                  "end": 45901,
                  "left": {
                    "type": "Literal",
                    "start": 45834,
                    "end": 45880,
                    "value": "#382: -536870912 >> 11 === -262144. Actual: ",
                    "raw": "'#382: -536870912 >> 11 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45883,
                    "end": 45901,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45884,
                      "end": 45900,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 45884,
                        "end": 45894,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 45885,
                          "end": 45894,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45898,
                        "end": 45900,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45910,
      "end": 46047,
      "test": {
        "type": "BinaryExpression",
        "start": 45914,
        "end": 45943,
        "left": {
          "type": "BinaryExpression",
          "start": 45914,
          "end": 45931,
          "left": {
            "type": "UnaryExpression",
            "start": 45914,
            "end": 45925,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 45915,
              "end": 45925,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45929,
            "end": 45931,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 45936,
          "end": 45943,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 45937,
            "end": 45943,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45945,
        "end": 46047,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45950,
            "end": 46044,
            "argument": {
              "type": "NewExpression",
              "start": 45956,
              "end": 46043,
              "callee": {
                "type": "Identifier",
                "start": 45960,
                "end": 45972,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45973,
                  "end": 46042,
                  "left": {
                    "type": "Literal",
                    "start": 45973,
                    "end": 46020,
                    "value": "#383: -1073741824 >> 11 === -524288. Actual: ",
                    "raw": "'#383: -1073741824 >> 11 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46023,
                    "end": 46042,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46024,
                      "end": 46041,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46024,
                        "end": 46035,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46025,
                          "end": 46035,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46039,
                        "end": 46041,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46051,
      "end": 46190,
      "test": {
        "type": "BinaryExpression",
        "start": 46055,
        "end": 46085,
        "left": {
          "type": "BinaryExpression",
          "start": 46055,
          "end": 46072,
          "left": {
            "type": "UnaryExpression",
            "start": 46055,
            "end": 46066,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46056,
              "end": 46066,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46070,
            "end": 46072,
            "value": 11,
            "raw": "11",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46077,
          "end": 46085,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46078,
            "end": 46085,
            "value": 1048576,
            "raw": "1048576",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46087,
        "end": 46190,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46092,
            "end": 46187,
            "argument": {
              "type": "NewExpression",
              "start": 46098,
              "end": 46186,
              "callee": {
                "type": "Identifier",
                "start": 46102,
                "end": 46114,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46115,
                  "end": 46185,
                  "left": {
                    "type": "Literal",
                    "start": 46115,
                    "end": 46163,
                    "value": "#384: -2147483648 >> 11 === -1048576. Actual: ",
                    "raw": "'#384: -2147483648 >> 11 === -1048576. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46166,
                    "end": 46185,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46167,
                      "end": 46184,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46167,
                        "end": 46178,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46168,
                          "end": 46178,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46182,
                        "end": 46184,
                        "value": 11,
                        "raw": "11",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46194,
      "end": 46294,
      "test": {
        "type": "BinaryExpression",
        "start": 46198,
        "end": 46213,
        "left": {
          "type": "BinaryExpression",
          "start": 46198,
          "end": 46206,
          "left": {
            "type": "UnaryExpression",
            "start": 46198,
            "end": 46200,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46199,
              "end": 46200,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46204,
            "end": 46206,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46211,
          "end": 46213,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46212,
            "end": 46213,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46215,
        "end": 46294,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46220,
            "end": 46291,
            "argument": {
              "type": "NewExpression",
              "start": 46226,
              "end": 46290,
              "callee": {
                "type": "Identifier",
                "start": 46230,
                "end": 46242,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46243,
                  "end": 46289,
                  "left": {
                    "type": "Literal",
                    "start": 46243,
                    "end": 46276,
                    "value": "#385: -1 >> 12 === -1. Actual: ",
                    "raw": "'#385: -1 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46279,
                    "end": 46289,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46280,
                      "end": 46288,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46280,
                        "end": 46282,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46281,
                          "end": 46282,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46286,
                        "end": 46288,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46298,
      "end": 46398,
      "test": {
        "type": "BinaryExpression",
        "start": 46302,
        "end": 46317,
        "left": {
          "type": "BinaryExpression",
          "start": 46302,
          "end": 46310,
          "left": {
            "type": "UnaryExpression",
            "start": 46302,
            "end": 46304,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46303,
              "end": 46304,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46308,
            "end": 46310,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46315,
          "end": 46317,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46316,
            "end": 46317,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46319,
        "end": 46398,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46324,
            "end": 46395,
            "argument": {
              "type": "NewExpression",
              "start": 46330,
              "end": 46394,
              "callee": {
                "type": "Identifier",
                "start": 46334,
                "end": 46346,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46347,
                  "end": 46393,
                  "left": {
                    "type": "Literal",
                    "start": 46347,
                    "end": 46380,
                    "value": "#386: -2 >> 12 === -1. Actual: ",
                    "raw": "'#386: -2 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46383,
                    "end": 46393,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46384,
                      "end": 46392,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46384,
                        "end": 46386,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46385,
                          "end": 46386,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46390,
                        "end": 46392,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46402,
      "end": 46502,
      "test": {
        "type": "BinaryExpression",
        "start": 46406,
        "end": 46421,
        "left": {
          "type": "BinaryExpression",
          "start": 46406,
          "end": 46414,
          "left": {
            "type": "UnaryExpression",
            "start": 46406,
            "end": 46408,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46407,
              "end": 46408,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46412,
            "end": 46414,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46419,
          "end": 46421,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46420,
            "end": 46421,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46423,
        "end": 46502,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46428,
            "end": 46499,
            "argument": {
              "type": "NewExpression",
              "start": 46434,
              "end": 46498,
              "callee": {
                "type": "Identifier",
                "start": 46438,
                "end": 46450,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46451,
                  "end": 46497,
                  "left": {
                    "type": "Literal",
                    "start": 46451,
                    "end": 46484,
                    "value": "#387: -4 >> 12 === -1. Actual: ",
                    "raw": "'#387: -4 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46487,
                    "end": 46497,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46488,
                      "end": 46496,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46488,
                        "end": 46490,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46489,
                          "end": 46490,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46494,
                        "end": 46496,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46506,
      "end": 46606,
      "test": {
        "type": "BinaryExpression",
        "start": 46510,
        "end": 46525,
        "left": {
          "type": "BinaryExpression",
          "start": 46510,
          "end": 46518,
          "left": {
            "type": "UnaryExpression",
            "start": 46510,
            "end": 46512,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46511,
              "end": 46512,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46516,
            "end": 46518,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46523,
          "end": 46525,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46524,
            "end": 46525,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46527,
        "end": 46606,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46532,
            "end": 46603,
            "argument": {
              "type": "NewExpression",
              "start": 46538,
              "end": 46602,
              "callee": {
                "type": "Identifier",
                "start": 46542,
                "end": 46554,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46555,
                  "end": 46601,
                  "left": {
                    "type": "Literal",
                    "start": 46555,
                    "end": 46588,
                    "value": "#388: -8 >> 12 === -1. Actual: ",
                    "raw": "'#388: -8 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46591,
                    "end": 46601,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46592,
                      "end": 46600,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46592,
                        "end": 46594,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46593,
                          "end": 46594,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46598,
                        "end": 46600,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46610,
      "end": 46713,
      "test": {
        "type": "BinaryExpression",
        "start": 46614,
        "end": 46630,
        "left": {
          "type": "BinaryExpression",
          "start": 46614,
          "end": 46623,
          "left": {
            "type": "UnaryExpression",
            "start": 46614,
            "end": 46617,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46615,
              "end": 46617,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46621,
            "end": 46623,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46628,
          "end": 46630,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46629,
            "end": 46630,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46632,
        "end": 46713,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46637,
            "end": 46710,
            "argument": {
              "type": "NewExpression",
              "start": 46643,
              "end": 46709,
              "callee": {
                "type": "Identifier",
                "start": 46647,
                "end": 46659,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46660,
                  "end": 46708,
                  "left": {
                    "type": "Literal",
                    "start": 46660,
                    "end": 46694,
                    "value": "#389: -16 >> 12 === -1. Actual: ",
                    "raw": "'#389: -16 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46697,
                    "end": 46708,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46698,
                      "end": 46707,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46698,
                        "end": 46701,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46699,
                          "end": 46701,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46705,
                        "end": 46707,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46717,
      "end": 46820,
      "test": {
        "type": "BinaryExpression",
        "start": 46721,
        "end": 46737,
        "left": {
          "type": "BinaryExpression",
          "start": 46721,
          "end": 46730,
          "left": {
            "type": "UnaryExpression",
            "start": 46721,
            "end": 46724,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46722,
              "end": 46724,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46728,
            "end": 46730,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46735,
          "end": 46737,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46736,
            "end": 46737,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46739,
        "end": 46820,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46744,
            "end": 46817,
            "argument": {
              "type": "NewExpression",
              "start": 46750,
              "end": 46816,
              "callee": {
                "type": "Identifier",
                "start": 46754,
                "end": 46766,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46767,
                  "end": 46815,
                  "left": {
                    "type": "Literal",
                    "start": 46767,
                    "end": 46801,
                    "value": "#390: -32 >> 12 === -1. Actual: ",
                    "raw": "'#390: -32 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46804,
                    "end": 46815,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46805,
                      "end": 46814,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46805,
                        "end": 46808,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46806,
                          "end": 46808,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46812,
                        "end": 46814,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46824,
      "end": 46927,
      "test": {
        "type": "BinaryExpression",
        "start": 46828,
        "end": 46844,
        "left": {
          "type": "BinaryExpression",
          "start": 46828,
          "end": 46837,
          "left": {
            "type": "UnaryExpression",
            "start": 46828,
            "end": 46831,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46829,
              "end": 46831,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46835,
            "end": 46837,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46842,
          "end": 46844,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46843,
            "end": 46844,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46846,
        "end": 46927,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46851,
            "end": 46924,
            "argument": {
              "type": "NewExpression",
              "start": 46857,
              "end": 46923,
              "callee": {
                "type": "Identifier",
                "start": 46861,
                "end": 46873,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46874,
                  "end": 46922,
                  "left": {
                    "type": "Literal",
                    "start": 46874,
                    "end": 46908,
                    "value": "#391: -64 >> 12 === -1. Actual: ",
                    "raw": "'#391: -64 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46911,
                    "end": 46922,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46912,
                      "end": 46921,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 46912,
                        "end": 46915,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 46913,
                          "end": 46915,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46919,
                        "end": 46921,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46931,
      "end": 47037,
      "test": {
        "type": "BinaryExpression",
        "start": 46935,
        "end": 46952,
        "left": {
          "type": "BinaryExpression",
          "start": 46935,
          "end": 46945,
          "left": {
            "type": "UnaryExpression",
            "start": 46935,
            "end": 46939,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 46936,
              "end": 46939,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46943,
            "end": 46945,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 46950,
          "end": 46952,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 46951,
            "end": 46952,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46954,
        "end": 47037,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46959,
            "end": 47034,
            "argument": {
              "type": "NewExpression",
              "start": 46965,
              "end": 47033,
              "callee": {
                "type": "Identifier",
                "start": 46969,
                "end": 46981,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46982,
                  "end": 47032,
                  "left": {
                    "type": "Literal",
                    "start": 46982,
                    "end": 47017,
                    "value": "#392: -128 >> 12 === -1. Actual: ",
                    "raw": "'#392: -128 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47020,
                    "end": 47032,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47021,
                      "end": 47031,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47021,
                        "end": 47025,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47022,
                          "end": 47025,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47029,
                        "end": 47031,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47041,
      "end": 47147,
      "test": {
        "type": "BinaryExpression",
        "start": 47045,
        "end": 47062,
        "left": {
          "type": "BinaryExpression",
          "start": 47045,
          "end": 47055,
          "left": {
            "type": "UnaryExpression",
            "start": 47045,
            "end": 47049,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47046,
              "end": 47049,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47053,
            "end": 47055,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47060,
          "end": 47062,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47061,
            "end": 47062,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47064,
        "end": 47147,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47069,
            "end": 47144,
            "argument": {
              "type": "NewExpression",
              "start": 47075,
              "end": 47143,
              "callee": {
                "type": "Identifier",
                "start": 47079,
                "end": 47091,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47092,
                  "end": 47142,
                  "left": {
                    "type": "Literal",
                    "start": 47092,
                    "end": 47127,
                    "value": "#393: -256 >> 12 === -1. Actual: ",
                    "raw": "'#393: -256 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47130,
                    "end": 47142,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47131,
                      "end": 47141,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47131,
                        "end": 47135,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47132,
                          "end": 47135,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47139,
                        "end": 47141,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47151,
      "end": 47257,
      "test": {
        "type": "BinaryExpression",
        "start": 47155,
        "end": 47172,
        "left": {
          "type": "BinaryExpression",
          "start": 47155,
          "end": 47165,
          "left": {
            "type": "UnaryExpression",
            "start": 47155,
            "end": 47159,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47156,
              "end": 47159,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47163,
            "end": 47165,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47170,
          "end": 47172,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47171,
            "end": 47172,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47174,
        "end": 47257,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47179,
            "end": 47254,
            "argument": {
              "type": "NewExpression",
              "start": 47185,
              "end": 47253,
              "callee": {
                "type": "Identifier",
                "start": 47189,
                "end": 47201,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47202,
                  "end": 47252,
                  "left": {
                    "type": "Literal",
                    "start": 47202,
                    "end": 47237,
                    "value": "#394: -512 >> 12 === -1. Actual: ",
                    "raw": "'#394: -512 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47240,
                    "end": 47252,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47241,
                      "end": 47251,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47241,
                        "end": 47245,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47242,
                          "end": 47245,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47249,
                        "end": 47251,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47261,
      "end": 47370,
      "test": {
        "type": "BinaryExpression",
        "start": 47265,
        "end": 47283,
        "left": {
          "type": "BinaryExpression",
          "start": 47265,
          "end": 47276,
          "left": {
            "type": "UnaryExpression",
            "start": 47265,
            "end": 47270,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47266,
              "end": 47270,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47274,
            "end": 47276,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47281,
          "end": 47283,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47282,
            "end": 47283,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47285,
        "end": 47370,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47290,
            "end": 47367,
            "argument": {
              "type": "NewExpression",
              "start": 47296,
              "end": 47366,
              "callee": {
                "type": "Identifier",
                "start": 47300,
                "end": 47312,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47313,
                  "end": 47365,
                  "left": {
                    "type": "Literal",
                    "start": 47313,
                    "end": 47349,
                    "value": "#395: -1024 >> 12 === -1. Actual: ",
                    "raw": "'#395: -1024 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47352,
                    "end": 47365,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47353,
                      "end": 47364,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47353,
                        "end": 47358,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47354,
                          "end": 47358,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47362,
                        "end": 47364,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47374,
      "end": 47483,
      "test": {
        "type": "BinaryExpression",
        "start": 47378,
        "end": 47396,
        "left": {
          "type": "BinaryExpression",
          "start": 47378,
          "end": 47389,
          "left": {
            "type": "UnaryExpression",
            "start": 47378,
            "end": 47383,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47379,
              "end": 47383,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47387,
            "end": 47389,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47394,
          "end": 47396,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47395,
            "end": 47396,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47398,
        "end": 47483,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47403,
            "end": 47480,
            "argument": {
              "type": "NewExpression",
              "start": 47409,
              "end": 47479,
              "callee": {
                "type": "Identifier",
                "start": 47413,
                "end": 47425,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47426,
                  "end": 47478,
                  "left": {
                    "type": "Literal",
                    "start": 47426,
                    "end": 47462,
                    "value": "#396: -2048 >> 12 === -1. Actual: ",
                    "raw": "'#396: -2048 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47465,
                    "end": 47478,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47466,
                      "end": 47477,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47466,
                        "end": 47471,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47467,
                          "end": 47471,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47475,
                        "end": 47477,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47487,
      "end": 47596,
      "test": {
        "type": "BinaryExpression",
        "start": 47491,
        "end": 47509,
        "left": {
          "type": "BinaryExpression",
          "start": 47491,
          "end": 47502,
          "left": {
            "type": "UnaryExpression",
            "start": 47491,
            "end": 47496,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47492,
              "end": 47496,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47500,
            "end": 47502,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47507,
          "end": 47509,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47508,
            "end": 47509,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47511,
        "end": 47596,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47516,
            "end": 47593,
            "argument": {
              "type": "NewExpression",
              "start": 47522,
              "end": 47592,
              "callee": {
                "type": "Identifier",
                "start": 47526,
                "end": 47538,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47539,
                  "end": 47591,
                  "left": {
                    "type": "Literal",
                    "start": 47539,
                    "end": 47575,
                    "value": "#397: -4096 >> 12 === -1. Actual: ",
                    "raw": "'#397: -4096 >> 12 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47578,
                    "end": 47591,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47579,
                      "end": 47590,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47579,
                        "end": 47584,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47580,
                          "end": 47584,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47588,
                        "end": 47590,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47600,
      "end": 47709,
      "test": {
        "type": "BinaryExpression",
        "start": 47604,
        "end": 47622,
        "left": {
          "type": "BinaryExpression",
          "start": 47604,
          "end": 47615,
          "left": {
            "type": "UnaryExpression",
            "start": 47604,
            "end": 47609,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47605,
              "end": 47609,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47613,
            "end": 47615,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47620,
          "end": 47622,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47621,
            "end": 47622,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47624,
        "end": 47709,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47629,
            "end": 47706,
            "argument": {
              "type": "NewExpression",
              "start": 47635,
              "end": 47705,
              "callee": {
                "type": "Identifier",
                "start": 47639,
                "end": 47651,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47652,
                  "end": 47704,
                  "left": {
                    "type": "Literal",
                    "start": 47652,
                    "end": 47688,
                    "value": "#398: -8192 >> 12 === -2. Actual: ",
                    "raw": "'#398: -8192 >> 12 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47691,
                    "end": 47704,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47692,
                      "end": 47703,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47692,
                        "end": 47697,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47693,
                          "end": 47697,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47701,
                        "end": 47703,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47713,
      "end": 47825,
      "test": {
        "type": "BinaryExpression",
        "start": 47717,
        "end": 47736,
        "left": {
          "type": "BinaryExpression",
          "start": 47717,
          "end": 47729,
          "left": {
            "type": "UnaryExpression",
            "start": 47717,
            "end": 47723,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47718,
              "end": 47723,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47727,
            "end": 47729,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47734,
          "end": 47736,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47735,
            "end": 47736,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47738,
        "end": 47825,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47743,
            "end": 47822,
            "argument": {
              "type": "NewExpression",
              "start": 47749,
              "end": 47821,
              "callee": {
                "type": "Identifier",
                "start": 47753,
                "end": 47765,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47766,
                  "end": 47820,
                  "left": {
                    "type": "Literal",
                    "start": 47766,
                    "end": 47803,
                    "value": "#399: -16384 >> 12 === -4. Actual: ",
                    "raw": "'#399: -16384 >> 12 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47806,
                    "end": 47820,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47807,
                      "end": 47819,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47807,
                        "end": 47813,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47808,
                          "end": 47813,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47817,
                        "end": 47819,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47829,
      "end": 47941,
      "test": {
        "type": "BinaryExpression",
        "start": 47833,
        "end": 47852,
        "left": {
          "type": "BinaryExpression",
          "start": 47833,
          "end": 47845,
          "left": {
            "type": "UnaryExpression",
            "start": 47833,
            "end": 47839,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47834,
              "end": 47839,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47843,
            "end": 47845,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47850,
          "end": 47852,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47851,
            "end": 47852,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47854,
        "end": 47941,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47859,
            "end": 47938,
            "argument": {
              "type": "NewExpression",
              "start": 47865,
              "end": 47937,
              "callee": {
                "type": "Identifier",
                "start": 47869,
                "end": 47881,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47882,
                  "end": 47936,
                  "left": {
                    "type": "Literal",
                    "start": 47882,
                    "end": 47919,
                    "value": "#400: -32768 >> 12 === -8. Actual: ",
                    "raw": "'#400: -32768 >> 12 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47922,
                    "end": 47936,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47923,
                      "end": 47935,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 47923,
                        "end": 47929,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 47924,
                          "end": 47929,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47933,
                        "end": 47935,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47945,
      "end": 48059,
      "test": {
        "type": "BinaryExpression",
        "start": 47949,
        "end": 47969,
        "left": {
          "type": "BinaryExpression",
          "start": 47949,
          "end": 47961,
          "left": {
            "type": "UnaryExpression",
            "start": 47949,
            "end": 47955,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 47950,
              "end": 47955,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47959,
            "end": 47961,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 47966,
          "end": 47969,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 47967,
            "end": 47969,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47971,
        "end": 48059,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47976,
            "end": 48056,
            "argument": {
              "type": "NewExpression",
              "start": 47982,
              "end": 48055,
              "callee": {
                "type": "Identifier",
                "start": 47986,
                "end": 47998,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47999,
                  "end": 48054,
                  "left": {
                    "type": "Literal",
                    "start": 47999,
                    "end": 48037,
                    "value": "#401: -65536 >> 12 === -16. Actual: ",
                    "raw": "'#401: -65536 >> 12 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48040,
                    "end": 48054,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48041,
                      "end": 48053,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48041,
                        "end": 48047,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48042,
                          "end": 48047,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48051,
                        "end": 48053,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48063,
      "end": 48180,
      "test": {
        "type": "BinaryExpression",
        "start": 48067,
        "end": 48088,
        "left": {
          "type": "BinaryExpression",
          "start": 48067,
          "end": 48080,
          "left": {
            "type": "UnaryExpression",
            "start": 48067,
            "end": 48074,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48068,
              "end": 48074,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48078,
            "end": 48080,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48085,
          "end": 48088,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48086,
            "end": 48088,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48090,
        "end": 48180,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48095,
            "end": 48177,
            "argument": {
              "type": "NewExpression",
              "start": 48101,
              "end": 48176,
              "callee": {
                "type": "Identifier",
                "start": 48105,
                "end": 48117,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48118,
                  "end": 48175,
                  "left": {
                    "type": "Literal",
                    "start": 48118,
                    "end": 48157,
                    "value": "#402: -131072 >> 12 === -32. Actual: ",
                    "raw": "'#402: -131072 >> 12 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48160,
                    "end": 48175,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48161,
                      "end": 48174,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48161,
                        "end": 48168,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48162,
                          "end": 48168,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48172,
                        "end": 48174,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48184,
      "end": 48301,
      "test": {
        "type": "BinaryExpression",
        "start": 48188,
        "end": 48209,
        "left": {
          "type": "BinaryExpression",
          "start": 48188,
          "end": 48201,
          "left": {
            "type": "UnaryExpression",
            "start": 48188,
            "end": 48195,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48189,
              "end": 48195,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48199,
            "end": 48201,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48206,
          "end": 48209,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48207,
            "end": 48209,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48211,
        "end": 48301,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48216,
            "end": 48298,
            "argument": {
              "type": "NewExpression",
              "start": 48222,
              "end": 48297,
              "callee": {
                "type": "Identifier",
                "start": 48226,
                "end": 48238,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48239,
                  "end": 48296,
                  "left": {
                    "type": "Literal",
                    "start": 48239,
                    "end": 48278,
                    "value": "#403: -262144 >> 12 === -64. Actual: ",
                    "raw": "'#403: -262144 >> 12 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48281,
                    "end": 48296,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48282,
                      "end": 48295,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48282,
                        "end": 48289,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48283,
                          "end": 48289,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48293,
                        "end": 48295,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48305,
      "end": 48424,
      "test": {
        "type": "BinaryExpression",
        "start": 48309,
        "end": 48331,
        "left": {
          "type": "BinaryExpression",
          "start": 48309,
          "end": 48322,
          "left": {
            "type": "UnaryExpression",
            "start": 48309,
            "end": 48316,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48310,
              "end": 48316,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48320,
            "end": 48322,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48327,
          "end": 48331,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48328,
            "end": 48331,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48333,
        "end": 48424,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48338,
            "end": 48421,
            "argument": {
              "type": "NewExpression",
              "start": 48344,
              "end": 48420,
              "callee": {
                "type": "Identifier",
                "start": 48348,
                "end": 48360,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48361,
                  "end": 48419,
                  "left": {
                    "type": "Literal",
                    "start": 48361,
                    "end": 48401,
                    "value": "#404: -524288 >> 12 === -128. Actual: ",
                    "raw": "'#404: -524288 >> 12 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48404,
                    "end": 48419,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48405,
                      "end": 48418,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48405,
                        "end": 48412,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48406,
                          "end": 48412,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48416,
                        "end": 48418,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48428,
      "end": 48550,
      "test": {
        "type": "BinaryExpression",
        "start": 48432,
        "end": 48455,
        "left": {
          "type": "BinaryExpression",
          "start": 48432,
          "end": 48446,
          "left": {
            "type": "UnaryExpression",
            "start": 48432,
            "end": 48440,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48433,
              "end": 48440,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48444,
            "end": 48446,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48451,
          "end": 48455,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48452,
            "end": 48455,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48457,
        "end": 48550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48462,
            "end": 48547,
            "argument": {
              "type": "NewExpression",
              "start": 48468,
              "end": 48546,
              "callee": {
                "type": "Identifier",
                "start": 48472,
                "end": 48484,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48485,
                  "end": 48545,
                  "left": {
                    "type": "Literal",
                    "start": 48485,
                    "end": 48526,
                    "value": "#405: -1048576 >> 12 === -256. Actual: ",
                    "raw": "'#405: -1048576 >> 12 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48529,
                    "end": 48545,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48530,
                      "end": 48544,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48530,
                        "end": 48538,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48531,
                          "end": 48538,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48542,
                        "end": 48544,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48554,
      "end": 48676,
      "test": {
        "type": "BinaryExpression",
        "start": 48558,
        "end": 48581,
        "left": {
          "type": "BinaryExpression",
          "start": 48558,
          "end": 48572,
          "left": {
            "type": "UnaryExpression",
            "start": 48558,
            "end": 48566,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48559,
              "end": 48566,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48570,
            "end": 48572,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48577,
          "end": 48581,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48578,
            "end": 48581,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48583,
        "end": 48676,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48588,
            "end": 48673,
            "argument": {
              "type": "NewExpression",
              "start": 48594,
              "end": 48672,
              "callee": {
                "type": "Identifier",
                "start": 48598,
                "end": 48610,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48611,
                  "end": 48671,
                  "left": {
                    "type": "Literal",
                    "start": 48611,
                    "end": 48652,
                    "value": "#406: -2097152 >> 12 === -512. Actual: ",
                    "raw": "'#406: -2097152 >> 12 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48655,
                    "end": 48671,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48656,
                      "end": 48670,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48656,
                        "end": 48664,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48657,
                          "end": 48664,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48668,
                        "end": 48670,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48680,
      "end": 48804,
      "test": {
        "type": "BinaryExpression",
        "start": 48684,
        "end": 48708,
        "left": {
          "type": "BinaryExpression",
          "start": 48684,
          "end": 48698,
          "left": {
            "type": "UnaryExpression",
            "start": 48684,
            "end": 48692,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48685,
              "end": 48692,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48696,
            "end": 48698,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48703,
          "end": 48708,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48704,
            "end": 48708,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48710,
        "end": 48804,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48715,
            "end": 48801,
            "argument": {
              "type": "NewExpression",
              "start": 48721,
              "end": 48800,
              "callee": {
                "type": "Identifier",
                "start": 48725,
                "end": 48737,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48738,
                  "end": 48799,
                  "left": {
                    "type": "Literal",
                    "start": 48738,
                    "end": 48780,
                    "value": "#407: -4194304 >> 12 === -1024. Actual: ",
                    "raw": "'#407: -4194304 >> 12 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48783,
                    "end": 48799,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48784,
                      "end": 48798,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48784,
                        "end": 48792,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48785,
                          "end": 48792,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48796,
                        "end": 48798,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48808,
      "end": 48932,
      "test": {
        "type": "BinaryExpression",
        "start": 48812,
        "end": 48836,
        "left": {
          "type": "BinaryExpression",
          "start": 48812,
          "end": 48826,
          "left": {
            "type": "UnaryExpression",
            "start": 48812,
            "end": 48820,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48813,
              "end": 48820,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48824,
            "end": 48826,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48831,
          "end": 48836,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48832,
            "end": 48836,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48838,
        "end": 48932,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48843,
            "end": 48929,
            "argument": {
              "type": "NewExpression",
              "start": 48849,
              "end": 48928,
              "callee": {
                "type": "Identifier",
                "start": 48853,
                "end": 48865,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48866,
                  "end": 48927,
                  "left": {
                    "type": "Literal",
                    "start": 48866,
                    "end": 48908,
                    "value": "#408: -8388608 >> 12 === -2048. Actual: ",
                    "raw": "'#408: -8388608 >> 12 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48911,
                    "end": 48927,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48912,
                      "end": 48926,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 48912,
                        "end": 48920,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 48913,
                          "end": 48920,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48924,
                        "end": 48926,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48936,
      "end": 49063,
      "test": {
        "type": "BinaryExpression",
        "start": 48940,
        "end": 48965,
        "left": {
          "type": "BinaryExpression",
          "start": 48940,
          "end": 48955,
          "left": {
            "type": "UnaryExpression",
            "start": 48940,
            "end": 48949,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 48941,
              "end": 48949,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48953,
            "end": 48955,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 48960,
          "end": 48965,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 48961,
            "end": 48965,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48967,
        "end": 49063,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48972,
            "end": 49060,
            "argument": {
              "type": "NewExpression",
              "start": 48978,
              "end": 49059,
              "callee": {
                "type": "Identifier",
                "start": 48982,
                "end": 48994,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48995,
                  "end": 49058,
                  "left": {
                    "type": "Literal",
                    "start": 48995,
                    "end": 49038,
                    "value": "#409: -16777216 >> 12 === -4096. Actual: ",
                    "raw": "'#409: -16777216 >> 12 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49041,
                    "end": 49058,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49042,
                      "end": 49057,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49042,
                        "end": 49051,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49043,
                          "end": 49051,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49055,
                        "end": 49057,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49067,
      "end": 49194,
      "test": {
        "type": "BinaryExpression",
        "start": 49071,
        "end": 49096,
        "left": {
          "type": "BinaryExpression",
          "start": 49071,
          "end": 49086,
          "left": {
            "type": "UnaryExpression",
            "start": 49071,
            "end": 49080,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49072,
              "end": 49080,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49084,
            "end": 49086,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49091,
          "end": 49096,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49092,
            "end": 49096,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49098,
        "end": 49194,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49103,
            "end": 49191,
            "argument": {
              "type": "NewExpression",
              "start": 49109,
              "end": 49190,
              "callee": {
                "type": "Identifier",
                "start": 49113,
                "end": 49125,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49126,
                  "end": 49189,
                  "left": {
                    "type": "Literal",
                    "start": 49126,
                    "end": 49169,
                    "value": "#410: -33554432 >> 12 === -8192. Actual: ",
                    "raw": "'#410: -33554432 >> 12 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49172,
                    "end": 49189,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49173,
                      "end": 49188,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49173,
                        "end": 49182,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49174,
                          "end": 49182,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49186,
                        "end": 49188,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49198,
      "end": 49327,
      "test": {
        "type": "BinaryExpression",
        "start": 49202,
        "end": 49228,
        "left": {
          "type": "BinaryExpression",
          "start": 49202,
          "end": 49217,
          "left": {
            "type": "UnaryExpression",
            "start": 49202,
            "end": 49211,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49203,
              "end": 49211,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49215,
            "end": 49217,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49222,
          "end": 49228,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49223,
            "end": 49228,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49230,
        "end": 49327,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49235,
            "end": 49324,
            "argument": {
              "type": "NewExpression",
              "start": 49241,
              "end": 49323,
              "callee": {
                "type": "Identifier",
                "start": 49245,
                "end": 49257,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49258,
                  "end": 49322,
                  "left": {
                    "type": "Literal",
                    "start": 49258,
                    "end": 49302,
                    "value": "#411: -67108864 >> 12 === -16384. Actual: ",
                    "raw": "'#411: -67108864 >> 12 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49305,
                    "end": 49322,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49306,
                      "end": 49321,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49306,
                        "end": 49315,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49307,
                          "end": 49315,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49319,
                        "end": 49321,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49331,
      "end": 49463,
      "test": {
        "type": "BinaryExpression",
        "start": 49335,
        "end": 49362,
        "left": {
          "type": "BinaryExpression",
          "start": 49335,
          "end": 49351,
          "left": {
            "type": "UnaryExpression",
            "start": 49335,
            "end": 49345,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49336,
              "end": 49345,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49349,
            "end": 49351,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49356,
          "end": 49362,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49357,
            "end": 49362,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49364,
        "end": 49463,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49369,
            "end": 49460,
            "argument": {
              "type": "NewExpression",
              "start": 49375,
              "end": 49459,
              "callee": {
                "type": "Identifier",
                "start": 49379,
                "end": 49391,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49392,
                  "end": 49458,
                  "left": {
                    "type": "Literal",
                    "start": 49392,
                    "end": 49437,
                    "value": "#412: -134217728 >> 12 === -32768. Actual: ",
                    "raw": "'#412: -134217728 >> 12 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49440,
                    "end": 49458,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49441,
                      "end": 49457,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49441,
                        "end": 49451,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49442,
                          "end": 49451,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49455,
                        "end": 49457,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49467,
      "end": 49599,
      "test": {
        "type": "BinaryExpression",
        "start": 49471,
        "end": 49498,
        "left": {
          "type": "BinaryExpression",
          "start": 49471,
          "end": 49487,
          "left": {
            "type": "UnaryExpression",
            "start": 49471,
            "end": 49481,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49472,
              "end": 49481,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49485,
            "end": 49487,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49492,
          "end": 49498,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49493,
            "end": 49498,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49500,
        "end": 49599,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49505,
            "end": 49596,
            "argument": {
              "type": "NewExpression",
              "start": 49511,
              "end": 49595,
              "callee": {
                "type": "Identifier",
                "start": 49515,
                "end": 49527,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49528,
                  "end": 49594,
                  "left": {
                    "type": "Literal",
                    "start": 49528,
                    "end": 49573,
                    "value": "#413: -268435456 >> 12 === -65536. Actual: ",
                    "raw": "'#413: -268435456 >> 12 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49576,
                    "end": 49594,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49577,
                      "end": 49593,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49577,
                        "end": 49587,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49578,
                          "end": 49587,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49591,
                        "end": 49593,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49603,
      "end": 49737,
      "test": {
        "type": "BinaryExpression",
        "start": 49607,
        "end": 49635,
        "left": {
          "type": "BinaryExpression",
          "start": 49607,
          "end": 49623,
          "left": {
            "type": "UnaryExpression",
            "start": 49607,
            "end": 49617,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49608,
              "end": 49617,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49621,
            "end": 49623,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49628,
          "end": 49635,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49629,
            "end": 49635,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49637,
        "end": 49737,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49642,
            "end": 49734,
            "argument": {
              "type": "NewExpression",
              "start": 49648,
              "end": 49733,
              "callee": {
                "type": "Identifier",
                "start": 49652,
                "end": 49664,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49665,
                  "end": 49732,
                  "left": {
                    "type": "Literal",
                    "start": 49665,
                    "end": 49711,
                    "value": "#414: -536870912 >> 12 === -131072. Actual: ",
                    "raw": "'#414: -536870912 >> 12 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49714,
                    "end": 49732,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49715,
                      "end": 49731,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49715,
                        "end": 49725,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49716,
                          "end": 49725,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49729,
                        "end": 49731,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49741,
      "end": 49878,
      "test": {
        "type": "BinaryExpression",
        "start": 49745,
        "end": 49774,
        "left": {
          "type": "BinaryExpression",
          "start": 49745,
          "end": 49762,
          "left": {
            "type": "UnaryExpression",
            "start": 49745,
            "end": 49756,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49746,
              "end": 49756,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49760,
            "end": 49762,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49767,
          "end": 49774,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49768,
            "end": 49774,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49776,
        "end": 49878,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49781,
            "end": 49875,
            "argument": {
              "type": "NewExpression",
              "start": 49787,
              "end": 49874,
              "callee": {
                "type": "Identifier",
                "start": 49791,
                "end": 49803,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49804,
                  "end": 49873,
                  "left": {
                    "type": "Literal",
                    "start": 49804,
                    "end": 49851,
                    "value": "#415: -1073741824 >> 12 === -262144. Actual: ",
                    "raw": "'#415: -1073741824 >> 12 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49854,
                    "end": 49873,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49855,
                      "end": 49872,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49855,
                        "end": 49866,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49856,
                          "end": 49866,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49870,
                        "end": 49872,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49882,
      "end": 50019,
      "test": {
        "type": "BinaryExpression",
        "start": 49886,
        "end": 49915,
        "left": {
          "type": "BinaryExpression",
          "start": 49886,
          "end": 49903,
          "left": {
            "type": "UnaryExpression",
            "start": 49886,
            "end": 49897,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 49887,
              "end": 49897,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49901,
            "end": 49903,
            "value": 12,
            "raw": "12",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 49908,
          "end": 49915,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 49909,
            "end": 49915,
            "value": 524288,
            "raw": "524288",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49917,
        "end": 50019,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49922,
            "end": 50016,
            "argument": {
              "type": "NewExpression",
              "start": 49928,
              "end": 50015,
              "callee": {
                "type": "Identifier",
                "start": 49932,
                "end": 49944,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49945,
                  "end": 50014,
                  "left": {
                    "type": "Literal",
                    "start": 49945,
                    "end": 49992,
                    "value": "#416: -2147483648 >> 12 === -524288. Actual: ",
                    "raw": "'#416: -2147483648 >> 12 === -524288. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49995,
                    "end": 50014,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49996,
                      "end": 50013,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 49996,
                        "end": 50007,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 49997,
                          "end": 50007,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50011,
                        "end": 50013,
                        "value": 12,
                        "raw": "12",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50023,
      "end": 50123,
      "test": {
        "type": "BinaryExpression",
        "start": 50027,
        "end": 50042,
        "left": {
          "type": "BinaryExpression",
          "start": 50027,
          "end": 50035,
          "left": {
            "type": "UnaryExpression",
            "start": 50027,
            "end": 50029,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50028,
              "end": 50029,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50033,
            "end": 50035,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50040,
          "end": 50042,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50041,
            "end": 50042,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50044,
        "end": 50123,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50049,
            "end": 50120,
            "argument": {
              "type": "NewExpression",
              "start": 50055,
              "end": 50119,
              "callee": {
                "type": "Identifier",
                "start": 50059,
                "end": 50071,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50072,
                  "end": 50118,
                  "left": {
                    "type": "Literal",
                    "start": 50072,
                    "end": 50105,
                    "value": "#417: -1 >> 13 === -1. Actual: ",
                    "raw": "'#417: -1 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50108,
                    "end": 50118,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50109,
                      "end": 50117,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50109,
                        "end": 50111,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50110,
                          "end": 50111,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50115,
                        "end": 50117,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50127,
      "end": 50227,
      "test": {
        "type": "BinaryExpression",
        "start": 50131,
        "end": 50146,
        "left": {
          "type": "BinaryExpression",
          "start": 50131,
          "end": 50139,
          "left": {
            "type": "UnaryExpression",
            "start": 50131,
            "end": 50133,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50132,
              "end": 50133,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50137,
            "end": 50139,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50144,
          "end": 50146,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50145,
            "end": 50146,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50148,
        "end": 50227,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50153,
            "end": 50224,
            "argument": {
              "type": "NewExpression",
              "start": 50159,
              "end": 50223,
              "callee": {
                "type": "Identifier",
                "start": 50163,
                "end": 50175,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50176,
                  "end": 50222,
                  "left": {
                    "type": "Literal",
                    "start": 50176,
                    "end": 50209,
                    "value": "#418: -2 >> 13 === -1. Actual: ",
                    "raw": "'#418: -2 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50212,
                    "end": 50222,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50213,
                      "end": 50221,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50213,
                        "end": 50215,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50214,
                          "end": 50215,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50219,
                        "end": 50221,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50231,
      "end": 50331,
      "test": {
        "type": "BinaryExpression",
        "start": 50235,
        "end": 50250,
        "left": {
          "type": "BinaryExpression",
          "start": 50235,
          "end": 50243,
          "left": {
            "type": "UnaryExpression",
            "start": 50235,
            "end": 50237,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50236,
              "end": 50237,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50241,
            "end": 50243,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50248,
          "end": 50250,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50249,
            "end": 50250,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50252,
        "end": 50331,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50257,
            "end": 50328,
            "argument": {
              "type": "NewExpression",
              "start": 50263,
              "end": 50327,
              "callee": {
                "type": "Identifier",
                "start": 50267,
                "end": 50279,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50280,
                  "end": 50326,
                  "left": {
                    "type": "Literal",
                    "start": 50280,
                    "end": 50313,
                    "value": "#419: -4 >> 13 === -1. Actual: ",
                    "raw": "'#419: -4 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50316,
                    "end": 50326,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50317,
                      "end": 50325,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50317,
                        "end": 50319,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50318,
                          "end": 50319,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50323,
                        "end": 50325,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50335,
      "end": 50435,
      "test": {
        "type": "BinaryExpression",
        "start": 50339,
        "end": 50354,
        "left": {
          "type": "BinaryExpression",
          "start": 50339,
          "end": 50347,
          "left": {
            "type": "UnaryExpression",
            "start": 50339,
            "end": 50341,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50340,
              "end": 50341,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50345,
            "end": 50347,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50352,
          "end": 50354,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50353,
            "end": 50354,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50356,
        "end": 50435,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50361,
            "end": 50432,
            "argument": {
              "type": "NewExpression",
              "start": 50367,
              "end": 50431,
              "callee": {
                "type": "Identifier",
                "start": 50371,
                "end": 50383,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50384,
                  "end": 50430,
                  "left": {
                    "type": "Literal",
                    "start": 50384,
                    "end": 50417,
                    "value": "#420: -8 >> 13 === -1. Actual: ",
                    "raw": "'#420: -8 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50420,
                    "end": 50430,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50421,
                      "end": 50429,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50421,
                        "end": 50423,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50422,
                          "end": 50423,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50427,
                        "end": 50429,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50439,
      "end": 50542,
      "test": {
        "type": "BinaryExpression",
        "start": 50443,
        "end": 50459,
        "left": {
          "type": "BinaryExpression",
          "start": 50443,
          "end": 50452,
          "left": {
            "type": "UnaryExpression",
            "start": 50443,
            "end": 50446,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50444,
              "end": 50446,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50450,
            "end": 50452,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50457,
          "end": 50459,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50458,
            "end": 50459,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50461,
        "end": 50542,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50466,
            "end": 50539,
            "argument": {
              "type": "NewExpression",
              "start": 50472,
              "end": 50538,
              "callee": {
                "type": "Identifier",
                "start": 50476,
                "end": 50488,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50489,
                  "end": 50537,
                  "left": {
                    "type": "Literal",
                    "start": 50489,
                    "end": 50523,
                    "value": "#421: -16 >> 13 === -1. Actual: ",
                    "raw": "'#421: -16 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50526,
                    "end": 50537,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50527,
                      "end": 50536,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50527,
                        "end": 50530,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50528,
                          "end": 50530,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50534,
                        "end": 50536,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50546,
      "end": 50649,
      "test": {
        "type": "BinaryExpression",
        "start": 50550,
        "end": 50566,
        "left": {
          "type": "BinaryExpression",
          "start": 50550,
          "end": 50559,
          "left": {
            "type": "UnaryExpression",
            "start": 50550,
            "end": 50553,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50551,
              "end": 50553,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50557,
            "end": 50559,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50564,
          "end": 50566,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50565,
            "end": 50566,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50568,
        "end": 50649,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50573,
            "end": 50646,
            "argument": {
              "type": "NewExpression",
              "start": 50579,
              "end": 50645,
              "callee": {
                "type": "Identifier",
                "start": 50583,
                "end": 50595,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50596,
                  "end": 50644,
                  "left": {
                    "type": "Literal",
                    "start": 50596,
                    "end": 50630,
                    "value": "#422: -32 >> 13 === -1. Actual: ",
                    "raw": "'#422: -32 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50633,
                    "end": 50644,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50634,
                      "end": 50643,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50634,
                        "end": 50637,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50635,
                          "end": 50637,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50641,
                        "end": 50643,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50653,
      "end": 50756,
      "test": {
        "type": "BinaryExpression",
        "start": 50657,
        "end": 50673,
        "left": {
          "type": "BinaryExpression",
          "start": 50657,
          "end": 50666,
          "left": {
            "type": "UnaryExpression",
            "start": 50657,
            "end": 50660,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50658,
              "end": 50660,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50664,
            "end": 50666,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50671,
          "end": 50673,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50672,
            "end": 50673,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50675,
        "end": 50756,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50680,
            "end": 50753,
            "argument": {
              "type": "NewExpression",
              "start": 50686,
              "end": 50752,
              "callee": {
                "type": "Identifier",
                "start": 50690,
                "end": 50702,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50703,
                  "end": 50751,
                  "left": {
                    "type": "Literal",
                    "start": 50703,
                    "end": 50737,
                    "value": "#423: -64 >> 13 === -1. Actual: ",
                    "raw": "'#423: -64 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50740,
                    "end": 50751,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50741,
                      "end": 50750,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50741,
                        "end": 50744,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50742,
                          "end": 50744,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50748,
                        "end": 50750,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50760,
      "end": 50866,
      "test": {
        "type": "BinaryExpression",
        "start": 50764,
        "end": 50781,
        "left": {
          "type": "BinaryExpression",
          "start": 50764,
          "end": 50774,
          "left": {
            "type": "UnaryExpression",
            "start": 50764,
            "end": 50768,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50765,
              "end": 50768,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50772,
            "end": 50774,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50779,
          "end": 50781,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50780,
            "end": 50781,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50783,
        "end": 50866,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50788,
            "end": 50863,
            "argument": {
              "type": "NewExpression",
              "start": 50794,
              "end": 50862,
              "callee": {
                "type": "Identifier",
                "start": 50798,
                "end": 50810,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50811,
                  "end": 50861,
                  "left": {
                    "type": "Literal",
                    "start": 50811,
                    "end": 50846,
                    "value": "#424: -128 >> 13 === -1. Actual: ",
                    "raw": "'#424: -128 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50849,
                    "end": 50861,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50850,
                      "end": 50860,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50850,
                        "end": 50854,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50851,
                          "end": 50854,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50858,
                        "end": 50860,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50870,
      "end": 50976,
      "test": {
        "type": "BinaryExpression",
        "start": 50874,
        "end": 50891,
        "left": {
          "type": "BinaryExpression",
          "start": 50874,
          "end": 50884,
          "left": {
            "type": "UnaryExpression",
            "start": 50874,
            "end": 50878,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50875,
              "end": 50878,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50882,
            "end": 50884,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50889,
          "end": 50891,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 50890,
            "end": 50891,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50893,
        "end": 50976,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50898,
            "end": 50973,
            "argument": {
              "type": "NewExpression",
              "start": 50904,
              "end": 50972,
              "callee": {
                "type": "Identifier",
                "start": 50908,
                "end": 50920,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50921,
                  "end": 50971,
                  "left": {
                    "type": "Literal",
                    "start": 50921,
                    "end": 50956,
                    "value": "#425: -256 >> 13 === -1. Actual: ",
                    "raw": "'#425: -256 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50959,
                    "end": 50971,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50960,
                      "end": 50970,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 50960,
                        "end": 50964,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 50961,
                          "end": 50964,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50968,
                        "end": 50970,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50980,
      "end": 51086,
      "test": {
        "type": "BinaryExpression",
        "start": 50984,
        "end": 51001,
        "left": {
          "type": "BinaryExpression",
          "start": 50984,
          "end": 50994,
          "left": {
            "type": "UnaryExpression",
            "start": 50984,
            "end": 50988,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 50985,
              "end": 50988,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50992,
            "end": 50994,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 50999,
          "end": 51001,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51000,
            "end": 51001,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51003,
        "end": 51086,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51008,
            "end": 51083,
            "argument": {
              "type": "NewExpression",
              "start": 51014,
              "end": 51082,
              "callee": {
                "type": "Identifier",
                "start": 51018,
                "end": 51030,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51031,
                  "end": 51081,
                  "left": {
                    "type": "Literal",
                    "start": 51031,
                    "end": 51066,
                    "value": "#426: -512 >> 13 === -1. Actual: ",
                    "raw": "'#426: -512 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51069,
                    "end": 51081,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51070,
                      "end": 51080,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51070,
                        "end": 51074,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51071,
                          "end": 51074,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51078,
                        "end": 51080,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51090,
      "end": 51199,
      "test": {
        "type": "BinaryExpression",
        "start": 51094,
        "end": 51112,
        "left": {
          "type": "BinaryExpression",
          "start": 51094,
          "end": 51105,
          "left": {
            "type": "UnaryExpression",
            "start": 51094,
            "end": 51099,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51095,
              "end": 51099,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51103,
            "end": 51105,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51110,
          "end": 51112,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51111,
            "end": 51112,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51114,
        "end": 51199,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51119,
            "end": 51196,
            "argument": {
              "type": "NewExpression",
              "start": 51125,
              "end": 51195,
              "callee": {
                "type": "Identifier",
                "start": 51129,
                "end": 51141,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51142,
                  "end": 51194,
                  "left": {
                    "type": "Literal",
                    "start": 51142,
                    "end": 51178,
                    "value": "#427: -1024 >> 13 === -1. Actual: ",
                    "raw": "'#427: -1024 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51181,
                    "end": 51194,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51182,
                      "end": 51193,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51182,
                        "end": 51187,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51183,
                          "end": 51187,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51191,
                        "end": 51193,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51203,
      "end": 51312,
      "test": {
        "type": "BinaryExpression",
        "start": 51207,
        "end": 51225,
        "left": {
          "type": "BinaryExpression",
          "start": 51207,
          "end": 51218,
          "left": {
            "type": "UnaryExpression",
            "start": 51207,
            "end": 51212,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51208,
              "end": 51212,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51216,
            "end": 51218,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51223,
          "end": 51225,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51224,
            "end": 51225,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51227,
        "end": 51312,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51232,
            "end": 51309,
            "argument": {
              "type": "NewExpression",
              "start": 51238,
              "end": 51308,
              "callee": {
                "type": "Identifier",
                "start": 51242,
                "end": 51254,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51255,
                  "end": 51307,
                  "left": {
                    "type": "Literal",
                    "start": 51255,
                    "end": 51291,
                    "value": "#428: -2048 >> 13 === -1. Actual: ",
                    "raw": "'#428: -2048 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51294,
                    "end": 51307,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51295,
                      "end": 51306,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51295,
                        "end": 51300,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51296,
                          "end": 51300,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51304,
                        "end": 51306,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51316,
      "end": 51425,
      "test": {
        "type": "BinaryExpression",
        "start": 51320,
        "end": 51338,
        "left": {
          "type": "BinaryExpression",
          "start": 51320,
          "end": 51331,
          "left": {
            "type": "UnaryExpression",
            "start": 51320,
            "end": 51325,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51321,
              "end": 51325,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51329,
            "end": 51331,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51336,
          "end": 51338,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51337,
            "end": 51338,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51340,
        "end": 51425,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51345,
            "end": 51422,
            "argument": {
              "type": "NewExpression",
              "start": 51351,
              "end": 51421,
              "callee": {
                "type": "Identifier",
                "start": 51355,
                "end": 51367,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51368,
                  "end": 51420,
                  "left": {
                    "type": "Literal",
                    "start": 51368,
                    "end": 51404,
                    "value": "#429: -4096 >> 13 === -1. Actual: ",
                    "raw": "'#429: -4096 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51407,
                    "end": 51420,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51408,
                      "end": 51419,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51408,
                        "end": 51413,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51409,
                          "end": 51413,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51417,
                        "end": 51419,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51429,
      "end": 51538,
      "test": {
        "type": "BinaryExpression",
        "start": 51433,
        "end": 51451,
        "left": {
          "type": "BinaryExpression",
          "start": 51433,
          "end": 51444,
          "left": {
            "type": "UnaryExpression",
            "start": 51433,
            "end": 51438,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51434,
              "end": 51438,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51442,
            "end": 51444,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51449,
          "end": 51451,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51450,
            "end": 51451,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51453,
        "end": 51538,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51458,
            "end": 51535,
            "argument": {
              "type": "NewExpression",
              "start": 51464,
              "end": 51534,
              "callee": {
                "type": "Identifier",
                "start": 51468,
                "end": 51480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51481,
                  "end": 51533,
                  "left": {
                    "type": "Literal",
                    "start": 51481,
                    "end": 51517,
                    "value": "#430: -8192 >> 13 === -1. Actual: ",
                    "raw": "'#430: -8192 >> 13 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51520,
                    "end": 51533,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51521,
                      "end": 51532,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51521,
                        "end": 51526,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51522,
                          "end": 51526,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51530,
                        "end": 51532,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51542,
      "end": 51654,
      "test": {
        "type": "BinaryExpression",
        "start": 51546,
        "end": 51565,
        "left": {
          "type": "BinaryExpression",
          "start": 51546,
          "end": 51558,
          "left": {
            "type": "UnaryExpression",
            "start": 51546,
            "end": 51552,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51547,
              "end": 51552,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51556,
            "end": 51558,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51563,
          "end": 51565,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51564,
            "end": 51565,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51567,
        "end": 51654,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51572,
            "end": 51651,
            "argument": {
              "type": "NewExpression",
              "start": 51578,
              "end": 51650,
              "callee": {
                "type": "Identifier",
                "start": 51582,
                "end": 51594,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51595,
                  "end": 51649,
                  "left": {
                    "type": "Literal",
                    "start": 51595,
                    "end": 51632,
                    "value": "#431: -16384 >> 13 === -2. Actual: ",
                    "raw": "'#431: -16384 >> 13 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51635,
                    "end": 51649,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51636,
                      "end": 51648,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51636,
                        "end": 51642,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51637,
                          "end": 51642,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51646,
                        "end": 51648,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51658,
      "end": 51770,
      "test": {
        "type": "BinaryExpression",
        "start": 51662,
        "end": 51681,
        "left": {
          "type": "BinaryExpression",
          "start": 51662,
          "end": 51674,
          "left": {
            "type": "UnaryExpression",
            "start": 51662,
            "end": 51668,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51663,
              "end": 51668,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51672,
            "end": 51674,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51679,
          "end": 51681,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51680,
            "end": 51681,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51683,
        "end": 51770,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51688,
            "end": 51767,
            "argument": {
              "type": "NewExpression",
              "start": 51694,
              "end": 51766,
              "callee": {
                "type": "Identifier",
                "start": 51698,
                "end": 51710,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51711,
                  "end": 51765,
                  "left": {
                    "type": "Literal",
                    "start": 51711,
                    "end": 51748,
                    "value": "#432: -32768 >> 13 === -4. Actual: ",
                    "raw": "'#432: -32768 >> 13 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51751,
                    "end": 51765,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51752,
                      "end": 51764,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51752,
                        "end": 51758,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51753,
                          "end": 51758,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51762,
                        "end": 51764,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51774,
      "end": 51886,
      "test": {
        "type": "BinaryExpression",
        "start": 51778,
        "end": 51797,
        "left": {
          "type": "BinaryExpression",
          "start": 51778,
          "end": 51790,
          "left": {
            "type": "UnaryExpression",
            "start": 51778,
            "end": 51784,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51779,
              "end": 51784,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51788,
            "end": 51790,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51795,
          "end": 51797,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51796,
            "end": 51797,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51799,
        "end": 51886,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51804,
            "end": 51883,
            "argument": {
              "type": "NewExpression",
              "start": 51810,
              "end": 51882,
              "callee": {
                "type": "Identifier",
                "start": 51814,
                "end": 51826,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51827,
                  "end": 51881,
                  "left": {
                    "type": "Literal",
                    "start": 51827,
                    "end": 51864,
                    "value": "#433: -65536 >> 13 === -8. Actual: ",
                    "raw": "'#433: -65536 >> 13 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51867,
                    "end": 51881,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51868,
                      "end": 51880,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51868,
                        "end": 51874,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51869,
                          "end": 51874,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51878,
                        "end": 51880,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51890,
      "end": 52007,
      "test": {
        "type": "BinaryExpression",
        "start": 51894,
        "end": 51915,
        "left": {
          "type": "BinaryExpression",
          "start": 51894,
          "end": 51907,
          "left": {
            "type": "UnaryExpression",
            "start": 51894,
            "end": 51901,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 51895,
              "end": 51901,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51905,
            "end": 51907,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 51912,
          "end": 51915,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 51913,
            "end": 51915,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51917,
        "end": 52007,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51922,
            "end": 52004,
            "argument": {
              "type": "NewExpression",
              "start": 51928,
              "end": 52003,
              "callee": {
                "type": "Identifier",
                "start": 51932,
                "end": 51944,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51945,
                  "end": 52002,
                  "left": {
                    "type": "Literal",
                    "start": 51945,
                    "end": 51984,
                    "value": "#434: -131072 >> 13 === -16. Actual: ",
                    "raw": "'#434: -131072 >> 13 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51987,
                    "end": 52002,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51988,
                      "end": 52001,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 51988,
                        "end": 51995,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 51989,
                          "end": 51995,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51999,
                        "end": 52001,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52011,
      "end": 52128,
      "test": {
        "type": "BinaryExpression",
        "start": 52015,
        "end": 52036,
        "left": {
          "type": "BinaryExpression",
          "start": 52015,
          "end": 52028,
          "left": {
            "type": "UnaryExpression",
            "start": 52015,
            "end": 52022,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52016,
              "end": 52022,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52026,
            "end": 52028,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52033,
          "end": 52036,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52034,
            "end": 52036,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52038,
        "end": 52128,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52043,
            "end": 52125,
            "argument": {
              "type": "NewExpression",
              "start": 52049,
              "end": 52124,
              "callee": {
                "type": "Identifier",
                "start": 52053,
                "end": 52065,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52066,
                  "end": 52123,
                  "left": {
                    "type": "Literal",
                    "start": 52066,
                    "end": 52105,
                    "value": "#435: -262144 >> 13 === -32. Actual: ",
                    "raw": "'#435: -262144 >> 13 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52108,
                    "end": 52123,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52109,
                      "end": 52122,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52109,
                        "end": 52116,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52110,
                          "end": 52116,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52120,
                        "end": 52122,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52132,
      "end": 52249,
      "test": {
        "type": "BinaryExpression",
        "start": 52136,
        "end": 52157,
        "left": {
          "type": "BinaryExpression",
          "start": 52136,
          "end": 52149,
          "left": {
            "type": "UnaryExpression",
            "start": 52136,
            "end": 52143,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52137,
              "end": 52143,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52147,
            "end": 52149,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52154,
          "end": 52157,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52155,
            "end": 52157,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52159,
        "end": 52249,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52164,
            "end": 52246,
            "argument": {
              "type": "NewExpression",
              "start": 52170,
              "end": 52245,
              "callee": {
                "type": "Identifier",
                "start": 52174,
                "end": 52186,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52187,
                  "end": 52244,
                  "left": {
                    "type": "Literal",
                    "start": 52187,
                    "end": 52226,
                    "value": "#436: -524288 >> 13 === -64. Actual: ",
                    "raw": "'#436: -524288 >> 13 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52229,
                    "end": 52244,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52230,
                      "end": 52243,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52230,
                        "end": 52237,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52231,
                          "end": 52237,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52241,
                        "end": 52243,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52253,
      "end": 52375,
      "test": {
        "type": "BinaryExpression",
        "start": 52257,
        "end": 52280,
        "left": {
          "type": "BinaryExpression",
          "start": 52257,
          "end": 52271,
          "left": {
            "type": "UnaryExpression",
            "start": 52257,
            "end": 52265,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52258,
              "end": 52265,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52269,
            "end": 52271,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52276,
          "end": 52280,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52277,
            "end": 52280,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52282,
        "end": 52375,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52287,
            "end": 52372,
            "argument": {
              "type": "NewExpression",
              "start": 52293,
              "end": 52371,
              "callee": {
                "type": "Identifier",
                "start": 52297,
                "end": 52309,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52310,
                  "end": 52370,
                  "left": {
                    "type": "Literal",
                    "start": 52310,
                    "end": 52351,
                    "value": "#437: -1048576 >> 13 === -128. Actual: ",
                    "raw": "'#437: -1048576 >> 13 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52354,
                    "end": 52370,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52355,
                      "end": 52369,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52355,
                        "end": 52363,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52356,
                          "end": 52363,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52367,
                        "end": 52369,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52379,
      "end": 52501,
      "test": {
        "type": "BinaryExpression",
        "start": 52383,
        "end": 52406,
        "left": {
          "type": "BinaryExpression",
          "start": 52383,
          "end": 52397,
          "left": {
            "type": "UnaryExpression",
            "start": 52383,
            "end": 52391,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52384,
              "end": 52391,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52395,
            "end": 52397,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52402,
          "end": 52406,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52403,
            "end": 52406,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52408,
        "end": 52501,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52413,
            "end": 52498,
            "argument": {
              "type": "NewExpression",
              "start": 52419,
              "end": 52497,
              "callee": {
                "type": "Identifier",
                "start": 52423,
                "end": 52435,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52436,
                  "end": 52496,
                  "left": {
                    "type": "Literal",
                    "start": 52436,
                    "end": 52477,
                    "value": "#438: -2097152 >> 13 === -256. Actual: ",
                    "raw": "'#438: -2097152 >> 13 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52480,
                    "end": 52496,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52481,
                      "end": 52495,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52481,
                        "end": 52489,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52482,
                          "end": 52489,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52493,
                        "end": 52495,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52505,
      "end": 52627,
      "test": {
        "type": "BinaryExpression",
        "start": 52509,
        "end": 52532,
        "left": {
          "type": "BinaryExpression",
          "start": 52509,
          "end": 52523,
          "left": {
            "type": "UnaryExpression",
            "start": 52509,
            "end": 52517,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52510,
              "end": 52517,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52521,
            "end": 52523,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52528,
          "end": 52532,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52529,
            "end": 52532,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52534,
        "end": 52627,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52539,
            "end": 52624,
            "argument": {
              "type": "NewExpression",
              "start": 52545,
              "end": 52623,
              "callee": {
                "type": "Identifier",
                "start": 52549,
                "end": 52561,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52562,
                  "end": 52622,
                  "left": {
                    "type": "Literal",
                    "start": 52562,
                    "end": 52603,
                    "value": "#439: -4194304 >> 13 === -512. Actual: ",
                    "raw": "'#439: -4194304 >> 13 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52606,
                    "end": 52622,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52607,
                      "end": 52621,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52607,
                        "end": 52615,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52608,
                          "end": 52615,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52619,
                        "end": 52621,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52631,
      "end": 52755,
      "test": {
        "type": "BinaryExpression",
        "start": 52635,
        "end": 52659,
        "left": {
          "type": "BinaryExpression",
          "start": 52635,
          "end": 52649,
          "left": {
            "type": "UnaryExpression",
            "start": 52635,
            "end": 52643,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52636,
              "end": 52643,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52647,
            "end": 52649,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52654,
          "end": 52659,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52655,
            "end": 52659,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52661,
        "end": 52755,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52666,
            "end": 52752,
            "argument": {
              "type": "NewExpression",
              "start": 52672,
              "end": 52751,
              "callee": {
                "type": "Identifier",
                "start": 52676,
                "end": 52688,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52689,
                  "end": 52750,
                  "left": {
                    "type": "Literal",
                    "start": 52689,
                    "end": 52731,
                    "value": "#440: -8388608 >> 13 === -1024. Actual: ",
                    "raw": "'#440: -8388608 >> 13 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52734,
                    "end": 52750,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52735,
                      "end": 52749,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52735,
                        "end": 52743,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52736,
                          "end": 52743,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52747,
                        "end": 52749,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52759,
      "end": 52886,
      "test": {
        "type": "BinaryExpression",
        "start": 52763,
        "end": 52788,
        "left": {
          "type": "BinaryExpression",
          "start": 52763,
          "end": 52778,
          "left": {
            "type": "UnaryExpression",
            "start": 52763,
            "end": 52772,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52764,
              "end": 52772,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52776,
            "end": 52778,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52783,
          "end": 52788,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52784,
            "end": 52788,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52790,
        "end": 52886,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52795,
            "end": 52883,
            "argument": {
              "type": "NewExpression",
              "start": 52801,
              "end": 52882,
              "callee": {
                "type": "Identifier",
                "start": 52805,
                "end": 52817,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52818,
                  "end": 52881,
                  "left": {
                    "type": "Literal",
                    "start": 52818,
                    "end": 52861,
                    "value": "#441: -16777216 >> 13 === -2048. Actual: ",
                    "raw": "'#441: -16777216 >> 13 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52864,
                    "end": 52881,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52865,
                      "end": 52880,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52865,
                        "end": 52874,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52866,
                          "end": 52874,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52878,
                        "end": 52880,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52890,
      "end": 53017,
      "test": {
        "type": "BinaryExpression",
        "start": 52894,
        "end": 52919,
        "left": {
          "type": "BinaryExpression",
          "start": 52894,
          "end": 52909,
          "left": {
            "type": "UnaryExpression",
            "start": 52894,
            "end": 52903,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 52895,
              "end": 52903,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52907,
            "end": 52909,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 52914,
          "end": 52919,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 52915,
            "end": 52919,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52921,
        "end": 53017,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52926,
            "end": 53014,
            "argument": {
              "type": "NewExpression",
              "start": 52932,
              "end": 53013,
              "callee": {
                "type": "Identifier",
                "start": 52936,
                "end": 52948,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52949,
                  "end": 53012,
                  "left": {
                    "type": "Literal",
                    "start": 52949,
                    "end": 52992,
                    "value": "#442: -33554432 >> 13 === -4096. Actual: ",
                    "raw": "'#442: -33554432 >> 13 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52995,
                    "end": 53012,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52996,
                      "end": 53011,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 52996,
                        "end": 53005,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 52997,
                          "end": 53005,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53009,
                        "end": 53011,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53021,
      "end": 53148,
      "test": {
        "type": "BinaryExpression",
        "start": 53025,
        "end": 53050,
        "left": {
          "type": "BinaryExpression",
          "start": 53025,
          "end": 53040,
          "left": {
            "type": "UnaryExpression",
            "start": 53025,
            "end": 53034,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53026,
              "end": 53034,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53038,
            "end": 53040,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53045,
          "end": 53050,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53046,
            "end": 53050,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53052,
        "end": 53148,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53057,
            "end": 53145,
            "argument": {
              "type": "NewExpression",
              "start": 53063,
              "end": 53144,
              "callee": {
                "type": "Identifier",
                "start": 53067,
                "end": 53079,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53080,
                  "end": 53143,
                  "left": {
                    "type": "Literal",
                    "start": 53080,
                    "end": 53123,
                    "value": "#443: -67108864 >> 13 === -8192. Actual: ",
                    "raw": "'#443: -67108864 >> 13 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53126,
                    "end": 53143,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53127,
                      "end": 53142,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53127,
                        "end": 53136,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53128,
                          "end": 53136,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53140,
                        "end": 53142,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53152,
      "end": 53284,
      "test": {
        "type": "BinaryExpression",
        "start": 53156,
        "end": 53183,
        "left": {
          "type": "BinaryExpression",
          "start": 53156,
          "end": 53172,
          "left": {
            "type": "UnaryExpression",
            "start": 53156,
            "end": 53166,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53157,
              "end": 53166,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53170,
            "end": 53172,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53177,
          "end": 53183,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53178,
            "end": 53183,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53185,
        "end": 53284,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53190,
            "end": 53281,
            "argument": {
              "type": "NewExpression",
              "start": 53196,
              "end": 53280,
              "callee": {
                "type": "Identifier",
                "start": 53200,
                "end": 53212,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53213,
                  "end": 53279,
                  "left": {
                    "type": "Literal",
                    "start": 53213,
                    "end": 53258,
                    "value": "#444: -134217728 >> 13 === -16384. Actual: ",
                    "raw": "'#444: -134217728 >> 13 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53261,
                    "end": 53279,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53262,
                      "end": 53278,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53262,
                        "end": 53272,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53263,
                          "end": 53272,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53276,
                        "end": 53278,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53288,
      "end": 53420,
      "test": {
        "type": "BinaryExpression",
        "start": 53292,
        "end": 53319,
        "left": {
          "type": "BinaryExpression",
          "start": 53292,
          "end": 53308,
          "left": {
            "type": "UnaryExpression",
            "start": 53292,
            "end": 53302,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53293,
              "end": 53302,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53306,
            "end": 53308,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53313,
          "end": 53319,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53314,
            "end": 53319,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53321,
        "end": 53420,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53326,
            "end": 53417,
            "argument": {
              "type": "NewExpression",
              "start": 53332,
              "end": 53416,
              "callee": {
                "type": "Identifier",
                "start": 53336,
                "end": 53348,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53349,
                  "end": 53415,
                  "left": {
                    "type": "Literal",
                    "start": 53349,
                    "end": 53394,
                    "value": "#445: -268435456 >> 13 === -32768. Actual: ",
                    "raw": "'#445: -268435456 >> 13 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53397,
                    "end": 53415,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53398,
                      "end": 53414,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53398,
                        "end": 53408,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53399,
                          "end": 53408,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53412,
                        "end": 53414,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53424,
      "end": 53556,
      "test": {
        "type": "BinaryExpression",
        "start": 53428,
        "end": 53455,
        "left": {
          "type": "BinaryExpression",
          "start": 53428,
          "end": 53444,
          "left": {
            "type": "UnaryExpression",
            "start": 53428,
            "end": 53438,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53429,
              "end": 53438,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53442,
            "end": 53444,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53449,
          "end": 53455,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53450,
            "end": 53455,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53457,
        "end": 53556,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53462,
            "end": 53553,
            "argument": {
              "type": "NewExpression",
              "start": 53468,
              "end": 53552,
              "callee": {
                "type": "Identifier",
                "start": 53472,
                "end": 53484,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53485,
                  "end": 53551,
                  "left": {
                    "type": "Literal",
                    "start": 53485,
                    "end": 53530,
                    "value": "#446: -536870912 >> 13 === -65536. Actual: ",
                    "raw": "'#446: -536870912 >> 13 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53533,
                    "end": 53551,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53534,
                      "end": 53550,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53534,
                        "end": 53544,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53535,
                          "end": 53544,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53548,
                        "end": 53550,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53560,
      "end": 53697,
      "test": {
        "type": "BinaryExpression",
        "start": 53564,
        "end": 53593,
        "left": {
          "type": "BinaryExpression",
          "start": 53564,
          "end": 53581,
          "left": {
            "type": "UnaryExpression",
            "start": 53564,
            "end": 53575,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53565,
              "end": 53575,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53579,
            "end": 53581,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53586,
          "end": 53593,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53587,
            "end": 53593,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53595,
        "end": 53697,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53600,
            "end": 53694,
            "argument": {
              "type": "NewExpression",
              "start": 53606,
              "end": 53693,
              "callee": {
                "type": "Identifier",
                "start": 53610,
                "end": 53622,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53623,
                  "end": 53692,
                  "left": {
                    "type": "Literal",
                    "start": 53623,
                    "end": 53670,
                    "value": "#447: -1073741824 >> 13 === -131072. Actual: ",
                    "raw": "'#447: -1073741824 >> 13 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53673,
                    "end": 53692,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53674,
                      "end": 53691,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53674,
                        "end": 53685,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53675,
                          "end": 53685,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53689,
                        "end": 53691,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53701,
      "end": 53838,
      "test": {
        "type": "BinaryExpression",
        "start": 53705,
        "end": 53734,
        "left": {
          "type": "BinaryExpression",
          "start": 53705,
          "end": 53722,
          "left": {
            "type": "UnaryExpression",
            "start": 53705,
            "end": 53716,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53706,
              "end": 53716,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53720,
            "end": 53722,
            "value": 13,
            "raw": "13",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53727,
          "end": 53734,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53728,
            "end": 53734,
            "value": 262144,
            "raw": "262144",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53736,
        "end": 53838,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53741,
            "end": 53835,
            "argument": {
              "type": "NewExpression",
              "start": 53747,
              "end": 53834,
              "callee": {
                "type": "Identifier",
                "start": 53751,
                "end": 53763,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53764,
                  "end": 53833,
                  "left": {
                    "type": "Literal",
                    "start": 53764,
                    "end": 53811,
                    "value": "#448: -2147483648 >> 13 === -262144. Actual: ",
                    "raw": "'#448: -2147483648 >> 13 === -262144. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53814,
                    "end": 53833,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53815,
                      "end": 53832,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53815,
                        "end": 53826,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53816,
                          "end": 53826,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53830,
                        "end": 53832,
                        "value": 13,
                        "raw": "13",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53842,
      "end": 53942,
      "test": {
        "type": "BinaryExpression",
        "start": 53846,
        "end": 53861,
        "left": {
          "type": "BinaryExpression",
          "start": 53846,
          "end": 53854,
          "left": {
            "type": "UnaryExpression",
            "start": 53846,
            "end": 53848,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53847,
              "end": 53848,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53852,
            "end": 53854,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53859,
          "end": 53861,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53860,
            "end": 53861,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53863,
        "end": 53942,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53868,
            "end": 53939,
            "argument": {
              "type": "NewExpression",
              "start": 53874,
              "end": 53938,
              "callee": {
                "type": "Identifier",
                "start": 53878,
                "end": 53890,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53891,
                  "end": 53937,
                  "left": {
                    "type": "Literal",
                    "start": 53891,
                    "end": 53924,
                    "value": "#449: -1 >> 14 === -1. Actual: ",
                    "raw": "'#449: -1 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53927,
                    "end": 53937,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53928,
                      "end": 53936,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 53928,
                        "end": 53930,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 53929,
                          "end": 53930,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53934,
                        "end": 53936,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53946,
      "end": 54046,
      "test": {
        "type": "BinaryExpression",
        "start": 53950,
        "end": 53965,
        "left": {
          "type": "BinaryExpression",
          "start": 53950,
          "end": 53958,
          "left": {
            "type": "UnaryExpression",
            "start": 53950,
            "end": 53952,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 53951,
              "end": 53952,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53956,
            "end": 53958,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 53963,
          "end": 53965,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 53964,
            "end": 53965,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53967,
        "end": 54046,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53972,
            "end": 54043,
            "argument": {
              "type": "NewExpression",
              "start": 53978,
              "end": 54042,
              "callee": {
                "type": "Identifier",
                "start": 53982,
                "end": 53994,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53995,
                  "end": 54041,
                  "left": {
                    "type": "Literal",
                    "start": 53995,
                    "end": 54028,
                    "value": "#450: -2 >> 14 === -1. Actual: ",
                    "raw": "'#450: -2 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54031,
                    "end": 54041,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54032,
                      "end": 54040,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54032,
                        "end": 54034,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54033,
                          "end": 54034,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54038,
                        "end": 54040,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54050,
      "end": 54150,
      "test": {
        "type": "BinaryExpression",
        "start": 54054,
        "end": 54069,
        "left": {
          "type": "BinaryExpression",
          "start": 54054,
          "end": 54062,
          "left": {
            "type": "UnaryExpression",
            "start": 54054,
            "end": 54056,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54055,
              "end": 54056,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54060,
            "end": 54062,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54067,
          "end": 54069,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54068,
            "end": 54069,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54071,
        "end": 54150,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54076,
            "end": 54147,
            "argument": {
              "type": "NewExpression",
              "start": 54082,
              "end": 54146,
              "callee": {
                "type": "Identifier",
                "start": 54086,
                "end": 54098,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54099,
                  "end": 54145,
                  "left": {
                    "type": "Literal",
                    "start": 54099,
                    "end": 54132,
                    "value": "#451: -4 >> 14 === -1. Actual: ",
                    "raw": "'#451: -4 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54135,
                    "end": 54145,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54136,
                      "end": 54144,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54136,
                        "end": 54138,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54137,
                          "end": 54138,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54142,
                        "end": 54144,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54154,
      "end": 54254,
      "test": {
        "type": "BinaryExpression",
        "start": 54158,
        "end": 54173,
        "left": {
          "type": "BinaryExpression",
          "start": 54158,
          "end": 54166,
          "left": {
            "type": "UnaryExpression",
            "start": 54158,
            "end": 54160,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54159,
              "end": 54160,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54164,
            "end": 54166,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54171,
          "end": 54173,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54172,
            "end": 54173,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54175,
        "end": 54254,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54180,
            "end": 54251,
            "argument": {
              "type": "NewExpression",
              "start": 54186,
              "end": 54250,
              "callee": {
                "type": "Identifier",
                "start": 54190,
                "end": 54202,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54203,
                  "end": 54249,
                  "left": {
                    "type": "Literal",
                    "start": 54203,
                    "end": 54236,
                    "value": "#452: -8 >> 14 === -1. Actual: ",
                    "raw": "'#452: -8 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54239,
                    "end": 54249,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54240,
                      "end": 54248,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54240,
                        "end": 54242,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54241,
                          "end": 54242,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54246,
                        "end": 54248,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54258,
      "end": 54361,
      "test": {
        "type": "BinaryExpression",
        "start": 54262,
        "end": 54278,
        "left": {
          "type": "BinaryExpression",
          "start": 54262,
          "end": 54271,
          "left": {
            "type": "UnaryExpression",
            "start": 54262,
            "end": 54265,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54263,
              "end": 54265,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54269,
            "end": 54271,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54276,
          "end": 54278,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54277,
            "end": 54278,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54280,
        "end": 54361,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54285,
            "end": 54358,
            "argument": {
              "type": "NewExpression",
              "start": 54291,
              "end": 54357,
              "callee": {
                "type": "Identifier",
                "start": 54295,
                "end": 54307,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54308,
                  "end": 54356,
                  "left": {
                    "type": "Literal",
                    "start": 54308,
                    "end": 54342,
                    "value": "#453: -16 >> 14 === -1. Actual: ",
                    "raw": "'#453: -16 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54345,
                    "end": 54356,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54346,
                      "end": 54355,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54346,
                        "end": 54349,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54347,
                          "end": 54349,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54353,
                        "end": 54355,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54365,
      "end": 54468,
      "test": {
        "type": "BinaryExpression",
        "start": 54369,
        "end": 54385,
        "left": {
          "type": "BinaryExpression",
          "start": 54369,
          "end": 54378,
          "left": {
            "type": "UnaryExpression",
            "start": 54369,
            "end": 54372,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54370,
              "end": 54372,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54376,
            "end": 54378,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54383,
          "end": 54385,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54384,
            "end": 54385,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54387,
        "end": 54468,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54392,
            "end": 54465,
            "argument": {
              "type": "NewExpression",
              "start": 54398,
              "end": 54464,
              "callee": {
                "type": "Identifier",
                "start": 54402,
                "end": 54414,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54415,
                  "end": 54463,
                  "left": {
                    "type": "Literal",
                    "start": 54415,
                    "end": 54449,
                    "value": "#454: -32 >> 14 === -1. Actual: ",
                    "raw": "'#454: -32 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54452,
                    "end": 54463,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54453,
                      "end": 54462,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54453,
                        "end": 54456,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54454,
                          "end": 54456,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54460,
                        "end": 54462,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54472,
      "end": 54575,
      "test": {
        "type": "BinaryExpression",
        "start": 54476,
        "end": 54492,
        "left": {
          "type": "BinaryExpression",
          "start": 54476,
          "end": 54485,
          "left": {
            "type": "UnaryExpression",
            "start": 54476,
            "end": 54479,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54477,
              "end": 54479,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54483,
            "end": 54485,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54490,
          "end": 54492,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54491,
            "end": 54492,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54494,
        "end": 54575,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54499,
            "end": 54572,
            "argument": {
              "type": "NewExpression",
              "start": 54505,
              "end": 54571,
              "callee": {
                "type": "Identifier",
                "start": 54509,
                "end": 54521,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54522,
                  "end": 54570,
                  "left": {
                    "type": "Literal",
                    "start": 54522,
                    "end": 54556,
                    "value": "#455: -64 >> 14 === -1. Actual: ",
                    "raw": "'#455: -64 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54559,
                    "end": 54570,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54560,
                      "end": 54569,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54560,
                        "end": 54563,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54561,
                          "end": 54563,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54567,
                        "end": 54569,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54579,
      "end": 54685,
      "test": {
        "type": "BinaryExpression",
        "start": 54583,
        "end": 54600,
        "left": {
          "type": "BinaryExpression",
          "start": 54583,
          "end": 54593,
          "left": {
            "type": "UnaryExpression",
            "start": 54583,
            "end": 54587,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54584,
              "end": 54587,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54591,
            "end": 54593,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54598,
          "end": 54600,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54599,
            "end": 54600,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54602,
        "end": 54685,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54607,
            "end": 54682,
            "argument": {
              "type": "NewExpression",
              "start": 54613,
              "end": 54681,
              "callee": {
                "type": "Identifier",
                "start": 54617,
                "end": 54629,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54630,
                  "end": 54680,
                  "left": {
                    "type": "Literal",
                    "start": 54630,
                    "end": 54665,
                    "value": "#456: -128 >> 14 === -1. Actual: ",
                    "raw": "'#456: -128 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54668,
                    "end": 54680,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54669,
                      "end": 54679,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54669,
                        "end": 54673,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54670,
                          "end": 54673,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54677,
                        "end": 54679,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54689,
      "end": 54795,
      "test": {
        "type": "BinaryExpression",
        "start": 54693,
        "end": 54710,
        "left": {
          "type": "BinaryExpression",
          "start": 54693,
          "end": 54703,
          "left": {
            "type": "UnaryExpression",
            "start": 54693,
            "end": 54697,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54694,
              "end": 54697,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54701,
            "end": 54703,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54708,
          "end": 54710,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54709,
            "end": 54710,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54712,
        "end": 54795,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54717,
            "end": 54792,
            "argument": {
              "type": "NewExpression",
              "start": 54723,
              "end": 54791,
              "callee": {
                "type": "Identifier",
                "start": 54727,
                "end": 54739,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54740,
                  "end": 54790,
                  "left": {
                    "type": "Literal",
                    "start": 54740,
                    "end": 54775,
                    "value": "#457: -256 >> 14 === -1. Actual: ",
                    "raw": "'#457: -256 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54778,
                    "end": 54790,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54779,
                      "end": 54789,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54779,
                        "end": 54783,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54780,
                          "end": 54783,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54787,
                        "end": 54789,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54799,
      "end": 54905,
      "test": {
        "type": "BinaryExpression",
        "start": 54803,
        "end": 54820,
        "left": {
          "type": "BinaryExpression",
          "start": 54803,
          "end": 54813,
          "left": {
            "type": "UnaryExpression",
            "start": 54803,
            "end": 54807,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54804,
              "end": 54807,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54811,
            "end": 54813,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54818,
          "end": 54820,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54819,
            "end": 54820,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54822,
        "end": 54905,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54827,
            "end": 54902,
            "argument": {
              "type": "NewExpression",
              "start": 54833,
              "end": 54901,
              "callee": {
                "type": "Identifier",
                "start": 54837,
                "end": 54849,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54850,
                  "end": 54900,
                  "left": {
                    "type": "Literal",
                    "start": 54850,
                    "end": 54885,
                    "value": "#458: -512 >> 14 === -1. Actual: ",
                    "raw": "'#458: -512 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54888,
                    "end": 54900,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54889,
                      "end": 54899,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 54889,
                        "end": 54893,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 54890,
                          "end": 54893,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54897,
                        "end": 54899,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54909,
      "end": 55018,
      "test": {
        "type": "BinaryExpression",
        "start": 54913,
        "end": 54931,
        "left": {
          "type": "BinaryExpression",
          "start": 54913,
          "end": 54924,
          "left": {
            "type": "UnaryExpression",
            "start": 54913,
            "end": 54918,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 54914,
              "end": 54918,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54922,
            "end": 54924,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 54929,
          "end": 54931,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 54930,
            "end": 54931,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54933,
        "end": 55018,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54938,
            "end": 55015,
            "argument": {
              "type": "NewExpression",
              "start": 54944,
              "end": 55014,
              "callee": {
                "type": "Identifier",
                "start": 54948,
                "end": 54960,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54961,
                  "end": 55013,
                  "left": {
                    "type": "Literal",
                    "start": 54961,
                    "end": 54997,
                    "value": "#459: -1024 >> 14 === -1. Actual: ",
                    "raw": "'#459: -1024 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55000,
                    "end": 55013,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55001,
                      "end": 55012,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55001,
                        "end": 55006,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55002,
                          "end": 55006,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55010,
                        "end": 55012,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55022,
      "end": 55131,
      "test": {
        "type": "BinaryExpression",
        "start": 55026,
        "end": 55044,
        "left": {
          "type": "BinaryExpression",
          "start": 55026,
          "end": 55037,
          "left": {
            "type": "UnaryExpression",
            "start": 55026,
            "end": 55031,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55027,
              "end": 55031,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55035,
            "end": 55037,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55042,
          "end": 55044,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55043,
            "end": 55044,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55046,
        "end": 55131,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55051,
            "end": 55128,
            "argument": {
              "type": "NewExpression",
              "start": 55057,
              "end": 55127,
              "callee": {
                "type": "Identifier",
                "start": 55061,
                "end": 55073,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55074,
                  "end": 55126,
                  "left": {
                    "type": "Literal",
                    "start": 55074,
                    "end": 55110,
                    "value": "#460: -2048 >> 14 === -1. Actual: ",
                    "raw": "'#460: -2048 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55113,
                    "end": 55126,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55114,
                      "end": 55125,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55114,
                        "end": 55119,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55115,
                          "end": 55119,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55123,
                        "end": 55125,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55135,
      "end": 55244,
      "test": {
        "type": "BinaryExpression",
        "start": 55139,
        "end": 55157,
        "left": {
          "type": "BinaryExpression",
          "start": 55139,
          "end": 55150,
          "left": {
            "type": "UnaryExpression",
            "start": 55139,
            "end": 55144,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55140,
              "end": 55144,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55148,
            "end": 55150,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55155,
          "end": 55157,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55156,
            "end": 55157,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55159,
        "end": 55244,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55164,
            "end": 55241,
            "argument": {
              "type": "NewExpression",
              "start": 55170,
              "end": 55240,
              "callee": {
                "type": "Identifier",
                "start": 55174,
                "end": 55186,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55187,
                  "end": 55239,
                  "left": {
                    "type": "Literal",
                    "start": 55187,
                    "end": 55223,
                    "value": "#461: -4096 >> 14 === -1. Actual: ",
                    "raw": "'#461: -4096 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55226,
                    "end": 55239,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55227,
                      "end": 55238,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55227,
                        "end": 55232,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55228,
                          "end": 55232,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55236,
                        "end": 55238,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55248,
      "end": 55357,
      "test": {
        "type": "BinaryExpression",
        "start": 55252,
        "end": 55270,
        "left": {
          "type": "BinaryExpression",
          "start": 55252,
          "end": 55263,
          "left": {
            "type": "UnaryExpression",
            "start": 55252,
            "end": 55257,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55253,
              "end": 55257,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55261,
            "end": 55263,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55268,
          "end": 55270,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55269,
            "end": 55270,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55272,
        "end": 55357,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55277,
            "end": 55354,
            "argument": {
              "type": "NewExpression",
              "start": 55283,
              "end": 55353,
              "callee": {
                "type": "Identifier",
                "start": 55287,
                "end": 55299,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55300,
                  "end": 55352,
                  "left": {
                    "type": "Literal",
                    "start": 55300,
                    "end": 55336,
                    "value": "#462: -8192 >> 14 === -1. Actual: ",
                    "raw": "'#462: -8192 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55339,
                    "end": 55352,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55340,
                      "end": 55351,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55340,
                        "end": 55345,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55341,
                          "end": 55345,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55349,
                        "end": 55351,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55361,
      "end": 55473,
      "test": {
        "type": "BinaryExpression",
        "start": 55365,
        "end": 55384,
        "left": {
          "type": "BinaryExpression",
          "start": 55365,
          "end": 55377,
          "left": {
            "type": "UnaryExpression",
            "start": 55365,
            "end": 55371,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55366,
              "end": 55371,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55375,
            "end": 55377,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55382,
          "end": 55384,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55383,
            "end": 55384,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55386,
        "end": 55473,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55391,
            "end": 55470,
            "argument": {
              "type": "NewExpression",
              "start": 55397,
              "end": 55469,
              "callee": {
                "type": "Identifier",
                "start": 55401,
                "end": 55413,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55414,
                  "end": 55468,
                  "left": {
                    "type": "Literal",
                    "start": 55414,
                    "end": 55451,
                    "value": "#463: -16384 >> 14 === -1. Actual: ",
                    "raw": "'#463: -16384 >> 14 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55454,
                    "end": 55468,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55455,
                      "end": 55467,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55455,
                        "end": 55461,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55456,
                          "end": 55461,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55465,
                        "end": 55467,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55477,
      "end": 55589,
      "test": {
        "type": "BinaryExpression",
        "start": 55481,
        "end": 55500,
        "left": {
          "type": "BinaryExpression",
          "start": 55481,
          "end": 55493,
          "left": {
            "type": "UnaryExpression",
            "start": 55481,
            "end": 55487,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55482,
              "end": 55487,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55491,
            "end": 55493,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55498,
          "end": 55500,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55499,
            "end": 55500,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55502,
        "end": 55589,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55507,
            "end": 55586,
            "argument": {
              "type": "NewExpression",
              "start": 55513,
              "end": 55585,
              "callee": {
                "type": "Identifier",
                "start": 55517,
                "end": 55529,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55530,
                  "end": 55584,
                  "left": {
                    "type": "Literal",
                    "start": 55530,
                    "end": 55567,
                    "value": "#464: -32768 >> 14 === -2. Actual: ",
                    "raw": "'#464: -32768 >> 14 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55570,
                    "end": 55584,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55571,
                      "end": 55583,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55571,
                        "end": 55577,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55572,
                          "end": 55577,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55581,
                        "end": 55583,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55593,
      "end": 55705,
      "test": {
        "type": "BinaryExpression",
        "start": 55597,
        "end": 55616,
        "left": {
          "type": "BinaryExpression",
          "start": 55597,
          "end": 55609,
          "left": {
            "type": "UnaryExpression",
            "start": 55597,
            "end": 55603,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55598,
              "end": 55603,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55607,
            "end": 55609,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55614,
          "end": 55616,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55615,
            "end": 55616,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55618,
        "end": 55705,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55623,
            "end": 55702,
            "argument": {
              "type": "NewExpression",
              "start": 55629,
              "end": 55701,
              "callee": {
                "type": "Identifier",
                "start": 55633,
                "end": 55645,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55646,
                  "end": 55700,
                  "left": {
                    "type": "Literal",
                    "start": 55646,
                    "end": 55683,
                    "value": "#465: -65536 >> 14 === -4. Actual: ",
                    "raw": "'#465: -65536 >> 14 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55686,
                    "end": 55700,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55687,
                      "end": 55699,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55687,
                        "end": 55693,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55688,
                          "end": 55693,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55697,
                        "end": 55699,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55709,
      "end": 55824,
      "test": {
        "type": "BinaryExpression",
        "start": 55713,
        "end": 55733,
        "left": {
          "type": "BinaryExpression",
          "start": 55713,
          "end": 55726,
          "left": {
            "type": "UnaryExpression",
            "start": 55713,
            "end": 55720,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55714,
              "end": 55720,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55724,
            "end": 55726,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55731,
          "end": 55733,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55732,
            "end": 55733,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55735,
        "end": 55824,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55740,
            "end": 55821,
            "argument": {
              "type": "NewExpression",
              "start": 55746,
              "end": 55820,
              "callee": {
                "type": "Identifier",
                "start": 55750,
                "end": 55762,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55763,
                  "end": 55819,
                  "left": {
                    "type": "Literal",
                    "start": 55763,
                    "end": 55801,
                    "value": "#466: -131072 >> 14 === -8. Actual: ",
                    "raw": "'#466: -131072 >> 14 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55804,
                    "end": 55819,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55805,
                      "end": 55818,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55805,
                        "end": 55812,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55806,
                          "end": 55812,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55816,
                        "end": 55818,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55828,
      "end": 55945,
      "test": {
        "type": "BinaryExpression",
        "start": 55832,
        "end": 55853,
        "left": {
          "type": "BinaryExpression",
          "start": 55832,
          "end": 55845,
          "left": {
            "type": "UnaryExpression",
            "start": 55832,
            "end": 55839,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55833,
              "end": 55839,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55843,
            "end": 55845,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55850,
          "end": 55853,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55851,
            "end": 55853,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55855,
        "end": 55945,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55860,
            "end": 55942,
            "argument": {
              "type": "NewExpression",
              "start": 55866,
              "end": 55941,
              "callee": {
                "type": "Identifier",
                "start": 55870,
                "end": 55882,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55883,
                  "end": 55940,
                  "left": {
                    "type": "Literal",
                    "start": 55883,
                    "end": 55922,
                    "value": "#467: -262144 >> 14 === -16. Actual: ",
                    "raw": "'#467: -262144 >> 14 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55925,
                    "end": 55940,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55926,
                      "end": 55939,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 55926,
                        "end": 55933,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 55927,
                          "end": 55933,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55937,
                        "end": 55939,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55949,
      "end": 56066,
      "test": {
        "type": "BinaryExpression",
        "start": 55953,
        "end": 55974,
        "left": {
          "type": "BinaryExpression",
          "start": 55953,
          "end": 55966,
          "left": {
            "type": "UnaryExpression",
            "start": 55953,
            "end": 55960,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 55954,
              "end": 55960,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55964,
            "end": 55966,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 55971,
          "end": 55974,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 55972,
            "end": 55974,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55976,
        "end": 56066,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55981,
            "end": 56063,
            "argument": {
              "type": "NewExpression",
              "start": 55987,
              "end": 56062,
              "callee": {
                "type": "Identifier",
                "start": 55991,
                "end": 56003,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56004,
                  "end": 56061,
                  "left": {
                    "type": "Literal",
                    "start": 56004,
                    "end": 56043,
                    "value": "#468: -524288 >> 14 === -32. Actual: ",
                    "raw": "'#468: -524288 >> 14 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56046,
                    "end": 56061,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56047,
                      "end": 56060,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56047,
                        "end": 56054,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56048,
                          "end": 56054,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56058,
                        "end": 56060,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56070,
      "end": 56190,
      "test": {
        "type": "BinaryExpression",
        "start": 56074,
        "end": 56096,
        "left": {
          "type": "BinaryExpression",
          "start": 56074,
          "end": 56088,
          "left": {
            "type": "UnaryExpression",
            "start": 56074,
            "end": 56082,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56075,
              "end": 56082,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56086,
            "end": 56088,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56093,
          "end": 56096,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56094,
            "end": 56096,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56098,
        "end": 56190,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56103,
            "end": 56187,
            "argument": {
              "type": "NewExpression",
              "start": 56109,
              "end": 56186,
              "callee": {
                "type": "Identifier",
                "start": 56113,
                "end": 56125,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56126,
                  "end": 56185,
                  "left": {
                    "type": "Literal",
                    "start": 56126,
                    "end": 56166,
                    "value": "#469: -1048576 >> 14 === -64. Actual: ",
                    "raw": "'#469: -1048576 >> 14 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56169,
                    "end": 56185,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56170,
                      "end": 56184,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56170,
                        "end": 56178,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56171,
                          "end": 56178,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56182,
                        "end": 56184,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56194,
      "end": 56316,
      "test": {
        "type": "BinaryExpression",
        "start": 56198,
        "end": 56221,
        "left": {
          "type": "BinaryExpression",
          "start": 56198,
          "end": 56212,
          "left": {
            "type": "UnaryExpression",
            "start": 56198,
            "end": 56206,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56199,
              "end": 56206,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56210,
            "end": 56212,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56217,
          "end": 56221,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56218,
            "end": 56221,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56223,
        "end": 56316,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56228,
            "end": 56313,
            "argument": {
              "type": "NewExpression",
              "start": 56234,
              "end": 56312,
              "callee": {
                "type": "Identifier",
                "start": 56238,
                "end": 56250,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56251,
                  "end": 56311,
                  "left": {
                    "type": "Literal",
                    "start": 56251,
                    "end": 56292,
                    "value": "#470: -2097152 >> 14 === -128. Actual: ",
                    "raw": "'#470: -2097152 >> 14 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56295,
                    "end": 56311,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56296,
                      "end": 56310,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56296,
                        "end": 56304,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56297,
                          "end": 56304,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56308,
                        "end": 56310,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56320,
      "end": 56442,
      "test": {
        "type": "BinaryExpression",
        "start": 56324,
        "end": 56347,
        "left": {
          "type": "BinaryExpression",
          "start": 56324,
          "end": 56338,
          "left": {
            "type": "UnaryExpression",
            "start": 56324,
            "end": 56332,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56325,
              "end": 56332,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56336,
            "end": 56338,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56343,
          "end": 56347,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56344,
            "end": 56347,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56349,
        "end": 56442,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56354,
            "end": 56439,
            "argument": {
              "type": "NewExpression",
              "start": 56360,
              "end": 56438,
              "callee": {
                "type": "Identifier",
                "start": 56364,
                "end": 56376,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56377,
                  "end": 56437,
                  "left": {
                    "type": "Literal",
                    "start": 56377,
                    "end": 56418,
                    "value": "#471: -4194304 >> 14 === -256. Actual: ",
                    "raw": "'#471: -4194304 >> 14 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56421,
                    "end": 56437,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56422,
                      "end": 56436,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56422,
                        "end": 56430,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56423,
                          "end": 56430,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56434,
                        "end": 56436,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56446,
      "end": 56568,
      "test": {
        "type": "BinaryExpression",
        "start": 56450,
        "end": 56473,
        "left": {
          "type": "BinaryExpression",
          "start": 56450,
          "end": 56464,
          "left": {
            "type": "UnaryExpression",
            "start": 56450,
            "end": 56458,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56451,
              "end": 56458,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56462,
            "end": 56464,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56469,
          "end": 56473,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56470,
            "end": 56473,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56475,
        "end": 56568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56480,
            "end": 56565,
            "argument": {
              "type": "NewExpression",
              "start": 56486,
              "end": 56564,
              "callee": {
                "type": "Identifier",
                "start": 56490,
                "end": 56502,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56503,
                  "end": 56563,
                  "left": {
                    "type": "Literal",
                    "start": 56503,
                    "end": 56544,
                    "value": "#472: -8388608 >> 14 === -512. Actual: ",
                    "raw": "'#472: -8388608 >> 14 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56547,
                    "end": 56563,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56548,
                      "end": 56562,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56548,
                        "end": 56556,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56549,
                          "end": 56556,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56560,
                        "end": 56562,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56572,
      "end": 56699,
      "test": {
        "type": "BinaryExpression",
        "start": 56576,
        "end": 56601,
        "left": {
          "type": "BinaryExpression",
          "start": 56576,
          "end": 56591,
          "left": {
            "type": "UnaryExpression",
            "start": 56576,
            "end": 56585,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56577,
              "end": 56585,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56589,
            "end": 56591,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56596,
          "end": 56601,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56597,
            "end": 56601,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56603,
        "end": 56699,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56608,
            "end": 56696,
            "argument": {
              "type": "NewExpression",
              "start": 56614,
              "end": 56695,
              "callee": {
                "type": "Identifier",
                "start": 56618,
                "end": 56630,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56631,
                  "end": 56694,
                  "left": {
                    "type": "Literal",
                    "start": 56631,
                    "end": 56674,
                    "value": "#473: -16777216 >> 14 === -1024. Actual: ",
                    "raw": "'#473: -16777216 >> 14 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56677,
                    "end": 56694,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56678,
                      "end": 56693,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56678,
                        "end": 56687,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56679,
                          "end": 56687,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56691,
                        "end": 56693,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56703,
      "end": 56830,
      "test": {
        "type": "BinaryExpression",
        "start": 56707,
        "end": 56732,
        "left": {
          "type": "BinaryExpression",
          "start": 56707,
          "end": 56722,
          "left": {
            "type": "UnaryExpression",
            "start": 56707,
            "end": 56716,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56708,
              "end": 56716,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56720,
            "end": 56722,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56727,
          "end": 56732,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56728,
            "end": 56732,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56734,
        "end": 56830,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56739,
            "end": 56827,
            "argument": {
              "type": "NewExpression",
              "start": 56745,
              "end": 56826,
              "callee": {
                "type": "Identifier",
                "start": 56749,
                "end": 56761,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56762,
                  "end": 56825,
                  "left": {
                    "type": "Literal",
                    "start": 56762,
                    "end": 56805,
                    "value": "#474: -33554432 >> 14 === -2048. Actual: ",
                    "raw": "'#474: -33554432 >> 14 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56808,
                    "end": 56825,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56809,
                      "end": 56824,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56809,
                        "end": 56818,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56810,
                          "end": 56818,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56822,
                        "end": 56824,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56834,
      "end": 56961,
      "test": {
        "type": "BinaryExpression",
        "start": 56838,
        "end": 56863,
        "left": {
          "type": "BinaryExpression",
          "start": 56838,
          "end": 56853,
          "left": {
            "type": "UnaryExpression",
            "start": 56838,
            "end": 56847,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56839,
              "end": 56847,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56851,
            "end": 56853,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56858,
          "end": 56863,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56859,
            "end": 56863,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56865,
        "end": 56961,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56870,
            "end": 56958,
            "argument": {
              "type": "NewExpression",
              "start": 56876,
              "end": 56957,
              "callee": {
                "type": "Identifier",
                "start": 56880,
                "end": 56892,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56893,
                  "end": 56956,
                  "left": {
                    "type": "Literal",
                    "start": 56893,
                    "end": 56936,
                    "value": "#475: -67108864 >> 14 === -4096. Actual: ",
                    "raw": "'#475: -67108864 >> 14 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56939,
                    "end": 56956,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56940,
                      "end": 56955,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 56940,
                        "end": 56949,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 56941,
                          "end": 56949,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56953,
                        "end": 56955,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56965,
      "end": 57095,
      "test": {
        "type": "BinaryExpression",
        "start": 56969,
        "end": 56995,
        "left": {
          "type": "BinaryExpression",
          "start": 56969,
          "end": 56985,
          "left": {
            "type": "UnaryExpression",
            "start": 56969,
            "end": 56979,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 56970,
              "end": 56979,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56983,
            "end": 56985,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 56990,
          "end": 56995,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 56991,
            "end": 56995,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56997,
        "end": 57095,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57002,
            "end": 57092,
            "argument": {
              "type": "NewExpression",
              "start": 57008,
              "end": 57091,
              "callee": {
                "type": "Identifier",
                "start": 57012,
                "end": 57024,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57025,
                  "end": 57090,
                  "left": {
                    "type": "Literal",
                    "start": 57025,
                    "end": 57069,
                    "value": "#476: -134217728 >> 14 === -8192. Actual: ",
                    "raw": "'#476: -134217728 >> 14 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57072,
                    "end": 57090,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57073,
                      "end": 57089,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57073,
                        "end": 57083,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57074,
                          "end": 57083,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57087,
                        "end": 57089,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57099,
      "end": 57231,
      "test": {
        "type": "BinaryExpression",
        "start": 57103,
        "end": 57130,
        "left": {
          "type": "BinaryExpression",
          "start": 57103,
          "end": 57119,
          "left": {
            "type": "UnaryExpression",
            "start": 57103,
            "end": 57113,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57104,
              "end": 57113,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57117,
            "end": 57119,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57124,
          "end": 57130,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57125,
            "end": 57130,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57132,
        "end": 57231,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57137,
            "end": 57228,
            "argument": {
              "type": "NewExpression",
              "start": 57143,
              "end": 57227,
              "callee": {
                "type": "Identifier",
                "start": 57147,
                "end": 57159,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57160,
                  "end": 57226,
                  "left": {
                    "type": "Literal",
                    "start": 57160,
                    "end": 57205,
                    "value": "#477: -268435456 >> 14 === -16384. Actual: ",
                    "raw": "'#477: -268435456 >> 14 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57208,
                    "end": 57226,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57209,
                      "end": 57225,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57209,
                        "end": 57219,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57210,
                          "end": 57219,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57223,
                        "end": 57225,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57235,
      "end": 57367,
      "test": {
        "type": "BinaryExpression",
        "start": 57239,
        "end": 57266,
        "left": {
          "type": "BinaryExpression",
          "start": 57239,
          "end": 57255,
          "left": {
            "type": "UnaryExpression",
            "start": 57239,
            "end": 57249,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57240,
              "end": 57249,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57253,
            "end": 57255,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57260,
          "end": 57266,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57261,
            "end": 57266,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57268,
        "end": 57367,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57273,
            "end": 57364,
            "argument": {
              "type": "NewExpression",
              "start": 57279,
              "end": 57363,
              "callee": {
                "type": "Identifier",
                "start": 57283,
                "end": 57295,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57296,
                  "end": 57362,
                  "left": {
                    "type": "Literal",
                    "start": 57296,
                    "end": 57341,
                    "value": "#478: -536870912 >> 14 === -32768. Actual: ",
                    "raw": "'#478: -536870912 >> 14 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57344,
                    "end": 57362,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57345,
                      "end": 57361,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57345,
                        "end": 57355,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57346,
                          "end": 57355,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57359,
                        "end": 57361,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57371,
      "end": 57506,
      "test": {
        "type": "BinaryExpression",
        "start": 57375,
        "end": 57403,
        "left": {
          "type": "BinaryExpression",
          "start": 57375,
          "end": 57392,
          "left": {
            "type": "UnaryExpression",
            "start": 57375,
            "end": 57386,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57376,
              "end": 57386,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57390,
            "end": 57392,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57397,
          "end": 57403,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57398,
            "end": 57403,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57405,
        "end": 57506,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57410,
            "end": 57503,
            "argument": {
              "type": "NewExpression",
              "start": 57416,
              "end": 57502,
              "callee": {
                "type": "Identifier",
                "start": 57420,
                "end": 57432,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57433,
                  "end": 57501,
                  "left": {
                    "type": "Literal",
                    "start": 57433,
                    "end": 57479,
                    "value": "#479: -1073741824 >> 14 === -65536. Actual: ",
                    "raw": "'#479: -1073741824 >> 14 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57482,
                    "end": 57501,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57483,
                      "end": 57500,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57483,
                        "end": 57494,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57484,
                          "end": 57494,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57498,
                        "end": 57500,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57510,
      "end": 57647,
      "test": {
        "type": "BinaryExpression",
        "start": 57514,
        "end": 57543,
        "left": {
          "type": "BinaryExpression",
          "start": 57514,
          "end": 57531,
          "left": {
            "type": "UnaryExpression",
            "start": 57514,
            "end": 57525,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57515,
              "end": 57525,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57529,
            "end": 57531,
            "value": 14,
            "raw": "14",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57536,
          "end": 57543,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57537,
            "end": 57543,
            "value": 131072,
            "raw": "131072",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57545,
        "end": 57647,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57550,
            "end": 57644,
            "argument": {
              "type": "NewExpression",
              "start": 57556,
              "end": 57643,
              "callee": {
                "type": "Identifier",
                "start": 57560,
                "end": 57572,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57573,
                  "end": 57642,
                  "left": {
                    "type": "Literal",
                    "start": 57573,
                    "end": 57620,
                    "value": "#480: -2147483648 >> 14 === -131072. Actual: ",
                    "raw": "'#480: -2147483648 >> 14 === -131072. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57623,
                    "end": 57642,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57624,
                      "end": 57641,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57624,
                        "end": 57635,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57625,
                          "end": 57635,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57639,
                        "end": 57641,
                        "value": 14,
                        "raw": "14",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57651,
      "end": 57751,
      "test": {
        "type": "BinaryExpression",
        "start": 57655,
        "end": 57670,
        "left": {
          "type": "BinaryExpression",
          "start": 57655,
          "end": 57663,
          "left": {
            "type": "UnaryExpression",
            "start": 57655,
            "end": 57657,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57656,
              "end": 57657,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57661,
            "end": 57663,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57668,
          "end": 57670,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57669,
            "end": 57670,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57672,
        "end": 57751,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57677,
            "end": 57748,
            "argument": {
              "type": "NewExpression",
              "start": 57683,
              "end": 57747,
              "callee": {
                "type": "Identifier",
                "start": 57687,
                "end": 57699,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57700,
                  "end": 57746,
                  "left": {
                    "type": "Literal",
                    "start": 57700,
                    "end": 57733,
                    "value": "#481: -1 >> 15 === -1. Actual: ",
                    "raw": "'#481: -1 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57736,
                    "end": 57746,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57737,
                      "end": 57745,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57737,
                        "end": 57739,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57738,
                          "end": 57739,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57743,
                        "end": 57745,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57755,
      "end": 57855,
      "test": {
        "type": "BinaryExpression",
        "start": 57759,
        "end": 57774,
        "left": {
          "type": "BinaryExpression",
          "start": 57759,
          "end": 57767,
          "left": {
            "type": "UnaryExpression",
            "start": 57759,
            "end": 57761,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57760,
              "end": 57761,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57765,
            "end": 57767,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57772,
          "end": 57774,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57773,
            "end": 57774,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57776,
        "end": 57855,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57781,
            "end": 57852,
            "argument": {
              "type": "NewExpression",
              "start": 57787,
              "end": 57851,
              "callee": {
                "type": "Identifier",
                "start": 57791,
                "end": 57803,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57804,
                  "end": 57850,
                  "left": {
                    "type": "Literal",
                    "start": 57804,
                    "end": 57837,
                    "value": "#482: -2 >> 15 === -1. Actual: ",
                    "raw": "'#482: -2 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57840,
                    "end": 57850,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57841,
                      "end": 57849,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57841,
                        "end": 57843,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57842,
                          "end": 57843,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57847,
                        "end": 57849,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57859,
      "end": 57959,
      "test": {
        "type": "BinaryExpression",
        "start": 57863,
        "end": 57878,
        "left": {
          "type": "BinaryExpression",
          "start": 57863,
          "end": 57871,
          "left": {
            "type": "UnaryExpression",
            "start": 57863,
            "end": 57865,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57864,
              "end": 57865,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57869,
            "end": 57871,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57876,
          "end": 57878,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57877,
            "end": 57878,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57880,
        "end": 57959,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57885,
            "end": 57956,
            "argument": {
              "type": "NewExpression",
              "start": 57891,
              "end": 57955,
              "callee": {
                "type": "Identifier",
                "start": 57895,
                "end": 57907,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57908,
                  "end": 57954,
                  "left": {
                    "type": "Literal",
                    "start": 57908,
                    "end": 57941,
                    "value": "#483: -4 >> 15 === -1. Actual: ",
                    "raw": "'#483: -4 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57944,
                    "end": 57954,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57945,
                      "end": 57953,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 57945,
                        "end": 57947,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 57946,
                          "end": 57947,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57951,
                        "end": 57953,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57963,
      "end": 58063,
      "test": {
        "type": "BinaryExpression",
        "start": 57967,
        "end": 57982,
        "left": {
          "type": "BinaryExpression",
          "start": 57967,
          "end": 57975,
          "left": {
            "type": "UnaryExpression",
            "start": 57967,
            "end": 57969,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 57968,
              "end": 57969,
              "value": 8,
              "raw": "8",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57973,
            "end": 57975,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 57980,
          "end": 57982,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 57981,
            "end": 57982,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57984,
        "end": 58063,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57989,
            "end": 58060,
            "argument": {
              "type": "NewExpression",
              "start": 57995,
              "end": 58059,
              "callee": {
                "type": "Identifier",
                "start": 57999,
                "end": 58011,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58012,
                  "end": 58058,
                  "left": {
                    "type": "Literal",
                    "start": 58012,
                    "end": 58045,
                    "value": "#484: -8 >> 15 === -1. Actual: ",
                    "raw": "'#484: -8 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58048,
                    "end": 58058,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58049,
                      "end": 58057,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58049,
                        "end": 58051,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58050,
                          "end": 58051,
                          "value": 8,
                          "raw": "8",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58055,
                        "end": 58057,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58067,
      "end": 58170,
      "test": {
        "type": "BinaryExpression",
        "start": 58071,
        "end": 58087,
        "left": {
          "type": "BinaryExpression",
          "start": 58071,
          "end": 58080,
          "left": {
            "type": "UnaryExpression",
            "start": 58071,
            "end": 58074,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58072,
              "end": 58074,
              "value": 16,
              "raw": "16",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58078,
            "end": 58080,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58085,
          "end": 58087,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58086,
            "end": 58087,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58089,
        "end": 58170,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58094,
            "end": 58167,
            "argument": {
              "type": "NewExpression",
              "start": 58100,
              "end": 58166,
              "callee": {
                "type": "Identifier",
                "start": 58104,
                "end": 58116,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58117,
                  "end": 58165,
                  "left": {
                    "type": "Literal",
                    "start": 58117,
                    "end": 58151,
                    "value": "#485: -16 >> 15 === -1. Actual: ",
                    "raw": "'#485: -16 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58154,
                    "end": 58165,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58155,
                      "end": 58164,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58155,
                        "end": 58158,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58156,
                          "end": 58158,
                          "value": 16,
                          "raw": "16",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58162,
                        "end": 58164,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58174,
      "end": 58277,
      "test": {
        "type": "BinaryExpression",
        "start": 58178,
        "end": 58194,
        "left": {
          "type": "BinaryExpression",
          "start": 58178,
          "end": 58187,
          "left": {
            "type": "UnaryExpression",
            "start": 58178,
            "end": 58181,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58179,
              "end": 58181,
              "value": 32,
              "raw": "32",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58185,
            "end": 58187,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58192,
          "end": 58194,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58193,
            "end": 58194,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58196,
        "end": 58277,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58201,
            "end": 58274,
            "argument": {
              "type": "NewExpression",
              "start": 58207,
              "end": 58273,
              "callee": {
                "type": "Identifier",
                "start": 58211,
                "end": 58223,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58224,
                  "end": 58272,
                  "left": {
                    "type": "Literal",
                    "start": 58224,
                    "end": 58258,
                    "value": "#486: -32 >> 15 === -1. Actual: ",
                    "raw": "'#486: -32 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58261,
                    "end": 58272,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58262,
                      "end": 58271,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58262,
                        "end": 58265,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58263,
                          "end": 58265,
                          "value": 32,
                          "raw": "32",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58269,
                        "end": 58271,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58281,
      "end": 58384,
      "test": {
        "type": "BinaryExpression",
        "start": 58285,
        "end": 58301,
        "left": {
          "type": "BinaryExpression",
          "start": 58285,
          "end": 58294,
          "left": {
            "type": "UnaryExpression",
            "start": 58285,
            "end": 58288,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58286,
              "end": 58288,
              "value": 64,
              "raw": "64",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58292,
            "end": 58294,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58299,
          "end": 58301,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58300,
            "end": 58301,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58303,
        "end": 58384,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58308,
            "end": 58381,
            "argument": {
              "type": "NewExpression",
              "start": 58314,
              "end": 58380,
              "callee": {
                "type": "Identifier",
                "start": 58318,
                "end": 58330,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58331,
                  "end": 58379,
                  "left": {
                    "type": "Literal",
                    "start": 58331,
                    "end": 58365,
                    "value": "#487: -64 >> 15 === -1. Actual: ",
                    "raw": "'#487: -64 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58368,
                    "end": 58379,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58369,
                      "end": 58378,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58369,
                        "end": 58372,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58370,
                          "end": 58372,
                          "value": 64,
                          "raw": "64",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58376,
                        "end": 58378,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58388,
      "end": 58494,
      "test": {
        "type": "BinaryExpression",
        "start": 58392,
        "end": 58409,
        "left": {
          "type": "BinaryExpression",
          "start": 58392,
          "end": 58402,
          "left": {
            "type": "UnaryExpression",
            "start": 58392,
            "end": 58396,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58393,
              "end": 58396,
              "value": 128,
              "raw": "128",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58400,
            "end": 58402,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58407,
          "end": 58409,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58408,
            "end": 58409,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58411,
        "end": 58494,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58416,
            "end": 58491,
            "argument": {
              "type": "NewExpression",
              "start": 58422,
              "end": 58490,
              "callee": {
                "type": "Identifier",
                "start": 58426,
                "end": 58438,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58439,
                  "end": 58489,
                  "left": {
                    "type": "Literal",
                    "start": 58439,
                    "end": 58474,
                    "value": "#488: -128 >> 15 === -1. Actual: ",
                    "raw": "'#488: -128 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58477,
                    "end": 58489,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58478,
                      "end": 58488,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58478,
                        "end": 58482,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58479,
                          "end": 58482,
                          "value": 128,
                          "raw": "128",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58486,
                        "end": 58488,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58498,
      "end": 58604,
      "test": {
        "type": "BinaryExpression",
        "start": 58502,
        "end": 58519,
        "left": {
          "type": "BinaryExpression",
          "start": 58502,
          "end": 58512,
          "left": {
            "type": "UnaryExpression",
            "start": 58502,
            "end": 58506,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58503,
              "end": 58506,
              "value": 256,
              "raw": "256",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58510,
            "end": 58512,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58517,
          "end": 58519,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58518,
            "end": 58519,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58521,
        "end": 58604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58526,
            "end": 58601,
            "argument": {
              "type": "NewExpression",
              "start": 58532,
              "end": 58600,
              "callee": {
                "type": "Identifier",
                "start": 58536,
                "end": 58548,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58549,
                  "end": 58599,
                  "left": {
                    "type": "Literal",
                    "start": 58549,
                    "end": 58584,
                    "value": "#489: -256 >> 15 === -1. Actual: ",
                    "raw": "'#489: -256 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58587,
                    "end": 58599,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58588,
                      "end": 58598,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58588,
                        "end": 58592,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58589,
                          "end": 58592,
                          "value": 256,
                          "raw": "256",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58596,
                        "end": 58598,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58608,
      "end": 58714,
      "test": {
        "type": "BinaryExpression",
        "start": 58612,
        "end": 58629,
        "left": {
          "type": "BinaryExpression",
          "start": 58612,
          "end": 58622,
          "left": {
            "type": "UnaryExpression",
            "start": 58612,
            "end": 58616,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58613,
              "end": 58616,
              "value": 512,
              "raw": "512",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58620,
            "end": 58622,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58627,
          "end": 58629,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58628,
            "end": 58629,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58631,
        "end": 58714,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58636,
            "end": 58711,
            "argument": {
              "type": "NewExpression",
              "start": 58642,
              "end": 58710,
              "callee": {
                "type": "Identifier",
                "start": 58646,
                "end": 58658,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58659,
                  "end": 58709,
                  "left": {
                    "type": "Literal",
                    "start": 58659,
                    "end": 58694,
                    "value": "#490: -512 >> 15 === -1. Actual: ",
                    "raw": "'#490: -512 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58697,
                    "end": 58709,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58698,
                      "end": 58708,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58698,
                        "end": 58702,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58699,
                          "end": 58702,
                          "value": 512,
                          "raw": "512",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58706,
                        "end": 58708,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58718,
      "end": 58827,
      "test": {
        "type": "BinaryExpression",
        "start": 58722,
        "end": 58740,
        "left": {
          "type": "BinaryExpression",
          "start": 58722,
          "end": 58733,
          "left": {
            "type": "UnaryExpression",
            "start": 58722,
            "end": 58727,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58723,
              "end": 58727,
              "value": 1024,
              "raw": "1024",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58731,
            "end": 58733,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58738,
          "end": 58740,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58739,
            "end": 58740,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58742,
        "end": 58827,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58747,
            "end": 58824,
            "argument": {
              "type": "NewExpression",
              "start": 58753,
              "end": 58823,
              "callee": {
                "type": "Identifier",
                "start": 58757,
                "end": 58769,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58770,
                  "end": 58822,
                  "left": {
                    "type": "Literal",
                    "start": 58770,
                    "end": 58806,
                    "value": "#491: -1024 >> 15 === -1. Actual: ",
                    "raw": "'#491: -1024 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58809,
                    "end": 58822,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58810,
                      "end": 58821,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58810,
                        "end": 58815,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58811,
                          "end": 58815,
                          "value": 1024,
                          "raw": "1024",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58819,
                        "end": 58821,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58831,
      "end": 58940,
      "test": {
        "type": "BinaryExpression",
        "start": 58835,
        "end": 58853,
        "left": {
          "type": "BinaryExpression",
          "start": 58835,
          "end": 58846,
          "left": {
            "type": "UnaryExpression",
            "start": 58835,
            "end": 58840,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58836,
              "end": 58840,
              "value": 2048,
              "raw": "2048",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58844,
            "end": 58846,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58851,
          "end": 58853,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58852,
            "end": 58853,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58855,
        "end": 58940,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58860,
            "end": 58937,
            "argument": {
              "type": "NewExpression",
              "start": 58866,
              "end": 58936,
              "callee": {
                "type": "Identifier",
                "start": 58870,
                "end": 58882,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58883,
                  "end": 58935,
                  "left": {
                    "type": "Literal",
                    "start": 58883,
                    "end": 58919,
                    "value": "#492: -2048 >> 15 === -1. Actual: ",
                    "raw": "'#492: -2048 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 58922,
                    "end": 58935,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 58923,
                      "end": 58934,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 58923,
                        "end": 58928,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 58924,
                          "end": 58928,
                          "value": 2048,
                          "raw": "2048",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 58932,
                        "end": 58934,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 58944,
      "end": 59053,
      "test": {
        "type": "BinaryExpression",
        "start": 58948,
        "end": 58966,
        "left": {
          "type": "BinaryExpression",
          "start": 58948,
          "end": 58959,
          "left": {
            "type": "UnaryExpression",
            "start": 58948,
            "end": 58953,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 58949,
              "end": 58953,
              "value": 4096,
              "raw": "4096",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 58957,
            "end": 58959,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 58964,
          "end": 58966,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 58965,
            "end": 58966,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 58968,
        "end": 59053,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 58973,
            "end": 59050,
            "argument": {
              "type": "NewExpression",
              "start": 58979,
              "end": 59049,
              "callee": {
                "type": "Identifier",
                "start": 58983,
                "end": 58995,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 58996,
                  "end": 59048,
                  "left": {
                    "type": "Literal",
                    "start": 58996,
                    "end": 59032,
                    "value": "#493: -4096 >> 15 === -1. Actual: ",
                    "raw": "'#493: -4096 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59035,
                    "end": 59048,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59036,
                      "end": 59047,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59036,
                        "end": 59041,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59037,
                          "end": 59041,
                          "value": 4096,
                          "raw": "4096",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59045,
                        "end": 59047,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59057,
      "end": 59166,
      "test": {
        "type": "BinaryExpression",
        "start": 59061,
        "end": 59079,
        "left": {
          "type": "BinaryExpression",
          "start": 59061,
          "end": 59072,
          "left": {
            "type": "UnaryExpression",
            "start": 59061,
            "end": 59066,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59062,
              "end": 59066,
              "value": 8192,
              "raw": "8192",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59070,
            "end": 59072,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59077,
          "end": 59079,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59078,
            "end": 59079,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59081,
        "end": 59166,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59086,
            "end": 59163,
            "argument": {
              "type": "NewExpression",
              "start": 59092,
              "end": 59162,
              "callee": {
                "type": "Identifier",
                "start": 59096,
                "end": 59108,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59109,
                  "end": 59161,
                  "left": {
                    "type": "Literal",
                    "start": 59109,
                    "end": 59145,
                    "value": "#494: -8192 >> 15 === -1. Actual: ",
                    "raw": "'#494: -8192 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59148,
                    "end": 59161,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59149,
                      "end": 59160,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59149,
                        "end": 59154,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59150,
                          "end": 59154,
                          "value": 8192,
                          "raw": "8192",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59158,
                        "end": 59160,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59170,
      "end": 59282,
      "test": {
        "type": "BinaryExpression",
        "start": 59174,
        "end": 59193,
        "left": {
          "type": "BinaryExpression",
          "start": 59174,
          "end": 59186,
          "left": {
            "type": "UnaryExpression",
            "start": 59174,
            "end": 59180,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59175,
              "end": 59180,
              "value": 16384,
              "raw": "16384",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59184,
            "end": 59186,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59191,
          "end": 59193,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59192,
            "end": 59193,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59195,
        "end": 59282,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59200,
            "end": 59279,
            "argument": {
              "type": "NewExpression",
              "start": 59206,
              "end": 59278,
              "callee": {
                "type": "Identifier",
                "start": 59210,
                "end": 59222,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59223,
                  "end": 59277,
                  "left": {
                    "type": "Literal",
                    "start": 59223,
                    "end": 59260,
                    "value": "#495: -16384 >> 15 === -1. Actual: ",
                    "raw": "'#495: -16384 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59263,
                    "end": 59277,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59264,
                      "end": 59276,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59264,
                        "end": 59270,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59265,
                          "end": 59270,
                          "value": 16384,
                          "raw": "16384",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59274,
                        "end": 59276,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59286,
      "end": 59398,
      "test": {
        "type": "BinaryExpression",
        "start": 59290,
        "end": 59309,
        "left": {
          "type": "BinaryExpression",
          "start": 59290,
          "end": 59302,
          "left": {
            "type": "UnaryExpression",
            "start": 59290,
            "end": 59296,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59291,
              "end": 59296,
              "value": 32768,
              "raw": "32768",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59300,
            "end": 59302,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59307,
          "end": 59309,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59308,
            "end": 59309,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59311,
        "end": 59398,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59316,
            "end": 59395,
            "argument": {
              "type": "NewExpression",
              "start": 59322,
              "end": 59394,
              "callee": {
                "type": "Identifier",
                "start": 59326,
                "end": 59338,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59339,
                  "end": 59393,
                  "left": {
                    "type": "Literal",
                    "start": 59339,
                    "end": 59376,
                    "value": "#496: -32768 >> 15 === -1. Actual: ",
                    "raw": "'#496: -32768 >> 15 === -1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59379,
                    "end": 59393,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59380,
                      "end": 59392,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59380,
                        "end": 59386,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59381,
                          "end": 59386,
                          "value": 32768,
                          "raw": "32768",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59390,
                        "end": 59392,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59402,
      "end": 59514,
      "test": {
        "type": "BinaryExpression",
        "start": 59406,
        "end": 59425,
        "left": {
          "type": "BinaryExpression",
          "start": 59406,
          "end": 59418,
          "left": {
            "type": "UnaryExpression",
            "start": 59406,
            "end": 59412,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59407,
              "end": 59412,
              "value": 65536,
              "raw": "65536",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59416,
            "end": 59418,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59423,
          "end": 59425,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59424,
            "end": 59425,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59427,
        "end": 59514,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59432,
            "end": 59511,
            "argument": {
              "type": "NewExpression",
              "start": 59438,
              "end": 59510,
              "callee": {
                "type": "Identifier",
                "start": 59442,
                "end": 59454,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59455,
                  "end": 59509,
                  "left": {
                    "type": "Literal",
                    "start": 59455,
                    "end": 59492,
                    "value": "#497: -65536 >> 15 === -2. Actual: ",
                    "raw": "'#497: -65536 >> 15 === -2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59495,
                    "end": 59509,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59496,
                      "end": 59508,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59496,
                        "end": 59502,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59497,
                          "end": 59502,
                          "value": 65536,
                          "raw": "65536",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59506,
                        "end": 59508,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59518,
      "end": 59633,
      "test": {
        "type": "BinaryExpression",
        "start": 59522,
        "end": 59542,
        "left": {
          "type": "BinaryExpression",
          "start": 59522,
          "end": 59535,
          "left": {
            "type": "UnaryExpression",
            "start": 59522,
            "end": 59529,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59523,
              "end": 59529,
              "value": 131072,
              "raw": "131072",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59533,
            "end": 59535,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59540,
          "end": 59542,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59541,
            "end": 59542,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59544,
        "end": 59633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59549,
            "end": 59630,
            "argument": {
              "type": "NewExpression",
              "start": 59555,
              "end": 59629,
              "callee": {
                "type": "Identifier",
                "start": 59559,
                "end": 59571,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59572,
                  "end": 59628,
                  "left": {
                    "type": "Literal",
                    "start": 59572,
                    "end": 59610,
                    "value": "#498: -131072 >> 15 === -4. Actual: ",
                    "raw": "'#498: -131072 >> 15 === -4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59613,
                    "end": 59628,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59614,
                      "end": 59627,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59614,
                        "end": 59621,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59615,
                          "end": 59621,
                          "value": 131072,
                          "raw": "131072",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59625,
                        "end": 59627,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59637,
      "end": 59752,
      "test": {
        "type": "BinaryExpression",
        "start": 59641,
        "end": 59661,
        "left": {
          "type": "BinaryExpression",
          "start": 59641,
          "end": 59654,
          "left": {
            "type": "UnaryExpression",
            "start": 59641,
            "end": 59648,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59642,
              "end": 59648,
              "value": 262144,
              "raw": "262144",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59652,
            "end": 59654,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59659,
          "end": 59661,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59660,
            "end": 59661,
            "value": 8,
            "raw": "8",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59663,
        "end": 59752,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59668,
            "end": 59749,
            "argument": {
              "type": "NewExpression",
              "start": 59674,
              "end": 59748,
              "callee": {
                "type": "Identifier",
                "start": 59678,
                "end": 59690,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59691,
                  "end": 59747,
                  "left": {
                    "type": "Literal",
                    "start": 59691,
                    "end": 59729,
                    "value": "#499: -262144 >> 15 === -8. Actual: ",
                    "raw": "'#499: -262144 >> 15 === -8. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59732,
                    "end": 59747,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59733,
                      "end": 59746,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59733,
                        "end": 59740,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59734,
                          "end": 59740,
                          "value": 262144,
                          "raw": "262144",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59744,
                        "end": 59746,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59756,
      "end": 59873,
      "test": {
        "type": "BinaryExpression",
        "start": 59760,
        "end": 59781,
        "left": {
          "type": "BinaryExpression",
          "start": 59760,
          "end": 59773,
          "left": {
            "type": "UnaryExpression",
            "start": 59760,
            "end": 59767,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59761,
              "end": 59767,
              "value": 524288,
              "raw": "524288",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59771,
            "end": 59773,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59778,
          "end": 59781,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59779,
            "end": 59781,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59783,
        "end": 59873,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59788,
            "end": 59870,
            "argument": {
              "type": "NewExpression",
              "start": 59794,
              "end": 59869,
              "callee": {
                "type": "Identifier",
                "start": 59798,
                "end": 59810,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59811,
                  "end": 59868,
                  "left": {
                    "type": "Literal",
                    "start": 59811,
                    "end": 59850,
                    "value": "#500: -524288 >> 15 === -16. Actual: ",
                    "raw": "'#500: -524288 >> 15 === -16. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59853,
                    "end": 59868,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59854,
                      "end": 59867,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59854,
                        "end": 59861,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59855,
                          "end": 59861,
                          "value": 524288,
                          "raw": "524288",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59865,
                        "end": 59867,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 59877,
      "end": 59997,
      "test": {
        "type": "BinaryExpression",
        "start": 59881,
        "end": 59903,
        "left": {
          "type": "BinaryExpression",
          "start": 59881,
          "end": 59895,
          "left": {
            "type": "UnaryExpression",
            "start": 59881,
            "end": 59889,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 59882,
              "end": 59889,
              "value": 1048576,
              "raw": "1048576",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 59893,
            "end": 59895,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 59900,
          "end": 59903,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 59901,
            "end": 59903,
            "value": 32,
            "raw": "32",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 59905,
        "end": 59997,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 59910,
            "end": 59994,
            "argument": {
              "type": "NewExpression",
              "start": 59916,
              "end": 59993,
              "callee": {
                "type": "Identifier",
                "start": 59920,
                "end": 59932,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 59933,
                  "end": 59992,
                  "left": {
                    "type": "Literal",
                    "start": 59933,
                    "end": 59973,
                    "value": "#501: -1048576 >> 15 === -32. Actual: ",
                    "raw": "'#501: -1048576 >> 15 === -32. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 59976,
                    "end": 59992,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 59977,
                      "end": 59991,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 59977,
                        "end": 59985,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 59978,
                          "end": 59985,
                          "value": 1048576,
                          "raw": "1048576",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 59989,
                        "end": 59991,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60001,
      "end": 60121,
      "test": {
        "type": "BinaryExpression",
        "start": 60005,
        "end": 60027,
        "left": {
          "type": "BinaryExpression",
          "start": 60005,
          "end": 60019,
          "left": {
            "type": "UnaryExpression",
            "start": 60005,
            "end": 60013,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60006,
              "end": 60013,
              "value": 2097152,
              "raw": "2097152",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60017,
            "end": 60019,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60024,
          "end": 60027,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60025,
            "end": 60027,
            "value": 64,
            "raw": "64",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60029,
        "end": 60121,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60034,
            "end": 60118,
            "argument": {
              "type": "NewExpression",
              "start": 60040,
              "end": 60117,
              "callee": {
                "type": "Identifier",
                "start": 60044,
                "end": 60056,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60057,
                  "end": 60116,
                  "left": {
                    "type": "Literal",
                    "start": 60057,
                    "end": 60097,
                    "value": "#502: -2097152 >> 15 === -64. Actual: ",
                    "raw": "'#502: -2097152 >> 15 === -64. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60100,
                    "end": 60116,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60101,
                      "end": 60115,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60101,
                        "end": 60109,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60102,
                          "end": 60109,
                          "value": 2097152,
                          "raw": "2097152",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60113,
                        "end": 60115,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60125,
      "end": 60247,
      "test": {
        "type": "BinaryExpression",
        "start": 60129,
        "end": 60152,
        "left": {
          "type": "BinaryExpression",
          "start": 60129,
          "end": 60143,
          "left": {
            "type": "UnaryExpression",
            "start": 60129,
            "end": 60137,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60130,
              "end": 60137,
              "value": 4194304,
              "raw": "4194304",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60141,
            "end": 60143,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60148,
          "end": 60152,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60149,
            "end": 60152,
            "value": 128,
            "raw": "128",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60154,
        "end": 60247,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60159,
            "end": 60244,
            "argument": {
              "type": "NewExpression",
              "start": 60165,
              "end": 60243,
              "callee": {
                "type": "Identifier",
                "start": 60169,
                "end": 60181,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60182,
                  "end": 60242,
                  "left": {
                    "type": "Literal",
                    "start": 60182,
                    "end": 60223,
                    "value": "#503: -4194304 >> 15 === -128. Actual: ",
                    "raw": "'#503: -4194304 >> 15 === -128. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60226,
                    "end": 60242,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60227,
                      "end": 60241,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60227,
                        "end": 60235,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60228,
                          "end": 60235,
                          "value": 4194304,
                          "raw": "4194304",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60239,
                        "end": 60241,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60251,
      "end": 60373,
      "test": {
        "type": "BinaryExpression",
        "start": 60255,
        "end": 60278,
        "left": {
          "type": "BinaryExpression",
          "start": 60255,
          "end": 60269,
          "left": {
            "type": "UnaryExpression",
            "start": 60255,
            "end": 60263,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60256,
              "end": 60263,
              "value": 8388608,
              "raw": "8388608",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60267,
            "end": 60269,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60274,
          "end": 60278,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60275,
            "end": 60278,
            "value": 256,
            "raw": "256",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60280,
        "end": 60373,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60285,
            "end": 60370,
            "argument": {
              "type": "NewExpression",
              "start": 60291,
              "end": 60369,
              "callee": {
                "type": "Identifier",
                "start": 60295,
                "end": 60307,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60308,
                  "end": 60368,
                  "left": {
                    "type": "Literal",
                    "start": 60308,
                    "end": 60349,
                    "value": "#504: -8388608 >> 15 === -256. Actual: ",
                    "raw": "'#504: -8388608 >> 15 === -256. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60352,
                    "end": 60368,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60353,
                      "end": 60367,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60353,
                        "end": 60361,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60354,
                          "end": 60361,
                          "value": 8388608,
                          "raw": "8388608",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60365,
                        "end": 60367,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60377,
      "end": 60502,
      "test": {
        "type": "BinaryExpression",
        "start": 60381,
        "end": 60405,
        "left": {
          "type": "BinaryExpression",
          "start": 60381,
          "end": 60396,
          "left": {
            "type": "UnaryExpression",
            "start": 60381,
            "end": 60390,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60382,
              "end": 60390,
              "value": 16777216,
              "raw": "16777216",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60394,
            "end": 60396,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60401,
          "end": 60405,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60402,
            "end": 60405,
            "value": 512,
            "raw": "512",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60407,
        "end": 60502,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60412,
            "end": 60499,
            "argument": {
              "type": "NewExpression",
              "start": 60418,
              "end": 60498,
              "callee": {
                "type": "Identifier",
                "start": 60422,
                "end": 60434,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60435,
                  "end": 60497,
                  "left": {
                    "type": "Literal",
                    "start": 60435,
                    "end": 60477,
                    "value": "#505: -16777216 >> 15 === -512. Actual: ",
                    "raw": "'#505: -16777216 >> 15 === -512. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60480,
                    "end": 60497,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60481,
                      "end": 60496,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60481,
                        "end": 60490,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60482,
                          "end": 60490,
                          "value": 16777216,
                          "raw": "16777216",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60494,
                        "end": 60496,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60506,
      "end": 60633,
      "test": {
        "type": "BinaryExpression",
        "start": 60510,
        "end": 60535,
        "left": {
          "type": "BinaryExpression",
          "start": 60510,
          "end": 60525,
          "left": {
            "type": "UnaryExpression",
            "start": 60510,
            "end": 60519,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60511,
              "end": 60519,
              "value": 33554432,
              "raw": "33554432",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60523,
            "end": 60525,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60530,
          "end": 60535,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60531,
            "end": 60535,
            "value": 1024,
            "raw": "1024",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60537,
        "end": 60633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60542,
            "end": 60630,
            "argument": {
              "type": "NewExpression",
              "start": 60548,
              "end": 60629,
              "callee": {
                "type": "Identifier",
                "start": 60552,
                "end": 60564,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60565,
                  "end": 60628,
                  "left": {
                    "type": "Literal",
                    "start": 60565,
                    "end": 60608,
                    "value": "#506: -33554432 >> 15 === -1024. Actual: ",
                    "raw": "'#506: -33554432 >> 15 === -1024. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60611,
                    "end": 60628,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60612,
                      "end": 60627,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60612,
                        "end": 60621,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60613,
                          "end": 60621,
                          "value": 33554432,
                          "raw": "33554432",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60625,
                        "end": 60627,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60637,
      "end": 60764,
      "test": {
        "type": "BinaryExpression",
        "start": 60641,
        "end": 60666,
        "left": {
          "type": "BinaryExpression",
          "start": 60641,
          "end": 60656,
          "left": {
            "type": "UnaryExpression",
            "start": 60641,
            "end": 60650,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60642,
              "end": 60650,
              "value": 67108864,
              "raw": "67108864",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60654,
            "end": 60656,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60661,
          "end": 60666,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60662,
            "end": 60666,
            "value": 2048,
            "raw": "2048",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60668,
        "end": 60764,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60673,
            "end": 60761,
            "argument": {
              "type": "NewExpression",
              "start": 60679,
              "end": 60760,
              "callee": {
                "type": "Identifier",
                "start": 60683,
                "end": 60695,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60696,
                  "end": 60759,
                  "left": {
                    "type": "Literal",
                    "start": 60696,
                    "end": 60739,
                    "value": "#507: -67108864 >> 15 === -2048. Actual: ",
                    "raw": "'#507: -67108864 >> 15 === -2048. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60742,
                    "end": 60759,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60743,
                      "end": 60758,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60743,
                        "end": 60752,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60744,
                          "end": 60752,
                          "value": 67108864,
                          "raw": "67108864",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60756,
                        "end": 60758,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60768,
      "end": 60898,
      "test": {
        "type": "BinaryExpression",
        "start": 60772,
        "end": 60798,
        "left": {
          "type": "BinaryExpression",
          "start": 60772,
          "end": 60788,
          "left": {
            "type": "UnaryExpression",
            "start": 60772,
            "end": 60782,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60773,
              "end": 60782,
              "value": 134217728,
              "raw": "134217728",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60786,
            "end": 60788,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60793,
          "end": 60798,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60794,
            "end": 60798,
            "value": 4096,
            "raw": "4096",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60800,
        "end": 60898,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60805,
            "end": 60895,
            "argument": {
              "type": "NewExpression",
              "start": 60811,
              "end": 60894,
              "callee": {
                "type": "Identifier",
                "start": 60815,
                "end": 60827,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60828,
                  "end": 60893,
                  "left": {
                    "type": "Literal",
                    "start": 60828,
                    "end": 60872,
                    "value": "#508: -134217728 >> 15 === -4096. Actual: ",
                    "raw": "'#508: -134217728 >> 15 === -4096. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 60875,
                    "end": 60893,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 60876,
                      "end": 60892,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 60876,
                        "end": 60886,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 60877,
                          "end": 60886,
                          "value": 134217728,
                          "raw": "134217728",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 60890,
                        "end": 60892,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 60902,
      "end": 61032,
      "test": {
        "type": "BinaryExpression",
        "start": 60906,
        "end": 60932,
        "left": {
          "type": "BinaryExpression",
          "start": 60906,
          "end": 60922,
          "left": {
            "type": "UnaryExpression",
            "start": 60906,
            "end": 60916,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 60907,
              "end": 60916,
              "value": 268435456,
              "raw": "268435456",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 60920,
            "end": 60922,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 60927,
          "end": 60932,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 60928,
            "end": 60932,
            "value": 8192,
            "raw": "8192",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 60934,
        "end": 61032,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 60939,
            "end": 61029,
            "argument": {
              "type": "NewExpression",
              "start": 60945,
              "end": 61028,
              "callee": {
                "type": "Identifier",
                "start": 60949,
                "end": 60961,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 60962,
                  "end": 61027,
                  "left": {
                    "type": "Literal",
                    "start": 60962,
                    "end": 61006,
                    "value": "#509: -268435456 >> 15 === -8192. Actual: ",
                    "raw": "'#509: -268435456 >> 15 === -8192. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 61009,
                    "end": 61027,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 61010,
                      "end": 61026,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 61010,
                        "end": 61020,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 61011,
                          "end": 61020,
                          "value": 268435456,
                          "raw": "268435456",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 61024,
                        "end": 61026,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 61036,
      "end": 61168,
      "test": {
        "type": "BinaryExpression",
        "start": 61040,
        "end": 61067,
        "left": {
          "type": "BinaryExpression",
          "start": 61040,
          "end": 61056,
          "left": {
            "type": "UnaryExpression",
            "start": 61040,
            "end": 61050,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 61041,
              "end": 61050,
              "value": 536870912,
              "raw": "536870912",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 61054,
            "end": 61056,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 61061,
          "end": 61067,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 61062,
            "end": 61067,
            "value": 16384,
            "raw": "16384",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 61069,
        "end": 61168,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 61074,
            "end": 61165,
            "argument": {
              "type": "NewExpression",
              "start": 61080,
              "end": 61164,
              "callee": {
                "type": "Identifier",
                "start": 61084,
                "end": 61096,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 61097,
                  "end": 61163,
                  "left": {
                    "type": "Literal",
                    "start": 61097,
                    "end": 61142,
                    "value": "#510: -536870912 >> 15 === -16384. Actual: ",
                    "raw": "'#510: -536870912 >> 15 === -16384. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 61145,
                    "end": 61163,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 61146,
                      "end": 61162,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 61146,
                        "end": 61156,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 61147,
                          "end": 61156,
                          "value": 536870912,
                          "raw": "536870912",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 61160,
                        "end": 61162,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 61172,
      "end": 61307,
      "test": {
        "type": "BinaryExpression",
        "start": 61176,
        "end": 61204,
        "left": {
          "type": "BinaryExpression",
          "start": 61176,
          "end": 61193,
          "left": {
            "type": "UnaryExpression",
            "start": 61176,
            "end": 61187,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 61177,
              "end": 61187,
              "value": 1073741824,
              "raw": "1073741824",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 61191,
            "end": 61193,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 61198,
          "end": 61204,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 61199,
            "end": 61204,
            "value": 32768,
            "raw": "32768",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 61206,
        "end": 61307,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 61211,
            "end": 61304,
            "argument": {
              "type": "NewExpression",
              "start": 61217,
              "end": 61303,
              "callee": {
                "type": "Identifier",
                "start": 61221,
                "end": 61233,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 61234,
                  "end": 61302,
                  "left": {
                    "type": "Literal",
                    "start": 61234,
                    "end": 61280,
                    "value": "#511: -1073741824 >> 15 === -32768. Actual: ",
                    "raw": "'#511: -1073741824 >> 15 === -32768. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 61283,
                    "end": 61302,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 61284,
                      "end": 61301,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 61284,
                        "end": 61295,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 61285,
                          "end": 61295,
                          "value": 1073741824,
                          "raw": "1073741824",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 61299,
                        "end": 61301,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 61311,
      "end": 61446,
      "test": {
        "type": "BinaryExpression",
        "start": 61315,
        "end": 61343,
        "left": {
          "type": "BinaryExpression",
          "start": 61315,
          "end": 61332,
          "left": {
            "type": "UnaryExpression",
            "start": 61315,
            "end": 61326,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 61316,
              "end": 61326,
              "value": 2147483648,
              "raw": "2147483648",
              "regex": null,
              "bigint": null
            }
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 61330,
            "end": 61332,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 61337,
          "end": 61343,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 61338,
            "end": 61343,
            "value": 65536,
            "raw": "65536",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 61345,
        "end": 61446,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 61350,
            "end": 61443,
            "argument": {
              "type": "NewExpression",
              "start": 61356,
              "end": 61442,
              "callee": {
                "type": "Identifier",
                "start": 61360,
                "end": 61372,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 61373,
                  "end": 61441,
                  "left": {
                    "type": "Literal",
                    "start": 61373,
                    "end": 61419,
                    "value": "#512: -2147483648 >> 15 === -65536. Actual: ",
                    "raw": "'#512: -2147483648 >> 15 === -65536. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 61422,
                    "end": 61441,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 61423,
                      "end": 61440,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 61423,
                        "end": 61434,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 61424,
                          "end": 61434,
                          "value": 2147483648,
                          "raw": "2147483648",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 61438,
                        "end": 61440,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}