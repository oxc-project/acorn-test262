{
  "type": "Program",
  "start": 0,
  "end": 57632,
  "body": [
    {
      "type": "IfStatement",
      "start": 275,
      "end": 370,
      "test": {
        "type": "BinaryExpression",
        "start": 279,
        "end": 292,
        "left": {
          "type": "BinaryExpression",
          "start": 279,
          "end": 286,
          "left": {
            "type": "Literal",
            "start": 279,
            "end": 280,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 284,
            "end": 286,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 291,
          "end": 292,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 294,
        "end": 370,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 299,
            "end": 367,
            "argument": {
              "type": "NewExpression",
              "start": 305,
              "end": 366,
              "callee": {
                "type": "Identifier",
                "start": 309,
                "end": 321,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 322,
                  "end": 365,
                  "left": {
                    "type": "Literal",
                    "start": 322,
                    "end": 353,
                    "value": "#513: 0 >> 16 === 0. Actual: ",
                    "raw": "'#513: 0 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 356,
                    "end": 365,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 357,
                      "end": 364,
                      "left": {
                        "type": "Literal",
                        "start": 357,
                        "end": 358,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 362,
                        "end": 364,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 374,
      "end": 469,
      "test": {
        "type": "BinaryExpression",
        "start": 378,
        "end": 391,
        "left": {
          "type": "BinaryExpression",
          "start": 378,
          "end": 385,
          "left": {
            "type": "Literal",
            "start": 378,
            "end": 379,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 383,
            "end": 385,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 390,
          "end": 391,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 393,
        "end": 469,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 398,
            "end": 466,
            "argument": {
              "type": "NewExpression",
              "start": 404,
              "end": 465,
              "callee": {
                "type": "Identifier",
                "start": 408,
                "end": 420,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 421,
                  "end": 464,
                  "left": {
                    "type": "Literal",
                    "start": 421,
                    "end": 452,
                    "value": "#514: 1 >> 16 === 0. Actual: ",
                    "raw": "'#514: 1 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 455,
                    "end": 464,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 456,
                      "end": 463,
                      "left": {
                        "type": "Literal",
                        "start": 456,
                        "end": 457,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 461,
                        "end": 463,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 473,
      "end": 568,
      "test": {
        "type": "BinaryExpression",
        "start": 477,
        "end": 490,
        "left": {
          "type": "BinaryExpression",
          "start": 477,
          "end": 484,
          "left": {
            "type": "Literal",
            "start": 477,
            "end": 478,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 482,
            "end": 484,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 489,
          "end": 490,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 492,
        "end": 568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 497,
            "end": 565,
            "argument": {
              "type": "NewExpression",
              "start": 503,
              "end": 564,
              "callee": {
                "type": "Identifier",
                "start": 507,
                "end": 519,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 520,
                  "end": 563,
                  "left": {
                    "type": "Literal",
                    "start": 520,
                    "end": 551,
                    "value": "#515: 3 >> 16 === 0. Actual: ",
                    "raw": "'#515: 3 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 554,
                    "end": 563,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 555,
                      "end": 562,
                      "left": {
                        "type": "Literal",
                        "start": 555,
                        "end": 556,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 560,
                        "end": 562,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 572,
      "end": 667,
      "test": {
        "type": "BinaryExpression",
        "start": 576,
        "end": 589,
        "left": {
          "type": "BinaryExpression",
          "start": 576,
          "end": 583,
          "left": {
            "type": "Literal",
            "start": 576,
            "end": 577,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 581,
            "end": 583,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 588,
          "end": 589,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 591,
        "end": 667,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 596,
            "end": 664,
            "argument": {
              "type": "NewExpression",
              "start": 602,
              "end": 663,
              "callee": {
                "type": "Identifier",
                "start": 606,
                "end": 618,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 619,
                  "end": 662,
                  "left": {
                    "type": "Literal",
                    "start": 619,
                    "end": 650,
                    "value": "#516: 7 >> 16 === 0. Actual: ",
                    "raw": "'#516: 7 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 653,
                    "end": 662,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 654,
                      "end": 661,
                      "left": {
                        "type": "Literal",
                        "start": 654,
                        "end": 655,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 659,
                        "end": 661,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 671,
      "end": 769,
      "test": {
        "type": "BinaryExpression",
        "start": 675,
        "end": 689,
        "left": {
          "type": "BinaryExpression",
          "start": 675,
          "end": 683,
          "left": {
            "type": "Literal",
            "start": 675,
            "end": 677,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 681,
            "end": 683,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 688,
          "end": 689,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 691,
        "end": 769,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 696,
            "end": 766,
            "argument": {
              "type": "NewExpression",
              "start": 702,
              "end": 765,
              "callee": {
                "type": "Identifier",
                "start": 706,
                "end": 718,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 719,
                  "end": 764,
                  "left": {
                    "type": "Literal",
                    "start": 719,
                    "end": 751,
                    "value": "#517: 15 >> 16 === 0. Actual: ",
                    "raw": "'#517: 15 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 754,
                    "end": 764,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 755,
                      "end": 763,
                      "left": {
                        "type": "Literal",
                        "start": 755,
                        "end": 757,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 761,
                        "end": 763,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 773,
      "end": 871,
      "test": {
        "type": "BinaryExpression",
        "start": 777,
        "end": 791,
        "left": {
          "type": "BinaryExpression",
          "start": 777,
          "end": 785,
          "left": {
            "type": "Literal",
            "start": 777,
            "end": 779,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 783,
            "end": 785,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 790,
          "end": 791,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 793,
        "end": 871,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 798,
            "end": 868,
            "argument": {
              "type": "NewExpression",
              "start": 804,
              "end": 867,
              "callee": {
                "type": "Identifier",
                "start": 808,
                "end": 820,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 821,
                  "end": 866,
                  "left": {
                    "type": "Literal",
                    "start": 821,
                    "end": 853,
                    "value": "#518: 31 >> 16 === 0. Actual: ",
                    "raw": "'#518: 31 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 856,
                    "end": 866,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 857,
                      "end": 865,
                      "left": {
                        "type": "Literal",
                        "start": 857,
                        "end": 859,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 863,
                        "end": 865,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 875,
      "end": 973,
      "test": {
        "type": "BinaryExpression",
        "start": 879,
        "end": 893,
        "left": {
          "type": "BinaryExpression",
          "start": 879,
          "end": 887,
          "left": {
            "type": "Literal",
            "start": 879,
            "end": 881,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 885,
            "end": 887,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 892,
          "end": 893,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 895,
        "end": 973,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 900,
            "end": 970,
            "argument": {
              "type": "NewExpression",
              "start": 906,
              "end": 969,
              "callee": {
                "type": "Identifier",
                "start": 910,
                "end": 922,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 923,
                  "end": 968,
                  "left": {
                    "type": "Literal",
                    "start": 923,
                    "end": 955,
                    "value": "#519: 63 >> 16 === 0. Actual: ",
                    "raw": "'#519: 63 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 958,
                    "end": 968,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 959,
                      "end": 967,
                      "left": {
                        "type": "Literal",
                        "start": 959,
                        "end": 961,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 965,
                        "end": 967,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 977,
      "end": 1078,
      "test": {
        "type": "BinaryExpression",
        "start": 981,
        "end": 996,
        "left": {
          "type": "BinaryExpression",
          "start": 981,
          "end": 990,
          "left": {
            "type": "Literal",
            "start": 981,
            "end": 984,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 988,
            "end": 990,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 995,
          "end": 996,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 998,
        "end": 1078,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1003,
            "end": 1075,
            "argument": {
              "type": "NewExpression",
              "start": 1009,
              "end": 1074,
              "callee": {
                "type": "Identifier",
                "start": 1013,
                "end": 1025,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1026,
                  "end": 1073,
                  "left": {
                    "type": "Literal",
                    "start": 1026,
                    "end": 1059,
                    "value": "#520: 127 >> 16 === 0. Actual: ",
                    "raw": "'#520: 127 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1062,
                    "end": 1073,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1063,
                      "end": 1072,
                      "left": {
                        "type": "Literal",
                        "start": 1063,
                        "end": 1066,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1070,
                        "end": 1072,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1082,
      "end": 1183,
      "test": {
        "type": "BinaryExpression",
        "start": 1086,
        "end": 1101,
        "left": {
          "type": "BinaryExpression",
          "start": 1086,
          "end": 1095,
          "left": {
            "type": "Literal",
            "start": 1086,
            "end": 1089,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1093,
            "end": 1095,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1100,
          "end": 1101,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1103,
        "end": 1183,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1108,
            "end": 1180,
            "argument": {
              "type": "NewExpression",
              "start": 1114,
              "end": 1179,
              "callee": {
                "type": "Identifier",
                "start": 1118,
                "end": 1130,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1131,
                  "end": 1178,
                  "left": {
                    "type": "Literal",
                    "start": 1131,
                    "end": 1164,
                    "value": "#521: 255 >> 16 === 0. Actual: ",
                    "raw": "'#521: 255 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1167,
                    "end": 1178,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1168,
                      "end": 1177,
                      "left": {
                        "type": "Literal",
                        "start": 1168,
                        "end": 1171,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1175,
                        "end": 1177,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1187,
      "end": 1288,
      "test": {
        "type": "BinaryExpression",
        "start": 1191,
        "end": 1206,
        "left": {
          "type": "BinaryExpression",
          "start": 1191,
          "end": 1200,
          "left": {
            "type": "Literal",
            "start": 1191,
            "end": 1194,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1198,
            "end": 1200,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1205,
          "end": 1206,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1208,
        "end": 1288,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1213,
            "end": 1285,
            "argument": {
              "type": "NewExpression",
              "start": 1219,
              "end": 1284,
              "callee": {
                "type": "Identifier",
                "start": 1223,
                "end": 1235,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1236,
                  "end": 1283,
                  "left": {
                    "type": "Literal",
                    "start": 1236,
                    "end": 1269,
                    "value": "#522: 511 >> 16 === 0. Actual: ",
                    "raw": "'#522: 511 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1272,
                    "end": 1283,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1273,
                      "end": 1282,
                      "left": {
                        "type": "Literal",
                        "start": 1273,
                        "end": 1276,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1280,
                        "end": 1282,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1292,
      "end": 1396,
      "test": {
        "type": "BinaryExpression",
        "start": 1296,
        "end": 1312,
        "left": {
          "type": "BinaryExpression",
          "start": 1296,
          "end": 1306,
          "left": {
            "type": "Literal",
            "start": 1296,
            "end": 1300,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1304,
            "end": 1306,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1311,
          "end": 1312,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1314,
        "end": 1396,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1319,
            "end": 1393,
            "argument": {
              "type": "NewExpression",
              "start": 1325,
              "end": 1392,
              "callee": {
                "type": "Identifier",
                "start": 1329,
                "end": 1341,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1342,
                  "end": 1391,
                  "left": {
                    "type": "Literal",
                    "start": 1342,
                    "end": 1376,
                    "value": "#523: 1023 >> 16 === 0. Actual: ",
                    "raw": "'#523: 1023 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1379,
                    "end": 1391,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1380,
                      "end": 1390,
                      "left": {
                        "type": "Literal",
                        "start": 1380,
                        "end": 1384,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1388,
                        "end": 1390,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1400,
      "end": 1504,
      "test": {
        "type": "BinaryExpression",
        "start": 1404,
        "end": 1420,
        "left": {
          "type": "BinaryExpression",
          "start": 1404,
          "end": 1414,
          "left": {
            "type": "Literal",
            "start": 1404,
            "end": 1408,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1412,
            "end": 1414,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1419,
          "end": 1420,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1422,
        "end": 1504,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1427,
            "end": 1501,
            "argument": {
              "type": "NewExpression",
              "start": 1433,
              "end": 1500,
              "callee": {
                "type": "Identifier",
                "start": 1437,
                "end": 1449,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1450,
                  "end": 1499,
                  "left": {
                    "type": "Literal",
                    "start": 1450,
                    "end": 1484,
                    "value": "#524: 2047 >> 16 === 0. Actual: ",
                    "raw": "'#524: 2047 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1487,
                    "end": 1499,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1488,
                      "end": 1498,
                      "left": {
                        "type": "Literal",
                        "start": 1488,
                        "end": 1492,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1496,
                        "end": 1498,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1508,
      "end": 1612,
      "test": {
        "type": "BinaryExpression",
        "start": 1512,
        "end": 1528,
        "left": {
          "type": "BinaryExpression",
          "start": 1512,
          "end": 1522,
          "left": {
            "type": "Literal",
            "start": 1512,
            "end": 1516,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1520,
            "end": 1522,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1527,
          "end": 1528,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1530,
        "end": 1612,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1535,
            "end": 1609,
            "argument": {
              "type": "NewExpression",
              "start": 1541,
              "end": 1608,
              "callee": {
                "type": "Identifier",
                "start": 1545,
                "end": 1557,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1558,
                  "end": 1607,
                  "left": {
                    "type": "Literal",
                    "start": 1558,
                    "end": 1592,
                    "value": "#525: 4095 >> 16 === 0. Actual: ",
                    "raw": "'#525: 4095 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1595,
                    "end": 1607,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1596,
                      "end": 1606,
                      "left": {
                        "type": "Literal",
                        "start": 1596,
                        "end": 1600,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1604,
                        "end": 1606,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1616,
      "end": 1720,
      "test": {
        "type": "BinaryExpression",
        "start": 1620,
        "end": 1636,
        "left": {
          "type": "BinaryExpression",
          "start": 1620,
          "end": 1630,
          "left": {
            "type": "Literal",
            "start": 1620,
            "end": 1624,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1628,
            "end": 1630,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1635,
          "end": 1636,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1638,
        "end": 1720,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1643,
            "end": 1717,
            "argument": {
              "type": "NewExpression",
              "start": 1649,
              "end": 1716,
              "callee": {
                "type": "Identifier",
                "start": 1653,
                "end": 1665,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1666,
                  "end": 1715,
                  "left": {
                    "type": "Literal",
                    "start": 1666,
                    "end": 1700,
                    "value": "#526: 8191 >> 16 === 0. Actual: ",
                    "raw": "'#526: 8191 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1703,
                    "end": 1715,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1704,
                      "end": 1714,
                      "left": {
                        "type": "Literal",
                        "start": 1704,
                        "end": 1708,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1712,
                        "end": 1714,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1724,
      "end": 1831,
      "test": {
        "type": "BinaryExpression",
        "start": 1728,
        "end": 1745,
        "left": {
          "type": "BinaryExpression",
          "start": 1728,
          "end": 1739,
          "left": {
            "type": "Literal",
            "start": 1728,
            "end": 1733,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1737,
            "end": 1739,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1744,
          "end": 1745,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1747,
        "end": 1831,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1752,
            "end": 1828,
            "argument": {
              "type": "NewExpression",
              "start": 1758,
              "end": 1827,
              "callee": {
                "type": "Identifier",
                "start": 1762,
                "end": 1774,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1775,
                  "end": 1826,
                  "left": {
                    "type": "Literal",
                    "start": 1775,
                    "end": 1810,
                    "value": "#527: 16383 >> 16 === 0. Actual: ",
                    "raw": "'#527: 16383 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1813,
                    "end": 1826,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1814,
                      "end": 1825,
                      "left": {
                        "type": "Literal",
                        "start": 1814,
                        "end": 1819,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1823,
                        "end": 1825,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1835,
      "end": 1942,
      "test": {
        "type": "BinaryExpression",
        "start": 1839,
        "end": 1856,
        "left": {
          "type": "BinaryExpression",
          "start": 1839,
          "end": 1850,
          "left": {
            "type": "Literal",
            "start": 1839,
            "end": 1844,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1848,
            "end": 1850,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1855,
          "end": 1856,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1858,
        "end": 1942,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1863,
            "end": 1939,
            "argument": {
              "type": "NewExpression",
              "start": 1869,
              "end": 1938,
              "callee": {
                "type": "Identifier",
                "start": 1873,
                "end": 1885,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1886,
                  "end": 1937,
                  "left": {
                    "type": "Literal",
                    "start": 1886,
                    "end": 1921,
                    "value": "#528: 32767 >> 16 === 0. Actual: ",
                    "raw": "'#528: 32767 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1924,
                    "end": 1937,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1925,
                      "end": 1936,
                      "left": {
                        "type": "Literal",
                        "start": 1925,
                        "end": 1930,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 1934,
                        "end": 1936,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1946,
      "end": 2053,
      "test": {
        "type": "BinaryExpression",
        "start": 1950,
        "end": 1967,
        "left": {
          "type": "BinaryExpression",
          "start": 1950,
          "end": 1961,
          "left": {
            "type": "Literal",
            "start": 1950,
            "end": 1955,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 1959,
            "end": 1961,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1966,
          "end": 1967,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1969,
        "end": 2053,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1974,
            "end": 2050,
            "argument": {
              "type": "NewExpression",
              "start": 1980,
              "end": 2049,
              "callee": {
                "type": "Identifier",
                "start": 1984,
                "end": 1996,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1997,
                  "end": 2048,
                  "left": {
                    "type": "Literal",
                    "start": 1997,
                    "end": 2032,
                    "value": "#529: 65535 >> 16 === 0. Actual: ",
                    "raw": "'#529: 65535 >> 16 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2035,
                    "end": 2048,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2036,
                      "end": 2047,
                      "left": {
                        "type": "Literal",
                        "start": 2036,
                        "end": 2041,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2045,
                        "end": 2047,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2057,
      "end": 2167,
      "test": {
        "type": "BinaryExpression",
        "start": 2061,
        "end": 2079,
        "left": {
          "type": "BinaryExpression",
          "start": 2061,
          "end": 2073,
          "left": {
            "type": "Literal",
            "start": 2061,
            "end": 2067,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2071,
            "end": 2073,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2078,
          "end": 2079,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2081,
        "end": 2167,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2086,
            "end": 2164,
            "argument": {
              "type": "NewExpression",
              "start": 2092,
              "end": 2163,
              "callee": {
                "type": "Identifier",
                "start": 2096,
                "end": 2108,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2109,
                  "end": 2162,
                  "left": {
                    "type": "Literal",
                    "start": 2109,
                    "end": 2145,
                    "value": "#530: 131071 >> 16 === 1. Actual: ",
                    "raw": "'#530: 131071 >> 16 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2148,
                    "end": 2162,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2149,
                      "end": 2161,
                      "left": {
                        "type": "Literal",
                        "start": 2149,
                        "end": 2155,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2159,
                        "end": 2161,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2171,
      "end": 2281,
      "test": {
        "type": "BinaryExpression",
        "start": 2175,
        "end": 2193,
        "left": {
          "type": "BinaryExpression",
          "start": 2175,
          "end": 2187,
          "left": {
            "type": "Literal",
            "start": 2175,
            "end": 2181,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2185,
            "end": 2187,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2192,
          "end": 2193,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2195,
        "end": 2281,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2200,
            "end": 2278,
            "argument": {
              "type": "NewExpression",
              "start": 2206,
              "end": 2277,
              "callee": {
                "type": "Identifier",
                "start": 2210,
                "end": 2222,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2223,
                  "end": 2276,
                  "left": {
                    "type": "Literal",
                    "start": 2223,
                    "end": 2259,
                    "value": "#531: 262143 >> 16 === 3. Actual: ",
                    "raw": "'#531: 262143 >> 16 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2262,
                    "end": 2276,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2263,
                      "end": 2275,
                      "left": {
                        "type": "Literal",
                        "start": 2263,
                        "end": 2269,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2273,
                        "end": 2275,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2285,
      "end": 2395,
      "test": {
        "type": "BinaryExpression",
        "start": 2289,
        "end": 2307,
        "left": {
          "type": "BinaryExpression",
          "start": 2289,
          "end": 2301,
          "left": {
            "type": "Literal",
            "start": 2289,
            "end": 2295,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2299,
            "end": 2301,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2306,
          "end": 2307,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2309,
        "end": 2395,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2314,
            "end": 2392,
            "argument": {
              "type": "NewExpression",
              "start": 2320,
              "end": 2391,
              "callee": {
                "type": "Identifier",
                "start": 2324,
                "end": 2336,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2337,
                  "end": 2390,
                  "left": {
                    "type": "Literal",
                    "start": 2337,
                    "end": 2373,
                    "value": "#532: 524287 >> 16 === 7. Actual: ",
                    "raw": "'#532: 524287 >> 16 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2376,
                    "end": 2390,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2377,
                      "end": 2389,
                      "left": {
                        "type": "Literal",
                        "start": 2377,
                        "end": 2383,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2387,
                        "end": 2389,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2399,
      "end": 2514,
      "test": {
        "type": "BinaryExpression",
        "start": 2403,
        "end": 2423,
        "left": {
          "type": "BinaryExpression",
          "start": 2403,
          "end": 2416,
          "left": {
            "type": "Literal",
            "start": 2403,
            "end": 2410,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2414,
            "end": 2416,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2421,
          "end": 2423,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2425,
        "end": 2514,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2430,
            "end": 2511,
            "argument": {
              "type": "NewExpression",
              "start": 2436,
              "end": 2510,
              "callee": {
                "type": "Identifier",
                "start": 2440,
                "end": 2452,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2453,
                  "end": 2509,
                  "left": {
                    "type": "Literal",
                    "start": 2453,
                    "end": 2491,
                    "value": "#533: 1048575 >> 16 === 15. Actual: ",
                    "raw": "'#533: 1048575 >> 16 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2494,
                    "end": 2509,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2495,
                      "end": 2508,
                      "left": {
                        "type": "Literal",
                        "start": 2495,
                        "end": 2502,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2506,
                        "end": 2508,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2518,
      "end": 2633,
      "test": {
        "type": "BinaryExpression",
        "start": 2522,
        "end": 2542,
        "left": {
          "type": "BinaryExpression",
          "start": 2522,
          "end": 2535,
          "left": {
            "type": "Literal",
            "start": 2522,
            "end": 2529,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2533,
            "end": 2535,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2540,
          "end": 2542,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2544,
        "end": 2633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2549,
            "end": 2630,
            "argument": {
              "type": "NewExpression",
              "start": 2555,
              "end": 2629,
              "callee": {
                "type": "Identifier",
                "start": 2559,
                "end": 2571,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2572,
                  "end": 2628,
                  "left": {
                    "type": "Literal",
                    "start": 2572,
                    "end": 2610,
                    "value": "#534: 2097151 >> 16 === 31. Actual: ",
                    "raw": "'#534: 2097151 >> 16 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2613,
                    "end": 2628,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2614,
                      "end": 2627,
                      "left": {
                        "type": "Literal",
                        "start": 2614,
                        "end": 2621,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2625,
                        "end": 2627,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2637,
      "end": 2752,
      "test": {
        "type": "BinaryExpression",
        "start": 2641,
        "end": 2661,
        "left": {
          "type": "BinaryExpression",
          "start": 2641,
          "end": 2654,
          "left": {
            "type": "Literal",
            "start": 2641,
            "end": 2648,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2652,
            "end": 2654,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2659,
          "end": 2661,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2663,
        "end": 2752,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2668,
            "end": 2749,
            "argument": {
              "type": "NewExpression",
              "start": 2674,
              "end": 2748,
              "callee": {
                "type": "Identifier",
                "start": 2678,
                "end": 2690,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2691,
                  "end": 2747,
                  "left": {
                    "type": "Literal",
                    "start": 2691,
                    "end": 2729,
                    "value": "#535: 4194303 >> 16 === 63. Actual: ",
                    "raw": "'#535: 4194303 >> 16 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2732,
                    "end": 2747,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2733,
                      "end": 2746,
                      "left": {
                        "type": "Literal",
                        "start": 2733,
                        "end": 2740,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2744,
                        "end": 2746,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2756,
      "end": 2873,
      "test": {
        "type": "BinaryExpression",
        "start": 2760,
        "end": 2781,
        "left": {
          "type": "BinaryExpression",
          "start": 2760,
          "end": 2773,
          "left": {
            "type": "Literal",
            "start": 2760,
            "end": 2767,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2771,
            "end": 2773,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2778,
          "end": 2781,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2783,
        "end": 2873,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2788,
            "end": 2870,
            "argument": {
              "type": "NewExpression",
              "start": 2794,
              "end": 2869,
              "callee": {
                "type": "Identifier",
                "start": 2798,
                "end": 2810,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2811,
                  "end": 2868,
                  "left": {
                    "type": "Literal",
                    "start": 2811,
                    "end": 2850,
                    "value": "#536: 8388607 >> 16 === 127. Actual: ",
                    "raw": "'#536: 8388607 >> 16 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2853,
                    "end": 2868,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2854,
                      "end": 2867,
                      "left": {
                        "type": "Literal",
                        "start": 2854,
                        "end": 2861,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2865,
                        "end": 2867,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2877,
      "end": 2997,
      "test": {
        "type": "BinaryExpression",
        "start": 2881,
        "end": 2903,
        "left": {
          "type": "BinaryExpression",
          "start": 2881,
          "end": 2895,
          "left": {
            "type": "Literal",
            "start": 2881,
            "end": 2889,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 2893,
            "end": 2895,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2900,
          "end": 2903,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2905,
        "end": 2997,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2910,
            "end": 2994,
            "argument": {
              "type": "NewExpression",
              "start": 2916,
              "end": 2993,
              "callee": {
                "type": "Identifier",
                "start": 2920,
                "end": 2932,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2933,
                  "end": 2992,
                  "left": {
                    "type": "Literal",
                    "start": 2933,
                    "end": 2973,
                    "value": "#537: 16777215 >> 16 === 255. Actual: ",
                    "raw": "'#537: 16777215 >> 16 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2976,
                    "end": 2992,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2977,
                      "end": 2991,
                      "left": {
                        "type": "Literal",
                        "start": 2977,
                        "end": 2985,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 2989,
                        "end": 2991,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3001,
      "end": 3121,
      "test": {
        "type": "BinaryExpression",
        "start": 3005,
        "end": 3027,
        "left": {
          "type": "BinaryExpression",
          "start": 3005,
          "end": 3019,
          "left": {
            "type": "Literal",
            "start": 3005,
            "end": 3013,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3017,
            "end": 3019,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3024,
          "end": 3027,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3029,
        "end": 3121,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3034,
            "end": 3118,
            "argument": {
              "type": "NewExpression",
              "start": 3040,
              "end": 3117,
              "callee": {
                "type": "Identifier",
                "start": 3044,
                "end": 3056,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3057,
                  "end": 3116,
                  "left": {
                    "type": "Literal",
                    "start": 3057,
                    "end": 3097,
                    "value": "#538: 33554431 >> 16 === 511. Actual: ",
                    "raw": "'#538: 33554431 >> 16 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3100,
                    "end": 3116,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3101,
                      "end": 3115,
                      "left": {
                        "type": "Literal",
                        "start": 3101,
                        "end": 3109,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3113,
                        "end": 3115,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3125,
      "end": 3247,
      "test": {
        "type": "BinaryExpression",
        "start": 3129,
        "end": 3152,
        "left": {
          "type": "BinaryExpression",
          "start": 3129,
          "end": 3143,
          "left": {
            "type": "Literal",
            "start": 3129,
            "end": 3137,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3141,
            "end": 3143,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3148,
          "end": 3152,
          "value": 1023,
          "raw": "1023",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3154,
        "end": 3247,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3159,
            "end": 3244,
            "argument": {
              "type": "NewExpression",
              "start": 3165,
              "end": 3243,
              "callee": {
                "type": "Identifier",
                "start": 3169,
                "end": 3181,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3182,
                  "end": 3242,
                  "left": {
                    "type": "Literal",
                    "start": 3182,
                    "end": 3223,
                    "value": "#539: 67108863 >> 16 === 1023. Actual: ",
                    "raw": "'#539: 67108863 >> 16 === 1023. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3226,
                    "end": 3242,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3227,
                      "end": 3241,
                      "left": {
                        "type": "Literal",
                        "start": 3227,
                        "end": 3235,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3239,
                        "end": 3241,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3251,
      "end": 3376,
      "test": {
        "type": "BinaryExpression",
        "start": 3255,
        "end": 3279,
        "left": {
          "type": "BinaryExpression",
          "start": 3255,
          "end": 3270,
          "left": {
            "type": "Literal",
            "start": 3255,
            "end": 3264,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3268,
            "end": 3270,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3275,
          "end": 3279,
          "value": 2047,
          "raw": "2047",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3281,
        "end": 3376,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3286,
            "end": 3373,
            "argument": {
              "type": "NewExpression",
              "start": 3292,
              "end": 3372,
              "callee": {
                "type": "Identifier",
                "start": 3296,
                "end": 3308,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3309,
                  "end": 3371,
                  "left": {
                    "type": "Literal",
                    "start": 3309,
                    "end": 3351,
                    "value": "#540: 134217727 >> 16 === 2047. Actual: ",
                    "raw": "'#540: 134217727 >> 16 === 2047. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3354,
                    "end": 3371,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3355,
                      "end": 3370,
                      "left": {
                        "type": "Literal",
                        "start": 3355,
                        "end": 3364,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3368,
                        "end": 3370,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3380,
      "end": 3505,
      "test": {
        "type": "BinaryExpression",
        "start": 3384,
        "end": 3408,
        "left": {
          "type": "BinaryExpression",
          "start": 3384,
          "end": 3399,
          "left": {
            "type": "Literal",
            "start": 3384,
            "end": 3393,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3397,
            "end": 3399,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3404,
          "end": 3408,
          "value": 4095,
          "raw": "4095",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3410,
        "end": 3505,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3415,
            "end": 3502,
            "argument": {
              "type": "NewExpression",
              "start": 3421,
              "end": 3501,
              "callee": {
                "type": "Identifier",
                "start": 3425,
                "end": 3437,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3438,
                  "end": 3500,
                  "left": {
                    "type": "Literal",
                    "start": 3438,
                    "end": 3480,
                    "value": "#541: 268435455 >> 16 === 4095. Actual: ",
                    "raw": "'#541: 268435455 >> 16 === 4095. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3483,
                    "end": 3500,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3484,
                      "end": 3499,
                      "left": {
                        "type": "Literal",
                        "start": 3484,
                        "end": 3493,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3497,
                        "end": 3499,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3509,
      "end": 3634,
      "test": {
        "type": "BinaryExpression",
        "start": 3513,
        "end": 3537,
        "left": {
          "type": "BinaryExpression",
          "start": 3513,
          "end": 3528,
          "left": {
            "type": "Literal",
            "start": 3513,
            "end": 3522,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3526,
            "end": 3528,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3533,
          "end": 3537,
          "value": 8191,
          "raw": "8191",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3539,
        "end": 3634,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3544,
            "end": 3631,
            "argument": {
              "type": "NewExpression",
              "start": 3550,
              "end": 3630,
              "callee": {
                "type": "Identifier",
                "start": 3554,
                "end": 3566,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3567,
                  "end": 3629,
                  "left": {
                    "type": "Literal",
                    "start": 3567,
                    "end": 3609,
                    "value": "#542: 536870911 >> 16 === 8191. Actual: ",
                    "raw": "'#542: 536870911 >> 16 === 8191. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3612,
                    "end": 3629,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3613,
                      "end": 3628,
                      "left": {
                        "type": "Literal",
                        "start": 3613,
                        "end": 3622,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3626,
                        "end": 3628,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3638,
      "end": 3768,
      "test": {
        "type": "BinaryExpression",
        "start": 3642,
        "end": 3668,
        "left": {
          "type": "BinaryExpression",
          "start": 3642,
          "end": 3658,
          "left": {
            "type": "Literal",
            "start": 3642,
            "end": 3652,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3656,
            "end": 3658,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3663,
          "end": 3668,
          "value": 16383,
          "raw": "16383",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3670,
        "end": 3768,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3675,
            "end": 3765,
            "argument": {
              "type": "NewExpression",
              "start": 3681,
              "end": 3764,
              "callee": {
                "type": "Identifier",
                "start": 3685,
                "end": 3697,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3698,
                  "end": 3763,
                  "left": {
                    "type": "Literal",
                    "start": 3698,
                    "end": 3742,
                    "value": "#543: 1073741823 >> 16 === 16383. Actual: ",
                    "raw": "'#543: 1073741823 >> 16 === 16383. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3745,
                    "end": 3763,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3746,
                      "end": 3762,
                      "left": {
                        "type": "Literal",
                        "start": 3746,
                        "end": 3756,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3760,
                        "end": 3762,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3772,
      "end": 3902,
      "test": {
        "type": "BinaryExpression",
        "start": 3776,
        "end": 3802,
        "left": {
          "type": "BinaryExpression",
          "start": 3776,
          "end": 3792,
          "left": {
            "type": "Literal",
            "start": 3776,
            "end": 3786,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3790,
            "end": 3792,
            "value": 16,
            "raw": "16",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3797,
          "end": 3802,
          "value": 32767,
          "raw": "32767",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3804,
        "end": 3902,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3809,
            "end": 3899,
            "argument": {
              "type": "NewExpression",
              "start": 3815,
              "end": 3898,
              "callee": {
                "type": "Identifier",
                "start": 3819,
                "end": 3831,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3832,
                  "end": 3897,
                  "left": {
                    "type": "Literal",
                    "start": 3832,
                    "end": 3876,
                    "value": "#544: 2147483647 >> 16 === 32767. Actual: ",
                    "raw": "'#544: 2147483647 >> 16 === 32767. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3879,
                    "end": 3897,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3880,
                      "end": 3896,
                      "left": {
                        "type": "Literal",
                        "start": 3880,
                        "end": 3890,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3894,
                        "end": 3896,
                        "value": 16,
                        "raw": "16",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 3906,
      "end": 4001,
      "test": {
        "type": "BinaryExpression",
        "start": 3910,
        "end": 3923,
        "left": {
          "type": "BinaryExpression",
          "start": 3910,
          "end": 3917,
          "left": {
            "type": "Literal",
            "start": 3910,
            "end": 3911,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 3915,
            "end": 3917,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 3922,
          "end": 3923,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3925,
        "end": 4001,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3930,
            "end": 3998,
            "argument": {
              "type": "NewExpression",
              "start": 3936,
              "end": 3997,
              "callee": {
                "type": "Identifier",
                "start": 3940,
                "end": 3952,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3953,
                  "end": 3996,
                  "left": {
                    "type": "Literal",
                    "start": 3953,
                    "end": 3984,
                    "value": "#545: 0 >> 17 === 0. Actual: ",
                    "raw": "'#545: 0 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3987,
                    "end": 3996,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 3988,
                      "end": 3995,
                      "left": {
                        "type": "Literal",
                        "start": 3988,
                        "end": 3989,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 3993,
                        "end": 3995,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4005,
      "end": 4100,
      "test": {
        "type": "BinaryExpression",
        "start": 4009,
        "end": 4022,
        "left": {
          "type": "BinaryExpression",
          "start": 4009,
          "end": 4016,
          "left": {
            "type": "Literal",
            "start": 4009,
            "end": 4010,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4014,
            "end": 4016,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4021,
          "end": 4022,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4024,
        "end": 4100,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4029,
            "end": 4097,
            "argument": {
              "type": "NewExpression",
              "start": 4035,
              "end": 4096,
              "callee": {
                "type": "Identifier",
                "start": 4039,
                "end": 4051,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4052,
                  "end": 4095,
                  "left": {
                    "type": "Literal",
                    "start": 4052,
                    "end": 4083,
                    "value": "#546: 1 >> 17 === 0. Actual: ",
                    "raw": "'#546: 1 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4086,
                    "end": 4095,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4087,
                      "end": 4094,
                      "left": {
                        "type": "Literal",
                        "start": 4087,
                        "end": 4088,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4092,
                        "end": 4094,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4104,
      "end": 4199,
      "test": {
        "type": "BinaryExpression",
        "start": 4108,
        "end": 4121,
        "left": {
          "type": "BinaryExpression",
          "start": 4108,
          "end": 4115,
          "left": {
            "type": "Literal",
            "start": 4108,
            "end": 4109,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4113,
            "end": 4115,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4120,
          "end": 4121,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4123,
        "end": 4199,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4128,
            "end": 4196,
            "argument": {
              "type": "NewExpression",
              "start": 4134,
              "end": 4195,
              "callee": {
                "type": "Identifier",
                "start": 4138,
                "end": 4150,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4151,
                  "end": 4194,
                  "left": {
                    "type": "Literal",
                    "start": 4151,
                    "end": 4182,
                    "value": "#547: 3 >> 17 === 0. Actual: ",
                    "raw": "'#547: 3 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4185,
                    "end": 4194,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4186,
                      "end": 4193,
                      "left": {
                        "type": "Literal",
                        "start": 4186,
                        "end": 4187,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4191,
                        "end": 4193,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4203,
      "end": 4298,
      "test": {
        "type": "BinaryExpression",
        "start": 4207,
        "end": 4220,
        "left": {
          "type": "BinaryExpression",
          "start": 4207,
          "end": 4214,
          "left": {
            "type": "Literal",
            "start": 4207,
            "end": 4208,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4212,
            "end": 4214,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4219,
          "end": 4220,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4222,
        "end": 4298,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4227,
            "end": 4295,
            "argument": {
              "type": "NewExpression",
              "start": 4233,
              "end": 4294,
              "callee": {
                "type": "Identifier",
                "start": 4237,
                "end": 4249,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4250,
                  "end": 4293,
                  "left": {
                    "type": "Literal",
                    "start": 4250,
                    "end": 4281,
                    "value": "#548: 7 >> 17 === 0. Actual: ",
                    "raw": "'#548: 7 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4284,
                    "end": 4293,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4285,
                      "end": 4292,
                      "left": {
                        "type": "Literal",
                        "start": 4285,
                        "end": 4286,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4290,
                        "end": 4292,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4302,
      "end": 4400,
      "test": {
        "type": "BinaryExpression",
        "start": 4306,
        "end": 4320,
        "left": {
          "type": "BinaryExpression",
          "start": 4306,
          "end": 4314,
          "left": {
            "type": "Literal",
            "start": 4306,
            "end": 4308,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4312,
            "end": 4314,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4319,
          "end": 4320,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4322,
        "end": 4400,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4327,
            "end": 4397,
            "argument": {
              "type": "NewExpression",
              "start": 4333,
              "end": 4396,
              "callee": {
                "type": "Identifier",
                "start": 4337,
                "end": 4349,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4350,
                  "end": 4395,
                  "left": {
                    "type": "Literal",
                    "start": 4350,
                    "end": 4382,
                    "value": "#549: 15 >> 17 === 0. Actual: ",
                    "raw": "'#549: 15 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4385,
                    "end": 4395,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4386,
                      "end": 4394,
                      "left": {
                        "type": "Literal",
                        "start": 4386,
                        "end": 4388,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4392,
                        "end": 4394,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4404,
      "end": 4502,
      "test": {
        "type": "BinaryExpression",
        "start": 4408,
        "end": 4422,
        "left": {
          "type": "BinaryExpression",
          "start": 4408,
          "end": 4416,
          "left": {
            "type": "Literal",
            "start": 4408,
            "end": 4410,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4414,
            "end": 4416,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4421,
          "end": 4422,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4424,
        "end": 4502,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4429,
            "end": 4499,
            "argument": {
              "type": "NewExpression",
              "start": 4435,
              "end": 4498,
              "callee": {
                "type": "Identifier",
                "start": 4439,
                "end": 4451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4452,
                  "end": 4497,
                  "left": {
                    "type": "Literal",
                    "start": 4452,
                    "end": 4484,
                    "value": "#550: 31 >> 17 === 0. Actual: ",
                    "raw": "'#550: 31 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4487,
                    "end": 4497,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4488,
                      "end": 4496,
                      "left": {
                        "type": "Literal",
                        "start": 4488,
                        "end": 4490,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4494,
                        "end": 4496,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4506,
      "end": 4604,
      "test": {
        "type": "BinaryExpression",
        "start": 4510,
        "end": 4524,
        "left": {
          "type": "BinaryExpression",
          "start": 4510,
          "end": 4518,
          "left": {
            "type": "Literal",
            "start": 4510,
            "end": 4512,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4516,
            "end": 4518,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4523,
          "end": 4524,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4526,
        "end": 4604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4531,
            "end": 4601,
            "argument": {
              "type": "NewExpression",
              "start": 4537,
              "end": 4600,
              "callee": {
                "type": "Identifier",
                "start": 4541,
                "end": 4553,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4554,
                  "end": 4599,
                  "left": {
                    "type": "Literal",
                    "start": 4554,
                    "end": 4586,
                    "value": "#551: 63 >> 17 === 0. Actual: ",
                    "raw": "'#551: 63 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4589,
                    "end": 4599,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4590,
                      "end": 4598,
                      "left": {
                        "type": "Literal",
                        "start": 4590,
                        "end": 4592,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4596,
                        "end": 4598,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4608,
      "end": 4709,
      "test": {
        "type": "BinaryExpression",
        "start": 4612,
        "end": 4627,
        "left": {
          "type": "BinaryExpression",
          "start": 4612,
          "end": 4621,
          "left": {
            "type": "Literal",
            "start": 4612,
            "end": 4615,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4619,
            "end": 4621,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4626,
          "end": 4627,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4629,
        "end": 4709,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4634,
            "end": 4706,
            "argument": {
              "type": "NewExpression",
              "start": 4640,
              "end": 4705,
              "callee": {
                "type": "Identifier",
                "start": 4644,
                "end": 4656,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4657,
                  "end": 4704,
                  "left": {
                    "type": "Literal",
                    "start": 4657,
                    "end": 4690,
                    "value": "#552: 127 >> 17 === 0. Actual: ",
                    "raw": "'#552: 127 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4693,
                    "end": 4704,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4694,
                      "end": 4703,
                      "left": {
                        "type": "Literal",
                        "start": 4694,
                        "end": 4697,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4701,
                        "end": 4703,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4713,
      "end": 4814,
      "test": {
        "type": "BinaryExpression",
        "start": 4717,
        "end": 4732,
        "left": {
          "type": "BinaryExpression",
          "start": 4717,
          "end": 4726,
          "left": {
            "type": "Literal",
            "start": 4717,
            "end": 4720,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4724,
            "end": 4726,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4731,
          "end": 4732,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4734,
        "end": 4814,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4739,
            "end": 4811,
            "argument": {
              "type": "NewExpression",
              "start": 4745,
              "end": 4810,
              "callee": {
                "type": "Identifier",
                "start": 4749,
                "end": 4761,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4762,
                  "end": 4809,
                  "left": {
                    "type": "Literal",
                    "start": 4762,
                    "end": 4795,
                    "value": "#553: 255 >> 17 === 0. Actual: ",
                    "raw": "'#553: 255 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4798,
                    "end": 4809,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4799,
                      "end": 4808,
                      "left": {
                        "type": "Literal",
                        "start": 4799,
                        "end": 4802,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4806,
                        "end": 4808,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4818,
      "end": 4919,
      "test": {
        "type": "BinaryExpression",
        "start": 4822,
        "end": 4837,
        "left": {
          "type": "BinaryExpression",
          "start": 4822,
          "end": 4831,
          "left": {
            "type": "Literal",
            "start": 4822,
            "end": 4825,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4829,
            "end": 4831,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4836,
          "end": 4837,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4839,
        "end": 4919,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4844,
            "end": 4916,
            "argument": {
              "type": "NewExpression",
              "start": 4850,
              "end": 4915,
              "callee": {
                "type": "Identifier",
                "start": 4854,
                "end": 4866,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4867,
                  "end": 4914,
                  "left": {
                    "type": "Literal",
                    "start": 4867,
                    "end": 4900,
                    "value": "#554: 511 >> 17 === 0. Actual: ",
                    "raw": "'#554: 511 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 4903,
                    "end": 4914,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 4904,
                      "end": 4913,
                      "left": {
                        "type": "Literal",
                        "start": 4904,
                        "end": 4907,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 4911,
                        "end": 4913,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 4923,
      "end": 5027,
      "test": {
        "type": "BinaryExpression",
        "start": 4927,
        "end": 4943,
        "left": {
          "type": "BinaryExpression",
          "start": 4927,
          "end": 4937,
          "left": {
            "type": "Literal",
            "start": 4927,
            "end": 4931,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 4935,
            "end": 4937,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 4942,
          "end": 4943,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 4945,
        "end": 5027,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 4950,
            "end": 5024,
            "argument": {
              "type": "NewExpression",
              "start": 4956,
              "end": 5023,
              "callee": {
                "type": "Identifier",
                "start": 4960,
                "end": 4972,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 4973,
                  "end": 5022,
                  "left": {
                    "type": "Literal",
                    "start": 4973,
                    "end": 5007,
                    "value": "#555: 1023 >> 17 === 0. Actual: ",
                    "raw": "'#555: 1023 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5010,
                    "end": 5022,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5011,
                      "end": 5021,
                      "left": {
                        "type": "Literal",
                        "start": 5011,
                        "end": 5015,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5019,
                        "end": 5021,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5031,
      "end": 5135,
      "test": {
        "type": "BinaryExpression",
        "start": 5035,
        "end": 5051,
        "left": {
          "type": "BinaryExpression",
          "start": 5035,
          "end": 5045,
          "left": {
            "type": "Literal",
            "start": 5035,
            "end": 5039,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5043,
            "end": 5045,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5050,
          "end": 5051,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5053,
        "end": 5135,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5058,
            "end": 5132,
            "argument": {
              "type": "NewExpression",
              "start": 5064,
              "end": 5131,
              "callee": {
                "type": "Identifier",
                "start": 5068,
                "end": 5080,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5081,
                  "end": 5130,
                  "left": {
                    "type": "Literal",
                    "start": 5081,
                    "end": 5115,
                    "value": "#556: 2047 >> 17 === 0. Actual: ",
                    "raw": "'#556: 2047 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5118,
                    "end": 5130,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5119,
                      "end": 5129,
                      "left": {
                        "type": "Literal",
                        "start": 5119,
                        "end": 5123,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5127,
                        "end": 5129,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5139,
      "end": 5243,
      "test": {
        "type": "BinaryExpression",
        "start": 5143,
        "end": 5159,
        "left": {
          "type": "BinaryExpression",
          "start": 5143,
          "end": 5153,
          "left": {
            "type": "Literal",
            "start": 5143,
            "end": 5147,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5151,
            "end": 5153,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5158,
          "end": 5159,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5161,
        "end": 5243,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5166,
            "end": 5240,
            "argument": {
              "type": "NewExpression",
              "start": 5172,
              "end": 5239,
              "callee": {
                "type": "Identifier",
                "start": 5176,
                "end": 5188,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5189,
                  "end": 5238,
                  "left": {
                    "type": "Literal",
                    "start": 5189,
                    "end": 5223,
                    "value": "#557: 4095 >> 17 === 0. Actual: ",
                    "raw": "'#557: 4095 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5226,
                    "end": 5238,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5227,
                      "end": 5237,
                      "left": {
                        "type": "Literal",
                        "start": 5227,
                        "end": 5231,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5235,
                        "end": 5237,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5247,
      "end": 5351,
      "test": {
        "type": "BinaryExpression",
        "start": 5251,
        "end": 5267,
        "left": {
          "type": "BinaryExpression",
          "start": 5251,
          "end": 5261,
          "left": {
            "type": "Literal",
            "start": 5251,
            "end": 5255,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5259,
            "end": 5261,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5266,
          "end": 5267,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5269,
        "end": 5351,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5274,
            "end": 5348,
            "argument": {
              "type": "NewExpression",
              "start": 5280,
              "end": 5347,
              "callee": {
                "type": "Identifier",
                "start": 5284,
                "end": 5296,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5297,
                  "end": 5346,
                  "left": {
                    "type": "Literal",
                    "start": 5297,
                    "end": 5331,
                    "value": "#558: 8191 >> 17 === 0. Actual: ",
                    "raw": "'#558: 8191 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5334,
                    "end": 5346,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5335,
                      "end": 5345,
                      "left": {
                        "type": "Literal",
                        "start": 5335,
                        "end": 5339,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5343,
                        "end": 5345,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5355,
      "end": 5462,
      "test": {
        "type": "BinaryExpression",
        "start": 5359,
        "end": 5376,
        "left": {
          "type": "BinaryExpression",
          "start": 5359,
          "end": 5370,
          "left": {
            "type": "Literal",
            "start": 5359,
            "end": 5364,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5368,
            "end": 5370,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5375,
          "end": 5376,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5378,
        "end": 5462,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5383,
            "end": 5459,
            "argument": {
              "type": "NewExpression",
              "start": 5389,
              "end": 5458,
              "callee": {
                "type": "Identifier",
                "start": 5393,
                "end": 5405,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5406,
                  "end": 5457,
                  "left": {
                    "type": "Literal",
                    "start": 5406,
                    "end": 5441,
                    "value": "#559: 16383 >> 17 === 0. Actual: ",
                    "raw": "'#559: 16383 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5444,
                    "end": 5457,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5445,
                      "end": 5456,
                      "left": {
                        "type": "Literal",
                        "start": 5445,
                        "end": 5450,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5454,
                        "end": 5456,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5466,
      "end": 5573,
      "test": {
        "type": "BinaryExpression",
        "start": 5470,
        "end": 5487,
        "left": {
          "type": "BinaryExpression",
          "start": 5470,
          "end": 5481,
          "left": {
            "type": "Literal",
            "start": 5470,
            "end": 5475,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5479,
            "end": 5481,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5486,
          "end": 5487,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5489,
        "end": 5573,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5494,
            "end": 5570,
            "argument": {
              "type": "NewExpression",
              "start": 5500,
              "end": 5569,
              "callee": {
                "type": "Identifier",
                "start": 5504,
                "end": 5516,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5517,
                  "end": 5568,
                  "left": {
                    "type": "Literal",
                    "start": 5517,
                    "end": 5552,
                    "value": "#560: 32767 >> 17 === 0. Actual: ",
                    "raw": "'#560: 32767 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5555,
                    "end": 5568,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5556,
                      "end": 5567,
                      "left": {
                        "type": "Literal",
                        "start": 5556,
                        "end": 5561,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5565,
                        "end": 5567,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5577,
      "end": 5684,
      "test": {
        "type": "BinaryExpression",
        "start": 5581,
        "end": 5598,
        "left": {
          "type": "BinaryExpression",
          "start": 5581,
          "end": 5592,
          "left": {
            "type": "Literal",
            "start": 5581,
            "end": 5586,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5590,
            "end": 5592,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5597,
          "end": 5598,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5600,
        "end": 5684,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5605,
            "end": 5681,
            "argument": {
              "type": "NewExpression",
              "start": 5611,
              "end": 5680,
              "callee": {
                "type": "Identifier",
                "start": 5615,
                "end": 5627,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5628,
                  "end": 5679,
                  "left": {
                    "type": "Literal",
                    "start": 5628,
                    "end": 5663,
                    "value": "#561: 65535 >> 17 === 0. Actual: ",
                    "raw": "'#561: 65535 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5666,
                    "end": 5679,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5667,
                      "end": 5678,
                      "left": {
                        "type": "Literal",
                        "start": 5667,
                        "end": 5672,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5676,
                        "end": 5678,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5688,
      "end": 5798,
      "test": {
        "type": "BinaryExpression",
        "start": 5692,
        "end": 5710,
        "left": {
          "type": "BinaryExpression",
          "start": 5692,
          "end": 5704,
          "left": {
            "type": "Literal",
            "start": 5692,
            "end": 5698,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5702,
            "end": 5704,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5709,
          "end": 5710,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5712,
        "end": 5798,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5717,
            "end": 5795,
            "argument": {
              "type": "NewExpression",
              "start": 5723,
              "end": 5794,
              "callee": {
                "type": "Identifier",
                "start": 5727,
                "end": 5739,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5740,
                  "end": 5793,
                  "left": {
                    "type": "Literal",
                    "start": 5740,
                    "end": 5776,
                    "value": "#562: 131071 >> 17 === 0. Actual: ",
                    "raw": "'#562: 131071 >> 17 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5779,
                    "end": 5793,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5780,
                      "end": 5792,
                      "left": {
                        "type": "Literal",
                        "start": 5780,
                        "end": 5786,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5790,
                        "end": 5792,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5802,
      "end": 5912,
      "test": {
        "type": "BinaryExpression",
        "start": 5806,
        "end": 5824,
        "left": {
          "type": "BinaryExpression",
          "start": 5806,
          "end": 5818,
          "left": {
            "type": "Literal",
            "start": 5806,
            "end": 5812,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5816,
            "end": 5818,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5823,
          "end": 5824,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5826,
        "end": 5912,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5831,
            "end": 5909,
            "argument": {
              "type": "NewExpression",
              "start": 5837,
              "end": 5908,
              "callee": {
                "type": "Identifier",
                "start": 5841,
                "end": 5853,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5854,
                  "end": 5907,
                  "left": {
                    "type": "Literal",
                    "start": 5854,
                    "end": 5890,
                    "value": "#563: 262143 >> 17 === 1. Actual: ",
                    "raw": "'#563: 262143 >> 17 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 5893,
                    "end": 5907,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 5894,
                      "end": 5906,
                      "left": {
                        "type": "Literal",
                        "start": 5894,
                        "end": 5900,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 5904,
                        "end": 5906,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 5916,
      "end": 6026,
      "test": {
        "type": "BinaryExpression",
        "start": 5920,
        "end": 5938,
        "left": {
          "type": "BinaryExpression",
          "start": 5920,
          "end": 5932,
          "left": {
            "type": "Literal",
            "start": 5920,
            "end": 5926,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 5930,
            "end": 5932,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 5937,
          "end": 5938,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 5940,
        "end": 6026,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 5945,
            "end": 6023,
            "argument": {
              "type": "NewExpression",
              "start": 5951,
              "end": 6022,
              "callee": {
                "type": "Identifier",
                "start": 5955,
                "end": 5967,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 5968,
                  "end": 6021,
                  "left": {
                    "type": "Literal",
                    "start": 5968,
                    "end": 6004,
                    "value": "#564: 524287 >> 17 === 3. Actual: ",
                    "raw": "'#564: 524287 >> 17 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6007,
                    "end": 6021,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6008,
                      "end": 6020,
                      "left": {
                        "type": "Literal",
                        "start": 6008,
                        "end": 6014,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6018,
                        "end": 6020,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6030,
      "end": 6143,
      "test": {
        "type": "BinaryExpression",
        "start": 6034,
        "end": 6053,
        "left": {
          "type": "BinaryExpression",
          "start": 6034,
          "end": 6047,
          "left": {
            "type": "Literal",
            "start": 6034,
            "end": 6041,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6045,
            "end": 6047,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6052,
          "end": 6053,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6055,
        "end": 6143,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6060,
            "end": 6140,
            "argument": {
              "type": "NewExpression",
              "start": 6066,
              "end": 6139,
              "callee": {
                "type": "Identifier",
                "start": 6070,
                "end": 6082,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6083,
                  "end": 6138,
                  "left": {
                    "type": "Literal",
                    "start": 6083,
                    "end": 6120,
                    "value": "#565: 1048575 >> 17 === 7. Actual: ",
                    "raw": "'#565: 1048575 >> 17 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6123,
                    "end": 6138,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6124,
                      "end": 6137,
                      "left": {
                        "type": "Literal",
                        "start": 6124,
                        "end": 6131,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6135,
                        "end": 6137,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6147,
      "end": 6262,
      "test": {
        "type": "BinaryExpression",
        "start": 6151,
        "end": 6171,
        "left": {
          "type": "BinaryExpression",
          "start": 6151,
          "end": 6164,
          "left": {
            "type": "Literal",
            "start": 6151,
            "end": 6158,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6162,
            "end": 6164,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6169,
          "end": 6171,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6173,
        "end": 6262,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6178,
            "end": 6259,
            "argument": {
              "type": "NewExpression",
              "start": 6184,
              "end": 6258,
              "callee": {
                "type": "Identifier",
                "start": 6188,
                "end": 6200,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6201,
                  "end": 6257,
                  "left": {
                    "type": "Literal",
                    "start": 6201,
                    "end": 6239,
                    "value": "#566: 2097151 >> 17 === 15. Actual: ",
                    "raw": "'#566: 2097151 >> 17 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6242,
                    "end": 6257,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6243,
                      "end": 6256,
                      "left": {
                        "type": "Literal",
                        "start": 6243,
                        "end": 6250,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6254,
                        "end": 6256,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6266,
      "end": 6381,
      "test": {
        "type": "BinaryExpression",
        "start": 6270,
        "end": 6290,
        "left": {
          "type": "BinaryExpression",
          "start": 6270,
          "end": 6283,
          "left": {
            "type": "Literal",
            "start": 6270,
            "end": 6277,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6281,
            "end": 6283,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6288,
          "end": 6290,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6292,
        "end": 6381,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6297,
            "end": 6378,
            "argument": {
              "type": "NewExpression",
              "start": 6303,
              "end": 6377,
              "callee": {
                "type": "Identifier",
                "start": 6307,
                "end": 6319,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6320,
                  "end": 6376,
                  "left": {
                    "type": "Literal",
                    "start": 6320,
                    "end": 6358,
                    "value": "#567: 4194303 >> 17 === 31. Actual: ",
                    "raw": "'#567: 4194303 >> 17 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6361,
                    "end": 6376,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6362,
                      "end": 6375,
                      "left": {
                        "type": "Literal",
                        "start": 6362,
                        "end": 6369,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6373,
                        "end": 6375,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6385,
      "end": 6500,
      "test": {
        "type": "BinaryExpression",
        "start": 6389,
        "end": 6409,
        "left": {
          "type": "BinaryExpression",
          "start": 6389,
          "end": 6402,
          "left": {
            "type": "Literal",
            "start": 6389,
            "end": 6396,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6400,
            "end": 6402,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6407,
          "end": 6409,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6411,
        "end": 6500,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6416,
            "end": 6497,
            "argument": {
              "type": "NewExpression",
              "start": 6422,
              "end": 6496,
              "callee": {
                "type": "Identifier",
                "start": 6426,
                "end": 6438,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6439,
                  "end": 6495,
                  "left": {
                    "type": "Literal",
                    "start": 6439,
                    "end": 6477,
                    "value": "#568: 8388607 >> 17 === 63. Actual: ",
                    "raw": "'#568: 8388607 >> 17 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6480,
                    "end": 6495,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6481,
                      "end": 6494,
                      "left": {
                        "type": "Literal",
                        "start": 6481,
                        "end": 6488,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6492,
                        "end": 6494,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6504,
      "end": 6624,
      "test": {
        "type": "BinaryExpression",
        "start": 6508,
        "end": 6530,
        "left": {
          "type": "BinaryExpression",
          "start": 6508,
          "end": 6522,
          "left": {
            "type": "Literal",
            "start": 6508,
            "end": 6516,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6520,
            "end": 6522,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6527,
          "end": 6530,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6532,
        "end": 6624,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6537,
            "end": 6621,
            "argument": {
              "type": "NewExpression",
              "start": 6543,
              "end": 6620,
              "callee": {
                "type": "Identifier",
                "start": 6547,
                "end": 6559,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6560,
                  "end": 6619,
                  "left": {
                    "type": "Literal",
                    "start": 6560,
                    "end": 6600,
                    "value": "#569: 16777215 >> 17 === 127. Actual: ",
                    "raw": "'#569: 16777215 >> 17 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6603,
                    "end": 6619,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6604,
                      "end": 6618,
                      "left": {
                        "type": "Literal",
                        "start": 6604,
                        "end": 6612,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6616,
                        "end": 6618,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6628,
      "end": 6748,
      "test": {
        "type": "BinaryExpression",
        "start": 6632,
        "end": 6654,
        "left": {
          "type": "BinaryExpression",
          "start": 6632,
          "end": 6646,
          "left": {
            "type": "Literal",
            "start": 6632,
            "end": 6640,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6644,
            "end": 6646,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6651,
          "end": 6654,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6656,
        "end": 6748,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6661,
            "end": 6745,
            "argument": {
              "type": "NewExpression",
              "start": 6667,
              "end": 6744,
              "callee": {
                "type": "Identifier",
                "start": 6671,
                "end": 6683,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6684,
                  "end": 6743,
                  "left": {
                    "type": "Literal",
                    "start": 6684,
                    "end": 6724,
                    "value": "#570: 33554431 >> 17 === 255. Actual: ",
                    "raw": "'#570: 33554431 >> 17 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6727,
                    "end": 6743,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6728,
                      "end": 6742,
                      "left": {
                        "type": "Literal",
                        "start": 6728,
                        "end": 6736,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6740,
                        "end": 6742,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6752,
      "end": 6872,
      "test": {
        "type": "BinaryExpression",
        "start": 6756,
        "end": 6778,
        "left": {
          "type": "BinaryExpression",
          "start": 6756,
          "end": 6770,
          "left": {
            "type": "Literal",
            "start": 6756,
            "end": 6764,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6768,
            "end": 6770,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6775,
          "end": 6778,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6780,
        "end": 6872,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6785,
            "end": 6869,
            "argument": {
              "type": "NewExpression",
              "start": 6791,
              "end": 6868,
              "callee": {
                "type": "Identifier",
                "start": 6795,
                "end": 6807,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6808,
                  "end": 6867,
                  "left": {
                    "type": "Literal",
                    "start": 6808,
                    "end": 6848,
                    "value": "#571: 67108863 >> 17 === 511. Actual: ",
                    "raw": "'#571: 67108863 >> 17 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6851,
                    "end": 6867,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6852,
                      "end": 6866,
                      "left": {
                        "type": "Literal",
                        "start": 6852,
                        "end": 6860,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6864,
                        "end": 6866,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 6876,
      "end": 7001,
      "test": {
        "type": "BinaryExpression",
        "start": 6880,
        "end": 6904,
        "left": {
          "type": "BinaryExpression",
          "start": 6880,
          "end": 6895,
          "left": {
            "type": "Literal",
            "start": 6880,
            "end": 6889,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 6893,
            "end": 6895,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 6900,
          "end": 6904,
          "value": 1023,
          "raw": "1023",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 6906,
        "end": 7001,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 6911,
            "end": 6998,
            "argument": {
              "type": "NewExpression",
              "start": 6917,
              "end": 6997,
              "callee": {
                "type": "Identifier",
                "start": 6921,
                "end": 6933,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 6934,
                  "end": 6996,
                  "left": {
                    "type": "Literal",
                    "start": 6934,
                    "end": 6976,
                    "value": "#572: 134217727 >> 17 === 1023. Actual: ",
                    "raw": "'#572: 134217727 >> 17 === 1023. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 6979,
                    "end": 6996,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 6980,
                      "end": 6995,
                      "left": {
                        "type": "Literal",
                        "start": 6980,
                        "end": 6989,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 6993,
                        "end": 6995,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7005,
      "end": 7130,
      "test": {
        "type": "BinaryExpression",
        "start": 7009,
        "end": 7033,
        "left": {
          "type": "BinaryExpression",
          "start": 7009,
          "end": 7024,
          "left": {
            "type": "Literal",
            "start": 7009,
            "end": 7018,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7022,
            "end": 7024,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7029,
          "end": 7033,
          "value": 2047,
          "raw": "2047",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7035,
        "end": 7130,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7040,
            "end": 7127,
            "argument": {
              "type": "NewExpression",
              "start": 7046,
              "end": 7126,
              "callee": {
                "type": "Identifier",
                "start": 7050,
                "end": 7062,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7063,
                  "end": 7125,
                  "left": {
                    "type": "Literal",
                    "start": 7063,
                    "end": 7105,
                    "value": "#573: 268435455 >> 17 === 2047. Actual: ",
                    "raw": "'#573: 268435455 >> 17 === 2047. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7108,
                    "end": 7125,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7109,
                      "end": 7124,
                      "left": {
                        "type": "Literal",
                        "start": 7109,
                        "end": 7118,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7122,
                        "end": 7124,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7134,
      "end": 7259,
      "test": {
        "type": "BinaryExpression",
        "start": 7138,
        "end": 7162,
        "left": {
          "type": "BinaryExpression",
          "start": 7138,
          "end": 7153,
          "left": {
            "type": "Literal",
            "start": 7138,
            "end": 7147,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7151,
            "end": 7153,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7158,
          "end": 7162,
          "value": 4095,
          "raw": "4095",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7164,
        "end": 7259,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7169,
            "end": 7256,
            "argument": {
              "type": "NewExpression",
              "start": 7175,
              "end": 7255,
              "callee": {
                "type": "Identifier",
                "start": 7179,
                "end": 7191,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7192,
                  "end": 7254,
                  "left": {
                    "type": "Literal",
                    "start": 7192,
                    "end": 7234,
                    "value": "#574: 536870911 >> 17 === 4095. Actual: ",
                    "raw": "'#574: 536870911 >> 17 === 4095. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7237,
                    "end": 7254,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7238,
                      "end": 7253,
                      "left": {
                        "type": "Literal",
                        "start": 7238,
                        "end": 7247,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7251,
                        "end": 7253,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7263,
      "end": 7391,
      "test": {
        "type": "BinaryExpression",
        "start": 7267,
        "end": 7292,
        "left": {
          "type": "BinaryExpression",
          "start": 7267,
          "end": 7283,
          "left": {
            "type": "Literal",
            "start": 7267,
            "end": 7277,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7281,
            "end": 7283,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7288,
          "end": 7292,
          "value": 8191,
          "raw": "8191",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7294,
        "end": 7391,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7299,
            "end": 7388,
            "argument": {
              "type": "NewExpression",
              "start": 7305,
              "end": 7387,
              "callee": {
                "type": "Identifier",
                "start": 7309,
                "end": 7321,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7322,
                  "end": 7386,
                  "left": {
                    "type": "Literal",
                    "start": 7322,
                    "end": 7365,
                    "value": "#575: 1073741823 >> 17 === 8191. Actual: ",
                    "raw": "'#575: 1073741823 >> 17 === 8191. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7368,
                    "end": 7386,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7369,
                      "end": 7385,
                      "left": {
                        "type": "Literal",
                        "start": 7369,
                        "end": 7379,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7383,
                        "end": 7385,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7395,
      "end": 7525,
      "test": {
        "type": "BinaryExpression",
        "start": 7399,
        "end": 7425,
        "left": {
          "type": "BinaryExpression",
          "start": 7399,
          "end": 7415,
          "left": {
            "type": "Literal",
            "start": 7399,
            "end": 7409,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7413,
            "end": 7415,
            "value": 17,
            "raw": "17",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7420,
          "end": 7425,
          "value": 16383,
          "raw": "16383",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7427,
        "end": 7525,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7432,
            "end": 7522,
            "argument": {
              "type": "NewExpression",
              "start": 7438,
              "end": 7521,
              "callee": {
                "type": "Identifier",
                "start": 7442,
                "end": 7454,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7455,
                  "end": 7520,
                  "left": {
                    "type": "Literal",
                    "start": 7455,
                    "end": 7499,
                    "value": "#576: 2147483647 >> 17 === 16383. Actual: ",
                    "raw": "'#576: 2147483647 >> 17 === 16383. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7502,
                    "end": 7520,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7503,
                      "end": 7519,
                      "left": {
                        "type": "Literal",
                        "start": 7503,
                        "end": 7513,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7517,
                        "end": 7519,
                        "value": 17,
                        "raw": "17",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7529,
      "end": 7624,
      "test": {
        "type": "BinaryExpression",
        "start": 7533,
        "end": 7546,
        "left": {
          "type": "BinaryExpression",
          "start": 7533,
          "end": 7540,
          "left": {
            "type": "Literal",
            "start": 7533,
            "end": 7534,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7538,
            "end": 7540,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7545,
          "end": 7546,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7548,
        "end": 7624,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7553,
            "end": 7621,
            "argument": {
              "type": "NewExpression",
              "start": 7559,
              "end": 7620,
              "callee": {
                "type": "Identifier",
                "start": 7563,
                "end": 7575,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7576,
                  "end": 7619,
                  "left": {
                    "type": "Literal",
                    "start": 7576,
                    "end": 7607,
                    "value": "#577: 0 >> 18 === 0. Actual: ",
                    "raw": "'#577: 0 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7610,
                    "end": 7619,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7611,
                      "end": 7618,
                      "left": {
                        "type": "Literal",
                        "start": 7611,
                        "end": 7612,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7616,
                        "end": 7618,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7628,
      "end": 7723,
      "test": {
        "type": "BinaryExpression",
        "start": 7632,
        "end": 7645,
        "left": {
          "type": "BinaryExpression",
          "start": 7632,
          "end": 7639,
          "left": {
            "type": "Literal",
            "start": 7632,
            "end": 7633,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7637,
            "end": 7639,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7644,
          "end": 7645,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7647,
        "end": 7723,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7652,
            "end": 7720,
            "argument": {
              "type": "NewExpression",
              "start": 7658,
              "end": 7719,
              "callee": {
                "type": "Identifier",
                "start": 7662,
                "end": 7674,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7675,
                  "end": 7718,
                  "left": {
                    "type": "Literal",
                    "start": 7675,
                    "end": 7706,
                    "value": "#578: 1 >> 18 === 0. Actual: ",
                    "raw": "'#578: 1 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7709,
                    "end": 7718,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7710,
                      "end": 7717,
                      "left": {
                        "type": "Literal",
                        "start": 7710,
                        "end": 7711,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7715,
                        "end": 7717,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7727,
      "end": 7822,
      "test": {
        "type": "BinaryExpression",
        "start": 7731,
        "end": 7744,
        "left": {
          "type": "BinaryExpression",
          "start": 7731,
          "end": 7738,
          "left": {
            "type": "Literal",
            "start": 7731,
            "end": 7732,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7736,
            "end": 7738,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7743,
          "end": 7744,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7746,
        "end": 7822,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7751,
            "end": 7819,
            "argument": {
              "type": "NewExpression",
              "start": 7757,
              "end": 7818,
              "callee": {
                "type": "Identifier",
                "start": 7761,
                "end": 7773,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7774,
                  "end": 7817,
                  "left": {
                    "type": "Literal",
                    "start": 7774,
                    "end": 7805,
                    "value": "#579: 3 >> 18 === 0. Actual: ",
                    "raw": "'#579: 3 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7808,
                    "end": 7817,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7809,
                      "end": 7816,
                      "left": {
                        "type": "Literal",
                        "start": 7809,
                        "end": 7810,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7814,
                        "end": 7816,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7826,
      "end": 7921,
      "test": {
        "type": "BinaryExpression",
        "start": 7830,
        "end": 7843,
        "left": {
          "type": "BinaryExpression",
          "start": 7830,
          "end": 7837,
          "left": {
            "type": "Literal",
            "start": 7830,
            "end": 7831,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7835,
            "end": 7837,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7842,
          "end": 7843,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7845,
        "end": 7921,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7850,
            "end": 7918,
            "argument": {
              "type": "NewExpression",
              "start": 7856,
              "end": 7917,
              "callee": {
                "type": "Identifier",
                "start": 7860,
                "end": 7872,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7873,
                  "end": 7916,
                  "left": {
                    "type": "Literal",
                    "start": 7873,
                    "end": 7904,
                    "value": "#580: 7 >> 18 === 0. Actual: ",
                    "raw": "'#580: 7 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 7907,
                    "end": 7916,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 7908,
                      "end": 7915,
                      "left": {
                        "type": "Literal",
                        "start": 7908,
                        "end": 7909,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 7913,
                        "end": 7915,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 7925,
      "end": 8023,
      "test": {
        "type": "BinaryExpression",
        "start": 7929,
        "end": 7943,
        "left": {
          "type": "BinaryExpression",
          "start": 7929,
          "end": 7937,
          "left": {
            "type": "Literal",
            "start": 7929,
            "end": 7931,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 7935,
            "end": 7937,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 7942,
          "end": 7943,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 7945,
        "end": 8023,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 7950,
            "end": 8020,
            "argument": {
              "type": "NewExpression",
              "start": 7956,
              "end": 8019,
              "callee": {
                "type": "Identifier",
                "start": 7960,
                "end": 7972,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 7973,
                  "end": 8018,
                  "left": {
                    "type": "Literal",
                    "start": 7973,
                    "end": 8005,
                    "value": "#581: 15 >> 18 === 0. Actual: ",
                    "raw": "'#581: 15 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8008,
                    "end": 8018,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8009,
                      "end": 8017,
                      "left": {
                        "type": "Literal",
                        "start": 8009,
                        "end": 8011,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8015,
                        "end": 8017,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8027,
      "end": 8125,
      "test": {
        "type": "BinaryExpression",
        "start": 8031,
        "end": 8045,
        "left": {
          "type": "BinaryExpression",
          "start": 8031,
          "end": 8039,
          "left": {
            "type": "Literal",
            "start": 8031,
            "end": 8033,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8037,
            "end": 8039,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8044,
          "end": 8045,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8047,
        "end": 8125,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8052,
            "end": 8122,
            "argument": {
              "type": "NewExpression",
              "start": 8058,
              "end": 8121,
              "callee": {
                "type": "Identifier",
                "start": 8062,
                "end": 8074,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8075,
                  "end": 8120,
                  "left": {
                    "type": "Literal",
                    "start": 8075,
                    "end": 8107,
                    "value": "#582: 31 >> 18 === 0. Actual: ",
                    "raw": "'#582: 31 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8110,
                    "end": 8120,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8111,
                      "end": 8119,
                      "left": {
                        "type": "Literal",
                        "start": 8111,
                        "end": 8113,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8117,
                        "end": 8119,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8129,
      "end": 8227,
      "test": {
        "type": "BinaryExpression",
        "start": 8133,
        "end": 8147,
        "left": {
          "type": "BinaryExpression",
          "start": 8133,
          "end": 8141,
          "left": {
            "type": "Literal",
            "start": 8133,
            "end": 8135,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8139,
            "end": 8141,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8146,
          "end": 8147,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8149,
        "end": 8227,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8154,
            "end": 8224,
            "argument": {
              "type": "NewExpression",
              "start": 8160,
              "end": 8223,
              "callee": {
                "type": "Identifier",
                "start": 8164,
                "end": 8176,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8177,
                  "end": 8222,
                  "left": {
                    "type": "Literal",
                    "start": 8177,
                    "end": 8209,
                    "value": "#583: 63 >> 18 === 0. Actual: ",
                    "raw": "'#583: 63 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8212,
                    "end": 8222,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8213,
                      "end": 8221,
                      "left": {
                        "type": "Literal",
                        "start": 8213,
                        "end": 8215,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8219,
                        "end": 8221,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8231,
      "end": 8332,
      "test": {
        "type": "BinaryExpression",
        "start": 8235,
        "end": 8250,
        "left": {
          "type": "BinaryExpression",
          "start": 8235,
          "end": 8244,
          "left": {
            "type": "Literal",
            "start": 8235,
            "end": 8238,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8242,
            "end": 8244,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8249,
          "end": 8250,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8252,
        "end": 8332,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8257,
            "end": 8329,
            "argument": {
              "type": "NewExpression",
              "start": 8263,
              "end": 8328,
              "callee": {
                "type": "Identifier",
                "start": 8267,
                "end": 8279,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8280,
                  "end": 8327,
                  "left": {
                    "type": "Literal",
                    "start": 8280,
                    "end": 8313,
                    "value": "#584: 127 >> 18 === 0. Actual: ",
                    "raw": "'#584: 127 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8316,
                    "end": 8327,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8317,
                      "end": 8326,
                      "left": {
                        "type": "Literal",
                        "start": 8317,
                        "end": 8320,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8324,
                        "end": 8326,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8336,
      "end": 8437,
      "test": {
        "type": "BinaryExpression",
        "start": 8340,
        "end": 8355,
        "left": {
          "type": "BinaryExpression",
          "start": 8340,
          "end": 8349,
          "left": {
            "type": "Literal",
            "start": 8340,
            "end": 8343,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8347,
            "end": 8349,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8354,
          "end": 8355,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8357,
        "end": 8437,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8362,
            "end": 8434,
            "argument": {
              "type": "NewExpression",
              "start": 8368,
              "end": 8433,
              "callee": {
                "type": "Identifier",
                "start": 8372,
                "end": 8384,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8385,
                  "end": 8432,
                  "left": {
                    "type": "Literal",
                    "start": 8385,
                    "end": 8418,
                    "value": "#585: 255 >> 18 === 0. Actual: ",
                    "raw": "'#585: 255 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8421,
                    "end": 8432,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8422,
                      "end": 8431,
                      "left": {
                        "type": "Literal",
                        "start": 8422,
                        "end": 8425,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8429,
                        "end": 8431,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8441,
      "end": 8542,
      "test": {
        "type": "BinaryExpression",
        "start": 8445,
        "end": 8460,
        "left": {
          "type": "BinaryExpression",
          "start": 8445,
          "end": 8454,
          "left": {
            "type": "Literal",
            "start": 8445,
            "end": 8448,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8452,
            "end": 8454,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8459,
          "end": 8460,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8462,
        "end": 8542,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8467,
            "end": 8539,
            "argument": {
              "type": "NewExpression",
              "start": 8473,
              "end": 8538,
              "callee": {
                "type": "Identifier",
                "start": 8477,
                "end": 8489,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8490,
                  "end": 8537,
                  "left": {
                    "type": "Literal",
                    "start": 8490,
                    "end": 8523,
                    "value": "#586: 511 >> 18 === 0. Actual: ",
                    "raw": "'#586: 511 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8526,
                    "end": 8537,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8527,
                      "end": 8536,
                      "left": {
                        "type": "Literal",
                        "start": 8527,
                        "end": 8530,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8534,
                        "end": 8536,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8546,
      "end": 8650,
      "test": {
        "type": "BinaryExpression",
        "start": 8550,
        "end": 8566,
        "left": {
          "type": "BinaryExpression",
          "start": 8550,
          "end": 8560,
          "left": {
            "type": "Literal",
            "start": 8550,
            "end": 8554,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8558,
            "end": 8560,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8565,
          "end": 8566,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8568,
        "end": 8650,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8573,
            "end": 8647,
            "argument": {
              "type": "NewExpression",
              "start": 8579,
              "end": 8646,
              "callee": {
                "type": "Identifier",
                "start": 8583,
                "end": 8595,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8596,
                  "end": 8645,
                  "left": {
                    "type": "Literal",
                    "start": 8596,
                    "end": 8630,
                    "value": "#587: 1023 >> 18 === 0. Actual: ",
                    "raw": "'#587: 1023 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8633,
                    "end": 8645,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8634,
                      "end": 8644,
                      "left": {
                        "type": "Literal",
                        "start": 8634,
                        "end": 8638,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8642,
                        "end": 8644,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8654,
      "end": 8758,
      "test": {
        "type": "BinaryExpression",
        "start": 8658,
        "end": 8674,
        "left": {
          "type": "BinaryExpression",
          "start": 8658,
          "end": 8668,
          "left": {
            "type": "Literal",
            "start": 8658,
            "end": 8662,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8666,
            "end": 8668,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8673,
          "end": 8674,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8676,
        "end": 8758,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8681,
            "end": 8755,
            "argument": {
              "type": "NewExpression",
              "start": 8687,
              "end": 8754,
              "callee": {
                "type": "Identifier",
                "start": 8691,
                "end": 8703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8704,
                  "end": 8753,
                  "left": {
                    "type": "Literal",
                    "start": 8704,
                    "end": 8738,
                    "value": "#588: 2047 >> 18 === 0. Actual: ",
                    "raw": "'#588: 2047 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8741,
                    "end": 8753,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8742,
                      "end": 8752,
                      "left": {
                        "type": "Literal",
                        "start": 8742,
                        "end": 8746,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8750,
                        "end": 8752,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8762,
      "end": 8866,
      "test": {
        "type": "BinaryExpression",
        "start": 8766,
        "end": 8782,
        "left": {
          "type": "BinaryExpression",
          "start": 8766,
          "end": 8776,
          "left": {
            "type": "Literal",
            "start": 8766,
            "end": 8770,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8774,
            "end": 8776,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8781,
          "end": 8782,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8784,
        "end": 8866,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8789,
            "end": 8863,
            "argument": {
              "type": "NewExpression",
              "start": 8795,
              "end": 8862,
              "callee": {
                "type": "Identifier",
                "start": 8799,
                "end": 8811,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8812,
                  "end": 8861,
                  "left": {
                    "type": "Literal",
                    "start": 8812,
                    "end": 8846,
                    "value": "#589: 4095 >> 18 === 0. Actual: ",
                    "raw": "'#589: 4095 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8849,
                    "end": 8861,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8850,
                      "end": 8860,
                      "left": {
                        "type": "Literal",
                        "start": 8850,
                        "end": 8854,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8858,
                        "end": 8860,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8870,
      "end": 8974,
      "test": {
        "type": "BinaryExpression",
        "start": 8874,
        "end": 8890,
        "left": {
          "type": "BinaryExpression",
          "start": 8874,
          "end": 8884,
          "left": {
            "type": "Literal",
            "start": 8874,
            "end": 8878,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8882,
            "end": 8884,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8889,
          "end": 8890,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 8892,
        "end": 8974,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 8897,
            "end": 8971,
            "argument": {
              "type": "NewExpression",
              "start": 8903,
              "end": 8970,
              "callee": {
                "type": "Identifier",
                "start": 8907,
                "end": 8919,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 8920,
                  "end": 8969,
                  "left": {
                    "type": "Literal",
                    "start": 8920,
                    "end": 8954,
                    "value": "#590: 8191 >> 18 === 0. Actual: ",
                    "raw": "'#590: 8191 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 8957,
                    "end": 8969,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 8958,
                      "end": 8968,
                      "left": {
                        "type": "Literal",
                        "start": 8958,
                        "end": 8962,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 8966,
                        "end": 8968,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 8978,
      "end": 9085,
      "test": {
        "type": "BinaryExpression",
        "start": 8982,
        "end": 8999,
        "left": {
          "type": "BinaryExpression",
          "start": 8982,
          "end": 8993,
          "left": {
            "type": "Literal",
            "start": 8982,
            "end": 8987,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 8991,
            "end": 8993,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 8998,
          "end": 8999,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9001,
        "end": 9085,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9006,
            "end": 9082,
            "argument": {
              "type": "NewExpression",
              "start": 9012,
              "end": 9081,
              "callee": {
                "type": "Identifier",
                "start": 9016,
                "end": 9028,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9029,
                  "end": 9080,
                  "left": {
                    "type": "Literal",
                    "start": 9029,
                    "end": 9064,
                    "value": "#591: 16383 >> 18 === 0. Actual: ",
                    "raw": "'#591: 16383 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9067,
                    "end": 9080,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9068,
                      "end": 9079,
                      "left": {
                        "type": "Literal",
                        "start": 9068,
                        "end": 9073,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9077,
                        "end": 9079,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9089,
      "end": 9196,
      "test": {
        "type": "BinaryExpression",
        "start": 9093,
        "end": 9110,
        "left": {
          "type": "BinaryExpression",
          "start": 9093,
          "end": 9104,
          "left": {
            "type": "Literal",
            "start": 9093,
            "end": 9098,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9102,
            "end": 9104,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9109,
          "end": 9110,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9112,
        "end": 9196,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9117,
            "end": 9193,
            "argument": {
              "type": "NewExpression",
              "start": 9123,
              "end": 9192,
              "callee": {
                "type": "Identifier",
                "start": 9127,
                "end": 9139,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9140,
                  "end": 9191,
                  "left": {
                    "type": "Literal",
                    "start": 9140,
                    "end": 9175,
                    "value": "#592: 32767 >> 18 === 0. Actual: ",
                    "raw": "'#592: 32767 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9178,
                    "end": 9191,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9179,
                      "end": 9190,
                      "left": {
                        "type": "Literal",
                        "start": 9179,
                        "end": 9184,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9188,
                        "end": 9190,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9200,
      "end": 9307,
      "test": {
        "type": "BinaryExpression",
        "start": 9204,
        "end": 9221,
        "left": {
          "type": "BinaryExpression",
          "start": 9204,
          "end": 9215,
          "left": {
            "type": "Literal",
            "start": 9204,
            "end": 9209,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9213,
            "end": 9215,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9220,
          "end": 9221,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9223,
        "end": 9307,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9228,
            "end": 9304,
            "argument": {
              "type": "NewExpression",
              "start": 9234,
              "end": 9303,
              "callee": {
                "type": "Identifier",
                "start": 9238,
                "end": 9250,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9251,
                  "end": 9302,
                  "left": {
                    "type": "Literal",
                    "start": 9251,
                    "end": 9286,
                    "value": "#593: 65535 >> 18 === 0. Actual: ",
                    "raw": "'#593: 65535 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9289,
                    "end": 9302,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9290,
                      "end": 9301,
                      "left": {
                        "type": "Literal",
                        "start": 9290,
                        "end": 9295,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9299,
                        "end": 9301,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9311,
      "end": 9421,
      "test": {
        "type": "BinaryExpression",
        "start": 9315,
        "end": 9333,
        "left": {
          "type": "BinaryExpression",
          "start": 9315,
          "end": 9327,
          "left": {
            "type": "Literal",
            "start": 9315,
            "end": 9321,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9325,
            "end": 9327,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9332,
          "end": 9333,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9335,
        "end": 9421,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9340,
            "end": 9418,
            "argument": {
              "type": "NewExpression",
              "start": 9346,
              "end": 9417,
              "callee": {
                "type": "Identifier",
                "start": 9350,
                "end": 9362,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9363,
                  "end": 9416,
                  "left": {
                    "type": "Literal",
                    "start": 9363,
                    "end": 9399,
                    "value": "#594: 131071 >> 18 === 0. Actual: ",
                    "raw": "'#594: 131071 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9402,
                    "end": 9416,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9403,
                      "end": 9415,
                      "left": {
                        "type": "Literal",
                        "start": 9403,
                        "end": 9409,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9413,
                        "end": 9415,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9425,
      "end": 9535,
      "test": {
        "type": "BinaryExpression",
        "start": 9429,
        "end": 9447,
        "left": {
          "type": "BinaryExpression",
          "start": 9429,
          "end": 9441,
          "left": {
            "type": "Literal",
            "start": 9429,
            "end": 9435,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9439,
            "end": 9441,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9446,
          "end": 9447,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9449,
        "end": 9535,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9454,
            "end": 9532,
            "argument": {
              "type": "NewExpression",
              "start": 9460,
              "end": 9531,
              "callee": {
                "type": "Identifier",
                "start": 9464,
                "end": 9476,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9477,
                  "end": 9530,
                  "left": {
                    "type": "Literal",
                    "start": 9477,
                    "end": 9513,
                    "value": "#595: 262143 >> 18 === 0. Actual: ",
                    "raw": "'#595: 262143 >> 18 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9516,
                    "end": 9530,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9517,
                      "end": 9529,
                      "left": {
                        "type": "Literal",
                        "start": 9517,
                        "end": 9523,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9527,
                        "end": 9529,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9539,
      "end": 9649,
      "test": {
        "type": "BinaryExpression",
        "start": 9543,
        "end": 9561,
        "left": {
          "type": "BinaryExpression",
          "start": 9543,
          "end": 9555,
          "left": {
            "type": "Literal",
            "start": 9543,
            "end": 9549,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9553,
            "end": 9555,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9560,
          "end": 9561,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9563,
        "end": 9649,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9568,
            "end": 9646,
            "argument": {
              "type": "NewExpression",
              "start": 9574,
              "end": 9645,
              "callee": {
                "type": "Identifier",
                "start": 9578,
                "end": 9590,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9591,
                  "end": 9644,
                  "left": {
                    "type": "Literal",
                    "start": 9591,
                    "end": 9627,
                    "value": "#596: 524287 >> 18 === 1. Actual: ",
                    "raw": "'#596: 524287 >> 18 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9630,
                    "end": 9644,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9631,
                      "end": 9643,
                      "left": {
                        "type": "Literal",
                        "start": 9631,
                        "end": 9637,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9641,
                        "end": 9643,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9653,
      "end": 9766,
      "test": {
        "type": "BinaryExpression",
        "start": 9657,
        "end": 9676,
        "left": {
          "type": "BinaryExpression",
          "start": 9657,
          "end": 9670,
          "left": {
            "type": "Literal",
            "start": 9657,
            "end": 9664,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9668,
            "end": 9670,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9675,
          "end": 9676,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9678,
        "end": 9766,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9683,
            "end": 9763,
            "argument": {
              "type": "NewExpression",
              "start": 9689,
              "end": 9762,
              "callee": {
                "type": "Identifier",
                "start": 9693,
                "end": 9705,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9706,
                  "end": 9761,
                  "left": {
                    "type": "Literal",
                    "start": 9706,
                    "end": 9743,
                    "value": "#597: 1048575 >> 18 === 3. Actual: ",
                    "raw": "'#597: 1048575 >> 18 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9746,
                    "end": 9761,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9747,
                      "end": 9760,
                      "left": {
                        "type": "Literal",
                        "start": 9747,
                        "end": 9754,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9758,
                        "end": 9760,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9770,
      "end": 9883,
      "test": {
        "type": "BinaryExpression",
        "start": 9774,
        "end": 9793,
        "left": {
          "type": "BinaryExpression",
          "start": 9774,
          "end": 9787,
          "left": {
            "type": "Literal",
            "start": 9774,
            "end": 9781,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9785,
            "end": 9787,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9792,
          "end": 9793,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9795,
        "end": 9883,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9800,
            "end": 9880,
            "argument": {
              "type": "NewExpression",
              "start": 9806,
              "end": 9879,
              "callee": {
                "type": "Identifier",
                "start": 9810,
                "end": 9822,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9823,
                  "end": 9878,
                  "left": {
                    "type": "Literal",
                    "start": 9823,
                    "end": 9860,
                    "value": "#598: 2097151 >> 18 === 7. Actual: ",
                    "raw": "'#598: 2097151 >> 18 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9863,
                    "end": 9878,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9864,
                      "end": 9877,
                      "left": {
                        "type": "Literal",
                        "start": 9864,
                        "end": 9871,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9875,
                        "end": 9877,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 9887,
      "end": 10002,
      "test": {
        "type": "BinaryExpression",
        "start": 9891,
        "end": 9911,
        "left": {
          "type": "BinaryExpression",
          "start": 9891,
          "end": 9904,
          "left": {
            "type": "Literal",
            "start": 9891,
            "end": 9898,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 9902,
            "end": 9904,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 9909,
          "end": 9911,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 9913,
        "end": 10002,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 9918,
            "end": 9999,
            "argument": {
              "type": "NewExpression",
              "start": 9924,
              "end": 9998,
              "callee": {
                "type": "Identifier",
                "start": 9928,
                "end": 9940,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 9941,
                  "end": 9997,
                  "left": {
                    "type": "Literal",
                    "start": 9941,
                    "end": 9979,
                    "value": "#599: 4194303 >> 18 === 15. Actual: ",
                    "raw": "'#599: 4194303 >> 18 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 9982,
                    "end": 9997,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 9983,
                      "end": 9996,
                      "left": {
                        "type": "Literal",
                        "start": 9983,
                        "end": 9990,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 9994,
                        "end": 9996,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10006,
      "end": 10121,
      "test": {
        "type": "BinaryExpression",
        "start": 10010,
        "end": 10030,
        "left": {
          "type": "BinaryExpression",
          "start": 10010,
          "end": 10023,
          "left": {
            "type": "Literal",
            "start": 10010,
            "end": 10017,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10021,
            "end": 10023,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10028,
          "end": 10030,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10032,
        "end": 10121,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10037,
            "end": 10118,
            "argument": {
              "type": "NewExpression",
              "start": 10043,
              "end": 10117,
              "callee": {
                "type": "Identifier",
                "start": 10047,
                "end": 10059,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10060,
                  "end": 10116,
                  "left": {
                    "type": "Literal",
                    "start": 10060,
                    "end": 10098,
                    "value": "#600: 8388607 >> 18 === 31. Actual: ",
                    "raw": "'#600: 8388607 >> 18 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10101,
                    "end": 10116,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10102,
                      "end": 10115,
                      "left": {
                        "type": "Literal",
                        "start": 10102,
                        "end": 10109,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10113,
                        "end": 10115,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10125,
      "end": 10243,
      "test": {
        "type": "BinaryExpression",
        "start": 10129,
        "end": 10150,
        "left": {
          "type": "BinaryExpression",
          "start": 10129,
          "end": 10143,
          "left": {
            "type": "Literal",
            "start": 10129,
            "end": 10137,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10141,
            "end": 10143,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10148,
          "end": 10150,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10152,
        "end": 10243,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10157,
            "end": 10240,
            "argument": {
              "type": "NewExpression",
              "start": 10163,
              "end": 10239,
              "callee": {
                "type": "Identifier",
                "start": 10167,
                "end": 10179,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10180,
                  "end": 10238,
                  "left": {
                    "type": "Literal",
                    "start": 10180,
                    "end": 10219,
                    "value": "#601: 16777215 >> 18 === 63. Actual: ",
                    "raw": "'#601: 16777215 >> 18 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10222,
                    "end": 10238,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10223,
                      "end": 10237,
                      "left": {
                        "type": "Literal",
                        "start": 10223,
                        "end": 10231,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10235,
                        "end": 10237,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10247,
      "end": 10367,
      "test": {
        "type": "BinaryExpression",
        "start": 10251,
        "end": 10273,
        "left": {
          "type": "BinaryExpression",
          "start": 10251,
          "end": 10265,
          "left": {
            "type": "Literal",
            "start": 10251,
            "end": 10259,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10263,
            "end": 10265,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10270,
          "end": 10273,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10275,
        "end": 10367,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10280,
            "end": 10364,
            "argument": {
              "type": "NewExpression",
              "start": 10286,
              "end": 10363,
              "callee": {
                "type": "Identifier",
                "start": 10290,
                "end": 10302,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10303,
                  "end": 10362,
                  "left": {
                    "type": "Literal",
                    "start": 10303,
                    "end": 10343,
                    "value": "#602: 33554431 >> 18 === 127. Actual: ",
                    "raw": "'#602: 33554431 >> 18 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10346,
                    "end": 10362,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10347,
                      "end": 10361,
                      "left": {
                        "type": "Literal",
                        "start": 10347,
                        "end": 10355,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10359,
                        "end": 10361,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10371,
      "end": 10491,
      "test": {
        "type": "BinaryExpression",
        "start": 10375,
        "end": 10397,
        "left": {
          "type": "BinaryExpression",
          "start": 10375,
          "end": 10389,
          "left": {
            "type": "Literal",
            "start": 10375,
            "end": 10383,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10387,
            "end": 10389,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10394,
          "end": 10397,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10399,
        "end": 10491,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10404,
            "end": 10488,
            "argument": {
              "type": "NewExpression",
              "start": 10410,
              "end": 10487,
              "callee": {
                "type": "Identifier",
                "start": 10414,
                "end": 10426,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10427,
                  "end": 10486,
                  "left": {
                    "type": "Literal",
                    "start": 10427,
                    "end": 10467,
                    "value": "#603: 67108863 >> 18 === 255. Actual: ",
                    "raw": "'#603: 67108863 >> 18 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10470,
                    "end": 10486,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10471,
                      "end": 10485,
                      "left": {
                        "type": "Literal",
                        "start": 10471,
                        "end": 10479,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10483,
                        "end": 10485,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10495,
      "end": 10618,
      "test": {
        "type": "BinaryExpression",
        "start": 10499,
        "end": 10522,
        "left": {
          "type": "BinaryExpression",
          "start": 10499,
          "end": 10514,
          "left": {
            "type": "Literal",
            "start": 10499,
            "end": 10508,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10512,
            "end": 10514,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10519,
          "end": 10522,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10524,
        "end": 10618,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10529,
            "end": 10615,
            "argument": {
              "type": "NewExpression",
              "start": 10535,
              "end": 10614,
              "callee": {
                "type": "Identifier",
                "start": 10539,
                "end": 10551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10552,
                  "end": 10613,
                  "left": {
                    "type": "Literal",
                    "start": 10552,
                    "end": 10593,
                    "value": "#604: 134217727 >> 18 === 511. Actual: ",
                    "raw": "'#604: 134217727 >> 18 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10596,
                    "end": 10613,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10597,
                      "end": 10612,
                      "left": {
                        "type": "Literal",
                        "start": 10597,
                        "end": 10606,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10610,
                        "end": 10612,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10622,
      "end": 10747,
      "test": {
        "type": "BinaryExpression",
        "start": 10626,
        "end": 10650,
        "left": {
          "type": "BinaryExpression",
          "start": 10626,
          "end": 10641,
          "left": {
            "type": "Literal",
            "start": 10626,
            "end": 10635,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10639,
            "end": 10641,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10646,
          "end": 10650,
          "value": 1023,
          "raw": "1023",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10652,
        "end": 10747,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10657,
            "end": 10744,
            "argument": {
              "type": "NewExpression",
              "start": 10663,
              "end": 10743,
              "callee": {
                "type": "Identifier",
                "start": 10667,
                "end": 10679,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10680,
                  "end": 10742,
                  "left": {
                    "type": "Literal",
                    "start": 10680,
                    "end": 10722,
                    "value": "#605: 268435455 >> 18 === 1023. Actual: ",
                    "raw": "'#605: 268435455 >> 18 === 1023. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10725,
                    "end": 10742,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10726,
                      "end": 10741,
                      "left": {
                        "type": "Literal",
                        "start": 10726,
                        "end": 10735,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10739,
                        "end": 10741,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10751,
      "end": 10876,
      "test": {
        "type": "BinaryExpression",
        "start": 10755,
        "end": 10779,
        "left": {
          "type": "BinaryExpression",
          "start": 10755,
          "end": 10770,
          "left": {
            "type": "Literal",
            "start": 10755,
            "end": 10764,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10768,
            "end": 10770,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10775,
          "end": 10779,
          "value": 2047,
          "raw": "2047",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10781,
        "end": 10876,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10786,
            "end": 10873,
            "argument": {
              "type": "NewExpression",
              "start": 10792,
              "end": 10872,
              "callee": {
                "type": "Identifier",
                "start": 10796,
                "end": 10808,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10809,
                  "end": 10871,
                  "left": {
                    "type": "Literal",
                    "start": 10809,
                    "end": 10851,
                    "value": "#606: 536870911 >> 18 === 2047. Actual: ",
                    "raw": "'#606: 536870911 >> 18 === 2047. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10854,
                    "end": 10871,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10855,
                      "end": 10870,
                      "left": {
                        "type": "Literal",
                        "start": 10855,
                        "end": 10864,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 10868,
                        "end": 10870,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 10880,
      "end": 11008,
      "test": {
        "type": "BinaryExpression",
        "start": 10884,
        "end": 10909,
        "left": {
          "type": "BinaryExpression",
          "start": 10884,
          "end": 10900,
          "left": {
            "type": "Literal",
            "start": 10884,
            "end": 10894,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 10898,
            "end": 10900,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 10905,
          "end": 10909,
          "value": 4095,
          "raw": "4095",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 10911,
        "end": 11008,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 10916,
            "end": 11005,
            "argument": {
              "type": "NewExpression",
              "start": 10922,
              "end": 11004,
              "callee": {
                "type": "Identifier",
                "start": 10926,
                "end": 10938,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 10939,
                  "end": 11003,
                  "left": {
                    "type": "Literal",
                    "start": 10939,
                    "end": 10982,
                    "value": "#607: 1073741823 >> 18 === 4095. Actual: ",
                    "raw": "'#607: 1073741823 >> 18 === 4095. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 10985,
                    "end": 11003,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 10986,
                      "end": 11002,
                      "left": {
                        "type": "Literal",
                        "start": 10986,
                        "end": 10996,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11000,
                        "end": 11002,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11012,
      "end": 11140,
      "test": {
        "type": "BinaryExpression",
        "start": 11016,
        "end": 11041,
        "left": {
          "type": "BinaryExpression",
          "start": 11016,
          "end": 11032,
          "left": {
            "type": "Literal",
            "start": 11016,
            "end": 11026,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11030,
            "end": 11032,
            "value": 18,
            "raw": "18",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11037,
          "end": 11041,
          "value": 8191,
          "raw": "8191",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11043,
        "end": 11140,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11048,
            "end": 11137,
            "argument": {
              "type": "NewExpression",
              "start": 11054,
              "end": 11136,
              "callee": {
                "type": "Identifier",
                "start": 11058,
                "end": 11070,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11071,
                  "end": 11135,
                  "left": {
                    "type": "Literal",
                    "start": 11071,
                    "end": 11114,
                    "value": "#608: 2147483647 >> 18 === 8191. Actual: ",
                    "raw": "'#608: 2147483647 >> 18 === 8191. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11117,
                    "end": 11135,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11118,
                      "end": 11134,
                      "left": {
                        "type": "Literal",
                        "start": 11118,
                        "end": 11128,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11132,
                        "end": 11134,
                        "value": 18,
                        "raw": "18",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11144,
      "end": 11239,
      "test": {
        "type": "BinaryExpression",
        "start": 11148,
        "end": 11161,
        "left": {
          "type": "BinaryExpression",
          "start": 11148,
          "end": 11155,
          "left": {
            "type": "Literal",
            "start": 11148,
            "end": 11149,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11153,
            "end": 11155,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11160,
          "end": 11161,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11163,
        "end": 11239,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11168,
            "end": 11236,
            "argument": {
              "type": "NewExpression",
              "start": 11174,
              "end": 11235,
              "callee": {
                "type": "Identifier",
                "start": 11178,
                "end": 11190,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11191,
                  "end": 11234,
                  "left": {
                    "type": "Literal",
                    "start": 11191,
                    "end": 11222,
                    "value": "#609: 0 >> 19 === 0. Actual: ",
                    "raw": "'#609: 0 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11225,
                    "end": 11234,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11226,
                      "end": 11233,
                      "left": {
                        "type": "Literal",
                        "start": 11226,
                        "end": 11227,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11231,
                        "end": 11233,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11243,
      "end": 11338,
      "test": {
        "type": "BinaryExpression",
        "start": 11247,
        "end": 11260,
        "left": {
          "type": "BinaryExpression",
          "start": 11247,
          "end": 11254,
          "left": {
            "type": "Literal",
            "start": 11247,
            "end": 11248,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11252,
            "end": 11254,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11259,
          "end": 11260,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11262,
        "end": 11338,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11267,
            "end": 11335,
            "argument": {
              "type": "NewExpression",
              "start": 11273,
              "end": 11334,
              "callee": {
                "type": "Identifier",
                "start": 11277,
                "end": 11289,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11290,
                  "end": 11333,
                  "left": {
                    "type": "Literal",
                    "start": 11290,
                    "end": 11321,
                    "value": "#610: 1 >> 19 === 0. Actual: ",
                    "raw": "'#610: 1 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11324,
                    "end": 11333,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11325,
                      "end": 11332,
                      "left": {
                        "type": "Literal",
                        "start": 11325,
                        "end": 11326,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11330,
                        "end": 11332,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11342,
      "end": 11437,
      "test": {
        "type": "BinaryExpression",
        "start": 11346,
        "end": 11359,
        "left": {
          "type": "BinaryExpression",
          "start": 11346,
          "end": 11353,
          "left": {
            "type": "Literal",
            "start": 11346,
            "end": 11347,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11351,
            "end": 11353,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11358,
          "end": 11359,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11361,
        "end": 11437,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11366,
            "end": 11434,
            "argument": {
              "type": "NewExpression",
              "start": 11372,
              "end": 11433,
              "callee": {
                "type": "Identifier",
                "start": 11376,
                "end": 11388,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11389,
                  "end": 11432,
                  "left": {
                    "type": "Literal",
                    "start": 11389,
                    "end": 11420,
                    "value": "#611: 3 >> 19 === 0. Actual: ",
                    "raw": "'#611: 3 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11423,
                    "end": 11432,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11424,
                      "end": 11431,
                      "left": {
                        "type": "Literal",
                        "start": 11424,
                        "end": 11425,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11429,
                        "end": 11431,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11441,
      "end": 11536,
      "test": {
        "type": "BinaryExpression",
        "start": 11445,
        "end": 11458,
        "left": {
          "type": "BinaryExpression",
          "start": 11445,
          "end": 11452,
          "left": {
            "type": "Literal",
            "start": 11445,
            "end": 11446,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11450,
            "end": 11452,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11457,
          "end": 11458,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11460,
        "end": 11536,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11465,
            "end": 11533,
            "argument": {
              "type": "NewExpression",
              "start": 11471,
              "end": 11532,
              "callee": {
                "type": "Identifier",
                "start": 11475,
                "end": 11487,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11488,
                  "end": 11531,
                  "left": {
                    "type": "Literal",
                    "start": 11488,
                    "end": 11519,
                    "value": "#612: 7 >> 19 === 0. Actual: ",
                    "raw": "'#612: 7 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11522,
                    "end": 11531,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11523,
                      "end": 11530,
                      "left": {
                        "type": "Literal",
                        "start": 11523,
                        "end": 11524,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11528,
                        "end": 11530,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11540,
      "end": 11638,
      "test": {
        "type": "BinaryExpression",
        "start": 11544,
        "end": 11558,
        "left": {
          "type": "BinaryExpression",
          "start": 11544,
          "end": 11552,
          "left": {
            "type": "Literal",
            "start": 11544,
            "end": 11546,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11550,
            "end": 11552,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11557,
          "end": 11558,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11560,
        "end": 11638,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11565,
            "end": 11635,
            "argument": {
              "type": "NewExpression",
              "start": 11571,
              "end": 11634,
              "callee": {
                "type": "Identifier",
                "start": 11575,
                "end": 11587,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11588,
                  "end": 11633,
                  "left": {
                    "type": "Literal",
                    "start": 11588,
                    "end": 11620,
                    "value": "#613: 15 >> 19 === 0. Actual: ",
                    "raw": "'#613: 15 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11623,
                    "end": 11633,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11624,
                      "end": 11632,
                      "left": {
                        "type": "Literal",
                        "start": 11624,
                        "end": 11626,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11630,
                        "end": 11632,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11642,
      "end": 11740,
      "test": {
        "type": "BinaryExpression",
        "start": 11646,
        "end": 11660,
        "left": {
          "type": "BinaryExpression",
          "start": 11646,
          "end": 11654,
          "left": {
            "type": "Literal",
            "start": 11646,
            "end": 11648,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11652,
            "end": 11654,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11659,
          "end": 11660,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11662,
        "end": 11740,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11667,
            "end": 11737,
            "argument": {
              "type": "NewExpression",
              "start": 11673,
              "end": 11736,
              "callee": {
                "type": "Identifier",
                "start": 11677,
                "end": 11689,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11690,
                  "end": 11735,
                  "left": {
                    "type": "Literal",
                    "start": 11690,
                    "end": 11722,
                    "value": "#614: 31 >> 19 === 0. Actual: ",
                    "raw": "'#614: 31 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11725,
                    "end": 11735,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11726,
                      "end": 11734,
                      "left": {
                        "type": "Literal",
                        "start": 11726,
                        "end": 11728,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11732,
                        "end": 11734,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11744,
      "end": 11842,
      "test": {
        "type": "BinaryExpression",
        "start": 11748,
        "end": 11762,
        "left": {
          "type": "BinaryExpression",
          "start": 11748,
          "end": 11756,
          "left": {
            "type": "Literal",
            "start": 11748,
            "end": 11750,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11754,
            "end": 11756,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11761,
          "end": 11762,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11764,
        "end": 11842,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11769,
            "end": 11839,
            "argument": {
              "type": "NewExpression",
              "start": 11775,
              "end": 11838,
              "callee": {
                "type": "Identifier",
                "start": 11779,
                "end": 11791,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11792,
                  "end": 11837,
                  "left": {
                    "type": "Literal",
                    "start": 11792,
                    "end": 11824,
                    "value": "#615: 63 >> 19 === 0. Actual: ",
                    "raw": "'#615: 63 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11827,
                    "end": 11837,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11828,
                      "end": 11836,
                      "left": {
                        "type": "Literal",
                        "start": 11828,
                        "end": 11830,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11834,
                        "end": 11836,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11846,
      "end": 11947,
      "test": {
        "type": "BinaryExpression",
        "start": 11850,
        "end": 11865,
        "left": {
          "type": "BinaryExpression",
          "start": 11850,
          "end": 11859,
          "left": {
            "type": "Literal",
            "start": 11850,
            "end": 11853,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11857,
            "end": 11859,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11864,
          "end": 11865,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11867,
        "end": 11947,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11872,
            "end": 11944,
            "argument": {
              "type": "NewExpression",
              "start": 11878,
              "end": 11943,
              "callee": {
                "type": "Identifier",
                "start": 11882,
                "end": 11894,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 11895,
                  "end": 11942,
                  "left": {
                    "type": "Literal",
                    "start": 11895,
                    "end": 11928,
                    "value": "#616: 127 >> 19 === 0. Actual: ",
                    "raw": "'#616: 127 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 11931,
                    "end": 11942,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 11932,
                      "end": 11941,
                      "left": {
                        "type": "Literal",
                        "start": 11932,
                        "end": 11935,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 11939,
                        "end": 11941,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 11951,
      "end": 12052,
      "test": {
        "type": "BinaryExpression",
        "start": 11955,
        "end": 11970,
        "left": {
          "type": "BinaryExpression",
          "start": 11955,
          "end": 11964,
          "left": {
            "type": "Literal",
            "start": 11955,
            "end": 11958,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 11962,
            "end": 11964,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 11969,
          "end": 11970,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 11972,
        "end": 12052,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 11977,
            "end": 12049,
            "argument": {
              "type": "NewExpression",
              "start": 11983,
              "end": 12048,
              "callee": {
                "type": "Identifier",
                "start": 11987,
                "end": 11999,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12000,
                  "end": 12047,
                  "left": {
                    "type": "Literal",
                    "start": 12000,
                    "end": 12033,
                    "value": "#617: 255 >> 19 === 0. Actual: ",
                    "raw": "'#617: 255 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12036,
                    "end": 12047,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12037,
                      "end": 12046,
                      "left": {
                        "type": "Literal",
                        "start": 12037,
                        "end": 12040,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12044,
                        "end": 12046,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12056,
      "end": 12157,
      "test": {
        "type": "BinaryExpression",
        "start": 12060,
        "end": 12075,
        "left": {
          "type": "BinaryExpression",
          "start": 12060,
          "end": 12069,
          "left": {
            "type": "Literal",
            "start": 12060,
            "end": 12063,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12067,
            "end": 12069,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12074,
          "end": 12075,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12077,
        "end": 12157,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12082,
            "end": 12154,
            "argument": {
              "type": "NewExpression",
              "start": 12088,
              "end": 12153,
              "callee": {
                "type": "Identifier",
                "start": 12092,
                "end": 12104,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12105,
                  "end": 12152,
                  "left": {
                    "type": "Literal",
                    "start": 12105,
                    "end": 12138,
                    "value": "#618: 511 >> 19 === 0. Actual: ",
                    "raw": "'#618: 511 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12141,
                    "end": 12152,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12142,
                      "end": 12151,
                      "left": {
                        "type": "Literal",
                        "start": 12142,
                        "end": 12145,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12149,
                        "end": 12151,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12161,
      "end": 12265,
      "test": {
        "type": "BinaryExpression",
        "start": 12165,
        "end": 12181,
        "left": {
          "type": "BinaryExpression",
          "start": 12165,
          "end": 12175,
          "left": {
            "type": "Literal",
            "start": 12165,
            "end": 12169,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12173,
            "end": 12175,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12180,
          "end": 12181,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12183,
        "end": 12265,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12188,
            "end": 12262,
            "argument": {
              "type": "NewExpression",
              "start": 12194,
              "end": 12261,
              "callee": {
                "type": "Identifier",
                "start": 12198,
                "end": 12210,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12211,
                  "end": 12260,
                  "left": {
                    "type": "Literal",
                    "start": 12211,
                    "end": 12245,
                    "value": "#619: 1023 >> 19 === 0. Actual: ",
                    "raw": "'#619: 1023 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12248,
                    "end": 12260,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12249,
                      "end": 12259,
                      "left": {
                        "type": "Literal",
                        "start": 12249,
                        "end": 12253,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12257,
                        "end": 12259,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12269,
      "end": 12373,
      "test": {
        "type": "BinaryExpression",
        "start": 12273,
        "end": 12289,
        "left": {
          "type": "BinaryExpression",
          "start": 12273,
          "end": 12283,
          "left": {
            "type": "Literal",
            "start": 12273,
            "end": 12277,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12281,
            "end": 12283,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12288,
          "end": 12289,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12291,
        "end": 12373,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12296,
            "end": 12370,
            "argument": {
              "type": "NewExpression",
              "start": 12302,
              "end": 12369,
              "callee": {
                "type": "Identifier",
                "start": 12306,
                "end": 12318,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12319,
                  "end": 12368,
                  "left": {
                    "type": "Literal",
                    "start": 12319,
                    "end": 12353,
                    "value": "#620: 2047 >> 19 === 0. Actual: ",
                    "raw": "'#620: 2047 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12356,
                    "end": 12368,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12357,
                      "end": 12367,
                      "left": {
                        "type": "Literal",
                        "start": 12357,
                        "end": 12361,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12365,
                        "end": 12367,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12377,
      "end": 12481,
      "test": {
        "type": "BinaryExpression",
        "start": 12381,
        "end": 12397,
        "left": {
          "type": "BinaryExpression",
          "start": 12381,
          "end": 12391,
          "left": {
            "type": "Literal",
            "start": 12381,
            "end": 12385,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12389,
            "end": 12391,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12396,
          "end": 12397,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12399,
        "end": 12481,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12404,
            "end": 12478,
            "argument": {
              "type": "NewExpression",
              "start": 12410,
              "end": 12477,
              "callee": {
                "type": "Identifier",
                "start": 12414,
                "end": 12426,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12427,
                  "end": 12476,
                  "left": {
                    "type": "Literal",
                    "start": 12427,
                    "end": 12461,
                    "value": "#621: 4095 >> 19 === 0. Actual: ",
                    "raw": "'#621: 4095 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12464,
                    "end": 12476,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12465,
                      "end": 12475,
                      "left": {
                        "type": "Literal",
                        "start": 12465,
                        "end": 12469,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12473,
                        "end": 12475,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12485,
      "end": 12589,
      "test": {
        "type": "BinaryExpression",
        "start": 12489,
        "end": 12505,
        "left": {
          "type": "BinaryExpression",
          "start": 12489,
          "end": 12499,
          "left": {
            "type": "Literal",
            "start": 12489,
            "end": 12493,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12497,
            "end": 12499,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12504,
          "end": 12505,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12507,
        "end": 12589,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12512,
            "end": 12586,
            "argument": {
              "type": "NewExpression",
              "start": 12518,
              "end": 12585,
              "callee": {
                "type": "Identifier",
                "start": 12522,
                "end": 12534,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12535,
                  "end": 12584,
                  "left": {
                    "type": "Literal",
                    "start": 12535,
                    "end": 12569,
                    "value": "#622: 8191 >> 19 === 0. Actual: ",
                    "raw": "'#622: 8191 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12572,
                    "end": 12584,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12573,
                      "end": 12583,
                      "left": {
                        "type": "Literal",
                        "start": 12573,
                        "end": 12577,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12581,
                        "end": 12583,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12593,
      "end": 12700,
      "test": {
        "type": "BinaryExpression",
        "start": 12597,
        "end": 12614,
        "left": {
          "type": "BinaryExpression",
          "start": 12597,
          "end": 12608,
          "left": {
            "type": "Literal",
            "start": 12597,
            "end": 12602,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12606,
            "end": 12608,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12613,
          "end": 12614,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12616,
        "end": 12700,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12621,
            "end": 12697,
            "argument": {
              "type": "NewExpression",
              "start": 12627,
              "end": 12696,
              "callee": {
                "type": "Identifier",
                "start": 12631,
                "end": 12643,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12644,
                  "end": 12695,
                  "left": {
                    "type": "Literal",
                    "start": 12644,
                    "end": 12679,
                    "value": "#623: 16383 >> 19 === 0. Actual: ",
                    "raw": "'#623: 16383 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12682,
                    "end": 12695,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12683,
                      "end": 12694,
                      "left": {
                        "type": "Literal",
                        "start": 12683,
                        "end": 12688,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12692,
                        "end": 12694,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12704,
      "end": 12811,
      "test": {
        "type": "BinaryExpression",
        "start": 12708,
        "end": 12725,
        "left": {
          "type": "BinaryExpression",
          "start": 12708,
          "end": 12719,
          "left": {
            "type": "Literal",
            "start": 12708,
            "end": 12713,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12717,
            "end": 12719,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12724,
          "end": 12725,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12727,
        "end": 12811,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12732,
            "end": 12808,
            "argument": {
              "type": "NewExpression",
              "start": 12738,
              "end": 12807,
              "callee": {
                "type": "Identifier",
                "start": 12742,
                "end": 12754,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12755,
                  "end": 12806,
                  "left": {
                    "type": "Literal",
                    "start": 12755,
                    "end": 12790,
                    "value": "#624: 32767 >> 19 === 0. Actual: ",
                    "raw": "'#624: 32767 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12793,
                    "end": 12806,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12794,
                      "end": 12805,
                      "left": {
                        "type": "Literal",
                        "start": 12794,
                        "end": 12799,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12803,
                        "end": 12805,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12815,
      "end": 12922,
      "test": {
        "type": "BinaryExpression",
        "start": 12819,
        "end": 12836,
        "left": {
          "type": "BinaryExpression",
          "start": 12819,
          "end": 12830,
          "left": {
            "type": "Literal",
            "start": 12819,
            "end": 12824,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12828,
            "end": 12830,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12835,
          "end": 12836,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12838,
        "end": 12922,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12843,
            "end": 12919,
            "argument": {
              "type": "NewExpression",
              "start": 12849,
              "end": 12918,
              "callee": {
                "type": "Identifier",
                "start": 12853,
                "end": 12865,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12866,
                  "end": 12917,
                  "left": {
                    "type": "Literal",
                    "start": 12866,
                    "end": 12901,
                    "value": "#625: 65535 >> 19 === 0. Actual: ",
                    "raw": "'#625: 65535 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 12904,
                    "end": 12917,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 12905,
                      "end": 12916,
                      "left": {
                        "type": "Literal",
                        "start": 12905,
                        "end": 12910,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 12914,
                        "end": 12916,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 12926,
      "end": 13036,
      "test": {
        "type": "BinaryExpression",
        "start": 12930,
        "end": 12948,
        "left": {
          "type": "BinaryExpression",
          "start": 12930,
          "end": 12942,
          "left": {
            "type": "Literal",
            "start": 12930,
            "end": 12936,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 12940,
            "end": 12942,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 12947,
          "end": 12948,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 12950,
        "end": 13036,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 12955,
            "end": 13033,
            "argument": {
              "type": "NewExpression",
              "start": 12961,
              "end": 13032,
              "callee": {
                "type": "Identifier",
                "start": 12965,
                "end": 12977,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 12978,
                  "end": 13031,
                  "left": {
                    "type": "Literal",
                    "start": 12978,
                    "end": 13014,
                    "value": "#626: 131071 >> 19 === 0. Actual: ",
                    "raw": "'#626: 131071 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13017,
                    "end": 13031,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13018,
                      "end": 13030,
                      "left": {
                        "type": "Literal",
                        "start": 13018,
                        "end": 13024,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13028,
                        "end": 13030,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13040,
      "end": 13150,
      "test": {
        "type": "BinaryExpression",
        "start": 13044,
        "end": 13062,
        "left": {
          "type": "BinaryExpression",
          "start": 13044,
          "end": 13056,
          "left": {
            "type": "Literal",
            "start": 13044,
            "end": 13050,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13054,
            "end": 13056,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13061,
          "end": 13062,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13064,
        "end": 13150,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13069,
            "end": 13147,
            "argument": {
              "type": "NewExpression",
              "start": 13075,
              "end": 13146,
              "callee": {
                "type": "Identifier",
                "start": 13079,
                "end": 13091,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13092,
                  "end": 13145,
                  "left": {
                    "type": "Literal",
                    "start": 13092,
                    "end": 13128,
                    "value": "#627: 262143 >> 19 === 0. Actual: ",
                    "raw": "'#627: 262143 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13131,
                    "end": 13145,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13132,
                      "end": 13144,
                      "left": {
                        "type": "Literal",
                        "start": 13132,
                        "end": 13138,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13142,
                        "end": 13144,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13154,
      "end": 13264,
      "test": {
        "type": "BinaryExpression",
        "start": 13158,
        "end": 13176,
        "left": {
          "type": "BinaryExpression",
          "start": 13158,
          "end": 13170,
          "left": {
            "type": "Literal",
            "start": 13158,
            "end": 13164,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13168,
            "end": 13170,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13175,
          "end": 13176,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13178,
        "end": 13264,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13183,
            "end": 13261,
            "argument": {
              "type": "NewExpression",
              "start": 13189,
              "end": 13260,
              "callee": {
                "type": "Identifier",
                "start": 13193,
                "end": 13205,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13206,
                  "end": 13259,
                  "left": {
                    "type": "Literal",
                    "start": 13206,
                    "end": 13242,
                    "value": "#628: 524287 >> 19 === 0. Actual: ",
                    "raw": "'#628: 524287 >> 19 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13245,
                    "end": 13259,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13246,
                      "end": 13258,
                      "left": {
                        "type": "Literal",
                        "start": 13246,
                        "end": 13252,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13256,
                        "end": 13258,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13268,
      "end": 13381,
      "test": {
        "type": "BinaryExpression",
        "start": 13272,
        "end": 13291,
        "left": {
          "type": "BinaryExpression",
          "start": 13272,
          "end": 13285,
          "left": {
            "type": "Literal",
            "start": 13272,
            "end": 13279,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13283,
            "end": 13285,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13290,
          "end": 13291,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13293,
        "end": 13381,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13298,
            "end": 13378,
            "argument": {
              "type": "NewExpression",
              "start": 13304,
              "end": 13377,
              "callee": {
                "type": "Identifier",
                "start": 13308,
                "end": 13320,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13321,
                  "end": 13376,
                  "left": {
                    "type": "Literal",
                    "start": 13321,
                    "end": 13358,
                    "value": "#629: 1048575 >> 19 === 1. Actual: ",
                    "raw": "'#629: 1048575 >> 19 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13361,
                    "end": 13376,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13362,
                      "end": 13375,
                      "left": {
                        "type": "Literal",
                        "start": 13362,
                        "end": 13369,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13373,
                        "end": 13375,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13385,
      "end": 13498,
      "test": {
        "type": "BinaryExpression",
        "start": 13389,
        "end": 13408,
        "left": {
          "type": "BinaryExpression",
          "start": 13389,
          "end": 13402,
          "left": {
            "type": "Literal",
            "start": 13389,
            "end": 13396,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13400,
            "end": 13402,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13407,
          "end": 13408,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13410,
        "end": 13498,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13415,
            "end": 13495,
            "argument": {
              "type": "NewExpression",
              "start": 13421,
              "end": 13494,
              "callee": {
                "type": "Identifier",
                "start": 13425,
                "end": 13437,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13438,
                  "end": 13493,
                  "left": {
                    "type": "Literal",
                    "start": 13438,
                    "end": 13475,
                    "value": "#630: 2097151 >> 19 === 3. Actual: ",
                    "raw": "'#630: 2097151 >> 19 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13478,
                    "end": 13493,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13479,
                      "end": 13492,
                      "left": {
                        "type": "Literal",
                        "start": 13479,
                        "end": 13486,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13490,
                        "end": 13492,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13502,
      "end": 13615,
      "test": {
        "type": "BinaryExpression",
        "start": 13506,
        "end": 13525,
        "left": {
          "type": "BinaryExpression",
          "start": 13506,
          "end": 13519,
          "left": {
            "type": "Literal",
            "start": 13506,
            "end": 13513,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13517,
            "end": 13519,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13524,
          "end": 13525,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13527,
        "end": 13615,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13532,
            "end": 13612,
            "argument": {
              "type": "NewExpression",
              "start": 13538,
              "end": 13611,
              "callee": {
                "type": "Identifier",
                "start": 13542,
                "end": 13554,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13555,
                  "end": 13610,
                  "left": {
                    "type": "Literal",
                    "start": 13555,
                    "end": 13592,
                    "value": "#631: 4194303 >> 19 === 7. Actual: ",
                    "raw": "'#631: 4194303 >> 19 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13595,
                    "end": 13610,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13596,
                      "end": 13609,
                      "left": {
                        "type": "Literal",
                        "start": 13596,
                        "end": 13603,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13607,
                        "end": 13609,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13619,
      "end": 13734,
      "test": {
        "type": "BinaryExpression",
        "start": 13623,
        "end": 13643,
        "left": {
          "type": "BinaryExpression",
          "start": 13623,
          "end": 13636,
          "left": {
            "type": "Literal",
            "start": 13623,
            "end": 13630,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13634,
            "end": 13636,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13641,
          "end": 13643,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13645,
        "end": 13734,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13650,
            "end": 13731,
            "argument": {
              "type": "NewExpression",
              "start": 13656,
              "end": 13730,
              "callee": {
                "type": "Identifier",
                "start": 13660,
                "end": 13672,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13673,
                  "end": 13729,
                  "left": {
                    "type": "Literal",
                    "start": 13673,
                    "end": 13711,
                    "value": "#632: 8388607 >> 19 === 15. Actual: ",
                    "raw": "'#632: 8388607 >> 19 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13714,
                    "end": 13729,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13715,
                      "end": 13728,
                      "left": {
                        "type": "Literal",
                        "start": 13715,
                        "end": 13722,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13726,
                        "end": 13728,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13738,
      "end": 13856,
      "test": {
        "type": "BinaryExpression",
        "start": 13742,
        "end": 13763,
        "left": {
          "type": "BinaryExpression",
          "start": 13742,
          "end": 13756,
          "left": {
            "type": "Literal",
            "start": 13742,
            "end": 13750,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13754,
            "end": 13756,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13761,
          "end": 13763,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13765,
        "end": 13856,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13770,
            "end": 13853,
            "argument": {
              "type": "NewExpression",
              "start": 13776,
              "end": 13852,
              "callee": {
                "type": "Identifier",
                "start": 13780,
                "end": 13792,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13793,
                  "end": 13851,
                  "left": {
                    "type": "Literal",
                    "start": 13793,
                    "end": 13832,
                    "value": "#633: 16777215 >> 19 === 31. Actual: ",
                    "raw": "'#633: 16777215 >> 19 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13835,
                    "end": 13851,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13836,
                      "end": 13850,
                      "left": {
                        "type": "Literal",
                        "start": 13836,
                        "end": 13844,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13848,
                        "end": 13850,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13860,
      "end": 13978,
      "test": {
        "type": "BinaryExpression",
        "start": 13864,
        "end": 13885,
        "left": {
          "type": "BinaryExpression",
          "start": 13864,
          "end": 13878,
          "left": {
            "type": "Literal",
            "start": 13864,
            "end": 13872,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13876,
            "end": 13878,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 13883,
          "end": 13885,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 13887,
        "end": 13978,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 13892,
            "end": 13975,
            "argument": {
              "type": "NewExpression",
              "start": 13898,
              "end": 13974,
              "callee": {
                "type": "Identifier",
                "start": 13902,
                "end": 13914,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 13915,
                  "end": 13973,
                  "left": {
                    "type": "Literal",
                    "start": 13915,
                    "end": 13954,
                    "value": "#634: 33554431 >> 19 === 63. Actual: ",
                    "raw": "'#634: 33554431 >> 19 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 13957,
                    "end": 13973,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 13958,
                      "end": 13972,
                      "left": {
                        "type": "Literal",
                        "start": 13958,
                        "end": 13966,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 13970,
                        "end": 13972,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 13982,
      "end": 14102,
      "test": {
        "type": "BinaryExpression",
        "start": 13986,
        "end": 14008,
        "left": {
          "type": "BinaryExpression",
          "start": 13986,
          "end": 14000,
          "left": {
            "type": "Literal",
            "start": 13986,
            "end": 13994,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 13998,
            "end": 14000,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14005,
          "end": 14008,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14010,
        "end": 14102,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14015,
            "end": 14099,
            "argument": {
              "type": "NewExpression",
              "start": 14021,
              "end": 14098,
              "callee": {
                "type": "Identifier",
                "start": 14025,
                "end": 14037,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14038,
                  "end": 14097,
                  "left": {
                    "type": "Literal",
                    "start": 14038,
                    "end": 14078,
                    "value": "#635: 67108863 >> 19 === 127. Actual: ",
                    "raw": "'#635: 67108863 >> 19 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14081,
                    "end": 14097,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14082,
                      "end": 14096,
                      "left": {
                        "type": "Literal",
                        "start": 14082,
                        "end": 14090,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14094,
                        "end": 14096,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14106,
      "end": 14229,
      "test": {
        "type": "BinaryExpression",
        "start": 14110,
        "end": 14133,
        "left": {
          "type": "BinaryExpression",
          "start": 14110,
          "end": 14125,
          "left": {
            "type": "Literal",
            "start": 14110,
            "end": 14119,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14123,
            "end": 14125,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14130,
          "end": 14133,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14135,
        "end": 14229,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14140,
            "end": 14226,
            "argument": {
              "type": "NewExpression",
              "start": 14146,
              "end": 14225,
              "callee": {
                "type": "Identifier",
                "start": 14150,
                "end": 14162,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14163,
                  "end": 14224,
                  "left": {
                    "type": "Literal",
                    "start": 14163,
                    "end": 14204,
                    "value": "#636: 134217727 >> 19 === 255. Actual: ",
                    "raw": "'#636: 134217727 >> 19 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14207,
                    "end": 14224,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14208,
                      "end": 14223,
                      "left": {
                        "type": "Literal",
                        "start": 14208,
                        "end": 14217,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14221,
                        "end": 14223,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14233,
      "end": 14356,
      "test": {
        "type": "BinaryExpression",
        "start": 14237,
        "end": 14260,
        "left": {
          "type": "BinaryExpression",
          "start": 14237,
          "end": 14252,
          "left": {
            "type": "Literal",
            "start": 14237,
            "end": 14246,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14250,
            "end": 14252,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14257,
          "end": 14260,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14262,
        "end": 14356,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14267,
            "end": 14353,
            "argument": {
              "type": "NewExpression",
              "start": 14273,
              "end": 14352,
              "callee": {
                "type": "Identifier",
                "start": 14277,
                "end": 14289,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14290,
                  "end": 14351,
                  "left": {
                    "type": "Literal",
                    "start": 14290,
                    "end": 14331,
                    "value": "#637: 268435455 >> 19 === 511. Actual: ",
                    "raw": "'#637: 268435455 >> 19 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14334,
                    "end": 14351,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14335,
                      "end": 14350,
                      "left": {
                        "type": "Literal",
                        "start": 14335,
                        "end": 14344,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14348,
                        "end": 14350,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14360,
      "end": 14485,
      "test": {
        "type": "BinaryExpression",
        "start": 14364,
        "end": 14388,
        "left": {
          "type": "BinaryExpression",
          "start": 14364,
          "end": 14379,
          "left": {
            "type": "Literal",
            "start": 14364,
            "end": 14373,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14377,
            "end": 14379,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14384,
          "end": 14388,
          "value": 1023,
          "raw": "1023",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14390,
        "end": 14485,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14395,
            "end": 14482,
            "argument": {
              "type": "NewExpression",
              "start": 14401,
              "end": 14481,
              "callee": {
                "type": "Identifier",
                "start": 14405,
                "end": 14417,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14418,
                  "end": 14480,
                  "left": {
                    "type": "Literal",
                    "start": 14418,
                    "end": 14460,
                    "value": "#638: 536870911 >> 19 === 1023. Actual: ",
                    "raw": "'#638: 536870911 >> 19 === 1023. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14463,
                    "end": 14480,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14464,
                      "end": 14479,
                      "left": {
                        "type": "Literal",
                        "start": 14464,
                        "end": 14473,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14477,
                        "end": 14479,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14489,
      "end": 14617,
      "test": {
        "type": "BinaryExpression",
        "start": 14493,
        "end": 14518,
        "left": {
          "type": "BinaryExpression",
          "start": 14493,
          "end": 14509,
          "left": {
            "type": "Literal",
            "start": 14493,
            "end": 14503,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14507,
            "end": 14509,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14514,
          "end": 14518,
          "value": 2047,
          "raw": "2047",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14520,
        "end": 14617,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14525,
            "end": 14614,
            "argument": {
              "type": "NewExpression",
              "start": 14531,
              "end": 14613,
              "callee": {
                "type": "Identifier",
                "start": 14535,
                "end": 14547,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14548,
                  "end": 14612,
                  "left": {
                    "type": "Literal",
                    "start": 14548,
                    "end": 14591,
                    "value": "#639: 1073741823 >> 19 === 2047. Actual: ",
                    "raw": "'#639: 1073741823 >> 19 === 2047. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14594,
                    "end": 14612,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14595,
                      "end": 14611,
                      "left": {
                        "type": "Literal",
                        "start": 14595,
                        "end": 14605,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14609,
                        "end": 14611,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14621,
      "end": 14749,
      "test": {
        "type": "BinaryExpression",
        "start": 14625,
        "end": 14650,
        "left": {
          "type": "BinaryExpression",
          "start": 14625,
          "end": 14641,
          "left": {
            "type": "Literal",
            "start": 14625,
            "end": 14635,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14639,
            "end": 14641,
            "value": 19,
            "raw": "19",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14646,
          "end": 14650,
          "value": 4095,
          "raw": "4095",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14652,
        "end": 14749,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14657,
            "end": 14746,
            "argument": {
              "type": "NewExpression",
              "start": 14663,
              "end": 14745,
              "callee": {
                "type": "Identifier",
                "start": 14667,
                "end": 14679,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14680,
                  "end": 14744,
                  "left": {
                    "type": "Literal",
                    "start": 14680,
                    "end": 14723,
                    "value": "#640: 2147483647 >> 19 === 4095. Actual: ",
                    "raw": "'#640: 2147483647 >> 19 === 4095. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14726,
                    "end": 14744,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14727,
                      "end": 14743,
                      "left": {
                        "type": "Literal",
                        "start": 14727,
                        "end": 14737,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14741,
                        "end": 14743,
                        "value": 19,
                        "raw": "19",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14753,
      "end": 14848,
      "test": {
        "type": "BinaryExpression",
        "start": 14757,
        "end": 14770,
        "left": {
          "type": "BinaryExpression",
          "start": 14757,
          "end": 14764,
          "left": {
            "type": "Literal",
            "start": 14757,
            "end": 14758,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14762,
            "end": 14764,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14769,
          "end": 14770,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14772,
        "end": 14848,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14777,
            "end": 14845,
            "argument": {
              "type": "NewExpression",
              "start": 14783,
              "end": 14844,
              "callee": {
                "type": "Identifier",
                "start": 14787,
                "end": 14799,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14800,
                  "end": 14843,
                  "left": {
                    "type": "Literal",
                    "start": 14800,
                    "end": 14831,
                    "value": "#641: 0 >> 20 === 0. Actual: ",
                    "raw": "'#641: 0 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14834,
                    "end": 14843,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14835,
                      "end": 14842,
                      "left": {
                        "type": "Literal",
                        "start": 14835,
                        "end": 14836,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14840,
                        "end": 14842,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14852,
      "end": 14947,
      "test": {
        "type": "BinaryExpression",
        "start": 14856,
        "end": 14869,
        "left": {
          "type": "BinaryExpression",
          "start": 14856,
          "end": 14863,
          "left": {
            "type": "Literal",
            "start": 14856,
            "end": 14857,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14861,
            "end": 14863,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14868,
          "end": 14869,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14871,
        "end": 14947,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14876,
            "end": 14944,
            "argument": {
              "type": "NewExpression",
              "start": 14882,
              "end": 14943,
              "callee": {
                "type": "Identifier",
                "start": 14886,
                "end": 14898,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14899,
                  "end": 14942,
                  "left": {
                    "type": "Literal",
                    "start": 14899,
                    "end": 14930,
                    "value": "#642: 1 >> 20 === 0. Actual: ",
                    "raw": "'#642: 1 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 14933,
                    "end": 14942,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 14934,
                      "end": 14941,
                      "left": {
                        "type": "Literal",
                        "start": 14934,
                        "end": 14935,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 14939,
                        "end": 14941,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 14951,
      "end": 15046,
      "test": {
        "type": "BinaryExpression",
        "start": 14955,
        "end": 14968,
        "left": {
          "type": "BinaryExpression",
          "start": 14955,
          "end": 14962,
          "left": {
            "type": "Literal",
            "start": 14955,
            "end": 14956,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 14960,
            "end": 14962,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 14967,
          "end": 14968,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 14970,
        "end": 15046,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 14975,
            "end": 15043,
            "argument": {
              "type": "NewExpression",
              "start": 14981,
              "end": 15042,
              "callee": {
                "type": "Identifier",
                "start": 14985,
                "end": 14997,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 14998,
                  "end": 15041,
                  "left": {
                    "type": "Literal",
                    "start": 14998,
                    "end": 15029,
                    "value": "#643: 3 >> 20 === 0. Actual: ",
                    "raw": "'#643: 3 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15032,
                    "end": 15041,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15033,
                      "end": 15040,
                      "left": {
                        "type": "Literal",
                        "start": 15033,
                        "end": 15034,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15038,
                        "end": 15040,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15050,
      "end": 15145,
      "test": {
        "type": "BinaryExpression",
        "start": 15054,
        "end": 15067,
        "left": {
          "type": "BinaryExpression",
          "start": 15054,
          "end": 15061,
          "left": {
            "type": "Literal",
            "start": 15054,
            "end": 15055,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15059,
            "end": 15061,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15066,
          "end": 15067,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15069,
        "end": 15145,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15074,
            "end": 15142,
            "argument": {
              "type": "NewExpression",
              "start": 15080,
              "end": 15141,
              "callee": {
                "type": "Identifier",
                "start": 15084,
                "end": 15096,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15097,
                  "end": 15140,
                  "left": {
                    "type": "Literal",
                    "start": 15097,
                    "end": 15128,
                    "value": "#644: 7 >> 20 === 0. Actual: ",
                    "raw": "'#644: 7 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15131,
                    "end": 15140,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15132,
                      "end": 15139,
                      "left": {
                        "type": "Literal",
                        "start": 15132,
                        "end": 15133,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15137,
                        "end": 15139,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15149,
      "end": 15247,
      "test": {
        "type": "BinaryExpression",
        "start": 15153,
        "end": 15167,
        "left": {
          "type": "BinaryExpression",
          "start": 15153,
          "end": 15161,
          "left": {
            "type": "Literal",
            "start": 15153,
            "end": 15155,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15159,
            "end": 15161,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15166,
          "end": 15167,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15169,
        "end": 15247,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15174,
            "end": 15244,
            "argument": {
              "type": "NewExpression",
              "start": 15180,
              "end": 15243,
              "callee": {
                "type": "Identifier",
                "start": 15184,
                "end": 15196,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15197,
                  "end": 15242,
                  "left": {
                    "type": "Literal",
                    "start": 15197,
                    "end": 15229,
                    "value": "#645: 15 >> 20 === 0. Actual: ",
                    "raw": "'#645: 15 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15232,
                    "end": 15242,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15233,
                      "end": 15241,
                      "left": {
                        "type": "Literal",
                        "start": 15233,
                        "end": 15235,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15239,
                        "end": 15241,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15251,
      "end": 15349,
      "test": {
        "type": "BinaryExpression",
        "start": 15255,
        "end": 15269,
        "left": {
          "type": "BinaryExpression",
          "start": 15255,
          "end": 15263,
          "left": {
            "type": "Literal",
            "start": 15255,
            "end": 15257,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15261,
            "end": 15263,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15268,
          "end": 15269,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15271,
        "end": 15349,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15276,
            "end": 15346,
            "argument": {
              "type": "NewExpression",
              "start": 15282,
              "end": 15345,
              "callee": {
                "type": "Identifier",
                "start": 15286,
                "end": 15298,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15299,
                  "end": 15344,
                  "left": {
                    "type": "Literal",
                    "start": 15299,
                    "end": 15331,
                    "value": "#646: 31 >> 20 === 0. Actual: ",
                    "raw": "'#646: 31 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15334,
                    "end": 15344,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15335,
                      "end": 15343,
                      "left": {
                        "type": "Literal",
                        "start": 15335,
                        "end": 15337,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15341,
                        "end": 15343,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15353,
      "end": 15451,
      "test": {
        "type": "BinaryExpression",
        "start": 15357,
        "end": 15371,
        "left": {
          "type": "BinaryExpression",
          "start": 15357,
          "end": 15365,
          "left": {
            "type": "Literal",
            "start": 15357,
            "end": 15359,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15363,
            "end": 15365,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15370,
          "end": 15371,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15373,
        "end": 15451,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15378,
            "end": 15448,
            "argument": {
              "type": "NewExpression",
              "start": 15384,
              "end": 15447,
              "callee": {
                "type": "Identifier",
                "start": 15388,
                "end": 15400,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15401,
                  "end": 15446,
                  "left": {
                    "type": "Literal",
                    "start": 15401,
                    "end": 15433,
                    "value": "#647: 63 >> 20 === 0. Actual: ",
                    "raw": "'#647: 63 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15436,
                    "end": 15446,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15437,
                      "end": 15445,
                      "left": {
                        "type": "Literal",
                        "start": 15437,
                        "end": 15439,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15443,
                        "end": 15445,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15455,
      "end": 15556,
      "test": {
        "type": "BinaryExpression",
        "start": 15459,
        "end": 15474,
        "left": {
          "type": "BinaryExpression",
          "start": 15459,
          "end": 15468,
          "left": {
            "type": "Literal",
            "start": 15459,
            "end": 15462,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15466,
            "end": 15468,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15473,
          "end": 15474,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15476,
        "end": 15556,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15481,
            "end": 15553,
            "argument": {
              "type": "NewExpression",
              "start": 15487,
              "end": 15552,
              "callee": {
                "type": "Identifier",
                "start": 15491,
                "end": 15503,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15504,
                  "end": 15551,
                  "left": {
                    "type": "Literal",
                    "start": 15504,
                    "end": 15537,
                    "value": "#648: 127 >> 20 === 0. Actual: ",
                    "raw": "'#648: 127 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15540,
                    "end": 15551,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15541,
                      "end": 15550,
                      "left": {
                        "type": "Literal",
                        "start": 15541,
                        "end": 15544,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15548,
                        "end": 15550,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15560,
      "end": 15661,
      "test": {
        "type": "BinaryExpression",
        "start": 15564,
        "end": 15579,
        "left": {
          "type": "BinaryExpression",
          "start": 15564,
          "end": 15573,
          "left": {
            "type": "Literal",
            "start": 15564,
            "end": 15567,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15571,
            "end": 15573,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15578,
          "end": 15579,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15581,
        "end": 15661,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15586,
            "end": 15658,
            "argument": {
              "type": "NewExpression",
              "start": 15592,
              "end": 15657,
              "callee": {
                "type": "Identifier",
                "start": 15596,
                "end": 15608,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15609,
                  "end": 15656,
                  "left": {
                    "type": "Literal",
                    "start": 15609,
                    "end": 15642,
                    "value": "#649: 255 >> 20 === 0. Actual: ",
                    "raw": "'#649: 255 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15645,
                    "end": 15656,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15646,
                      "end": 15655,
                      "left": {
                        "type": "Literal",
                        "start": 15646,
                        "end": 15649,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15653,
                        "end": 15655,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15665,
      "end": 15766,
      "test": {
        "type": "BinaryExpression",
        "start": 15669,
        "end": 15684,
        "left": {
          "type": "BinaryExpression",
          "start": 15669,
          "end": 15678,
          "left": {
            "type": "Literal",
            "start": 15669,
            "end": 15672,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15676,
            "end": 15678,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15683,
          "end": 15684,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15686,
        "end": 15766,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15691,
            "end": 15763,
            "argument": {
              "type": "NewExpression",
              "start": 15697,
              "end": 15762,
              "callee": {
                "type": "Identifier",
                "start": 15701,
                "end": 15713,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15714,
                  "end": 15761,
                  "left": {
                    "type": "Literal",
                    "start": 15714,
                    "end": 15747,
                    "value": "#650: 511 >> 20 === 0. Actual: ",
                    "raw": "'#650: 511 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15750,
                    "end": 15761,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15751,
                      "end": 15760,
                      "left": {
                        "type": "Literal",
                        "start": 15751,
                        "end": 15754,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15758,
                        "end": 15760,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15770,
      "end": 15874,
      "test": {
        "type": "BinaryExpression",
        "start": 15774,
        "end": 15790,
        "left": {
          "type": "BinaryExpression",
          "start": 15774,
          "end": 15784,
          "left": {
            "type": "Literal",
            "start": 15774,
            "end": 15778,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15782,
            "end": 15784,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15789,
          "end": 15790,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15792,
        "end": 15874,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15797,
            "end": 15871,
            "argument": {
              "type": "NewExpression",
              "start": 15803,
              "end": 15870,
              "callee": {
                "type": "Identifier",
                "start": 15807,
                "end": 15819,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15820,
                  "end": 15869,
                  "left": {
                    "type": "Literal",
                    "start": 15820,
                    "end": 15854,
                    "value": "#651: 1023 >> 20 === 0. Actual: ",
                    "raw": "'#651: 1023 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15857,
                    "end": 15869,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15858,
                      "end": 15868,
                      "left": {
                        "type": "Literal",
                        "start": 15858,
                        "end": 15862,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15866,
                        "end": 15868,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15878,
      "end": 15982,
      "test": {
        "type": "BinaryExpression",
        "start": 15882,
        "end": 15898,
        "left": {
          "type": "BinaryExpression",
          "start": 15882,
          "end": 15892,
          "left": {
            "type": "Literal",
            "start": 15882,
            "end": 15886,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15890,
            "end": 15892,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 15897,
          "end": 15898,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 15900,
        "end": 15982,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 15905,
            "end": 15979,
            "argument": {
              "type": "NewExpression",
              "start": 15911,
              "end": 15978,
              "callee": {
                "type": "Identifier",
                "start": 15915,
                "end": 15927,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 15928,
                  "end": 15977,
                  "left": {
                    "type": "Literal",
                    "start": 15928,
                    "end": 15962,
                    "value": "#652: 2047 >> 20 === 0. Actual: ",
                    "raw": "'#652: 2047 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 15965,
                    "end": 15977,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 15966,
                      "end": 15976,
                      "left": {
                        "type": "Literal",
                        "start": 15966,
                        "end": 15970,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 15974,
                        "end": 15976,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 15986,
      "end": 16090,
      "test": {
        "type": "BinaryExpression",
        "start": 15990,
        "end": 16006,
        "left": {
          "type": "BinaryExpression",
          "start": 15990,
          "end": 16000,
          "left": {
            "type": "Literal",
            "start": 15990,
            "end": 15994,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 15998,
            "end": 16000,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16005,
          "end": 16006,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16008,
        "end": 16090,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16013,
            "end": 16087,
            "argument": {
              "type": "NewExpression",
              "start": 16019,
              "end": 16086,
              "callee": {
                "type": "Identifier",
                "start": 16023,
                "end": 16035,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16036,
                  "end": 16085,
                  "left": {
                    "type": "Literal",
                    "start": 16036,
                    "end": 16070,
                    "value": "#653: 4095 >> 20 === 0. Actual: ",
                    "raw": "'#653: 4095 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16073,
                    "end": 16085,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16074,
                      "end": 16084,
                      "left": {
                        "type": "Literal",
                        "start": 16074,
                        "end": 16078,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16082,
                        "end": 16084,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16094,
      "end": 16198,
      "test": {
        "type": "BinaryExpression",
        "start": 16098,
        "end": 16114,
        "left": {
          "type": "BinaryExpression",
          "start": 16098,
          "end": 16108,
          "left": {
            "type": "Literal",
            "start": 16098,
            "end": 16102,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16106,
            "end": 16108,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16113,
          "end": 16114,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16116,
        "end": 16198,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16121,
            "end": 16195,
            "argument": {
              "type": "NewExpression",
              "start": 16127,
              "end": 16194,
              "callee": {
                "type": "Identifier",
                "start": 16131,
                "end": 16143,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16144,
                  "end": 16193,
                  "left": {
                    "type": "Literal",
                    "start": 16144,
                    "end": 16178,
                    "value": "#654: 8191 >> 20 === 0. Actual: ",
                    "raw": "'#654: 8191 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16181,
                    "end": 16193,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16182,
                      "end": 16192,
                      "left": {
                        "type": "Literal",
                        "start": 16182,
                        "end": 16186,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16190,
                        "end": 16192,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16202,
      "end": 16309,
      "test": {
        "type": "BinaryExpression",
        "start": 16206,
        "end": 16223,
        "left": {
          "type": "BinaryExpression",
          "start": 16206,
          "end": 16217,
          "left": {
            "type": "Literal",
            "start": 16206,
            "end": 16211,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16215,
            "end": 16217,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16222,
          "end": 16223,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16225,
        "end": 16309,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16230,
            "end": 16306,
            "argument": {
              "type": "NewExpression",
              "start": 16236,
              "end": 16305,
              "callee": {
                "type": "Identifier",
                "start": 16240,
                "end": 16252,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16253,
                  "end": 16304,
                  "left": {
                    "type": "Literal",
                    "start": 16253,
                    "end": 16288,
                    "value": "#655: 16383 >> 20 === 0. Actual: ",
                    "raw": "'#655: 16383 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16291,
                    "end": 16304,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16292,
                      "end": 16303,
                      "left": {
                        "type": "Literal",
                        "start": 16292,
                        "end": 16297,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16301,
                        "end": 16303,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16313,
      "end": 16420,
      "test": {
        "type": "BinaryExpression",
        "start": 16317,
        "end": 16334,
        "left": {
          "type": "BinaryExpression",
          "start": 16317,
          "end": 16328,
          "left": {
            "type": "Literal",
            "start": 16317,
            "end": 16322,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16326,
            "end": 16328,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16333,
          "end": 16334,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16336,
        "end": 16420,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16341,
            "end": 16417,
            "argument": {
              "type": "NewExpression",
              "start": 16347,
              "end": 16416,
              "callee": {
                "type": "Identifier",
                "start": 16351,
                "end": 16363,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16364,
                  "end": 16415,
                  "left": {
                    "type": "Literal",
                    "start": 16364,
                    "end": 16399,
                    "value": "#656: 32767 >> 20 === 0. Actual: ",
                    "raw": "'#656: 32767 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16402,
                    "end": 16415,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16403,
                      "end": 16414,
                      "left": {
                        "type": "Literal",
                        "start": 16403,
                        "end": 16408,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16412,
                        "end": 16414,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16424,
      "end": 16531,
      "test": {
        "type": "BinaryExpression",
        "start": 16428,
        "end": 16445,
        "left": {
          "type": "BinaryExpression",
          "start": 16428,
          "end": 16439,
          "left": {
            "type": "Literal",
            "start": 16428,
            "end": 16433,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16437,
            "end": 16439,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16444,
          "end": 16445,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16447,
        "end": 16531,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16452,
            "end": 16528,
            "argument": {
              "type": "NewExpression",
              "start": 16458,
              "end": 16527,
              "callee": {
                "type": "Identifier",
                "start": 16462,
                "end": 16474,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16475,
                  "end": 16526,
                  "left": {
                    "type": "Literal",
                    "start": 16475,
                    "end": 16510,
                    "value": "#657: 65535 >> 20 === 0. Actual: ",
                    "raw": "'#657: 65535 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16513,
                    "end": 16526,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16514,
                      "end": 16525,
                      "left": {
                        "type": "Literal",
                        "start": 16514,
                        "end": 16519,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16523,
                        "end": 16525,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16535,
      "end": 16645,
      "test": {
        "type": "BinaryExpression",
        "start": 16539,
        "end": 16557,
        "left": {
          "type": "BinaryExpression",
          "start": 16539,
          "end": 16551,
          "left": {
            "type": "Literal",
            "start": 16539,
            "end": 16545,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16549,
            "end": 16551,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16556,
          "end": 16557,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16559,
        "end": 16645,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16564,
            "end": 16642,
            "argument": {
              "type": "NewExpression",
              "start": 16570,
              "end": 16641,
              "callee": {
                "type": "Identifier",
                "start": 16574,
                "end": 16586,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16587,
                  "end": 16640,
                  "left": {
                    "type": "Literal",
                    "start": 16587,
                    "end": 16623,
                    "value": "#658: 131071 >> 20 === 0. Actual: ",
                    "raw": "'#658: 131071 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16626,
                    "end": 16640,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16627,
                      "end": 16639,
                      "left": {
                        "type": "Literal",
                        "start": 16627,
                        "end": 16633,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16637,
                        "end": 16639,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16649,
      "end": 16759,
      "test": {
        "type": "BinaryExpression",
        "start": 16653,
        "end": 16671,
        "left": {
          "type": "BinaryExpression",
          "start": 16653,
          "end": 16665,
          "left": {
            "type": "Literal",
            "start": 16653,
            "end": 16659,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16663,
            "end": 16665,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16670,
          "end": 16671,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16673,
        "end": 16759,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16678,
            "end": 16756,
            "argument": {
              "type": "NewExpression",
              "start": 16684,
              "end": 16755,
              "callee": {
                "type": "Identifier",
                "start": 16688,
                "end": 16700,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16701,
                  "end": 16754,
                  "left": {
                    "type": "Literal",
                    "start": 16701,
                    "end": 16737,
                    "value": "#659: 262143 >> 20 === 0. Actual: ",
                    "raw": "'#659: 262143 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16740,
                    "end": 16754,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16741,
                      "end": 16753,
                      "left": {
                        "type": "Literal",
                        "start": 16741,
                        "end": 16747,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16751,
                        "end": 16753,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16763,
      "end": 16873,
      "test": {
        "type": "BinaryExpression",
        "start": 16767,
        "end": 16785,
        "left": {
          "type": "BinaryExpression",
          "start": 16767,
          "end": 16779,
          "left": {
            "type": "Literal",
            "start": 16767,
            "end": 16773,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16777,
            "end": 16779,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16784,
          "end": 16785,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16787,
        "end": 16873,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16792,
            "end": 16870,
            "argument": {
              "type": "NewExpression",
              "start": 16798,
              "end": 16869,
              "callee": {
                "type": "Identifier",
                "start": 16802,
                "end": 16814,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16815,
                  "end": 16868,
                  "left": {
                    "type": "Literal",
                    "start": 16815,
                    "end": 16851,
                    "value": "#660: 524287 >> 20 === 0. Actual: ",
                    "raw": "'#660: 524287 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16854,
                    "end": 16868,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16855,
                      "end": 16867,
                      "left": {
                        "type": "Literal",
                        "start": 16855,
                        "end": 16861,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16865,
                        "end": 16867,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16877,
      "end": 16990,
      "test": {
        "type": "BinaryExpression",
        "start": 16881,
        "end": 16900,
        "left": {
          "type": "BinaryExpression",
          "start": 16881,
          "end": 16894,
          "left": {
            "type": "Literal",
            "start": 16881,
            "end": 16888,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 16892,
            "end": 16894,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 16899,
          "end": 16900,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 16902,
        "end": 16990,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 16907,
            "end": 16987,
            "argument": {
              "type": "NewExpression",
              "start": 16913,
              "end": 16986,
              "callee": {
                "type": "Identifier",
                "start": 16917,
                "end": 16929,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 16930,
                  "end": 16985,
                  "left": {
                    "type": "Literal",
                    "start": 16930,
                    "end": 16967,
                    "value": "#661: 1048575 >> 20 === 0. Actual: ",
                    "raw": "'#661: 1048575 >> 20 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 16970,
                    "end": 16985,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 16971,
                      "end": 16984,
                      "left": {
                        "type": "Literal",
                        "start": 16971,
                        "end": 16978,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 16982,
                        "end": 16984,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 16994,
      "end": 17107,
      "test": {
        "type": "BinaryExpression",
        "start": 16998,
        "end": 17017,
        "left": {
          "type": "BinaryExpression",
          "start": 16998,
          "end": 17011,
          "left": {
            "type": "Literal",
            "start": 16998,
            "end": 17005,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17009,
            "end": 17011,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17016,
          "end": 17017,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17019,
        "end": 17107,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17024,
            "end": 17104,
            "argument": {
              "type": "NewExpression",
              "start": 17030,
              "end": 17103,
              "callee": {
                "type": "Identifier",
                "start": 17034,
                "end": 17046,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17047,
                  "end": 17102,
                  "left": {
                    "type": "Literal",
                    "start": 17047,
                    "end": 17084,
                    "value": "#662: 2097151 >> 20 === 1. Actual: ",
                    "raw": "'#662: 2097151 >> 20 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17087,
                    "end": 17102,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17088,
                      "end": 17101,
                      "left": {
                        "type": "Literal",
                        "start": 17088,
                        "end": 17095,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17099,
                        "end": 17101,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17111,
      "end": 17224,
      "test": {
        "type": "BinaryExpression",
        "start": 17115,
        "end": 17134,
        "left": {
          "type": "BinaryExpression",
          "start": 17115,
          "end": 17128,
          "left": {
            "type": "Literal",
            "start": 17115,
            "end": 17122,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17126,
            "end": 17128,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17133,
          "end": 17134,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17136,
        "end": 17224,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17141,
            "end": 17221,
            "argument": {
              "type": "NewExpression",
              "start": 17147,
              "end": 17220,
              "callee": {
                "type": "Identifier",
                "start": 17151,
                "end": 17163,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17164,
                  "end": 17219,
                  "left": {
                    "type": "Literal",
                    "start": 17164,
                    "end": 17201,
                    "value": "#663: 4194303 >> 20 === 3. Actual: ",
                    "raw": "'#663: 4194303 >> 20 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17204,
                    "end": 17219,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17205,
                      "end": 17218,
                      "left": {
                        "type": "Literal",
                        "start": 17205,
                        "end": 17212,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17216,
                        "end": 17218,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17228,
      "end": 17341,
      "test": {
        "type": "BinaryExpression",
        "start": 17232,
        "end": 17251,
        "left": {
          "type": "BinaryExpression",
          "start": 17232,
          "end": 17245,
          "left": {
            "type": "Literal",
            "start": 17232,
            "end": 17239,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17243,
            "end": 17245,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17250,
          "end": 17251,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17253,
        "end": 17341,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17258,
            "end": 17338,
            "argument": {
              "type": "NewExpression",
              "start": 17264,
              "end": 17337,
              "callee": {
                "type": "Identifier",
                "start": 17268,
                "end": 17280,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17281,
                  "end": 17336,
                  "left": {
                    "type": "Literal",
                    "start": 17281,
                    "end": 17318,
                    "value": "#664: 8388607 >> 20 === 7. Actual: ",
                    "raw": "'#664: 8388607 >> 20 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17321,
                    "end": 17336,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17322,
                      "end": 17335,
                      "left": {
                        "type": "Literal",
                        "start": 17322,
                        "end": 17329,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17333,
                        "end": 17335,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17345,
      "end": 17463,
      "test": {
        "type": "BinaryExpression",
        "start": 17349,
        "end": 17370,
        "left": {
          "type": "BinaryExpression",
          "start": 17349,
          "end": 17363,
          "left": {
            "type": "Literal",
            "start": 17349,
            "end": 17357,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17361,
            "end": 17363,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17368,
          "end": 17370,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17372,
        "end": 17463,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17377,
            "end": 17460,
            "argument": {
              "type": "NewExpression",
              "start": 17383,
              "end": 17459,
              "callee": {
                "type": "Identifier",
                "start": 17387,
                "end": 17399,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17400,
                  "end": 17458,
                  "left": {
                    "type": "Literal",
                    "start": 17400,
                    "end": 17439,
                    "value": "#665: 16777215 >> 20 === 15. Actual: ",
                    "raw": "'#665: 16777215 >> 20 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17442,
                    "end": 17458,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17443,
                      "end": 17457,
                      "left": {
                        "type": "Literal",
                        "start": 17443,
                        "end": 17451,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17455,
                        "end": 17457,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17467,
      "end": 17585,
      "test": {
        "type": "BinaryExpression",
        "start": 17471,
        "end": 17492,
        "left": {
          "type": "BinaryExpression",
          "start": 17471,
          "end": 17485,
          "left": {
            "type": "Literal",
            "start": 17471,
            "end": 17479,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17483,
            "end": 17485,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17490,
          "end": 17492,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17494,
        "end": 17585,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17499,
            "end": 17582,
            "argument": {
              "type": "NewExpression",
              "start": 17505,
              "end": 17581,
              "callee": {
                "type": "Identifier",
                "start": 17509,
                "end": 17521,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17522,
                  "end": 17580,
                  "left": {
                    "type": "Literal",
                    "start": 17522,
                    "end": 17561,
                    "value": "#666: 33554431 >> 20 === 31. Actual: ",
                    "raw": "'#666: 33554431 >> 20 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17564,
                    "end": 17580,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17565,
                      "end": 17579,
                      "left": {
                        "type": "Literal",
                        "start": 17565,
                        "end": 17573,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17577,
                        "end": 17579,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17589,
      "end": 17707,
      "test": {
        "type": "BinaryExpression",
        "start": 17593,
        "end": 17614,
        "left": {
          "type": "BinaryExpression",
          "start": 17593,
          "end": 17607,
          "left": {
            "type": "Literal",
            "start": 17593,
            "end": 17601,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17605,
            "end": 17607,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17612,
          "end": 17614,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17616,
        "end": 17707,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17621,
            "end": 17704,
            "argument": {
              "type": "NewExpression",
              "start": 17627,
              "end": 17703,
              "callee": {
                "type": "Identifier",
                "start": 17631,
                "end": 17643,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17644,
                  "end": 17702,
                  "left": {
                    "type": "Literal",
                    "start": 17644,
                    "end": 17683,
                    "value": "#667: 67108863 >> 20 === 63. Actual: ",
                    "raw": "'#667: 67108863 >> 20 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17686,
                    "end": 17702,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17687,
                      "end": 17701,
                      "left": {
                        "type": "Literal",
                        "start": 17687,
                        "end": 17695,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17699,
                        "end": 17701,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17711,
      "end": 17834,
      "test": {
        "type": "BinaryExpression",
        "start": 17715,
        "end": 17738,
        "left": {
          "type": "BinaryExpression",
          "start": 17715,
          "end": 17730,
          "left": {
            "type": "Literal",
            "start": 17715,
            "end": 17724,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17728,
            "end": 17730,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17735,
          "end": 17738,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17740,
        "end": 17834,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17745,
            "end": 17831,
            "argument": {
              "type": "NewExpression",
              "start": 17751,
              "end": 17830,
              "callee": {
                "type": "Identifier",
                "start": 17755,
                "end": 17767,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17768,
                  "end": 17829,
                  "left": {
                    "type": "Literal",
                    "start": 17768,
                    "end": 17809,
                    "value": "#668: 134217727 >> 20 === 127. Actual: ",
                    "raw": "'#668: 134217727 >> 20 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17812,
                    "end": 17829,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17813,
                      "end": 17828,
                      "left": {
                        "type": "Literal",
                        "start": 17813,
                        "end": 17822,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17826,
                        "end": 17828,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17838,
      "end": 17961,
      "test": {
        "type": "BinaryExpression",
        "start": 17842,
        "end": 17865,
        "left": {
          "type": "BinaryExpression",
          "start": 17842,
          "end": 17857,
          "left": {
            "type": "Literal",
            "start": 17842,
            "end": 17851,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17855,
            "end": 17857,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17862,
          "end": 17865,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17867,
        "end": 17961,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17872,
            "end": 17958,
            "argument": {
              "type": "NewExpression",
              "start": 17878,
              "end": 17957,
              "callee": {
                "type": "Identifier",
                "start": 17882,
                "end": 17894,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 17895,
                  "end": 17956,
                  "left": {
                    "type": "Literal",
                    "start": 17895,
                    "end": 17936,
                    "value": "#669: 268435455 >> 20 === 255. Actual: ",
                    "raw": "'#669: 268435455 >> 20 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 17939,
                    "end": 17956,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 17940,
                      "end": 17955,
                      "left": {
                        "type": "Literal",
                        "start": 17940,
                        "end": 17949,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 17953,
                        "end": 17955,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 17965,
      "end": 18088,
      "test": {
        "type": "BinaryExpression",
        "start": 17969,
        "end": 17992,
        "left": {
          "type": "BinaryExpression",
          "start": 17969,
          "end": 17984,
          "left": {
            "type": "Literal",
            "start": 17969,
            "end": 17978,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 17982,
            "end": 17984,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 17989,
          "end": 17992,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 17994,
        "end": 18088,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 17999,
            "end": 18085,
            "argument": {
              "type": "NewExpression",
              "start": 18005,
              "end": 18084,
              "callee": {
                "type": "Identifier",
                "start": 18009,
                "end": 18021,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18022,
                  "end": 18083,
                  "left": {
                    "type": "Literal",
                    "start": 18022,
                    "end": 18063,
                    "value": "#670: 536870911 >> 20 === 511. Actual: ",
                    "raw": "'#670: 536870911 >> 20 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18066,
                    "end": 18083,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18067,
                      "end": 18082,
                      "left": {
                        "type": "Literal",
                        "start": 18067,
                        "end": 18076,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18080,
                        "end": 18082,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18092,
      "end": 18220,
      "test": {
        "type": "BinaryExpression",
        "start": 18096,
        "end": 18121,
        "left": {
          "type": "BinaryExpression",
          "start": 18096,
          "end": 18112,
          "left": {
            "type": "Literal",
            "start": 18096,
            "end": 18106,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18110,
            "end": 18112,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18117,
          "end": 18121,
          "value": 1023,
          "raw": "1023",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18123,
        "end": 18220,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18128,
            "end": 18217,
            "argument": {
              "type": "NewExpression",
              "start": 18134,
              "end": 18216,
              "callee": {
                "type": "Identifier",
                "start": 18138,
                "end": 18150,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18151,
                  "end": 18215,
                  "left": {
                    "type": "Literal",
                    "start": 18151,
                    "end": 18194,
                    "value": "#671: 1073741823 >> 20 === 1023. Actual: ",
                    "raw": "'#671: 1073741823 >> 20 === 1023. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18197,
                    "end": 18215,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18198,
                      "end": 18214,
                      "left": {
                        "type": "Literal",
                        "start": 18198,
                        "end": 18208,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18212,
                        "end": 18214,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18224,
      "end": 18352,
      "test": {
        "type": "BinaryExpression",
        "start": 18228,
        "end": 18253,
        "left": {
          "type": "BinaryExpression",
          "start": 18228,
          "end": 18244,
          "left": {
            "type": "Literal",
            "start": 18228,
            "end": 18238,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18242,
            "end": 18244,
            "value": 20,
            "raw": "20",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18249,
          "end": 18253,
          "value": 2047,
          "raw": "2047",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18255,
        "end": 18352,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18260,
            "end": 18349,
            "argument": {
              "type": "NewExpression",
              "start": 18266,
              "end": 18348,
              "callee": {
                "type": "Identifier",
                "start": 18270,
                "end": 18282,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18283,
                  "end": 18347,
                  "left": {
                    "type": "Literal",
                    "start": 18283,
                    "end": 18326,
                    "value": "#672: 2147483647 >> 20 === 2047. Actual: ",
                    "raw": "'#672: 2147483647 >> 20 === 2047. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18329,
                    "end": 18347,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18330,
                      "end": 18346,
                      "left": {
                        "type": "Literal",
                        "start": 18330,
                        "end": 18340,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18344,
                        "end": 18346,
                        "value": 20,
                        "raw": "20",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18356,
      "end": 18451,
      "test": {
        "type": "BinaryExpression",
        "start": 18360,
        "end": 18373,
        "left": {
          "type": "BinaryExpression",
          "start": 18360,
          "end": 18367,
          "left": {
            "type": "Literal",
            "start": 18360,
            "end": 18361,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18365,
            "end": 18367,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18372,
          "end": 18373,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18375,
        "end": 18451,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18380,
            "end": 18448,
            "argument": {
              "type": "NewExpression",
              "start": 18386,
              "end": 18447,
              "callee": {
                "type": "Identifier",
                "start": 18390,
                "end": 18402,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18403,
                  "end": 18446,
                  "left": {
                    "type": "Literal",
                    "start": 18403,
                    "end": 18434,
                    "value": "#673: 0 >> 21 === 0. Actual: ",
                    "raw": "'#673: 0 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18437,
                    "end": 18446,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18438,
                      "end": 18445,
                      "left": {
                        "type": "Literal",
                        "start": 18438,
                        "end": 18439,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18443,
                        "end": 18445,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18455,
      "end": 18550,
      "test": {
        "type": "BinaryExpression",
        "start": 18459,
        "end": 18472,
        "left": {
          "type": "BinaryExpression",
          "start": 18459,
          "end": 18466,
          "left": {
            "type": "Literal",
            "start": 18459,
            "end": 18460,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18464,
            "end": 18466,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18471,
          "end": 18472,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18474,
        "end": 18550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18479,
            "end": 18547,
            "argument": {
              "type": "NewExpression",
              "start": 18485,
              "end": 18546,
              "callee": {
                "type": "Identifier",
                "start": 18489,
                "end": 18501,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18502,
                  "end": 18545,
                  "left": {
                    "type": "Literal",
                    "start": 18502,
                    "end": 18533,
                    "value": "#674: 1 >> 21 === 0. Actual: ",
                    "raw": "'#674: 1 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18536,
                    "end": 18545,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18537,
                      "end": 18544,
                      "left": {
                        "type": "Literal",
                        "start": 18537,
                        "end": 18538,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18542,
                        "end": 18544,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18554,
      "end": 18649,
      "test": {
        "type": "BinaryExpression",
        "start": 18558,
        "end": 18571,
        "left": {
          "type": "BinaryExpression",
          "start": 18558,
          "end": 18565,
          "left": {
            "type": "Literal",
            "start": 18558,
            "end": 18559,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18563,
            "end": 18565,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18570,
          "end": 18571,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18573,
        "end": 18649,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18578,
            "end": 18646,
            "argument": {
              "type": "NewExpression",
              "start": 18584,
              "end": 18645,
              "callee": {
                "type": "Identifier",
                "start": 18588,
                "end": 18600,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18601,
                  "end": 18644,
                  "left": {
                    "type": "Literal",
                    "start": 18601,
                    "end": 18632,
                    "value": "#675: 3 >> 21 === 0. Actual: ",
                    "raw": "'#675: 3 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18635,
                    "end": 18644,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18636,
                      "end": 18643,
                      "left": {
                        "type": "Literal",
                        "start": 18636,
                        "end": 18637,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18641,
                        "end": 18643,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18653,
      "end": 18748,
      "test": {
        "type": "BinaryExpression",
        "start": 18657,
        "end": 18670,
        "left": {
          "type": "BinaryExpression",
          "start": 18657,
          "end": 18664,
          "left": {
            "type": "Literal",
            "start": 18657,
            "end": 18658,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18662,
            "end": 18664,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18669,
          "end": 18670,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18672,
        "end": 18748,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18677,
            "end": 18745,
            "argument": {
              "type": "NewExpression",
              "start": 18683,
              "end": 18744,
              "callee": {
                "type": "Identifier",
                "start": 18687,
                "end": 18699,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18700,
                  "end": 18743,
                  "left": {
                    "type": "Literal",
                    "start": 18700,
                    "end": 18731,
                    "value": "#676: 7 >> 21 === 0. Actual: ",
                    "raw": "'#676: 7 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18734,
                    "end": 18743,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18735,
                      "end": 18742,
                      "left": {
                        "type": "Literal",
                        "start": 18735,
                        "end": 18736,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18740,
                        "end": 18742,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18752,
      "end": 18850,
      "test": {
        "type": "BinaryExpression",
        "start": 18756,
        "end": 18770,
        "left": {
          "type": "BinaryExpression",
          "start": 18756,
          "end": 18764,
          "left": {
            "type": "Literal",
            "start": 18756,
            "end": 18758,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18762,
            "end": 18764,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18769,
          "end": 18770,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18772,
        "end": 18850,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18777,
            "end": 18847,
            "argument": {
              "type": "NewExpression",
              "start": 18783,
              "end": 18846,
              "callee": {
                "type": "Identifier",
                "start": 18787,
                "end": 18799,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18800,
                  "end": 18845,
                  "left": {
                    "type": "Literal",
                    "start": 18800,
                    "end": 18832,
                    "value": "#677: 15 >> 21 === 0. Actual: ",
                    "raw": "'#677: 15 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18835,
                    "end": 18845,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18836,
                      "end": 18844,
                      "left": {
                        "type": "Literal",
                        "start": 18836,
                        "end": 18838,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18842,
                        "end": 18844,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18854,
      "end": 18952,
      "test": {
        "type": "BinaryExpression",
        "start": 18858,
        "end": 18872,
        "left": {
          "type": "BinaryExpression",
          "start": 18858,
          "end": 18866,
          "left": {
            "type": "Literal",
            "start": 18858,
            "end": 18860,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18864,
            "end": 18866,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18871,
          "end": 18872,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18874,
        "end": 18952,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18879,
            "end": 18949,
            "argument": {
              "type": "NewExpression",
              "start": 18885,
              "end": 18948,
              "callee": {
                "type": "Identifier",
                "start": 18889,
                "end": 18901,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 18902,
                  "end": 18947,
                  "left": {
                    "type": "Literal",
                    "start": 18902,
                    "end": 18934,
                    "value": "#678: 31 >> 21 === 0. Actual: ",
                    "raw": "'#678: 31 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 18937,
                    "end": 18947,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 18938,
                      "end": 18946,
                      "left": {
                        "type": "Literal",
                        "start": 18938,
                        "end": 18940,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 18944,
                        "end": 18946,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 18956,
      "end": 19054,
      "test": {
        "type": "BinaryExpression",
        "start": 18960,
        "end": 18974,
        "left": {
          "type": "BinaryExpression",
          "start": 18960,
          "end": 18968,
          "left": {
            "type": "Literal",
            "start": 18960,
            "end": 18962,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 18966,
            "end": 18968,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 18973,
          "end": 18974,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 18976,
        "end": 19054,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 18981,
            "end": 19051,
            "argument": {
              "type": "NewExpression",
              "start": 18987,
              "end": 19050,
              "callee": {
                "type": "Identifier",
                "start": 18991,
                "end": 19003,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19004,
                  "end": 19049,
                  "left": {
                    "type": "Literal",
                    "start": 19004,
                    "end": 19036,
                    "value": "#679: 63 >> 21 === 0. Actual: ",
                    "raw": "'#679: 63 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19039,
                    "end": 19049,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19040,
                      "end": 19048,
                      "left": {
                        "type": "Literal",
                        "start": 19040,
                        "end": 19042,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19046,
                        "end": 19048,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19058,
      "end": 19159,
      "test": {
        "type": "BinaryExpression",
        "start": 19062,
        "end": 19077,
        "left": {
          "type": "BinaryExpression",
          "start": 19062,
          "end": 19071,
          "left": {
            "type": "Literal",
            "start": 19062,
            "end": 19065,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19069,
            "end": 19071,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19076,
          "end": 19077,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19079,
        "end": 19159,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19084,
            "end": 19156,
            "argument": {
              "type": "NewExpression",
              "start": 19090,
              "end": 19155,
              "callee": {
                "type": "Identifier",
                "start": 19094,
                "end": 19106,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19107,
                  "end": 19154,
                  "left": {
                    "type": "Literal",
                    "start": 19107,
                    "end": 19140,
                    "value": "#680: 127 >> 21 === 0. Actual: ",
                    "raw": "'#680: 127 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19143,
                    "end": 19154,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19144,
                      "end": 19153,
                      "left": {
                        "type": "Literal",
                        "start": 19144,
                        "end": 19147,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19151,
                        "end": 19153,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19163,
      "end": 19264,
      "test": {
        "type": "BinaryExpression",
        "start": 19167,
        "end": 19182,
        "left": {
          "type": "BinaryExpression",
          "start": 19167,
          "end": 19176,
          "left": {
            "type": "Literal",
            "start": 19167,
            "end": 19170,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19174,
            "end": 19176,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19181,
          "end": 19182,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19184,
        "end": 19264,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19189,
            "end": 19261,
            "argument": {
              "type": "NewExpression",
              "start": 19195,
              "end": 19260,
              "callee": {
                "type": "Identifier",
                "start": 19199,
                "end": 19211,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19212,
                  "end": 19259,
                  "left": {
                    "type": "Literal",
                    "start": 19212,
                    "end": 19245,
                    "value": "#681: 255 >> 21 === 0. Actual: ",
                    "raw": "'#681: 255 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19248,
                    "end": 19259,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19249,
                      "end": 19258,
                      "left": {
                        "type": "Literal",
                        "start": 19249,
                        "end": 19252,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19256,
                        "end": 19258,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19268,
      "end": 19369,
      "test": {
        "type": "BinaryExpression",
        "start": 19272,
        "end": 19287,
        "left": {
          "type": "BinaryExpression",
          "start": 19272,
          "end": 19281,
          "left": {
            "type": "Literal",
            "start": 19272,
            "end": 19275,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19279,
            "end": 19281,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19286,
          "end": 19287,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19289,
        "end": 19369,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19294,
            "end": 19366,
            "argument": {
              "type": "NewExpression",
              "start": 19300,
              "end": 19365,
              "callee": {
                "type": "Identifier",
                "start": 19304,
                "end": 19316,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19317,
                  "end": 19364,
                  "left": {
                    "type": "Literal",
                    "start": 19317,
                    "end": 19350,
                    "value": "#682: 511 >> 21 === 0. Actual: ",
                    "raw": "'#682: 511 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19353,
                    "end": 19364,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19354,
                      "end": 19363,
                      "left": {
                        "type": "Literal",
                        "start": 19354,
                        "end": 19357,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19361,
                        "end": 19363,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19373,
      "end": 19477,
      "test": {
        "type": "BinaryExpression",
        "start": 19377,
        "end": 19393,
        "left": {
          "type": "BinaryExpression",
          "start": 19377,
          "end": 19387,
          "left": {
            "type": "Literal",
            "start": 19377,
            "end": 19381,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19385,
            "end": 19387,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19392,
          "end": 19393,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19395,
        "end": 19477,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19400,
            "end": 19474,
            "argument": {
              "type": "NewExpression",
              "start": 19406,
              "end": 19473,
              "callee": {
                "type": "Identifier",
                "start": 19410,
                "end": 19422,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19423,
                  "end": 19472,
                  "left": {
                    "type": "Literal",
                    "start": 19423,
                    "end": 19457,
                    "value": "#683: 1023 >> 21 === 0. Actual: ",
                    "raw": "'#683: 1023 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19460,
                    "end": 19472,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19461,
                      "end": 19471,
                      "left": {
                        "type": "Literal",
                        "start": 19461,
                        "end": 19465,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19469,
                        "end": 19471,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19481,
      "end": 19585,
      "test": {
        "type": "BinaryExpression",
        "start": 19485,
        "end": 19501,
        "left": {
          "type": "BinaryExpression",
          "start": 19485,
          "end": 19495,
          "left": {
            "type": "Literal",
            "start": 19485,
            "end": 19489,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19493,
            "end": 19495,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19500,
          "end": 19501,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19503,
        "end": 19585,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19508,
            "end": 19582,
            "argument": {
              "type": "NewExpression",
              "start": 19514,
              "end": 19581,
              "callee": {
                "type": "Identifier",
                "start": 19518,
                "end": 19530,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19531,
                  "end": 19580,
                  "left": {
                    "type": "Literal",
                    "start": 19531,
                    "end": 19565,
                    "value": "#684: 2047 >> 21 === 0. Actual: ",
                    "raw": "'#684: 2047 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19568,
                    "end": 19580,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19569,
                      "end": 19579,
                      "left": {
                        "type": "Literal",
                        "start": 19569,
                        "end": 19573,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19577,
                        "end": 19579,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19589,
      "end": 19693,
      "test": {
        "type": "BinaryExpression",
        "start": 19593,
        "end": 19609,
        "left": {
          "type": "BinaryExpression",
          "start": 19593,
          "end": 19603,
          "left": {
            "type": "Literal",
            "start": 19593,
            "end": 19597,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19601,
            "end": 19603,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19608,
          "end": 19609,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19611,
        "end": 19693,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19616,
            "end": 19690,
            "argument": {
              "type": "NewExpression",
              "start": 19622,
              "end": 19689,
              "callee": {
                "type": "Identifier",
                "start": 19626,
                "end": 19638,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19639,
                  "end": 19688,
                  "left": {
                    "type": "Literal",
                    "start": 19639,
                    "end": 19673,
                    "value": "#685: 4095 >> 21 === 0. Actual: ",
                    "raw": "'#685: 4095 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19676,
                    "end": 19688,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19677,
                      "end": 19687,
                      "left": {
                        "type": "Literal",
                        "start": 19677,
                        "end": 19681,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19685,
                        "end": 19687,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19697,
      "end": 19801,
      "test": {
        "type": "BinaryExpression",
        "start": 19701,
        "end": 19717,
        "left": {
          "type": "BinaryExpression",
          "start": 19701,
          "end": 19711,
          "left": {
            "type": "Literal",
            "start": 19701,
            "end": 19705,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19709,
            "end": 19711,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19716,
          "end": 19717,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19719,
        "end": 19801,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19724,
            "end": 19798,
            "argument": {
              "type": "NewExpression",
              "start": 19730,
              "end": 19797,
              "callee": {
                "type": "Identifier",
                "start": 19734,
                "end": 19746,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19747,
                  "end": 19796,
                  "left": {
                    "type": "Literal",
                    "start": 19747,
                    "end": 19781,
                    "value": "#686: 8191 >> 21 === 0. Actual: ",
                    "raw": "'#686: 8191 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19784,
                    "end": 19796,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19785,
                      "end": 19795,
                      "left": {
                        "type": "Literal",
                        "start": 19785,
                        "end": 19789,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19793,
                        "end": 19795,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19805,
      "end": 19912,
      "test": {
        "type": "BinaryExpression",
        "start": 19809,
        "end": 19826,
        "left": {
          "type": "BinaryExpression",
          "start": 19809,
          "end": 19820,
          "left": {
            "type": "Literal",
            "start": 19809,
            "end": 19814,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19818,
            "end": 19820,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19825,
          "end": 19826,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19828,
        "end": 19912,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19833,
            "end": 19909,
            "argument": {
              "type": "NewExpression",
              "start": 19839,
              "end": 19908,
              "callee": {
                "type": "Identifier",
                "start": 19843,
                "end": 19855,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19856,
                  "end": 19907,
                  "left": {
                    "type": "Literal",
                    "start": 19856,
                    "end": 19891,
                    "value": "#687: 16383 >> 21 === 0. Actual: ",
                    "raw": "'#687: 16383 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 19894,
                    "end": 19907,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 19895,
                      "end": 19906,
                      "left": {
                        "type": "Literal",
                        "start": 19895,
                        "end": 19900,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 19904,
                        "end": 19906,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 19916,
      "end": 20023,
      "test": {
        "type": "BinaryExpression",
        "start": 19920,
        "end": 19937,
        "left": {
          "type": "BinaryExpression",
          "start": 19920,
          "end": 19931,
          "left": {
            "type": "Literal",
            "start": 19920,
            "end": 19925,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 19929,
            "end": 19931,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 19936,
          "end": 19937,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 19939,
        "end": 20023,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 19944,
            "end": 20020,
            "argument": {
              "type": "NewExpression",
              "start": 19950,
              "end": 20019,
              "callee": {
                "type": "Identifier",
                "start": 19954,
                "end": 19966,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 19967,
                  "end": 20018,
                  "left": {
                    "type": "Literal",
                    "start": 19967,
                    "end": 20002,
                    "value": "#688: 32767 >> 21 === 0. Actual: ",
                    "raw": "'#688: 32767 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20005,
                    "end": 20018,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20006,
                      "end": 20017,
                      "left": {
                        "type": "Literal",
                        "start": 20006,
                        "end": 20011,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20015,
                        "end": 20017,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20027,
      "end": 20134,
      "test": {
        "type": "BinaryExpression",
        "start": 20031,
        "end": 20048,
        "left": {
          "type": "BinaryExpression",
          "start": 20031,
          "end": 20042,
          "left": {
            "type": "Literal",
            "start": 20031,
            "end": 20036,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20040,
            "end": 20042,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20047,
          "end": 20048,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20050,
        "end": 20134,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20055,
            "end": 20131,
            "argument": {
              "type": "NewExpression",
              "start": 20061,
              "end": 20130,
              "callee": {
                "type": "Identifier",
                "start": 20065,
                "end": 20077,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20078,
                  "end": 20129,
                  "left": {
                    "type": "Literal",
                    "start": 20078,
                    "end": 20113,
                    "value": "#689: 65535 >> 21 === 0. Actual: ",
                    "raw": "'#689: 65535 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20116,
                    "end": 20129,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20117,
                      "end": 20128,
                      "left": {
                        "type": "Literal",
                        "start": 20117,
                        "end": 20122,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20126,
                        "end": 20128,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20138,
      "end": 20248,
      "test": {
        "type": "BinaryExpression",
        "start": 20142,
        "end": 20160,
        "left": {
          "type": "BinaryExpression",
          "start": 20142,
          "end": 20154,
          "left": {
            "type": "Literal",
            "start": 20142,
            "end": 20148,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20152,
            "end": 20154,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20159,
          "end": 20160,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20162,
        "end": 20248,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20167,
            "end": 20245,
            "argument": {
              "type": "NewExpression",
              "start": 20173,
              "end": 20244,
              "callee": {
                "type": "Identifier",
                "start": 20177,
                "end": 20189,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20190,
                  "end": 20243,
                  "left": {
                    "type": "Literal",
                    "start": 20190,
                    "end": 20226,
                    "value": "#690: 131071 >> 21 === 0. Actual: ",
                    "raw": "'#690: 131071 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20229,
                    "end": 20243,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20230,
                      "end": 20242,
                      "left": {
                        "type": "Literal",
                        "start": 20230,
                        "end": 20236,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20240,
                        "end": 20242,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20252,
      "end": 20362,
      "test": {
        "type": "BinaryExpression",
        "start": 20256,
        "end": 20274,
        "left": {
          "type": "BinaryExpression",
          "start": 20256,
          "end": 20268,
          "left": {
            "type": "Literal",
            "start": 20256,
            "end": 20262,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20266,
            "end": 20268,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20273,
          "end": 20274,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20276,
        "end": 20362,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20281,
            "end": 20359,
            "argument": {
              "type": "NewExpression",
              "start": 20287,
              "end": 20358,
              "callee": {
                "type": "Identifier",
                "start": 20291,
                "end": 20303,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20304,
                  "end": 20357,
                  "left": {
                    "type": "Literal",
                    "start": 20304,
                    "end": 20340,
                    "value": "#691: 262143 >> 21 === 0. Actual: ",
                    "raw": "'#691: 262143 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20343,
                    "end": 20357,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20344,
                      "end": 20356,
                      "left": {
                        "type": "Literal",
                        "start": 20344,
                        "end": 20350,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20354,
                        "end": 20356,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20366,
      "end": 20476,
      "test": {
        "type": "BinaryExpression",
        "start": 20370,
        "end": 20388,
        "left": {
          "type": "BinaryExpression",
          "start": 20370,
          "end": 20382,
          "left": {
            "type": "Literal",
            "start": 20370,
            "end": 20376,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20380,
            "end": 20382,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20387,
          "end": 20388,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20390,
        "end": 20476,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20395,
            "end": 20473,
            "argument": {
              "type": "NewExpression",
              "start": 20401,
              "end": 20472,
              "callee": {
                "type": "Identifier",
                "start": 20405,
                "end": 20417,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20418,
                  "end": 20471,
                  "left": {
                    "type": "Literal",
                    "start": 20418,
                    "end": 20454,
                    "value": "#692: 524287 >> 21 === 0. Actual: ",
                    "raw": "'#692: 524287 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20457,
                    "end": 20471,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20458,
                      "end": 20470,
                      "left": {
                        "type": "Literal",
                        "start": 20458,
                        "end": 20464,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20468,
                        "end": 20470,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20480,
      "end": 20593,
      "test": {
        "type": "BinaryExpression",
        "start": 20484,
        "end": 20503,
        "left": {
          "type": "BinaryExpression",
          "start": 20484,
          "end": 20497,
          "left": {
            "type": "Literal",
            "start": 20484,
            "end": 20491,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20495,
            "end": 20497,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20502,
          "end": 20503,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20505,
        "end": 20593,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20510,
            "end": 20590,
            "argument": {
              "type": "NewExpression",
              "start": 20516,
              "end": 20589,
              "callee": {
                "type": "Identifier",
                "start": 20520,
                "end": 20532,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20533,
                  "end": 20588,
                  "left": {
                    "type": "Literal",
                    "start": 20533,
                    "end": 20570,
                    "value": "#693: 1048575 >> 21 === 0. Actual: ",
                    "raw": "'#693: 1048575 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20573,
                    "end": 20588,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20574,
                      "end": 20587,
                      "left": {
                        "type": "Literal",
                        "start": 20574,
                        "end": 20581,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20585,
                        "end": 20587,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20597,
      "end": 20710,
      "test": {
        "type": "BinaryExpression",
        "start": 20601,
        "end": 20620,
        "left": {
          "type": "BinaryExpression",
          "start": 20601,
          "end": 20614,
          "left": {
            "type": "Literal",
            "start": 20601,
            "end": 20608,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20612,
            "end": 20614,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20619,
          "end": 20620,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20622,
        "end": 20710,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20627,
            "end": 20707,
            "argument": {
              "type": "NewExpression",
              "start": 20633,
              "end": 20706,
              "callee": {
                "type": "Identifier",
                "start": 20637,
                "end": 20649,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20650,
                  "end": 20705,
                  "left": {
                    "type": "Literal",
                    "start": 20650,
                    "end": 20687,
                    "value": "#694: 2097151 >> 21 === 0. Actual: ",
                    "raw": "'#694: 2097151 >> 21 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20690,
                    "end": 20705,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20691,
                      "end": 20704,
                      "left": {
                        "type": "Literal",
                        "start": 20691,
                        "end": 20698,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20702,
                        "end": 20704,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20714,
      "end": 20827,
      "test": {
        "type": "BinaryExpression",
        "start": 20718,
        "end": 20737,
        "left": {
          "type": "BinaryExpression",
          "start": 20718,
          "end": 20731,
          "left": {
            "type": "Literal",
            "start": 20718,
            "end": 20725,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20729,
            "end": 20731,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20736,
          "end": 20737,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20739,
        "end": 20827,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20744,
            "end": 20824,
            "argument": {
              "type": "NewExpression",
              "start": 20750,
              "end": 20823,
              "callee": {
                "type": "Identifier",
                "start": 20754,
                "end": 20766,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20767,
                  "end": 20822,
                  "left": {
                    "type": "Literal",
                    "start": 20767,
                    "end": 20804,
                    "value": "#695: 4194303 >> 21 === 1. Actual: ",
                    "raw": "'#695: 4194303 >> 21 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20807,
                    "end": 20822,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20808,
                      "end": 20821,
                      "left": {
                        "type": "Literal",
                        "start": 20808,
                        "end": 20815,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20819,
                        "end": 20821,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20831,
      "end": 20944,
      "test": {
        "type": "BinaryExpression",
        "start": 20835,
        "end": 20854,
        "left": {
          "type": "BinaryExpression",
          "start": 20835,
          "end": 20848,
          "left": {
            "type": "Literal",
            "start": 20835,
            "end": 20842,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20846,
            "end": 20848,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20853,
          "end": 20854,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20856,
        "end": 20944,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20861,
            "end": 20941,
            "argument": {
              "type": "NewExpression",
              "start": 20867,
              "end": 20940,
              "callee": {
                "type": "Identifier",
                "start": 20871,
                "end": 20883,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 20884,
                  "end": 20939,
                  "left": {
                    "type": "Literal",
                    "start": 20884,
                    "end": 20921,
                    "value": "#696: 8388607 >> 21 === 3. Actual: ",
                    "raw": "'#696: 8388607 >> 21 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 20924,
                    "end": 20939,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 20925,
                      "end": 20938,
                      "left": {
                        "type": "Literal",
                        "start": 20925,
                        "end": 20932,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 20936,
                        "end": 20938,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 20948,
      "end": 21064,
      "test": {
        "type": "BinaryExpression",
        "start": 20952,
        "end": 20972,
        "left": {
          "type": "BinaryExpression",
          "start": 20952,
          "end": 20966,
          "left": {
            "type": "Literal",
            "start": 20952,
            "end": 20960,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 20964,
            "end": 20966,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 20971,
          "end": 20972,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 20974,
        "end": 21064,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 20979,
            "end": 21061,
            "argument": {
              "type": "NewExpression",
              "start": 20985,
              "end": 21060,
              "callee": {
                "type": "Identifier",
                "start": 20989,
                "end": 21001,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21002,
                  "end": 21059,
                  "left": {
                    "type": "Literal",
                    "start": 21002,
                    "end": 21040,
                    "value": "#697: 16777215 >> 21 === 7. Actual: ",
                    "raw": "'#697: 16777215 >> 21 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21043,
                    "end": 21059,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21044,
                      "end": 21058,
                      "left": {
                        "type": "Literal",
                        "start": 21044,
                        "end": 21052,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21056,
                        "end": 21058,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21068,
      "end": 21186,
      "test": {
        "type": "BinaryExpression",
        "start": 21072,
        "end": 21093,
        "left": {
          "type": "BinaryExpression",
          "start": 21072,
          "end": 21086,
          "left": {
            "type": "Literal",
            "start": 21072,
            "end": 21080,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21084,
            "end": 21086,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21091,
          "end": 21093,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21095,
        "end": 21186,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21100,
            "end": 21183,
            "argument": {
              "type": "NewExpression",
              "start": 21106,
              "end": 21182,
              "callee": {
                "type": "Identifier",
                "start": 21110,
                "end": 21122,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21123,
                  "end": 21181,
                  "left": {
                    "type": "Literal",
                    "start": 21123,
                    "end": 21162,
                    "value": "#698: 33554431 >> 21 === 15. Actual: ",
                    "raw": "'#698: 33554431 >> 21 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21165,
                    "end": 21181,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21166,
                      "end": 21180,
                      "left": {
                        "type": "Literal",
                        "start": 21166,
                        "end": 21174,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21178,
                        "end": 21180,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21190,
      "end": 21308,
      "test": {
        "type": "BinaryExpression",
        "start": 21194,
        "end": 21215,
        "left": {
          "type": "BinaryExpression",
          "start": 21194,
          "end": 21208,
          "left": {
            "type": "Literal",
            "start": 21194,
            "end": 21202,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21206,
            "end": 21208,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21213,
          "end": 21215,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21217,
        "end": 21308,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21222,
            "end": 21305,
            "argument": {
              "type": "NewExpression",
              "start": 21228,
              "end": 21304,
              "callee": {
                "type": "Identifier",
                "start": 21232,
                "end": 21244,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21245,
                  "end": 21303,
                  "left": {
                    "type": "Literal",
                    "start": 21245,
                    "end": 21284,
                    "value": "#699: 67108863 >> 21 === 31. Actual: ",
                    "raw": "'#699: 67108863 >> 21 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21287,
                    "end": 21303,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21288,
                      "end": 21302,
                      "left": {
                        "type": "Literal",
                        "start": 21288,
                        "end": 21296,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21300,
                        "end": 21302,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21312,
      "end": 21433,
      "test": {
        "type": "BinaryExpression",
        "start": 21316,
        "end": 21338,
        "left": {
          "type": "BinaryExpression",
          "start": 21316,
          "end": 21331,
          "left": {
            "type": "Literal",
            "start": 21316,
            "end": 21325,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21329,
            "end": 21331,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21336,
          "end": 21338,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21340,
        "end": 21433,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21345,
            "end": 21430,
            "argument": {
              "type": "NewExpression",
              "start": 21351,
              "end": 21429,
              "callee": {
                "type": "Identifier",
                "start": 21355,
                "end": 21367,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21368,
                  "end": 21428,
                  "left": {
                    "type": "Literal",
                    "start": 21368,
                    "end": 21408,
                    "value": "#700: 134217727 >> 21 === 63. Actual: ",
                    "raw": "'#700: 134217727 >> 21 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21411,
                    "end": 21428,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21412,
                      "end": 21427,
                      "left": {
                        "type": "Literal",
                        "start": 21412,
                        "end": 21421,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21425,
                        "end": 21427,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21437,
      "end": 21560,
      "test": {
        "type": "BinaryExpression",
        "start": 21441,
        "end": 21464,
        "left": {
          "type": "BinaryExpression",
          "start": 21441,
          "end": 21456,
          "left": {
            "type": "Literal",
            "start": 21441,
            "end": 21450,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21454,
            "end": 21456,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21461,
          "end": 21464,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21466,
        "end": 21560,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21471,
            "end": 21557,
            "argument": {
              "type": "NewExpression",
              "start": 21477,
              "end": 21556,
              "callee": {
                "type": "Identifier",
                "start": 21481,
                "end": 21493,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21494,
                  "end": 21555,
                  "left": {
                    "type": "Literal",
                    "start": 21494,
                    "end": 21535,
                    "value": "#701: 268435455 >> 21 === 127. Actual: ",
                    "raw": "'#701: 268435455 >> 21 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21538,
                    "end": 21555,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21539,
                      "end": 21554,
                      "left": {
                        "type": "Literal",
                        "start": 21539,
                        "end": 21548,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21552,
                        "end": 21554,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21564,
      "end": 21687,
      "test": {
        "type": "BinaryExpression",
        "start": 21568,
        "end": 21591,
        "left": {
          "type": "BinaryExpression",
          "start": 21568,
          "end": 21583,
          "left": {
            "type": "Literal",
            "start": 21568,
            "end": 21577,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21581,
            "end": 21583,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21588,
          "end": 21591,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21593,
        "end": 21687,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21598,
            "end": 21684,
            "argument": {
              "type": "NewExpression",
              "start": 21604,
              "end": 21683,
              "callee": {
                "type": "Identifier",
                "start": 21608,
                "end": 21620,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21621,
                  "end": 21682,
                  "left": {
                    "type": "Literal",
                    "start": 21621,
                    "end": 21662,
                    "value": "#702: 536870911 >> 21 === 255. Actual: ",
                    "raw": "'#702: 536870911 >> 21 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21665,
                    "end": 21682,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21666,
                      "end": 21681,
                      "left": {
                        "type": "Literal",
                        "start": 21666,
                        "end": 21675,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21679,
                        "end": 21681,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21691,
      "end": 21817,
      "test": {
        "type": "BinaryExpression",
        "start": 21695,
        "end": 21719,
        "left": {
          "type": "BinaryExpression",
          "start": 21695,
          "end": 21711,
          "left": {
            "type": "Literal",
            "start": 21695,
            "end": 21705,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21709,
            "end": 21711,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21716,
          "end": 21719,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21721,
        "end": 21817,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21726,
            "end": 21814,
            "argument": {
              "type": "NewExpression",
              "start": 21732,
              "end": 21813,
              "callee": {
                "type": "Identifier",
                "start": 21736,
                "end": 21748,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21749,
                  "end": 21812,
                  "left": {
                    "type": "Literal",
                    "start": 21749,
                    "end": 21791,
                    "value": "#703: 1073741823 >> 21 === 511. Actual: ",
                    "raw": "'#703: 1073741823 >> 21 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21794,
                    "end": 21812,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21795,
                      "end": 21811,
                      "left": {
                        "type": "Literal",
                        "start": 21795,
                        "end": 21805,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21809,
                        "end": 21811,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21821,
      "end": 21949,
      "test": {
        "type": "BinaryExpression",
        "start": 21825,
        "end": 21850,
        "left": {
          "type": "BinaryExpression",
          "start": 21825,
          "end": 21841,
          "left": {
            "type": "Literal",
            "start": 21825,
            "end": 21835,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21839,
            "end": 21841,
            "value": 21,
            "raw": "21",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21846,
          "end": 21850,
          "value": 1023,
          "raw": "1023",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21852,
        "end": 21949,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21857,
            "end": 21946,
            "argument": {
              "type": "NewExpression",
              "start": 21863,
              "end": 21945,
              "callee": {
                "type": "Identifier",
                "start": 21867,
                "end": 21879,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 21880,
                  "end": 21944,
                  "left": {
                    "type": "Literal",
                    "start": 21880,
                    "end": 21923,
                    "value": "#704: 2147483647 >> 21 === 1023. Actual: ",
                    "raw": "'#704: 2147483647 >> 21 === 1023. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 21926,
                    "end": 21944,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 21927,
                      "end": 21943,
                      "left": {
                        "type": "Literal",
                        "start": 21927,
                        "end": 21937,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 21941,
                        "end": 21943,
                        "value": 21,
                        "raw": "21",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 21953,
      "end": 22048,
      "test": {
        "type": "BinaryExpression",
        "start": 21957,
        "end": 21970,
        "left": {
          "type": "BinaryExpression",
          "start": 21957,
          "end": 21964,
          "left": {
            "type": "Literal",
            "start": 21957,
            "end": 21958,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 21962,
            "end": 21964,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 21969,
          "end": 21970,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 21972,
        "end": 22048,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 21977,
            "end": 22045,
            "argument": {
              "type": "NewExpression",
              "start": 21983,
              "end": 22044,
              "callee": {
                "type": "Identifier",
                "start": 21987,
                "end": 21999,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22000,
                  "end": 22043,
                  "left": {
                    "type": "Literal",
                    "start": 22000,
                    "end": 22031,
                    "value": "#705: 0 >> 22 === 0. Actual: ",
                    "raw": "'#705: 0 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22034,
                    "end": 22043,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22035,
                      "end": 22042,
                      "left": {
                        "type": "Literal",
                        "start": 22035,
                        "end": 22036,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22040,
                        "end": 22042,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22052,
      "end": 22147,
      "test": {
        "type": "BinaryExpression",
        "start": 22056,
        "end": 22069,
        "left": {
          "type": "BinaryExpression",
          "start": 22056,
          "end": 22063,
          "left": {
            "type": "Literal",
            "start": 22056,
            "end": 22057,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22061,
            "end": 22063,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22068,
          "end": 22069,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22071,
        "end": 22147,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22076,
            "end": 22144,
            "argument": {
              "type": "NewExpression",
              "start": 22082,
              "end": 22143,
              "callee": {
                "type": "Identifier",
                "start": 22086,
                "end": 22098,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22099,
                  "end": 22142,
                  "left": {
                    "type": "Literal",
                    "start": 22099,
                    "end": 22130,
                    "value": "#706: 1 >> 22 === 0. Actual: ",
                    "raw": "'#706: 1 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22133,
                    "end": 22142,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22134,
                      "end": 22141,
                      "left": {
                        "type": "Literal",
                        "start": 22134,
                        "end": 22135,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22139,
                        "end": 22141,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22151,
      "end": 22246,
      "test": {
        "type": "BinaryExpression",
        "start": 22155,
        "end": 22168,
        "left": {
          "type": "BinaryExpression",
          "start": 22155,
          "end": 22162,
          "left": {
            "type": "Literal",
            "start": 22155,
            "end": 22156,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22160,
            "end": 22162,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22167,
          "end": 22168,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22170,
        "end": 22246,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22175,
            "end": 22243,
            "argument": {
              "type": "NewExpression",
              "start": 22181,
              "end": 22242,
              "callee": {
                "type": "Identifier",
                "start": 22185,
                "end": 22197,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22198,
                  "end": 22241,
                  "left": {
                    "type": "Literal",
                    "start": 22198,
                    "end": 22229,
                    "value": "#707: 3 >> 22 === 0. Actual: ",
                    "raw": "'#707: 3 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22232,
                    "end": 22241,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22233,
                      "end": 22240,
                      "left": {
                        "type": "Literal",
                        "start": 22233,
                        "end": 22234,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22238,
                        "end": 22240,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22250,
      "end": 22345,
      "test": {
        "type": "BinaryExpression",
        "start": 22254,
        "end": 22267,
        "left": {
          "type": "BinaryExpression",
          "start": 22254,
          "end": 22261,
          "left": {
            "type": "Literal",
            "start": 22254,
            "end": 22255,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22259,
            "end": 22261,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22266,
          "end": 22267,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22269,
        "end": 22345,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22274,
            "end": 22342,
            "argument": {
              "type": "NewExpression",
              "start": 22280,
              "end": 22341,
              "callee": {
                "type": "Identifier",
                "start": 22284,
                "end": 22296,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22297,
                  "end": 22340,
                  "left": {
                    "type": "Literal",
                    "start": 22297,
                    "end": 22328,
                    "value": "#708: 7 >> 22 === 0. Actual: ",
                    "raw": "'#708: 7 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22331,
                    "end": 22340,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22332,
                      "end": 22339,
                      "left": {
                        "type": "Literal",
                        "start": 22332,
                        "end": 22333,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22337,
                        "end": 22339,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22349,
      "end": 22447,
      "test": {
        "type": "BinaryExpression",
        "start": 22353,
        "end": 22367,
        "left": {
          "type": "BinaryExpression",
          "start": 22353,
          "end": 22361,
          "left": {
            "type": "Literal",
            "start": 22353,
            "end": 22355,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22359,
            "end": 22361,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22366,
          "end": 22367,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22369,
        "end": 22447,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22374,
            "end": 22444,
            "argument": {
              "type": "NewExpression",
              "start": 22380,
              "end": 22443,
              "callee": {
                "type": "Identifier",
                "start": 22384,
                "end": 22396,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22397,
                  "end": 22442,
                  "left": {
                    "type": "Literal",
                    "start": 22397,
                    "end": 22429,
                    "value": "#709: 15 >> 22 === 0. Actual: ",
                    "raw": "'#709: 15 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22432,
                    "end": 22442,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22433,
                      "end": 22441,
                      "left": {
                        "type": "Literal",
                        "start": 22433,
                        "end": 22435,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22439,
                        "end": 22441,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22451,
      "end": 22549,
      "test": {
        "type": "BinaryExpression",
        "start": 22455,
        "end": 22469,
        "left": {
          "type": "BinaryExpression",
          "start": 22455,
          "end": 22463,
          "left": {
            "type": "Literal",
            "start": 22455,
            "end": 22457,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22461,
            "end": 22463,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22468,
          "end": 22469,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22471,
        "end": 22549,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22476,
            "end": 22546,
            "argument": {
              "type": "NewExpression",
              "start": 22482,
              "end": 22545,
              "callee": {
                "type": "Identifier",
                "start": 22486,
                "end": 22498,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22499,
                  "end": 22544,
                  "left": {
                    "type": "Literal",
                    "start": 22499,
                    "end": 22531,
                    "value": "#710: 31 >> 22 === 0. Actual: ",
                    "raw": "'#710: 31 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22534,
                    "end": 22544,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22535,
                      "end": 22543,
                      "left": {
                        "type": "Literal",
                        "start": 22535,
                        "end": 22537,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22541,
                        "end": 22543,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22553,
      "end": 22651,
      "test": {
        "type": "BinaryExpression",
        "start": 22557,
        "end": 22571,
        "left": {
          "type": "BinaryExpression",
          "start": 22557,
          "end": 22565,
          "left": {
            "type": "Literal",
            "start": 22557,
            "end": 22559,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22563,
            "end": 22565,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22570,
          "end": 22571,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22573,
        "end": 22651,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22578,
            "end": 22648,
            "argument": {
              "type": "NewExpression",
              "start": 22584,
              "end": 22647,
              "callee": {
                "type": "Identifier",
                "start": 22588,
                "end": 22600,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22601,
                  "end": 22646,
                  "left": {
                    "type": "Literal",
                    "start": 22601,
                    "end": 22633,
                    "value": "#711: 63 >> 22 === 0. Actual: ",
                    "raw": "'#711: 63 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22636,
                    "end": 22646,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22637,
                      "end": 22645,
                      "left": {
                        "type": "Literal",
                        "start": 22637,
                        "end": 22639,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22643,
                        "end": 22645,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22655,
      "end": 22756,
      "test": {
        "type": "BinaryExpression",
        "start": 22659,
        "end": 22674,
        "left": {
          "type": "BinaryExpression",
          "start": 22659,
          "end": 22668,
          "left": {
            "type": "Literal",
            "start": 22659,
            "end": 22662,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22666,
            "end": 22668,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22673,
          "end": 22674,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22676,
        "end": 22756,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22681,
            "end": 22753,
            "argument": {
              "type": "NewExpression",
              "start": 22687,
              "end": 22752,
              "callee": {
                "type": "Identifier",
                "start": 22691,
                "end": 22703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22704,
                  "end": 22751,
                  "left": {
                    "type": "Literal",
                    "start": 22704,
                    "end": 22737,
                    "value": "#712: 127 >> 22 === 0. Actual: ",
                    "raw": "'#712: 127 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22740,
                    "end": 22751,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22741,
                      "end": 22750,
                      "left": {
                        "type": "Literal",
                        "start": 22741,
                        "end": 22744,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22748,
                        "end": 22750,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22760,
      "end": 22861,
      "test": {
        "type": "BinaryExpression",
        "start": 22764,
        "end": 22779,
        "left": {
          "type": "BinaryExpression",
          "start": 22764,
          "end": 22773,
          "left": {
            "type": "Literal",
            "start": 22764,
            "end": 22767,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22771,
            "end": 22773,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22778,
          "end": 22779,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22781,
        "end": 22861,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22786,
            "end": 22858,
            "argument": {
              "type": "NewExpression",
              "start": 22792,
              "end": 22857,
              "callee": {
                "type": "Identifier",
                "start": 22796,
                "end": 22808,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22809,
                  "end": 22856,
                  "left": {
                    "type": "Literal",
                    "start": 22809,
                    "end": 22842,
                    "value": "#713: 255 >> 22 === 0. Actual: ",
                    "raw": "'#713: 255 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22845,
                    "end": 22856,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22846,
                      "end": 22855,
                      "left": {
                        "type": "Literal",
                        "start": 22846,
                        "end": 22849,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22853,
                        "end": 22855,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22865,
      "end": 22966,
      "test": {
        "type": "BinaryExpression",
        "start": 22869,
        "end": 22884,
        "left": {
          "type": "BinaryExpression",
          "start": 22869,
          "end": 22878,
          "left": {
            "type": "Literal",
            "start": 22869,
            "end": 22872,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22876,
            "end": 22878,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22883,
          "end": 22884,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22886,
        "end": 22966,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22891,
            "end": 22963,
            "argument": {
              "type": "NewExpression",
              "start": 22897,
              "end": 22962,
              "callee": {
                "type": "Identifier",
                "start": 22901,
                "end": 22913,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 22914,
                  "end": 22961,
                  "left": {
                    "type": "Literal",
                    "start": 22914,
                    "end": 22947,
                    "value": "#714: 511 >> 22 === 0. Actual: ",
                    "raw": "'#714: 511 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 22950,
                    "end": 22961,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 22951,
                      "end": 22960,
                      "left": {
                        "type": "Literal",
                        "start": 22951,
                        "end": 22954,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 22958,
                        "end": 22960,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 22970,
      "end": 23074,
      "test": {
        "type": "BinaryExpression",
        "start": 22974,
        "end": 22990,
        "left": {
          "type": "BinaryExpression",
          "start": 22974,
          "end": 22984,
          "left": {
            "type": "Literal",
            "start": 22974,
            "end": 22978,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 22982,
            "end": 22984,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 22989,
          "end": 22990,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 22992,
        "end": 23074,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 22997,
            "end": 23071,
            "argument": {
              "type": "NewExpression",
              "start": 23003,
              "end": 23070,
              "callee": {
                "type": "Identifier",
                "start": 23007,
                "end": 23019,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23020,
                  "end": 23069,
                  "left": {
                    "type": "Literal",
                    "start": 23020,
                    "end": 23054,
                    "value": "#715: 1023 >> 22 === 0. Actual: ",
                    "raw": "'#715: 1023 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23057,
                    "end": 23069,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23058,
                      "end": 23068,
                      "left": {
                        "type": "Literal",
                        "start": 23058,
                        "end": 23062,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23066,
                        "end": 23068,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23078,
      "end": 23182,
      "test": {
        "type": "BinaryExpression",
        "start": 23082,
        "end": 23098,
        "left": {
          "type": "BinaryExpression",
          "start": 23082,
          "end": 23092,
          "left": {
            "type": "Literal",
            "start": 23082,
            "end": 23086,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23090,
            "end": 23092,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23097,
          "end": 23098,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23100,
        "end": 23182,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23105,
            "end": 23179,
            "argument": {
              "type": "NewExpression",
              "start": 23111,
              "end": 23178,
              "callee": {
                "type": "Identifier",
                "start": 23115,
                "end": 23127,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23128,
                  "end": 23177,
                  "left": {
                    "type": "Literal",
                    "start": 23128,
                    "end": 23162,
                    "value": "#716: 2047 >> 22 === 0. Actual: ",
                    "raw": "'#716: 2047 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23165,
                    "end": 23177,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23166,
                      "end": 23176,
                      "left": {
                        "type": "Literal",
                        "start": 23166,
                        "end": 23170,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23174,
                        "end": 23176,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23186,
      "end": 23290,
      "test": {
        "type": "BinaryExpression",
        "start": 23190,
        "end": 23206,
        "left": {
          "type": "BinaryExpression",
          "start": 23190,
          "end": 23200,
          "left": {
            "type": "Literal",
            "start": 23190,
            "end": 23194,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23198,
            "end": 23200,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23205,
          "end": 23206,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23208,
        "end": 23290,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23213,
            "end": 23287,
            "argument": {
              "type": "NewExpression",
              "start": 23219,
              "end": 23286,
              "callee": {
                "type": "Identifier",
                "start": 23223,
                "end": 23235,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23236,
                  "end": 23285,
                  "left": {
                    "type": "Literal",
                    "start": 23236,
                    "end": 23270,
                    "value": "#717: 4095 >> 22 === 0. Actual: ",
                    "raw": "'#717: 4095 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23273,
                    "end": 23285,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23274,
                      "end": 23284,
                      "left": {
                        "type": "Literal",
                        "start": 23274,
                        "end": 23278,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23282,
                        "end": 23284,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23294,
      "end": 23398,
      "test": {
        "type": "BinaryExpression",
        "start": 23298,
        "end": 23314,
        "left": {
          "type": "BinaryExpression",
          "start": 23298,
          "end": 23308,
          "left": {
            "type": "Literal",
            "start": 23298,
            "end": 23302,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23306,
            "end": 23308,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23313,
          "end": 23314,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23316,
        "end": 23398,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23321,
            "end": 23395,
            "argument": {
              "type": "NewExpression",
              "start": 23327,
              "end": 23394,
              "callee": {
                "type": "Identifier",
                "start": 23331,
                "end": 23343,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23344,
                  "end": 23393,
                  "left": {
                    "type": "Literal",
                    "start": 23344,
                    "end": 23378,
                    "value": "#718: 8191 >> 22 === 0. Actual: ",
                    "raw": "'#718: 8191 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23381,
                    "end": 23393,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23382,
                      "end": 23392,
                      "left": {
                        "type": "Literal",
                        "start": 23382,
                        "end": 23386,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23390,
                        "end": 23392,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23402,
      "end": 23509,
      "test": {
        "type": "BinaryExpression",
        "start": 23406,
        "end": 23423,
        "left": {
          "type": "BinaryExpression",
          "start": 23406,
          "end": 23417,
          "left": {
            "type": "Literal",
            "start": 23406,
            "end": 23411,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23415,
            "end": 23417,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23422,
          "end": 23423,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23425,
        "end": 23509,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23430,
            "end": 23506,
            "argument": {
              "type": "NewExpression",
              "start": 23436,
              "end": 23505,
              "callee": {
                "type": "Identifier",
                "start": 23440,
                "end": 23452,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23453,
                  "end": 23504,
                  "left": {
                    "type": "Literal",
                    "start": 23453,
                    "end": 23488,
                    "value": "#719: 16383 >> 22 === 0. Actual: ",
                    "raw": "'#719: 16383 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23491,
                    "end": 23504,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23492,
                      "end": 23503,
                      "left": {
                        "type": "Literal",
                        "start": 23492,
                        "end": 23497,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23501,
                        "end": 23503,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23513,
      "end": 23620,
      "test": {
        "type": "BinaryExpression",
        "start": 23517,
        "end": 23534,
        "left": {
          "type": "BinaryExpression",
          "start": 23517,
          "end": 23528,
          "left": {
            "type": "Literal",
            "start": 23517,
            "end": 23522,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23526,
            "end": 23528,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23533,
          "end": 23534,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23536,
        "end": 23620,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23541,
            "end": 23617,
            "argument": {
              "type": "NewExpression",
              "start": 23547,
              "end": 23616,
              "callee": {
                "type": "Identifier",
                "start": 23551,
                "end": 23563,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23564,
                  "end": 23615,
                  "left": {
                    "type": "Literal",
                    "start": 23564,
                    "end": 23599,
                    "value": "#720: 32767 >> 22 === 0. Actual: ",
                    "raw": "'#720: 32767 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23602,
                    "end": 23615,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23603,
                      "end": 23614,
                      "left": {
                        "type": "Literal",
                        "start": 23603,
                        "end": 23608,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23612,
                        "end": 23614,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23624,
      "end": 23731,
      "test": {
        "type": "BinaryExpression",
        "start": 23628,
        "end": 23645,
        "left": {
          "type": "BinaryExpression",
          "start": 23628,
          "end": 23639,
          "left": {
            "type": "Literal",
            "start": 23628,
            "end": 23633,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23637,
            "end": 23639,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23644,
          "end": 23645,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23647,
        "end": 23731,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23652,
            "end": 23728,
            "argument": {
              "type": "NewExpression",
              "start": 23658,
              "end": 23727,
              "callee": {
                "type": "Identifier",
                "start": 23662,
                "end": 23674,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23675,
                  "end": 23726,
                  "left": {
                    "type": "Literal",
                    "start": 23675,
                    "end": 23710,
                    "value": "#721: 65535 >> 22 === 0. Actual: ",
                    "raw": "'#721: 65535 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23713,
                    "end": 23726,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23714,
                      "end": 23725,
                      "left": {
                        "type": "Literal",
                        "start": 23714,
                        "end": 23719,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23723,
                        "end": 23725,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23735,
      "end": 23845,
      "test": {
        "type": "BinaryExpression",
        "start": 23739,
        "end": 23757,
        "left": {
          "type": "BinaryExpression",
          "start": 23739,
          "end": 23751,
          "left": {
            "type": "Literal",
            "start": 23739,
            "end": 23745,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23749,
            "end": 23751,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23756,
          "end": 23757,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23759,
        "end": 23845,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23764,
            "end": 23842,
            "argument": {
              "type": "NewExpression",
              "start": 23770,
              "end": 23841,
              "callee": {
                "type": "Identifier",
                "start": 23774,
                "end": 23786,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23787,
                  "end": 23840,
                  "left": {
                    "type": "Literal",
                    "start": 23787,
                    "end": 23823,
                    "value": "#722: 131071 >> 22 === 0. Actual: ",
                    "raw": "'#722: 131071 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23826,
                    "end": 23840,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23827,
                      "end": 23839,
                      "left": {
                        "type": "Literal",
                        "start": 23827,
                        "end": 23833,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23837,
                        "end": 23839,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23849,
      "end": 23959,
      "test": {
        "type": "BinaryExpression",
        "start": 23853,
        "end": 23871,
        "left": {
          "type": "BinaryExpression",
          "start": 23853,
          "end": 23865,
          "left": {
            "type": "Literal",
            "start": 23853,
            "end": 23859,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23863,
            "end": 23865,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23870,
          "end": 23871,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23873,
        "end": 23959,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23878,
            "end": 23956,
            "argument": {
              "type": "NewExpression",
              "start": 23884,
              "end": 23955,
              "callee": {
                "type": "Identifier",
                "start": 23888,
                "end": 23900,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 23901,
                  "end": 23954,
                  "left": {
                    "type": "Literal",
                    "start": 23901,
                    "end": 23937,
                    "value": "#723: 262143 >> 22 === 0. Actual: ",
                    "raw": "'#723: 262143 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 23940,
                    "end": 23954,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 23941,
                      "end": 23953,
                      "left": {
                        "type": "Literal",
                        "start": 23941,
                        "end": 23947,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 23951,
                        "end": 23953,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 23963,
      "end": 24073,
      "test": {
        "type": "BinaryExpression",
        "start": 23967,
        "end": 23985,
        "left": {
          "type": "BinaryExpression",
          "start": 23967,
          "end": 23979,
          "left": {
            "type": "Literal",
            "start": 23967,
            "end": 23973,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 23977,
            "end": 23979,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 23984,
          "end": 23985,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 23987,
        "end": 24073,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 23992,
            "end": 24070,
            "argument": {
              "type": "NewExpression",
              "start": 23998,
              "end": 24069,
              "callee": {
                "type": "Identifier",
                "start": 24002,
                "end": 24014,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24015,
                  "end": 24068,
                  "left": {
                    "type": "Literal",
                    "start": 24015,
                    "end": 24051,
                    "value": "#724: 524287 >> 22 === 0. Actual: ",
                    "raw": "'#724: 524287 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24054,
                    "end": 24068,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24055,
                      "end": 24067,
                      "left": {
                        "type": "Literal",
                        "start": 24055,
                        "end": 24061,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24065,
                        "end": 24067,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24077,
      "end": 24190,
      "test": {
        "type": "BinaryExpression",
        "start": 24081,
        "end": 24100,
        "left": {
          "type": "BinaryExpression",
          "start": 24081,
          "end": 24094,
          "left": {
            "type": "Literal",
            "start": 24081,
            "end": 24088,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24092,
            "end": 24094,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24099,
          "end": 24100,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24102,
        "end": 24190,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24107,
            "end": 24187,
            "argument": {
              "type": "NewExpression",
              "start": 24113,
              "end": 24186,
              "callee": {
                "type": "Identifier",
                "start": 24117,
                "end": 24129,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24130,
                  "end": 24185,
                  "left": {
                    "type": "Literal",
                    "start": 24130,
                    "end": 24167,
                    "value": "#725: 1048575 >> 22 === 0. Actual: ",
                    "raw": "'#725: 1048575 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24170,
                    "end": 24185,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24171,
                      "end": 24184,
                      "left": {
                        "type": "Literal",
                        "start": 24171,
                        "end": 24178,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24182,
                        "end": 24184,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24194,
      "end": 24307,
      "test": {
        "type": "BinaryExpression",
        "start": 24198,
        "end": 24217,
        "left": {
          "type": "BinaryExpression",
          "start": 24198,
          "end": 24211,
          "left": {
            "type": "Literal",
            "start": 24198,
            "end": 24205,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24209,
            "end": 24211,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24216,
          "end": 24217,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24219,
        "end": 24307,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24224,
            "end": 24304,
            "argument": {
              "type": "NewExpression",
              "start": 24230,
              "end": 24303,
              "callee": {
                "type": "Identifier",
                "start": 24234,
                "end": 24246,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24247,
                  "end": 24302,
                  "left": {
                    "type": "Literal",
                    "start": 24247,
                    "end": 24284,
                    "value": "#726: 2097151 >> 22 === 0. Actual: ",
                    "raw": "'#726: 2097151 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24287,
                    "end": 24302,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24288,
                      "end": 24301,
                      "left": {
                        "type": "Literal",
                        "start": 24288,
                        "end": 24295,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24299,
                        "end": 24301,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24311,
      "end": 24424,
      "test": {
        "type": "BinaryExpression",
        "start": 24315,
        "end": 24334,
        "left": {
          "type": "BinaryExpression",
          "start": 24315,
          "end": 24328,
          "left": {
            "type": "Literal",
            "start": 24315,
            "end": 24322,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24326,
            "end": 24328,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24333,
          "end": 24334,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24336,
        "end": 24424,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24341,
            "end": 24421,
            "argument": {
              "type": "NewExpression",
              "start": 24347,
              "end": 24420,
              "callee": {
                "type": "Identifier",
                "start": 24351,
                "end": 24363,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24364,
                  "end": 24419,
                  "left": {
                    "type": "Literal",
                    "start": 24364,
                    "end": 24401,
                    "value": "#727: 4194303 >> 22 === 0. Actual: ",
                    "raw": "'#727: 4194303 >> 22 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24404,
                    "end": 24419,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24405,
                      "end": 24418,
                      "left": {
                        "type": "Literal",
                        "start": 24405,
                        "end": 24412,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24416,
                        "end": 24418,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24428,
      "end": 24541,
      "test": {
        "type": "BinaryExpression",
        "start": 24432,
        "end": 24451,
        "left": {
          "type": "BinaryExpression",
          "start": 24432,
          "end": 24445,
          "left": {
            "type": "Literal",
            "start": 24432,
            "end": 24439,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24443,
            "end": 24445,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24450,
          "end": 24451,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24453,
        "end": 24541,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24458,
            "end": 24538,
            "argument": {
              "type": "NewExpression",
              "start": 24464,
              "end": 24537,
              "callee": {
                "type": "Identifier",
                "start": 24468,
                "end": 24480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24481,
                  "end": 24536,
                  "left": {
                    "type": "Literal",
                    "start": 24481,
                    "end": 24518,
                    "value": "#728: 8388607 >> 22 === 1. Actual: ",
                    "raw": "'#728: 8388607 >> 22 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24521,
                    "end": 24536,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24522,
                      "end": 24535,
                      "left": {
                        "type": "Literal",
                        "start": 24522,
                        "end": 24529,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24533,
                        "end": 24535,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24545,
      "end": 24661,
      "test": {
        "type": "BinaryExpression",
        "start": 24549,
        "end": 24569,
        "left": {
          "type": "BinaryExpression",
          "start": 24549,
          "end": 24563,
          "left": {
            "type": "Literal",
            "start": 24549,
            "end": 24557,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24561,
            "end": 24563,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24568,
          "end": 24569,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24571,
        "end": 24661,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24576,
            "end": 24658,
            "argument": {
              "type": "NewExpression",
              "start": 24582,
              "end": 24657,
              "callee": {
                "type": "Identifier",
                "start": 24586,
                "end": 24598,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24599,
                  "end": 24656,
                  "left": {
                    "type": "Literal",
                    "start": 24599,
                    "end": 24637,
                    "value": "#729: 16777215 >> 22 === 3. Actual: ",
                    "raw": "'#729: 16777215 >> 22 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24640,
                    "end": 24656,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24641,
                      "end": 24655,
                      "left": {
                        "type": "Literal",
                        "start": 24641,
                        "end": 24649,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24653,
                        "end": 24655,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24665,
      "end": 24781,
      "test": {
        "type": "BinaryExpression",
        "start": 24669,
        "end": 24689,
        "left": {
          "type": "BinaryExpression",
          "start": 24669,
          "end": 24683,
          "left": {
            "type": "Literal",
            "start": 24669,
            "end": 24677,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24681,
            "end": 24683,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24688,
          "end": 24689,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24691,
        "end": 24781,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24696,
            "end": 24778,
            "argument": {
              "type": "NewExpression",
              "start": 24702,
              "end": 24777,
              "callee": {
                "type": "Identifier",
                "start": 24706,
                "end": 24718,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24719,
                  "end": 24776,
                  "left": {
                    "type": "Literal",
                    "start": 24719,
                    "end": 24757,
                    "value": "#730: 33554431 >> 22 === 7. Actual: ",
                    "raw": "'#730: 33554431 >> 22 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24760,
                    "end": 24776,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24761,
                      "end": 24775,
                      "left": {
                        "type": "Literal",
                        "start": 24761,
                        "end": 24769,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24773,
                        "end": 24775,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24785,
      "end": 24903,
      "test": {
        "type": "BinaryExpression",
        "start": 24789,
        "end": 24810,
        "left": {
          "type": "BinaryExpression",
          "start": 24789,
          "end": 24803,
          "left": {
            "type": "Literal",
            "start": 24789,
            "end": 24797,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24801,
            "end": 24803,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24808,
          "end": 24810,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24812,
        "end": 24903,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24817,
            "end": 24900,
            "argument": {
              "type": "NewExpression",
              "start": 24823,
              "end": 24899,
              "callee": {
                "type": "Identifier",
                "start": 24827,
                "end": 24839,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24840,
                  "end": 24898,
                  "left": {
                    "type": "Literal",
                    "start": 24840,
                    "end": 24879,
                    "value": "#731: 67108863 >> 22 === 15. Actual: ",
                    "raw": "'#731: 67108863 >> 22 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 24882,
                    "end": 24898,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 24883,
                      "end": 24897,
                      "left": {
                        "type": "Literal",
                        "start": 24883,
                        "end": 24891,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 24895,
                        "end": 24897,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 24907,
      "end": 25028,
      "test": {
        "type": "BinaryExpression",
        "start": 24911,
        "end": 24933,
        "left": {
          "type": "BinaryExpression",
          "start": 24911,
          "end": 24926,
          "left": {
            "type": "Literal",
            "start": 24911,
            "end": 24920,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 24924,
            "end": 24926,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 24931,
          "end": 24933,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 24935,
        "end": 25028,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 24940,
            "end": 25025,
            "argument": {
              "type": "NewExpression",
              "start": 24946,
              "end": 25024,
              "callee": {
                "type": "Identifier",
                "start": 24950,
                "end": 24962,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 24963,
                  "end": 25023,
                  "left": {
                    "type": "Literal",
                    "start": 24963,
                    "end": 25003,
                    "value": "#732: 134217727 >> 22 === 31. Actual: ",
                    "raw": "'#732: 134217727 >> 22 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25006,
                    "end": 25023,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25007,
                      "end": 25022,
                      "left": {
                        "type": "Literal",
                        "start": 25007,
                        "end": 25016,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25020,
                        "end": 25022,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25032,
      "end": 25153,
      "test": {
        "type": "BinaryExpression",
        "start": 25036,
        "end": 25058,
        "left": {
          "type": "BinaryExpression",
          "start": 25036,
          "end": 25051,
          "left": {
            "type": "Literal",
            "start": 25036,
            "end": 25045,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25049,
            "end": 25051,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25056,
          "end": 25058,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25060,
        "end": 25153,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25065,
            "end": 25150,
            "argument": {
              "type": "NewExpression",
              "start": 25071,
              "end": 25149,
              "callee": {
                "type": "Identifier",
                "start": 25075,
                "end": 25087,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25088,
                  "end": 25148,
                  "left": {
                    "type": "Literal",
                    "start": 25088,
                    "end": 25128,
                    "value": "#733: 268435455 >> 22 === 63. Actual: ",
                    "raw": "'#733: 268435455 >> 22 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25131,
                    "end": 25148,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25132,
                      "end": 25147,
                      "left": {
                        "type": "Literal",
                        "start": 25132,
                        "end": 25141,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25145,
                        "end": 25147,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25157,
      "end": 25280,
      "test": {
        "type": "BinaryExpression",
        "start": 25161,
        "end": 25184,
        "left": {
          "type": "BinaryExpression",
          "start": 25161,
          "end": 25176,
          "left": {
            "type": "Literal",
            "start": 25161,
            "end": 25170,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25174,
            "end": 25176,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25181,
          "end": 25184,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25186,
        "end": 25280,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25191,
            "end": 25277,
            "argument": {
              "type": "NewExpression",
              "start": 25197,
              "end": 25276,
              "callee": {
                "type": "Identifier",
                "start": 25201,
                "end": 25213,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25214,
                  "end": 25275,
                  "left": {
                    "type": "Literal",
                    "start": 25214,
                    "end": 25255,
                    "value": "#734: 536870911 >> 22 === 127. Actual: ",
                    "raw": "'#734: 536870911 >> 22 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25258,
                    "end": 25275,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25259,
                      "end": 25274,
                      "left": {
                        "type": "Literal",
                        "start": 25259,
                        "end": 25268,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25272,
                        "end": 25274,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25284,
      "end": 25410,
      "test": {
        "type": "BinaryExpression",
        "start": 25288,
        "end": 25312,
        "left": {
          "type": "BinaryExpression",
          "start": 25288,
          "end": 25304,
          "left": {
            "type": "Literal",
            "start": 25288,
            "end": 25298,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25302,
            "end": 25304,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25309,
          "end": 25312,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25314,
        "end": 25410,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25319,
            "end": 25407,
            "argument": {
              "type": "NewExpression",
              "start": 25325,
              "end": 25406,
              "callee": {
                "type": "Identifier",
                "start": 25329,
                "end": 25341,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25342,
                  "end": 25405,
                  "left": {
                    "type": "Literal",
                    "start": 25342,
                    "end": 25384,
                    "value": "#735: 1073741823 >> 22 === 255. Actual: ",
                    "raw": "'#735: 1073741823 >> 22 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25387,
                    "end": 25405,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25388,
                      "end": 25404,
                      "left": {
                        "type": "Literal",
                        "start": 25388,
                        "end": 25398,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25402,
                        "end": 25404,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25414,
      "end": 25540,
      "test": {
        "type": "BinaryExpression",
        "start": 25418,
        "end": 25442,
        "left": {
          "type": "BinaryExpression",
          "start": 25418,
          "end": 25434,
          "left": {
            "type": "Literal",
            "start": 25418,
            "end": 25428,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25432,
            "end": 25434,
            "value": 22,
            "raw": "22",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25439,
          "end": 25442,
          "value": 511,
          "raw": "511",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25444,
        "end": 25540,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25449,
            "end": 25537,
            "argument": {
              "type": "NewExpression",
              "start": 25455,
              "end": 25536,
              "callee": {
                "type": "Identifier",
                "start": 25459,
                "end": 25471,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25472,
                  "end": 25535,
                  "left": {
                    "type": "Literal",
                    "start": 25472,
                    "end": 25514,
                    "value": "#736: 2147483647 >> 22 === 511. Actual: ",
                    "raw": "'#736: 2147483647 >> 22 === 511. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25517,
                    "end": 25535,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25518,
                      "end": 25534,
                      "left": {
                        "type": "Literal",
                        "start": 25518,
                        "end": 25528,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25532,
                        "end": 25534,
                        "value": 22,
                        "raw": "22",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25544,
      "end": 25639,
      "test": {
        "type": "BinaryExpression",
        "start": 25548,
        "end": 25561,
        "left": {
          "type": "BinaryExpression",
          "start": 25548,
          "end": 25555,
          "left": {
            "type": "Literal",
            "start": 25548,
            "end": 25549,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25553,
            "end": 25555,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25560,
          "end": 25561,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25563,
        "end": 25639,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25568,
            "end": 25636,
            "argument": {
              "type": "NewExpression",
              "start": 25574,
              "end": 25635,
              "callee": {
                "type": "Identifier",
                "start": 25578,
                "end": 25590,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25591,
                  "end": 25634,
                  "left": {
                    "type": "Literal",
                    "start": 25591,
                    "end": 25622,
                    "value": "#737: 0 >> 23 === 0. Actual: ",
                    "raw": "'#737: 0 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25625,
                    "end": 25634,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25626,
                      "end": 25633,
                      "left": {
                        "type": "Literal",
                        "start": 25626,
                        "end": 25627,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25631,
                        "end": 25633,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25643,
      "end": 25738,
      "test": {
        "type": "BinaryExpression",
        "start": 25647,
        "end": 25660,
        "left": {
          "type": "BinaryExpression",
          "start": 25647,
          "end": 25654,
          "left": {
            "type": "Literal",
            "start": 25647,
            "end": 25648,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25652,
            "end": 25654,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25659,
          "end": 25660,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25662,
        "end": 25738,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25667,
            "end": 25735,
            "argument": {
              "type": "NewExpression",
              "start": 25673,
              "end": 25734,
              "callee": {
                "type": "Identifier",
                "start": 25677,
                "end": 25689,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25690,
                  "end": 25733,
                  "left": {
                    "type": "Literal",
                    "start": 25690,
                    "end": 25721,
                    "value": "#738: 1 >> 23 === 0. Actual: ",
                    "raw": "'#738: 1 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25724,
                    "end": 25733,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25725,
                      "end": 25732,
                      "left": {
                        "type": "Literal",
                        "start": 25725,
                        "end": 25726,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25730,
                        "end": 25732,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25742,
      "end": 25837,
      "test": {
        "type": "BinaryExpression",
        "start": 25746,
        "end": 25759,
        "left": {
          "type": "BinaryExpression",
          "start": 25746,
          "end": 25753,
          "left": {
            "type": "Literal",
            "start": 25746,
            "end": 25747,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25751,
            "end": 25753,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25758,
          "end": 25759,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25761,
        "end": 25837,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25766,
            "end": 25834,
            "argument": {
              "type": "NewExpression",
              "start": 25772,
              "end": 25833,
              "callee": {
                "type": "Identifier",
                "start": 25776,
                "end": 25788,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25789,
                  "end": 25832,
                  "left": {
                    "type": "Literal",
                    "start": 25789,
                    "end": 25820,
                    "value": "#739: 3 >> 23 === 0. Actual: ",
                    "raw": "'#739: 3 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25823,
                    "end": 25832,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25824,
                      "end": 25831,
                      "left": {
                        "type": "Literal",
                        "start": 25824,
                        "end": 25825,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25829,
                        "end": 25831,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25841,
      "end": 25936,
      "test": {
        "type": "BinaryExpression",
        "start": 25845,
        "end": 25858,
        "left": {
          "type": "BinaryExpression",
          "start": 25845,
          "end": 25852,
          "left": {
            "type": "Literal",
            "start": 25845,
            "end": 25846,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25850,
            "end": 25852,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25857,
          "end": 25858,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25860,
        "end": 25936,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25865,
            "end": 25933,
            "argument": {
              "type": "NewExpression",
              "start": 25871,
              "end": 25932,
              "callee": {
                "type": "Identifier",
                "start": 25875,
                "end": 25887,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25888,
                  "end": 25931,
                  "left": {
                    "type": "Literal",
                    "start": 25888,
                    "end": 25919,
                    "value": "#740: 7 >> 23 === 0. Actual: ",
                    "raw": "'#740: 7 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 25922,
                    "end": 25931,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 25923,
                      "end": 25930,
                      "left": {
                        "type": "Literal",
                        "start": 25923,
                        "end": 25924,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 25928,
                        "end": 25930,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 25940,
      "end": 26038,
      "test": {
        "type": "BinaryExpression",
        "start": 25944,
        "end": 25958,
        "left": {
          "type": "BinaryExpression",
          "start": 25944,
          "end": 25952,
          "left": {
            "type": "Literal",
            "start": 25944,
            "end": 25946,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 25950,
            "end": 25952,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 25957,
          "end": 25958,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 25960,
        "end": 26038,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 25965,
            "end": 26035,
            "argument": {
              "type": "NewExpression",
              "start": 25971,
              "end": 26034,
              "callee": {
                "type": "Identifier",
                "start": 25975,
                "end": 25987,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 25988,
                  "end": 26033,
                  "left": {
                    "type": "Literal",
                    "start": 25988,
                    "end": 26020,
                    "value": "#741: 15 >> 23 === 0. Actual: ",
                    "raw": "'#741: 15 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26023,
                    "end": 26033,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26024,
                      "end": 26032,
                      "left": {
                        "type": "Literal",
                        "start": 26024,
                        "end": 26026,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26030,
                        "end": 26032,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26042,
      "end": 26140,
      "test": {
        "type": "BinaryExpression",
        "start": 26046,
        "end": 26060,
        "left": {
          "type": "BinaryExpression",
          "start": 26046,
          "end": 26054,
          "left": {
            "type": "Literal",
            "start": 26046,
            "end": 26048,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26052,
            "end": 26054,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26059,
          "end": 26060,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26062,
        "end": 26140,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26067,
            "end": 26137,
            "argument": {
              "type": "NewExpression",
              "start": 26073,
              "end": 26136,
              "callee": {
                "type": "Identifier",
                "start": 26077,
                "end": 26089,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26090,
                  "end": 26135,
                  "left": {
                    "type": "Literal",
                    "start": 26090,
                    "end": 26122,
                    "value": "#742: 31 >> 23 === 0. Actual: ",
                    "raw": "'#742: 31 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26125,
                    "end": 26135,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26126,
                      "end": 26134,
                      "left": {
                        "type": "Literal",
                        "start": 26126,
                        "end": 26128,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26132,
                        "end": 26134,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26144,
      "end": 26242,
      "test": {
        "type": "BinaryExpression",
        "start": 26148,
        "end": 26162,
        "left": {
          "type": "BinaryExpression",
          "start": 26148,
          "end": 26156,
          "left": {
            "type": "Literal",
            "start": 26148,
            "end": 26150,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26154,
            "end": 26156,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26161,
          "end": 26162,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26164,
        "end": 26242,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26169,
            "end": 26239,
            "argument": {
              "type": "NewExpression",
              "start": 26175,
              "end": 26238,
              "callee": {
                "type": "Identifier",
                "start": 26179,
                "end": 26191,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26192,
                  "end": 26237,
                  "left": {
                    "type": "Literal",
                    "start": 26192,
                    "end": 26224,
                    "value": "#743: 63 >> 23 === 0. Actual: ",
                    "raw": "'#743: 63 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26227,
                    "end": 26237,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26228,
                      "end": 26236,
                      "left": {
                        "type": "Literal",
                        "start": 26228,
                        "end": 26230,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26234,
                        "end": 26236,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26246,
      "end": 26347,
      "test": {
        "type": "BinaryExpression",
        "start": 26250,
        "end": 26265,
        "left": {
          "type": "BinaryExpression",
          "start": 26250,
          "end": 26259,
          "left": {
            "type": "Literal",
            "start": 26250,
            "end": 26253,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26257,
            "end": 26259,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26264,
          "end": 26265,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26267,
        "end": 26347,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26272,
            "end": 26344,
            "argument": {
              "type": "NewExpression",
              "start": 26278,
              "end": 26343,
              "callee": {
                "type": "Identifier",
                "start": 26282,
                "end": 26294,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26295,
                  "end": 26342,
                  "left": {
                    "type": "Literal",
                    "start": 26295,
                    "end": 26328,
                    "value": "#744: 127 >> 23 === 0. Actual: ",
                    "raw": "'#744: 127 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26331,
                    "end": 26342,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26332,
                      "end": 26341,
                      "left": {
                        "type": "Literal",
                        "start": 26332,
                        "end": 26335,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26339,
                        "end": 26341,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26351,
      "end": 26452,
      "test": {
        "type": "BinaryExpression",
        "start": 26355,
        "end": 26370,
        "left": {
          "type": "BinaryExpression",
          "start": 26355,
          "end": 26364,
          "left": {
            "type": "Literal",
            "start": 26355,
            "end": 26358,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26362,
            "end": 26364,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26369,
          "end": 26370,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26372,
        "end": 26452,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26377,
            "end": 26449,
            "argument": {
              "type": "NewExpression",
              "start": 26383,
              "end": 26448,
              "callee": {
                "type": "Identifier",
                "start": 26387,
                "end": 26399,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26400,
                  "end": 26447,
                  "left": {
                    "type": "Literal",
                    "start": 26400,
                    "end": 26433,
                    "value": "#745: 255 >> 23 === 0. Actual: ",
                    "raw": "'#745: 255 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26436,
                    "end": 26447,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26437,
                      "end": 26446,
                      "left": {
                        "type": "Literal",
                        "start": 26437,
                        "end": 26440,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26444,
                        "end": 26446,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26456,
      "end": 26557,
      "test": {
        "type": "BinaryExpression",
        "start": 26460,
        "end": 26475,
        "left": {
          "type": "BinaryExpression",
          "start": 26460,
          "end": 26469,
          "left": {
            "type": "Literal",
            "start": 26460,
            "end": 26463,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26467,
            "end": 26469,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26474,
          "end": 26475,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26477,
        "end": 26557,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26482,
            "end": 26554,
            "argument": {
              "type": "NewExpression",
              "start": 26488,
              "end": 26553,
              "callee": {
                "type": "Identifier",
                "start": 26492,
                "end": 26504,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26505,
                  "end": 26552,
                  "left": {
                    "type": "Literal",
                    "start": 26505,
                    "end": 26538,
                    "value": "#746: 511 >> 23 === 0. Actual: ",
                    "raw": "'#746: 511 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26541,
                    "end": 26552,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26542,
                      "end": 26551,
                      "left": {
                        "type": "Literal",
                        "start": 26542,
                        "end": 26545,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26549,
                        "end": 26551,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26561,
      "end": 26665,
      "test": {
        "type": "BinaryExpression",
        "start": 26565,
        "end": 26581,
        "left": {
          "type": "BinaryExpression",
          "start": 26565,
          "end": 26575,
          "left": {
            "type": "Literal",
            "start": 26565,
            "end": 26569,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26573,
            "end": 26575,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26580,
          "end": 26581,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26583,
        "end": 26665,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26588,
            "end": 26662,
            "argument": {
              "type": "NewExpression",
              "start": 26594,
              "end": 26661,
              "callee": {
                "type": "Identifier",
                "start": 26598,
                "end": 26610,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26611,
                  "end": 26660,
                  "left": {
                    "type": "Literal",
                    "start": 26611,
                    "end": 26645,
                    "value": "#747: 1023 >> 23 === 0. Actual: ",
                    "raw": "'#747: 1023 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26648,
                    "end": 26660,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26649,
                      "end": 26659,
                      "left": {
                        "type": "Literal",
                        "start": 26649,
                        "end": 26653,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26657,
                        "end": 26659,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26669,
      "end": 26773,
      "test": {
        "type": "BinaryExpression",
        "start": 26673,
        "end": 26689,
        "left": {
          "type": "BinaryExpression",
          "start": 26673,
          "end": 26683,
          "left": {
            "type": "Literal",
            "start": 26673,
            "end": 26677,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26681,
            "end": 26683,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26688,
          "end": 26689,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26691,
        "end": 26773,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26696,
            "end": 26770,
            "argument": {
              "type": "NewExpression",
              "start": 26702,
              "end": 26769,
              "callee": {
                "type": "Identifier",
                "start": 26706,
                "end": 26718,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26719,
                  "end": 26768,
                  "left": {
                    "type": "Literal",
                    "start": 26719,
                    "end": 26753,
                    "value": "#748: 2047 >> 23 === 0. Actual: ",
                    "raw": "'#748: 2047 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26756,
                    "end": 26768,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26757,
                      "end": 26767,
                      "left": {
                        "type": "Literal",
                        "start": 26757,
                        "end": 26761,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26765,
                        "end": 26767,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26777,
      "end": 26881,
      "test": {
        "type": "BinaryExpression",
        "start": 26781,
        "end": 26797,
        "left": {
          "type": "BinaryExpression",
          "start": 26781,
          "end": 26791,
          "left": {
            "type": "Literal",
            "start": 26781,
            "end": 26785,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26789,
            "end": 26791,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26796,
          "end": 26797,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26799,
        "end": 26881,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26804,
            "end": 26878,
            "argument": {
              "type": "NewExpression",
              "start": 26810,
              "end": 26877,
              "callee": {
                "type": "Identifier",
                "start": 26814,
                "end": 26826,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26827,
                  "end": 26876,
                  "left": {
                    "type": "Literal",
                    "start": 26827,
                    "end": 26861,
                    "value": "#749: 4095 >> 23 === 0. Actual: ",
                    "raw": "'#749: 4095 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26864,
                    "end": 26876,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26865,
                      "end": 26875,
                      "left": {
                        "type": "Literal",
                        "start": 26865,
                        "end": 26869,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26873,
                        "end": 26875,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26885,
      "end": 26989,
      "test": {
        "type": "BinaryExpression",
        "start": 26889,
        "end": 26905,
        "left": {
          "type": "BinaryExpression",
          "start": 26889,
          "end": 26899,
          "left": {
            "type": "Literal",
            "start": 26889,
            "end": 26893,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 26897,
            "end": 26899,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 26904,
          "end": 26905,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 26907,
        "end": 26989,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 26912,
            "end": 26986,
            "argument": {
              "type": "NewExpression",
              "start": 26918,
              "end": 26985,
              "callee": {
                "type": "Identifier",
                "start": 26922,
                "end": 26934,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 26935,
                  "end": 26984,
                  "left": {
                    "type": "Literal",
                    "start": 26935,
                    "end": 26969,
                    "value": "#750: 8191 >> 23 === 0. Actual: ",
                    "raw": "'#750: 8191 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 26972,
                    "end": 26984,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 26973,
                      "end": 26983,
                      "left": {
                        "type": "Literal",
                        "start": 26973,
                        "end": 26977,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 26981,
                        "end": 26983,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 26993,
      "end": 27100,
      "test": {
        "type": "BinaryExpression",
        "start": 26997,
        "end": 27014,
        "left": {
          "type": "BinaryExpression",
          "start": 26997,
          "end": 27008,
          "left": {
            "type": "Literal",
            "start": 26997,
            "end": 27002,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27006,
            "end": 27008,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27013,
          "end": 27014,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27016,
        "end": 27100,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27021,
            "end": 27097,
            "argument": {
              "type": "NewExpression",
              "start": 27027,
              "end": 27096,
              "callee": {
                "type": "Identifier",
                "start": 27031,
                "end": 27043,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27044,
                  "end": 27095,
                  "left": {
                    "type": "Literal",
                    "start": 27044,
                    "end": 27079,
                    "value": "#751: 16383 >> 23 === 0. Actual: ",
                    "raw": "'#751: 16383 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27082,
                    "end": 27095,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27083,
                      "end": 27094,
                      "left": {
                        "type": "Literal",
                        "start": 27083,
                        "end": 27088,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27092,
                        "end": 27094,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27104,
      "end": 27211,
      "test": {
        "type": "BinaryExpression",
        "start": 27108,
        "end": 27125,
        "left": {
          "type": "BinaryExpression",
          "start": 27108,
          "end": 27119,
          "left": {
            "type": "Literal",
            "start": 27108,
            "end": 27113,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27117,
            "end": 27119,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27124,
          "end": 27125,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27127,
        "end": 27211,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27132,
            "end": 27208,
            "argument": {
              "type": "NewExpression",
              "start": 27138,
              "end": 27207,
              "callee": {
                "type": "Identifier",
                "start": 27142,
                "end": 27154,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27155,
                  "end": 27206,
                  "left": {
                    "type": "Literal",
                    "start": 27155,
                    "end": 27190,
                    "value": "#752: 32767 >> 23 === 0. Actual: ",
                    "raw": "'#752: 32767 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27193,
                    "end": 27206,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27194,
                      "end": 27205,
                      "left": {
                        "type": "Literal",
                        "start": 27194,
                        "end": 27199,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27203,
                        "end": 27205,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27215,
      "end": 27322,
      "test": {
        "type": "BinaryExpression",
        "start": 27219,
        "end": 27236,
        "left": {
          "type": "BinaryExpression",
          "start": 27219,
          "end": 27230,
          "left": {
            "type": "Literal",
            "start": 27219,
            "end": 27224,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27228,
            "end": 27230,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27235,
          "end": 27236,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27238,
        "end": 27322,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27243,
            "end": 27319,
            "argument": {
              "type": "NewExpression",
              "start": 27249,
              "end": 27318,
              "callee": {
                "type": "Identifier",
                "start": 27253,
                "end": 27265,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27266,
                  "end": 27317,
                  "left": {
                    "type": "Literal",
                    "start": 27266,
                    "end": 27301,
                    "value": "#753: 65535 >> 23 === 0. Actual: ",
                    "raw": "'#753: 65535 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27304,
                    "end": 27317,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27305,
                      "end": 27316,
                      "left": {
                        "type": "Literal",
                        "start": 27305,
                        "end": 27310,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27314,
                        "end": 27316,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27326,
      "end": 27436,
      "test": {
        "type": "BinaryExpression",
        "start": 27330,
        "end": 27348,
        "left": {
          "type": "BinaryExpression",
          "start": 27330,
          "end": 27342,
          "left": {
            "type": "Literal",
            "start": 27330,
            "end": 27336,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27340,
            "end": 27342,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27347,
          "end": 27348,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27350,
        "end": 27436,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27355,
            "end": 27433,
            "argument": {
              "type": "NewExpression",
              "start": 27361,
              "end": 27432,
              "callee": {
                "type": "Identifier",
                "start": 27365,
                "end": 27377,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27378,
                  "end": 27431,
                  "left": {
                    "type": "Literal",
                    "start": 27378,
                    "end": 27414,
                    "value": "#754: 131071 >> 23 === 0. Actual: ",
                    "raw": "'#754: 131071 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27417,
                    "end": 27431,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27418,
                      "end": 27430,
                      "left": {
                        "type": "Literal",
                        "start": 27418,
                        "end": 27424,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27428,
                        "end": 27430,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27440,
      "end": 27550,
      "test": {
        "type": "BinaryExpression",
        "start": 27444,
        "end": 27462,
        "left": {
          "type": "BinaryExpression",
          "start": 27444,
          "end": 27456,
          "left": {
            "type": "Literal",
            "start": 27444,
            "end": 27450,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27454,
            "end": 27456,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27461,
          "end": 27462,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27464,
        "end": 27550,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27469,
            "end": 27547,
            "argument": {
              "type": "NewExpression",
              "start": 27475,
              "end": 27546,
              "callee": {
                "type": "Identifier",
                "start": 27479,
                "end": 27491,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27492,
                  "end": 27545,
                  "left": {
                    "type": "Literal",
                    "start": 27492,
                    "end": 27528,
                    "value": "#755: 262143 >> 23 === 0. Actual: ",
                    "raw": "'#755: 262143 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27531,
                    "end": 27545,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27532,
                      "end": 27544,
                      "left": {
                        "type": "Literal",
                        "start": 27532,
                        "end": 27538,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27542,
                        "end": 27544,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27554,
      "end": 27664,
      "test": {
        "type": "BinaryExpression",
        "start": 27558,
        "end": 27576,
        "left": {
          "type": "BinaryExpression",
          "start": 27558,
          "end": 27570,
          "left": {
            "type": "Literal",
            "start": 27558,
            "end": 27564,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27568,
            "end": 27570,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27575,
          "end": 27576,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27578,
        "end": 27664,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27583,
            "end": 27661,
            "argument": {
              "type": "NewExpression",
              "start": 27589,
              "end": 27660,
              "callee": {
                "type": "Identifier",
                "start": 27593,
                "end": 27605,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27606,
                  "end": 27659,
                  "left": {
                    "type": "Literal",
                    "start": 27606,
                    "end": 27642,
                    "value": "#756: 524287 >> 23 === 0. Actual: ",
                    "raw": "'#756: 524287 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27645,
                    "end": 27659,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27646,
                      "end": 27658,
                      "left": {
                        "type": "Literal",
                        "start": 27646,
                        "end": 27652,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27656,
                        "end": 27658,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27668,
      "end": 27781,
      "test": {
        "type": "BinaryExpression",
        "start": 27672,
        "end": 27691,
        "left": {
          "type": "BinaryExpression",
          "start": 27672,
          "end": 27685,
          "left": {
            "type": "Literal",
            "start": 27672,
            "end": 27679,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27683,
            "end": 27685,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27690,
          "end": 27691,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27693,
        "end": 27781,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27698,
            "end": 27778,
            "argument": {
              "type": "NewExpression",
              "start": 27704,
              "end": 27777,
              "callee": {
                "type": "Identifier",
                "start": 27708,
                "end": 27720,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27721,
                  "end": 27776,
                  "left": {
                    "type": "Literal",
                    "start": 27721,
                    "end": 27758,
                    "value": "#757: 1048575 >> 23 === 0. Actual: ",
                    "raw": "'#757: 1048575 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27761,
                    "end": 27776,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27762,
                      "end": 27775,
                      "left": {
                        "type": "Literal",
                        "start": 27762,
                        "end": 27769,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27773,
                        "end": 27775,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27785,
      "end": 27898,
      "test": {
        "type": "BinaryExpression",
        "start": 27789,
        "end": 27808,
        "left": {
          "type": "BinaryExpression",
          "start": 27789,
          "end": 27802,
          "left": {
            "type": "Literal",
            "start": 27789,
            "end": 27796,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27800,
            "end": 27802,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27807,
          "end": 27808,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27810,
        "end": 27898,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27815,
            "end": 27895,
            "argument": {
              "type": "NewExpression",
              "start": 27821,
              "end": 27894,
              "callee": {
                "type": "Identifier",
                "start": 27825,
                "end": 27837,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27838,
                  "end": 27893,
                  "left": {
                    "type": "Literal",
                    "start": 27838,
                    "end": 27875,
                    "value": "#758: 2097151 >> 23 === 0. Actual: ",
                    "raw": "'#758: 2097151 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27878,
                    "end": 27893,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27879,
                      "end": 27892,
                      "left": {
                        "type": "Literal",
                        "start": 27879,
                        "end": 27886,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 27890,
                        "end": 27892,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 27902,
      "end": 28015,
      "test": {
        "type": "BinaryExpression",
        "start": 27906,
        "end": 27925,
        "left": {
          "type": "BinaryExpression",
          "start": 27906,
          "end": 27919,
          "left": {
            "type": "Literal",
            "start": 27906,
            "end": 27913,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 27917,
            "end": 27919,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 27924,
          "end": 27925,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 27927,
        "end": 28015,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 27932,
            "end": 28012,
            "argument": {
              "type": "NewExpression",
              "start": 27938,
              "end": 28011,
              "callee": {
                "type": "Identifier",
                "start": 27942,
                "end": 27954,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 27955,
                  "end": 28010,
                  "left": {
                    "type": "Literal",
                    "start": 27955,
                    "end": 27992,
                    "value": "#759: 4194303 >> 23 === 0. Actual: ",
                    "raw": "'#759: 4194303 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 27995,
                    "end": 28010,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 27996,
                      "end": 28009,
                      "left": {
                        "type": "Literal",
                        "start": 27996,
                        "end": 28003,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28007,
                        "end": 28009,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28019,
      "end": 28132,
      "test": {
        "type": "BinaryExpression",
        "start": 28023,
        "end": 28042,
        "left": {
          "type": "BinaryExpression",
          "start": 28023,
          "end": 28036,
          "left": {
            "type": "Literal",
            "start": 28023,
            "end": 28030,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28034,
            "end": 28036,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28041,
          "end": 28042,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28044,
        "end": 28132,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28049,
            "end": 28129,
            "argument": {
              "type": "NewExpression",
              "start": 28055,
              "end": 28128,
              "callee": {
                "type": "Identifier",
                "start": 28059,
                "end": 28071,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28072,
                  "end": 28127,
                  "left": {
                    "type": "Literal",
                    "start": 28072,
                    "end": 28109,
                    "value": "#760: 8388607 >> 23 === 0. Actual: ",
                    "raw": "'#760: 8388607 >> 23 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28112,
                    "end": 28127,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28113,
                      "end": 28126,
                      "left": {
                        "type": "Literal",
                        "start": 28113,
                        "end": 28120,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28124,
                        "end": 28126,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28136,
      "end": 28252,
      "test": {
        "type": "BinaryExpression",
        "start": 28140,
        "end": 28160,
        "left": {
          "type": "BinaryExpression",
          "start": 28140,
          "end": 28154,
          "left": {
            "type": "Literal",
            "start": 28140,
            "end": 28148,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28152,
            "end": 28154,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28159,
          "end": 28160,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28162,
        "end": 28252,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28167,
            "end": 28249,
            "argument": {
              "type": "NewExpression",
              "start": 28173,
              "end": 28248,
              "callee": {
                "type": "Identifier",
                "start": 28177,
                "end": 28189,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28190,
                  "end": 28247,
                  "left": {
                    "type": "Literal",
                    "start": 28190,
                    "end": 28228,
                    "value": "#761: 16777215 >> 23 === 1. Actual: ",
                    "raw": "'#761: 16777215 >> 23 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28231,
                    "end": 28247,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28232,
                      "end": 28246,
                      "left": {
                        "type": "Literal",
                        "start": 28232,
                        "end": 28240,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28244,
                        "end": 28246,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28256,
      "end": 28372,
      "test": {
        "type": "BinaryExpression",
        "start": 28260,
        "end": 28280,
        "left": {
          "type": "BinaryExpression",
          "start": 28260,
          "end": 28274,
          "left": {
            "type": "Literal",
            "start": 28260,
            "end": 28268,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28272,
            "end": 28274,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28279,
          "end": 28280,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28282,
        "end": 28372,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28287,
            "end": 28369,
            "argument": {
              "type": "NewExpression",
              "start": 28293,
              "end": 28368,
              "callee": {
                "type": "Identifier",
                "start": 28297,
                "end": 28309,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28310,
                  "end": 28367,
                  "left": {
                    "type": "Literal",
                    "start": 28310,
                    "end": 28348,
                    "value": "#762: 33554431 >> 23 === 3. Actual: ",
                    "raw": "'#762: 33554431 >> 23 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28351,
                    "end": 28367,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28352,
                      "end": 28366,
                      "left": {
                        "type": "Literal",
                        "start": 28352,
                        "end": 28360,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28364,
                        "end": 28366,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28376,
      "end": 28492,
      "test": {
        "type": "BinaryExpression",
        "start": 28380,
        "end": 28400,
        "left": {
          "type": "BinaryExpression",
          "start": 28380,
          "end": 28394,
          "left": {
            "type": "Literal",
            "start": 28380,
            "end": 28388,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28392,
            "end": 28394,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28399,
          "end": 28400,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28402,
        "end": 28492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28407,
            "end": 28489,
            "argument": {
              "type": "NewExpression",
              "start": 28413,
              "end": 28488,
              "callee": {
                "type": "Identifier",
                "start": 28417,
                "end": 28429,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28430,
                  "end": 28487,
                  "left": {
                    "type": "Literal",
                    "start": 28430,
                    "end": 28468,
                    "value": "#763: 67108863 >> 23 === 7. Actual: ",
                    "raw": "'#763: 67108863 >> 23 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28471,
                    "end": 28487,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28472,
                      "end": 28486,
                      "left": {
                        "type": "Literal",
                        "start": 28472,
                        "end": 28480,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28484,
                        "end": 28486,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28496,
      "end": 28617,
      "test": {
        "type": "BinaryExpression",
        "start": 28500,
        "end": 28522,
        "left": {
          "type": "BinaryExpression",
          "start": 28500,
          "end": 28515,
          "left": {
            "type": "Literal",
            "start": 28500,
            "end": 28509,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28513,
            "end": 28515,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28520,
          "end": 28522,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28524,
        "end": 28617,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28529,
            "end": 28614,
            "argument": {
              "type": "NewExpression",
              "start": 28535,
              "end": 28613,
              "callee": {
                "type": "Identifier",
                "start": 28539,
                "end": 28551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28552,
                  "end": 28612,
                  "left": {
                    "type": "Literal",
                    "start": 28552,
                    "end": 28592,
                    "value": "#764: 134217727 >> 23 === 15. Actual: ",
                    "raw": "'#764: 134217727 >> 23 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28595,
                    "end": 28612,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28596,
                      "end": 28611,
                      "left": {
                        "type": "Literal",
                        "start": 28596,
                        "end": 28605,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28609,
                        "end": 28611,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28621,
      "end": 28742,
      "test": {
        "type": "BinaryExpression",
        "start": 28625,
        "end": 28647,
        "left": {
          "type": "BinaryExpression",
          "start": 28625,
          "end": 28640,
          "left": {
            "type": "Literal",
            "start": 28625,
            "end": 28634,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28638,
            "end": 28640,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28645,
          "end": 28647,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28649,
        "end": 28742,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28654,
            "end": 28739,
            "argument": {
              "type": "NewExpression",
              "start": 28660,
              "end": 28738,
              "callee": {
                "type": "Identifier",
                "start": 28664,
                "end": 28676,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28677,
                  "end": 28737,
                  "left": {
                    "type": "Literal",
                    "start": 28677,
                    "end": 28717,
                    "value": "#765: 268435455 >> 23 === 31. Actual: ",
                    "raw": "'#765: 268435455 >> 23 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28720,
                    "end": 28737,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28721,
                      "end": 28736,
                      "left": {
                        "type": "Literal",
                        "start": 28721,
                        "end": 28730,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28734,
                        "end": 28736,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28746,
      "end": 28867,
      "test": {
        "type": "BinaryExpression",
        "start": 28750,
        "end": 28772,
        "left": {
          "type": "BinaryExpression",
          "start": 28750,
          "end": 28765,
          "left": {
            "type": "Literal",
            "start": 28750,
            "end": 28759,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28763,
            "end": 28765,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28770,
          "end": 28772,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28774,
        "end": 28867,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28779,
            "end": 28864,
            "argument": {
              "type": "NewExpression",
              "start": 28785,
              "end": 28863,
              "callee": {
                "type": "Identifier",
                "start": 28789,
                "end": 28801,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28802,
                  "end": 28862,
                  "left": {
                    "type": "Literal",
                    "start": 28802,
                    "end": 28842,
                    "value": "#766: 536870911 >> 23 === 63. Actual: ",
                    "raw": "'#766: 536870911 >> 23 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28845,
                    "end": 28862,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28846,
                      "end": 28861,
                      "left": {
                        "type": "Literal",
                        "start": 28846,
                        "end": 28855,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28859,
                        "end": 28861,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 28871,
      "end": 28997,
      "test": {
        "type": "BinaryExpression",
        "start": 28875,
        "end": 28899,
        "left": {
          "type": "BinaryExpression",
          "start": 28875,
          "end": 28891,
          "left": {
            "type": "Literal",
            "start": 28875,
            "end": 28885,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 28889,
            "end": 28891,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 28896,
          "end": 28899,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 28901,
        "end": 28997,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 28906,
            "end": 28994,
            "argument": {
              "type": "NewExpression",
              "start": 28912,
              "end": 28993,
              "callee": {
                "type": "Identifier",
                "start": 28916,
                "end": 28928,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 28929,
                  "end": 28992,
                  "left": {
                    "type": "Literal",
                    "start": 28929,
                    "end": 28971,
                    "value": "#767: 1073741823 >> 23 === 127. Actual: ",
                    "raw": "'#767: 1073741823 >> 23 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 28974,
                    "end": 28992,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 28975,
                      "end": 28991,
                      "left": {
                        "type": "Literal",
                        "start": 28975,
                        "end": 28985,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 28989,
                        "end": 28991,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29001,
      "end": 29127,
      "test": {
        "type": "BinaryExpression",
        "start": 29005,
        "end": 29029,
        "left": {
          "type": "BinaryExpression",
          "start": 29005,
          "end": 29021,
          "left": {
            "type": "Literal",
            "start": 29005,
            "end": 29015,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29019,
            "end": 29021,
            "value": 23,
            "raw": "23",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29026,
          "end": 29029,
          "value": 255,
          "raw": "255",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29031,
        "end": 29127,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29036,
            "end": 29124,
            "argument": {
              "type": "NewExpression",
              "start": 29042,
              "end": 29123,
              "callee": {
                "type": "Identifier",
                "start": 29046,
                "end": 29058,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29059,
                  "end": 29122,
                  "left": {
                    "type": "Literal",
                    "start": 29059,
                    "end": 29101,
                    "value": "#768: 2147483647 >> 23 === 255. Actual: ",
                    "raw": "'#768: 2147483647 >> 23 === 255. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29104,
                    "end": 29122,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29105,
                      "end": 29121,
                      "left": {
                        "type": "Literal",
                        "start": 29105,
                        "end": 29115,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29119,
                        "end": 29121,
                        "value": 23,
                        "raw": "23",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29131,
      "end": 29226,
      "test": {
        "type": "BinaryExpression",
        "start": 29135,
        "end": 29148,
        "left": {
          "type": "BinaryExpression",
          "start": 29135,
          "end": 29142,
          "left": {
            "type": "Literal",
            "start": 29135,
            "end": 29136,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29140,
            "end": 29142,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29147,
          "end": 29148,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29150,
        "end": 29226,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29155,
            "end": 29223,
            "argument": {
              "type": "NewExpression",
              "start": 29161,
              "end": 29222,
              "callee": {
                "type": "Identifier",
                "start": 29165,
                "end": 29177,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29178,
                  "end": 29221,
                  "left": {
                    "type": "Literal",
                    "start": 29178,
                    "end": 29209,
                    "value": "#769: 0 >> 24 === 0. Actual: ",
                    "raw": "'#769: 0 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29212,
                    "end": 29221,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29213,
                      "end": 29220,
                      "left": {
                        "type": "Literal",
                        "start": 29213,
                        "end": 29214,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29218,
                        "end": 29220,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29230,
      "end": 29325,
      "test": {
        "type": "BinaryExpression",
        "start": 29234,
        "end": 29247,
        "left": {
          "type": "BinaryExpression",
          "start": 29234,
          "end": 29241,
          "left": {
            "type": "Literal",
            "start": 29234,
            "end": 29235,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29239,
            "end": 29241,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29246,
          "end": 29247,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29249,
        "end": 29325,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29254,
            "end": 29322,
            "argument": {
              "type": "NewExpression",
              "start": 29260,
              "end": 29321,
              "callee": {
                "type": "Identifier",
                "start": 29264,
                "end": 29276,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29277,
                  "end": 29320,
                  "left": {
                    "type": "Literal",
                    "start": 29277,
                    "end": 29308,
                    "value": "#770: 1 >> 24 === 0. Actual: ",
                    "raw": "'#770: 1 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29311,
                    "end": 29320,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29312,
                      "end": 29319,
                      "left": {
                        "type": "Literal",
                        "start": 29312,
                        "end": 29313,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29317,
                        "end": 29319,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29329,
      "end": 29424,
      "test": {
        "type": "BinaryExpression",
        "start": 29333,
        "end": 29346,
        "left": {
          "type": "BinaryExpression",
          "start": 29333,
          "end": 29340,
          "left": {
            "type": "Literal",
            "start": 29333,
            "end": 29334,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29338,
            "end": 29340,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29345,
          "end": 29346,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29348,
        "end": 29424,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29353,
            "end": 29421,
            "argument": {
              "type": "NewExpression",
              "start": 29359,
              "end": 29420,
              "callee": {
                "type": "Identifier",
                "start": 29363,
                "end": 29375,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29376,
                  "end": 29419,
                  "left": {
                    "type": "Literal",
                    "start": 29376,
                    "end": 29407,
                    "value": "#771: 3 >> 24 === 0. Actual: ",
                    "raw": "'#771: 3 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29410,
                    "end": 29419,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29411,
                      "end": 29418,
                      "left": {
                        "type": "Literal",
                        "start": 29411,
                        "end": 29412,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29416,
                        "end": 29418,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29428,
      "end": 29523,
      "test": {
        "type": "BinaryExpression",
        "start": 29432,
        "end": 29445,
        "left": {
          "type": "BinaryExpression",
          "start": 29432,
          "end": 29439,
          "left": {
            "type": "Literal",
            "start": 29432,
            "end": 29433,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29437,
            "end": 29439,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29444,
          "end": 29445,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29447,
        "end": 29523,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29452,
            "end": 29520,
            "argument": {
              "type": "NewExpression",
              "start": 29458,
              "end": 29519,
              "callee": {
                "type": "Identifier",
                "start": 29462,
                "end": 29474,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29475,
                  "end": 29518,
                  "left": {
                    "type": "Literal",
                    "start": 29475,
                    "end": 29506,
                    "value": "#772: 7 >> 24 === 0. Actual: ",
                    "raw": "'#772: 7 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29509,
                    "end": 29518,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29510,
                      "end": 29517,
                      "left": {
                        "type": "Literal",
                        "start": 29510,
                        "end": 29511,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29515,
                        "end": 29517,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29527,
      "end": 29625,
      "test": {
        "type": "BinaryExpression",
        "start": 29531,
        "end": 29545,
        "left": {
          "type": "BinaryExpression",
          "start": 29531,
          "end": 29539,
          "left": {
            "type": "Literal",
            "start": 29531,
            "end": 29533,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29537,
            "end": 29539,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29544,
          "end": 29545,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29547,
        "end": 29625,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29552,
            "end": 29622,
            "argument": {
              "type": "NewExpression",
              "start": 29558,
              "end": 29621,
              "callee": {
                "type": "Identifier",
                "start": 29562,
                "end": 29574,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29575,
                  "end": 29620,
                  "left": {
                    "type": "Literal",
                    "start": 29575,
                    "end": 29607,
                    "value": "#773: 15 >> 24 === 0. Actual: ",
                    "raw": "'#773: 15 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29610,
                    "end": 29620,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29611,
                      "end": 29619,
                      "left": {
                        "type": "Literal",
                        "start": 29611,
                        "end": 29613,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29617,
                        "end": 29619,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29629,
      "end": 29727,
      "test": {
        "type": "BinaryExpression",
        "start": 29633,
        "end": 29647,
        "left": {
          "type": "BinaryExpression",
          "start": 29633,
          "end": 29641,
          "left": {
            "type": "Literal",
            "start": 29633,
            "end": 29635,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29639,
            "end": 29641,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29646,
          "end": 29647,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29649,
        "end": 29727,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29654,
            "end": 29724,
            "argument": {
              "type": "NewExpression",
              "start": 29660,
              "end": 29723,
              "callee": {
                "type": "Identifier",
                "start": 29664,
                "end": 29676,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29677,
                  "end": 29722,
                  "left": {
                    "type": "Literal",
                    "start": 29677,
                    "end": 29709,
                    "value": "#774: 31 >> 24 === 0. Actual: ",
                    "raw": "'#774: 31 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29712,
                    "end": 29722,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29713,
                      "end": 29721,
                      "left": {
                        "type": "Literal",
                        "start": 29713,
                        "end": 29715,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29719,
                        "end": 29721,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29731,
      "end": 29829,
      "test": {
        "type": "BinaryExpression",
        "start": 29735,
        "end": 29749,
        "left": {
          "type": "BinaryExpression",
          "start": 29735,
          "end": 29743,
          "left": {
            "type": "Literal",
            "start": 29735,
            "end": 29737,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29741,
            "end": 29743,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29748,
          "end": 29749,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29751,
        "end": 29829,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29756,
            "end": 29826,
            "argument": {
              "type": "NewExpression",
              "start": 29762,
              "end": 29825,
              "callee": {
                "type": "Identifier",
                "start": 29766,
                "end": 29778,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29779,
                  "end": 29824,
                  "left": {
                    "type": "Literal",
                    "start": 29779,
                    "end": 29811,
                    "value": "#775: 63 >> 24 === 0. Actual: ",
                    "raw": "'#775: 63 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29814,
                    "end": 29824,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29815,
                      "end": 29823,
                      "left": {
                        "type": "Literal",
                        "start": 29815,
                        "end": 29817,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29821,
                        "end": 29823,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29833,
      "end": 29934,
      "test": {
        "type": "BinaryExpression",
        "start": 29837,
        "end": 29852,
        "left": {
          "type": "BinaryExpression",
          "start": 29837,
          "end": 29846,
          "left": {
            "type": "Literal",
            "start": 29837,
            "end": 29840,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29844,
            "end": 29846,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29851,
          "end": 29852,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29854,
        "end": 29934,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29859,
            "end": 29931,
            "argument": {
              "type": "NewExpression",
              "start": 29865,
              "end": 29930,
              "callee": {
                "type": "Identifier",
                "start": 29869,
                "end": 29881,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29882,
                  "end": 29929,
                  "left": {
                    "type": "Literal",
                    "start": 29882,
                    "end": 29915,
                    "value": "#776: 127 >> 24 === 0. Actual: ",
                    "raw": "'#776: 127 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 29918,
                    "end": 29929,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 29919,
                      "end": 29928,
                      "left": {
                        "type": "Literal",
                        "start": 29919,
                        "end": 29922,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 29926,
                        "end": 29928,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 29938,
      "end": 30039,
      "test": {
        "type": "BinaryExpression",
        "start": 29942,
        "end": 29957,
        "left": {
          "type": "BinaryExpression",
          "start": 29942,
          "end": 29951,
          "left": {
            "type": "Literal",
            "start": 29942,
            "end": 29945,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 29949,
            "end": 29951,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 29956,
          "end": 29957,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 29959,
        "end": 30039,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 29964,
            "end": 30036,
            "argument": {
              "type": "NewExpression",
              "start": 29970,
              "end": 30035,
              "callee": {
                "type": "Identifier",
                "start": 29974,
                "end": 29986,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 29987,
                  "end": 30034,
                  "left": {
                    "type": "Literal",
                    "start": 29987,
                    "end": 30020,
                    "value": "#777: 255 >> 24 === 0. Actual: ",
                    "raw": "'#777: 255 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30023,
                    "end": 30034,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30024,
                      "end": 30033,
                      "left": {
                        "type": "Literal",
                        "start": 30024,
                        "end": 30027,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30031,
                        "end": 30033,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30043,
      "end": 30144,
      "test": {
        "type": "BinaryExpression",
        "start": 30047,
        "end": 30062,
        "left": {
          "type": "BinaryExpression",
          "start": 30047,
          "end": 30056,
          "left": {
            "type": "Literal",
            "start": 30047,
            "end": 30050,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30054,
            "end": 30056,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30061,
          "end": 30062,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30064,
        "end": 30144,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30069,
            "end": 30141,
            "argument": {
              "type": "NewExpression",
              "start": 30075,
              "end": 30140,
              "callee": {
                "type": "Identifier",
                "start": 30079,
                "end": 30091,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30092,
                  "end": 30139,
                  "left": {
                    "type": "Literal",
                    "start": 30092,
                    "end": 30125,
                    "value": "#778: 511 >> 24 === 0. Actual: ",
                    "raw": "'#778: 511 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30128,
                    "end": 30139,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30129,
                      "end": 30138,
                      "left": {
                        "type": "Literal",
                        "start": 30129,
                        "end": 30132,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30136,
                        "end": 30138,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30148,
      "end": 30252,
      "test": {
        "type": "BinaryExpression",
        "start": 30152,
        "end": 30168,
        "left": {
          "type": "BinaryExpression",
          "start": 30152,
          "end": 30162,
          "left": {
            "type": "Literal",
            "start": 30152,
            "end": 30156,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30160,
            "end": 30162,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30167,
          "end": 30168,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30170,
        "end": 30252,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30175,
            "end": 30249,
            "argument": {
              "type": "NewExpression",
              "start": 30181,
              "end": 30248,
              "callee": {
                "type": "Identifier",
                "start": 30185,
                "end": 30197,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30198,
                  "end": 30247,
                  "left": {
                    "type": "Literal",
                    "start": 30198,
                    "end": 30232,
                    "value": "#779: 1023 >> 24 === 0. Actual: ",
                    "raw": "'#779: 1023 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30235,
                    "end": 30247,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30236,
                      "end": 30246,
                      "left": {
                        "type": "Literal",
                        "start": 30236,
                        "end": 30240,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30244,
                        "end": 30246,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30256,
      "end": 30360,
      "test": {
        "type": "BinaryExpression",
        "start": 30260,
        "end": 30276,
        "left": {
          "type": "BinaryExpression",
          "start": 30260,
          "end": 30270,
          "left": {
            "type": "Literal",
            "start": 30260,
            "end": 30264,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30268,
            "end": 30270,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30275,
          "end": 30276,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30278,
        "end": 30360,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30283,
            "end": 30357,
            "argument": {
              "type": "NewExpression",
              "start": 30289,
              "end": 30356,
              "callee": {
                "type": "Identifier",
                "start": 30293,
                "end": 30305,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30306,
                  "end": 30355,
                  "left": {
                    "type": "Literal",
                    "start": 30306,
                    "end": 30340,
                    "value": "#780: 2047 >> 24 === 0. Actual: ",
                    "raw": "'#780: 2047 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30343,
                    "end": 30355,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30344,
                      "end": 30354,
                      "left": {
                        "type": "Literal",
                        "start": 30344,
                        "end": 30348,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30352,
                        "end": 30354,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30364,
      "end": 30468,
      "test": {
        "type": "BinaryExpression",
        "start": 30368,
        "end": 30384,
        "left": {
          "type": "BinaryExpression",
          "start": 30368,
          "end": 30378,
          "left": {
            "type": "Literal",
            "start": 30368,
            "end": 30372,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30376,
            "end": 30378,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30383,
          "end": 30384,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30386,
        "end": 30468,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30391,
            "end": 30465,
            "argument": {
              "type": "NewExpression",
              "start": 30397,
              "end": 30464,
              "callee": {
                "type": "Identifier",
                "start": 30401,
                "end": 30413,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30414,
                  "end": 30463,
                  "left": {
                    "type": "Literal",
                    "start": 30414,
                    "end": 30448,
                    "value": "#781: 4095 >> 24 === 0. Actual: ",
                    "raw": "'#781: 4095 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30451,
                    "end": 30463,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30452,
                      "end": 30462,
                      "left": {
                        "type": "Literal",
                        "start": 30452,
                        "end": 30456,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30460,
                        "end": 30462,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30472,
      "end": 30576,
      "test": {
        "type": "BinaryExpression",
        "start": 30476,
        "end": 30492,
        "left": {
          "type": "BinaryExpression",
          "start": 30476,
          "end": 30486,
          "left": {
            "type": "Literal",
            "start": 30476,
            "end": 30480,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30484,
            "end": 30486,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30491,
          "end": 30492,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30494,
        "end": 30576,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30499,
            "end": 30573,
            "argument": {
              "type": "NewExpression",
              "start": 30505,
              "end": 30572,
              "callee": {
                "type": "Identifier",
                "start": 30509,
                "end": 30521,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30522,
                  "end": 30571,
                  "left": {
                    "type": "Literal",
                    "start": 30522,
                    "end": 30556,
                    "value": "#782: 8191 >> 24 === 0. Actual: ",
                    "raw": "'#782: 8191 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30559,
                    "end": 30571,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30560,
                      "end": 30570,
                      "left": {
                        "type": "Literal",
                        "start": 30560,
                        "end": 30564,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30568,
                        "end": 30570,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30580,
      "end": 30687,
      "test": {
        "type": "BinaryExpression",
        "start": 30584,
        "end": 30601,
        "left": {
          "type": "BinaryExpression",
          "start": 30584,
          "end": 30595,
          "left": {
            "type": "Literal",
            "start": 30584,
            "end": 30589,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30593,
            "end": 30595,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30600,
          "end": 30601,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30603,
        "end": 30687,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30608,
            "end": 30684,
            "argument": {
              "type": "NewExpression",
              "start": 30614,
              "end": 30683,
              "callee": {
                "type": "Identifier",
                "start": 30618,
                "end": 30630,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30631,
                  "end": 30682,
                  "left": {
                    "type": "Literal",
                    "start": 30631,
                    "end": 30666,
                    "value": "#783: 16383 >> 24 === 0. Actual: ",
                    "raw": "'#783: 16383 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30669,
                    "end": 30682,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30670,
                      "end": 30681,
                      "left": {
                        "type": "Literal",
                        "start": 30670,
                        "end": 30675,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30679,
                        "end": 30681,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30691,
      "end": 30798,
      "test": {
        "type": "BinaryExpression",
        "start": 30695,
        "end": 30712,
        "left": {
          "type": "BinaryExpression",
          "start": 30695,
          "end": 30706,
          "left": {
            "type": "Literal",
            "start": 30695,
            "end": 30700,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30704,
            "end": 30706,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30711,
          "end": 30712,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30714,
        "end": 30798,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30719,
            "end": 30795,
            "argument": {
              "type": "NewExpression",
              "start": 30725,
              "end": 30794,
              "callee": {
                "type": "Identifier",
                "start": 30729,
                "end": 30741,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30742,
                  "end": 30793,
                  "left": {
                    "type": "Literal",
                    "start": 30742,
                    "end": 30777,
                    "value": "#784: 32767 >> 24 === 0. Actual: ",
                    "raw": "'#784: 32767 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30780,
                    "end": 30793,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30781,
                      "end": 30792,
                      "left": {
                        "type": "Literal",
                        "start": 30781,
                        "end": 30786,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30790,
                        "end": 30792,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30802,
      "end": 30909,
      "test": {
        "type": "BinaryExpression",
        "start": 30806,
        "end": 30823,
        "left": {
          "type": "BinaryExpression",
          "start": 30806,
          "end": 30817,
          "left": {
            "type": "Literal",
            "start": 30806,
            "end": 30811,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30815,
            "end": 30817,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30822,
          "end": 30823,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30825,
        "end": 30909,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30830,
            "end": 30906,
            "argument": {
              "type": "NewExpression",
              "start": 30836,
              "end": 30905,
              "callee": {
                "type": "Identifier",
                "start": 30840,
                "end": 30852,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30853,
                  "end": 30904,
                  "left": {
                    "type": "Literal",
                    "start": 30853,
                    "end": 30888,
                    "value": "#785: 65535 >> 24 === 0. Actual: ",
                    "raw": "'#785: 65535 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 30891,
                    "end": 30904,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 30892,
                      "end": 30903,
                      "left": {
                        "type": "Literal",
                        "start": 30892,
                        "end": 30897,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 30901,
                        "end": 30903,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 30913,
      "end": 31023,
      "test": {
        "type": "BinaryExpression",
        "start": 30917,
        "end": 30935,
        "left": {
          "type": "BinaryExpression",
          "start": 30917,
          "end": 30929,
          "left": {
            "type": "Literal",
            "start": 30917,
            "end": 30923,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 30927,
            "end": 30929,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 30934,
          "end": 30935,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 30937,
        "end": 31023,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 30942,
            "end": 31020,
            "argument": {
              "type": "NewExpression",
              "start": 30948,
              "end": 31019,
              "callee": {
                "type": "Identifier",
                "start": 30952,
                "end": 30964,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 30965,
                  "end": 31018,
                  "left": {
                    "type": "Literal",
                    "start": 30965,
                    "end": 31001,
                    "value": "#786: 131071 >> 24 === 0. Actual: ",
                    "raw": "'#786: 131071 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31004,
                    "end": 31018,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31005,
                      "end": 31017,
                      "left": {
                        "type": "Literal",
                        "start": 31005,
                        "end": 31011,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31015,
                        "end": 31017,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31027,
      "end": 31137,
      "test": {
        "type": "BinaryExpression",
        "start": 31031,
        "end": 31049,
        "left": {
          "type": "BinaryExpression",
          "start": 31031,
          "end": 31043,
          "left": {
            "type": "Literal",
            "start": 31031,
            "end": 31037,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31041,
            "end": 31043,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31048,
          "end": 31049,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31051,
        "end": 31137,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31056,
            "end": 31134,
            "argument": {
              "type": "NewExpression",
              "start": 31062,
              "end": 31133,
              "callee": {
                "type": "Identifier",
                "start": 31066,
                "end": 31078,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31079,
                  "end": 31132,
                  "left": {
                    "type": "Literal",
                    "start": 31079,
                    "end": 31115,
                    "value": "#787: 262143 >> 24 === 0. Actual: ",
                    "raw": "'#787: 262143 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31118,
                    "end": 31132,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31119,
                      "end": 31131,
                      "left": {
                        "type": "Literal",
                        "start": 31119,
                        "end": 31125,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31129,
                        "end": 31131,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31141,
      "end": 31251,
      "test": {
        "type": "BinaryExpression",
        "start": 31145,
        "end": 31163,
        "left": {
          "type": "BinaryExpression",
          "start": 31145,
          "end": 31157,
          "left": {
            "type": "Literal",
            "start": 31145,
            "end": 31151,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31155,
            "end": 31157,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31162,
          "end": 31163,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31165,
        "end": 31251,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31170,
            "end": 31248,
            "argument": {
              "type": "NewExpression",
              "start": 31176,
              "end": 31247,
              "callee": {
                "type": "Identifier",
                "start": 31180,
                "end": 31192,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31193,
                  "end": 31246,
                  "left": {
                    "type": "Literal",
                    "start": 31193,
                    "end": 31229,
                    "value": "#788: 524287 >> 24 === 0. Actual: ",
                    "raw": "'#788: 524287 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31232,
                    "end": 31246,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31233,
                      "end": 31245,
                      "left": {
                        "type": "Literal",
                        "start": 31233,
                        "end": 31239,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31243,
                        "end": 31245,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31255,
      "end": 31368,
      "test": {
        "type": "BinaryExpression",
        "start": 31259,
        "end": 31278,
        "left": {
          "type": "BinaryExpression",
          "start": 31259,
          "end": 31272,
          "left": {
            "type": "Literal",
            "start": 31259,
            "end": 31266,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31270,
            "end": 31272,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31277,
          "end": 31278,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31280,
        "end": 31368,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31285,
            "end": 31365,
            "argument": {
              "type": "NewExpression",
              "start": 31291,
              "end": 31364,
              "callee": {
                "type": "Identifier",
                "start": 31295,
                "end": 31307,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31308,
                  "end": 31363,
                  "left": {
                    "type": "Literal",
                    "start": 31308,
                    "end": 31345,
                    "value": "#789: 1048575 >> 24 === 0. Actual: ",
                    "raw": "'#789: 1048575 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31348,
                    "end": 31363,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31349,
                      "end": 31362,
                      "left": {
                        "type": "Literal",
                        "start": 31349,
                        "end": 31356,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31360,
                        "end": 31362,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31372,
      "end": 31485,
      "test": {
        "type": "BinaryExpression",
        "start": 31376,
        "end": 31395,
        "left": {
          "type": "BinaryExpression",
          "start": 31376,
          "end": 31389,
          "left": {
            "type": "Literal",
            "start": 31376,
            "end": 31383,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31387,
            "end": 31389,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31394,
          "end": 31395,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31397,
        "end": 31485,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31402,
            "end": 31482,
            "argument": {
              "type": "NewExpression",
              "start": 31408,
              "end": 31481,
              "callee": {
                "type": "Identifier",
                "start": 31412,
                "end": 31424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31425,
                  "end": 31480,
                  "left": {
                    "type": "Literal",
                    "start": 31425,
                    "end": 31462,
                    "value": "#790: 2097151 >> 24 === 0. Actual: ",
                    "raw": "'#790: 2097151 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31465,
                    "end": 31480,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31466,
                      "end": 31479,
                      "left": {
                        "type": "Literal",
                        "start": 31466,
                        "end": 31473,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31477,
                        "end": 31479,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31489,
      "end": 31602,
      "test": {
        "type": "BinaryExpression",
        "start": 31493,
        "end": 31512,
        "left": {
          "type": "BinaryExpression",
          "start": 31493,
          "end": 31506,
          "left": {
            "type": "Literal",
            "start": 31493,
            "end": 31500,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31504,
            "end": 31506,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31511,
          "end": 31512,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31514,
        "end": 31602,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31519,
            "end": 31599,
            "argument": {
              "type": "NewExpression",
              "start": 31525,
              "end": 31598,
              "callee": {
                "type": "Identifier",
                "start": 31529,
                "end": 31541,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31542,
                  "end": 31597,
                  "left": {
                    "type": "Literal",
                    "start": 31542,
                    "end": 31579,
                    "value": "#791: 4194303 >> 24 === 0. Actual: ",
                    "raw": "'#791: 4194303 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31582,
                    "end": 31597,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31583,
                      "end": 31596,
                      "left": {
                        "type": "Literal",
                        "start": 31583,
                        "end": 31590,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31594,
                        "end": 31596,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31606,
      "end": 31719,
      "test": {
        "type": "BinaryExpression",
        "start": 31610,
        "end": 31629,
        "left": {
          "type": "BinaryExpression",
          "start": 31610,
          "end": 31623,
          "left": {
            "type": "Literal",
            "start": 31610,
            "end": 31617,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31621,
            "end": 31623,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31628,
          "end": 31629,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31631,
        "end": 31719,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31636,
            "end": 31716,
            "argument": {
              "type": "NewExpression",
              "start": 31642,
              "end": 31715,
              "callee": {
                "type": "Identifier",
                "start": 31646,
                "end": 31658,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31659,
                  "end": 31714,
                  "left": {
                    "type": "Literal",
                    "start": 31659,
                    "end": 31696,
                    "value": "#792: 8388607 >> 24 === 0. Actual: ",
                    "raw": "'#792: 8388607 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31699,
                    "end": 31714,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31700,
                      "end": 31713,
                      "left": {
                        "type": "Literal",
                        "start": 31700,
                        "end": 31707,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31711,
                        "end": 31713,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31723,
      "end": 31839,
      "test": {
        "type": "BinaryExpression",
        "start": 31727,
        "end": 31747,
        "left": {
          "type": "BinaryExpression",
          "start": 31727,
          "end": 31741,
          "left": {
            "type": "Literal",
            "start": 31727,
            "end": 31735,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31739,
            "end": 31741,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31746,
          "end": 31747,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31749,
        "end": 31839,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31754,
            "end": 31836,
            "argument": {
              "type": "NewExpression",
              "start": 31760,
              "end": 31835,
              "callee": {
                "type": "Identifier",
                "start": 31764,
                "end": 31776,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31777,
                  "end": 31834,
                  "left": {
                    "type": "Literal",
                    "start": 31777,
                    "end": 31815,
                    "value": "#793: 16777215 >> 24 === 0. Actual: ",
                    "raw": "'#793: 16777215 >> 24 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31818,
                    "end": 31834,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31819,
                      "end": 31833,
                      "left": {
                        "type": "Literal",
                        "start": 31819,
                        "end": 31827,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31831,
                        "end": 31833,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31843,
      "end": 31959,
      "test": {
        "type": "BinaryExpression",
        "start": 31847,
        "end": 31867,
        "left": {
          "type": "BinaryExpression",
          "start": 31847,
          "end": 31861,
          "left": {
            "type": "Literal",
            "start": 31847,
            "end": 31855,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31859,
            "end": 31861,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31866,
          "end": 31867,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31869,
        "end": 31959,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31874,
            "end": 31956,
            "argument": {
              "type": "NewExpression",
              "start": 31880,
              "end": 31955,
              "callee": {
                "type": "Identifier",
                "start": 31884,
                "end": 31896,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 31897,
                  "end": 31954,
                  "left": {
                    "type": "Literal",
                    "start": 31897,
                    "end": 31935,
                    "value": "#794: 33554431 >> 24 === 1. Actual: ",
                    "raw": "'#794: 33554431 >> 24 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 31938,
                    "end": 31954,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 31939,
                      "end": 31953,
                      "left": {
                        "type": "Literal",
                        "start": 31939,
                        "end": 31947,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 31951,
                        "end": 31953,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 31963,
      "end": 32079,
      "test": {
        "type": "BinaryExpression",
        "start": 31967,
        "end": 31987,
        "left": {
          "type": "BinaryExpression",
          "start": 31967,
          "end": 31981,
          "left": {
            "type": "Literal",
            "start": 31967,
            "end": 31975,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 31979,
            "end": 31981,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 31986,
          "end": 31987,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 31989,
        "end": 32079,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 31994,
            "end": 32076,
            "argument": {
              "type": "NewExpression",
              "start": 32000,
              "end": 32075,
              "callee": {
                "type": "Identifier",
                "start": 32004,
                "end": 32016,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32017,
                  "end": 32074,
                  "left": {
                    "type": "Literal",
                    "start": 32017,
                    "end": 32055,
                    "value": "#795: 67108863 >> 24 === 3. Actual: ",
                    "raw": "'#795: 67108863 >> 24 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32058,
                    "end": 32074,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32059,
                      "end": 32073,
                      "left": {
                        "type": "Literal",
                        "start": 32059,
                        "end": 32067,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32071,
                        "end": 32073,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32083,
      "end": 32202,
      "test": {
        "type": "BinaryExpression",
        "start": 32087,
        "end": 32108,
        "left": {
          "type": "BinaryExpression",
          "start": 32087,
          "end": 32102,
          "left": {
            "type": "Literal",
            "start": 32087,
            "end": 32096,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32100,
            "end": 32102,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32107,
          "end": 32108,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32110,
        "end": 32202,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32115,
            "end": 32199,
            "argument": {
              "type": "NewExpression",
              "start": 32121,
              "end": 32198,
              "callee": {
                "type": "Identifier",
                "start": 32125,
                "end": 32137,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32138,
                  "end": 32197,
                  "left": {
                    "type": "Literal",
                    "start": 32138,
                    "end": 32177,
                    "value": "#796: 134217727 >> 24 === 7. Actual: ",
                    "raw": "'#796: 134217727 >> 24 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32180,
                    "end": 32197,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32181,
                      "end": 32196,
                      "left": {
                        "type": "Literal",
                        "start": 32181,
                        "end": 32190,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32194,
                        "end": 32196,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32206,
      "end": 32327,
      "test": {
        "type": "BinaryExpression",
        "start": 32210,
        "end": 32232,
        "left": {
          "type": "BinaryExpression",
          "start": 32210,
          "end": 32225,
          "left": {
            "type": "Literal",
            "start": 32210,
            "end": 32219,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32223,
            "end": 32225,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32230,
          "end": 32232,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32234,
        "end": 32327,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32239,
            "end": 32324,
            "argument": {
              "type": "NewExpression",
              "start": 32245,
              "end": 32323,
              "callee": {
                "type": "Identifier",
                "start": 32249,
                "end": 32261,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32262,
                  "end": 32322,
                  "left": {
                    "type": "Literal",
                    "start": 32262,
                    "end": 32302,
                    "value": "#797: 268435455 >> 24 === 15. Actual: ",
                    "raw": "'#797: 268435455 >> 24 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32305,
                    "end": 32322,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32306,
                      "end": 32321,
                      "left": {
                        "type": "Literal",
                        "start": 32306,
                        "end": 32315,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32319,
                        "end": 32321,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32331,
      "end": 32452,
      "test": {
        "type": "BinaryExpression",
        "start": 32335,
        "end": 32357,
        "left": {
          "type": "BinaryExpression",
          "start": 32335,
          "end": 32350,
          "left": {
            "type": "Literal",
            "start": 32335,
            "end": 32344,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32348,
            "end": 32350,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32355,
          "end": 32357,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32359,
        "end": 32452,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32364,
            "end": 32449,
            "argument": {
              "type": "NewExpression",
              "start": 32370,
              "end": 32448,
              "callee": {
                "type": "Identifier",
                "start": 32374,
                "end": 32386,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32387,
                  "end": 32447,
                  "left": {
                    "type": "Literal",
                    "start": 32387,
                    "end": 32427,
                    "value": "#798: 536870911 >> 24 === 31. Actual: ",
                    "raw": "'#798: 536870911 >> 24 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32430,
                    "end": 32447,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32431,
                      "end": 32446,
                      "left": {
                        "type": "Literal",
                        "start": 32431,
                        "end": 32440,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32444,
                        "end": 32446,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32456,
      "end": 32580,
      "test": {
        "type": "BinaryExpression",
        "start": 32460,
        "end": 32483,
        "left": {
          "type": "BinaryExpression",
          "start": 32460,
          "end": 32476,
          "left": {
            "type": "Literal",
            "start": 32460,
            "end": 32470,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32474,
            "end": 32476,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32481,
          "end": 32483,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32485,
        "end": 32580,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32490,
            "end": 32577,
            "argument": {
              "type": "NewExpression",
              "start": 32496,
              "end": 32576,
              "callee": {
                "type": "Identifier",
                "start": 32500,
                "end": 32512,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32513,
                  "end": 32575,
                  "left": {
                    "type": "Literal",
                    "start": 32513,
                    "end": 32554,
                    "value": "#799: 1073741823 >> 24 === 63. Actual: ",
                    "raw": "'#799: 1073741823 >> 24 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32557,
                    "end": 32575,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32558,
                      "end": 32574,
                      "left": {
                        "type": "Literal",
                        "start": 32558,
                        "end": 32568,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32572,
                        "end": 32574,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32584,
      "end": 32710,
      "test": {
        "type": "BinaryExpression",
        "start": 32588,
        "end": 32612,
        "left": {
          "type": "BinaryExpression",
          "start": 32588,
          "end": 32604,
          "left": {
            "type": "Literal",
            "start": 32588,
            "end": 32598,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32602,
            "end": 32604,
            "value": 24,
            "raw": "24",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32609,
          "end": 32612,
          "value": 127,
          "raw": "127",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32614,
        "end": 32710,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32619,
            "end": 32707,
            "argument": {
              "type": "NewExpression",
              "start": 32625,
              "end": 32706,
              "callee": {
                "type": "Identifier",
                "start": 32629,
                "end": 32641,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32642,
                  "end": 32705,
                  "left": {
                    "type": "Literal",
                    "start": 32642,
                    "end": 32684,
                    "value": "#800: 2147483647 >> 24 === 127. Actual: ",
                    "raw": "'#800: 2147483647 >> 24 === 127. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32687,
                    "end": 32705,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32688,
                      "end": 32704,
                      "left": {
                        "type": "Literal",
                        "start": 32688,
                        "end": 32698,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32702,
                        "end": 32704,
                        "value": 24,
                        "raw": "24",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32714,
      "end": 32809,
      "test": {
        "type": "BinaryExpression",
        "start": 32718,
        "end": 32731,
        "left": {
          "type": "BinaryExpression",
          "start": 32718,
          "end": 32725,
          "left": {
            "type": "Literal",
            "start": 32718,
            "end": 32719,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32723,
            "end": 32725,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32730,
          "end": 32731,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32733,
        "end": 32809,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32738,
            "end": 32806,
            "argument": {
              "type": "NewExpression",
              "start": 32744,
              "end": 32805,
              "callee": {
                "type": "Identifier",
                "start": 32748,
                "end": 32760,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32761,
                  "end": 32804,
                  "left": {
                    "type": "Literal",
                    "start": 32761,
                    "end": 32792,
                    "value": "#801: 0 >> 25 === 0. Actual: ",
                    "raw": "'#801: 0 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32795,
                    "end": 32804,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32796,
                      "end": 32803,
                      "left": {
                        "type": "Literal",
                        "start": 32796,
                        "end": 32797,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32801,
                        "end": 32803,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32813,
      "end": 32908,
      "test": {
        "type": "BinaryExpression",
        "start": 32817,
        "end": 32830,
        "left": {
          "type": "BinaryExpression",
          "start": 32817,
          "end": 32824,
          "left": {
            "type": "Literal",
            "start": 32817,
            "end": 32818,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32822,
            "end": 32824,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32829,
          "end": 32830,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32832,
        "end": 32908,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32837,
            "end": 32905,
            "argument": {
              "type": "NewExpression",
              "start": 32843,
              "end": 32904,
              "callee": {
                "type": "Identifier",
                "start": 32847,
                "end": 32859,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32860,
                  "end": 32903,
                  "left": {
                    "type": "Literal",
                    "start": 32860,
                    "end": 32891,
                    "value": "#802: 1 >> 25 === 0. Actual: ",
                    "raw": "'#802: 1 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32894,
                    "end": 32903,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32895,
                      "end": 32902,
                      "left": {
                        "type": "Literal",
                        "start": 32895,
                        "end": 32896,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32900,
                        "end": 32902,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 32912,
      "end": 33007,
      "test": {
        "type": "BinaryExpression",
        "start": 32916,
        "end": 32929,
        "left": {
          "type": "BinaryExpression",
          "start": 32916,
          "end": 32923,
          "left": {
            "type": "Literal",
            "start": 32916,
            "end": 32917,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 32921,
            "end": 32923,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 32928,
          "end": 32929,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 32931,
        "end": 33007,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 32936,
            "end": 33004,
            "argument": {
              "type": "NewExpression",
              "start": 32942,
              "end": 33003,
              "callee": {
                "type": "Identifier",
                "start": 32946,
                "end": 32958,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 32959,
                  "end": 33002,
                  "left": {
                    "type": "Literal",
                    "start": 32959,
                    "end": 32990,
                    "value": "#803: 3 >> 25 === 0. Actual: ",
                    "raw": "'#803: 3 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 32993,
                    "end": 33002,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 32994,
                      "end": 33001,
                      "left": {
                        "type": "Literal",
                        "start": 32994,
                        "end": 32995,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 32999,
                        "end": 33001,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33011,
      "end": 33106,
      "test": {
        "type": "BinaryExpression",
        "start": 33015,
        "end": 33028,
        "left": {
          "type": "BinaryExpression",
          "start": 33015,
          "end": 33022,
          "left": {
            "type": "Literal",
            "start": 33015,
            "end": 33016,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33020,
            "end": 33022,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33027,
          "end": 33028,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33030,
        "end": 33106,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33035,
            "end": 33103,
            "argument": {
              "type": "NewExpression",
              "start": 33041,
              "end": 33102,
              "callee": {
                "type": "Identifier",
                "start": 33045,
                "end": 33057,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33058,
                  "end": 33101,
                  "left": {
                    "type": "Literal",
                    "start": 33058,
                    "end": 33089,
                    "value": "#804: 7 >> 25 === 0. Actual: ",
                    "raw": "'#804: 7 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33092,
                    "end": 33101,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33093,
                      "end": 33100,
                      "left": {
                        "type": "Literal",
                        "start": 33093,
                        "end": 33094,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33098,
                        "end": 33100,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33110,
      "end": 33208,
      "test": {
        "type": "BinaryExpression",
        "start": 33114,
        "end": 33128,
        "left": {
          "type": "BinaryExpression",
          "start": 33114,
          "end": 33122,
          "left": {
            "type": "Literal",
            "start": 33114,
            "end": 33116,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33120,
            "end": 33122,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33127,
          "end": 33128,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33130,
        "end": 33208,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33135,
            "end": 33205,
            "argument": {
              "type": "NewExpression",
              "start": 33141,
              "end": 33204,
              "callee": {
                "type": "Identifier",
                "start": 33145,
                "end": 33157,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33158,
                  "end": 33203,
                  "left": {
                    "type": "Literal",
                    "start": 33158,
                    "end": 33190,
                    "value": "#805: 15 >> 25 === 0. Actual: ",
                    "raw": "'#805: 15 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33193,
                    "end": 33203,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33194,
                      "end": 33202,
                      "left": {
                        "type": "Literal",
                        "start": 33194,
                        "end": 33196,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33200,
                        "end": 33202,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33212,
      "end": 33310,
      "test": {
        "type": "BinaryExpression",
        "start": 33216,
        "end": 33230,
        "left": {
          "type": "BinaryExpression",
          "start": 33216,
          "end": 33224,
          "left": {
            "type": "Literal",
            "start": 33216,
            "end": 33218,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33222,
            "end": 33224,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33229,
          "end": 33230,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33232,
        "end": 33310,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33237,
            "end": 33307,
            "argument": {
              "type": "NewExpression",
              "start": 33243,
              "end": 33306,
              "callee": {
                "type": "Identifier",
                "start": 33247,
                "end": 33259,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33260,
                  "end": 33305,
                  "left": {
                    "type": "Literal",
                    "start": 33260,
                    "end": 33292,
                    "value": "#806: 31 >> 25 === 0. Actual: ",
                    "raw": "'#806: 31 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33295,
                    "end": 33305,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33296,
                      "end": 33304,
                      "left": {
                        "type": "Literal",
                        "start": 33296,
                        "end": 33298,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33302,
                        "end": 33304,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33314,
      "end": 33412,
      "test": {
        "type": "BinaryExpression",
        "start": 33318,
        "end": 33332,
        "left": {
          "type": "BinaryExpression",
          "start": 33318,
          "end": 33326,
          "left": {
            "type": "Literal",
            "start": 33318,
            "end": 33320,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33324,
            "end": 33326,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33331,
          "end": 33332,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33334,
        "end": 33412,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33339,
            "end": 33409,
            "argument": {
              "type": "NewExpression",
              "start": 33345,
              "end": 33408,
              "callee": {
                "type": "Identifier",
                "start": 33349,
                "end": 33361,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33362,
                  "end": 33407,
                  "left": {
                    "type": "Literal",
                    "start": 33362,
                    "end": 33394,
                    "value": "#807: 63 >> 25 === 0. Actual: ",
                    "raw": "'#807: 63 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33397,
                    "end": 33407,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33398,
                      "end": 33406,
                      "left": {
                        "type": "Literal",
                        "start": 33398,
                        "end": 33400,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33404,
                        "end": 33406,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33416,
      "end": 33517,
      "test": {
        "type": "BinaryExpression",
        "start": 33420,
        "end": 33435,
        "left": {
          "type": "BinaryExpression",
          "start": 33420,
          "end": 33429,
          "left": {
            "type": "Literal",
            "start": 33420,
            "end": 33423,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33427,
            "end": 33429,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33434,
          "end": 33435,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33437,
        "end": 33517,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33442,
            "end": 33514,
            "argument": {
              "type": "NewExpression",
              "start": 33448,
              "end": 33513,
              "callee": {
                "type": "Identifier",
                "start": 33452,
                "end": 33464,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33465,
                  "end": 33512,
                  "left": {
                    "type": "Literal",
                    "start": 33465,
                    "end": 33498,
                    "value": "#808: 127 >> 25 === 0. Actual: ",
                    "raw": "'#808: 127 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33501,
                    "end": 33512,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33502,
                      "end": 33511,
                      "left": {
                        "type": "Literal",
                        "start": 33502,
                        "end": 33505,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33509,
                        "end": 33511,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33521,
      "end": 33622,
      "test": {
        "type": "BinaryExpression",
        "start": 33525,
        "end": 33540,
        "left": {
          "type": "BinaryExpression",
          "start": 33525,
          "end": 33534,
          "left": {
            "type": "Literal",
            "start": 33525,
            "end": 33528,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33532,
            "end": 33534,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33539,
          "end": 33540,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33542,
        "end": 33622,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33547,
            "end": 33619,
            "argument": {
              "type": "NewExpression",
              "start": 33553,
              "end": 33618,
              "callee": {
                "type": "Identifier",
                "start": 33557,
                "end": 33569,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33570,
                  "end": 33617,
                  "left": {
                    "type": "Literal",
                    "start": 33570,
                    "end": 33603,
                    "value": "#809: 255 >> 25 === 0. Actual: ",
                    "raw": "'#809: 255 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33606,
                    "end": 33617,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33607,
                      "end": 33616,
                      "left": {
                        "type": "Literal",
                        "start": 33607,
                        "end": 33610,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33614,
                        "end": 33616,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33626,
      "end": 33727,
      "test": {
        "type": "BinaryExpression",
        "start": 33630,
        "end": 33645,
        "left": {
          "type": "BinaryExpression",
          "start": 33630,
          "end": 33639,
          "left": {
            "type": "Literal",
            "start": 33630,
            "end": 33633,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33637,
            "end": 33639,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33644,
          "end": 33645,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33647,
        "end": 33727,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33652,
            "end": 33724,
            "argument": {
              "type": "NewExpression",
              "start": 33658,
              "end": 33723,
              "callee": {
                "type": "Identifier",
                "start": 33662,
                "end": 33674,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33675,
                  "end": 33722,
                  "left": {
                    "type": "Literal",
                    "start": 33675,
                    "end": 33708,
                    "value": "#810: 511 >> 25 === 0. Actual: ",
                    "raw": "'#810: 511 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33711,
                    "end": 33722,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33712,
                      "end": 33721,
                      "left": {
                        "type": "Literal",
                        "start": 33712,
                        "end": 33715,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33719,
                        "end": 33721,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33731,
      "end": 33835,
      "test": {
        "type": "BinaryExpression",
        "start": 33735,
        "end": 33751,
        "left": {
          "type": "BinaryExpression",
          "start": 33735,
          "end": 33745,
          "left": {
            "type": "Literal",
            "start": 33735,
            "end": 33739,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33743,
            "end": 33745,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33750,
          "end": 33751,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33753,
        "end": 33835,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33758,
            "end": 33832,
            "argument": {
              "type": "NewExpression",
              "start": 33764,
              "end": 33831,
              "callee": {
                "type": "Identifier",
                "start": 33768,
                "end": 33780,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33781,
                  "end": 33830,
                  "left": {
                    "type": "Literal",
                    "start": 33781,
                    "end": 33815,
                    "value": "#811: 1023 >> 25 === 0. Actual: ",
                    "raw": "'#811: 1023 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33818,
                    "end": 33830,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33819,
                      "end": 33829,
                      "left": {
                        "type": "Literal",
                        "start": 33819,
                        "end": 33823,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33827,
                        "end": 33829,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33839,
      "end": 33943,
      "test": {
        "type": "BinaryExpression",
        "start": 33843,
        "end": 33859,
        "left": {
          "type": "BinaryExpression",
          "start": 33843,
          "end": 33853,
          "left": {
            "type": "Literal",
            "start": 33843,
            "end": 33847,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33851,
            "end": 33853,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33858,
          "end": 33859,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33861,
        "end": 33943,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33866,
            "end": 33940,
            "argument": {
              "type": "NewExpression",
              "start": 33872,
              "end": 33939,
              "callee": {
                "type": "Identifier",
                "start": 33876,
                "end": 33888,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33889,
                  "end": 33938,
                  "left": {
                    "type": "Literal",
                    "start": 33889,
                    "end": 33923,
                    "value": "#812: 2047 >> 25 === 0. Actual: ",
                    "raw": "'#812: 2047 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 33926,
                    "end": 33938,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 33927,
                      "end": 33937,
                      "left": {
                        "type": "Literal",
                        "start": 33927,
                        "end": 33931,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 33935,
                        "end": 33937,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 33947,
      "end": 34051,
      "test": {
        "type": "BinaryExpression",
        "start": 33951,
        "end": 33967,
        "left": {
          "type": "BinaryExpression",
          "start": 33951,
          "end": 33961,
          "left": {
            "type": "Literal",
            "start": 33951,
            "end": 33955,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 33959,
            "end": 33961,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 33966,
          "end": 33967,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 33969,
        "end": 34051,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 33974,
            "end": 34048,
            "argument": {
              "type": "NewExpression",
              "start": 33980,
              "end": 34047,
              "callee": {
                "type": "Identifier",
                "start": 33984,
                "end": 33996,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 33997,
                  "end": 34046,
                  "left": {
                    "type": "Literal",
                    "start": 33997,
                    "end": 34031,
                    "value": "#813: 4095 >> 25 === 0. Actual: ",
                    "raw": "'#813: 4095 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34034,
                    "end": 34046,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34035,
                      "end": 34045,
                      "left": {
                        "type": "Literal",
                        "start": 34035,
                        "end": 34039,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34043,
                        "end": 34045,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34055,
      "end": 34159,
      "test": {
        "type": "BinaryExpression",
        "start": 34059,
        "end": 34075,
        "left": {
          "type": "BinaryExpression",
          "start": 34059,
          "end": 34069,
          "left": {
            "type": "Literal",
            "start": 34059,
            "end": 34063,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34067,
            "end": 34069,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34074,
          "end": 34075,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34077,
        "end": 34159,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34082,
            "end": 34156,
            "argument": {
              "type": "NewExpression",
              "start": 34088,
              "end": 34155,
              "callee": {
                "type": "Identifier",
                "start": 34092,
                "end": 34104,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34105,
                  "end": 34154,
                  "left": {
                    "type": "Literal",
                    "start": 34105,
                    "end": 34139,
                    "value": "#814: 8191 >> 25 === 0. Actual: ",
                    "raw": "'#814: 8191 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34142,
                    "end": 34154,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34143,
                      "end": 34153,
                      "left": {
                        "type": "Literal",
                        "start": 34143,
                        "end": 34147,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34151,
                        "end": 34153,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34163,
      "end": 34270,
      "test": {
        "type": "BinaryExpression",
        "start": 34167,
        "end": 34184,
        "left": {
          "type": "BinaryExpression",
          "start": 34167,
          "end": 34178,
          "left": {
            "type": "Literal",
            "start": 34167,
            "end": 34172,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34176,
            "end": 34178,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34183,
          "end": 34184,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34186,
        "end": 34270,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34191,
            "end": 34267,
            "argument": {
              "type": "NewExpression",
              "start": 34197,
              "end": 34266,
              "callee": {
                "type": "Identifier",
                "start": 34201,
                "end": 34213,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34214,
                  "end": 34265,
                  "left": {
                    "type": "Literal",
                    "start": 34214,
                    "end": 34249,
                    "value": "#815: 16383 >> 25 === 0. Actual: ",
                    "raw": "'#815: 16383 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34252,
                    "end": 34265,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34253,
                      "end": 34264,
                      "left": {
                        "type": "Literal",
                        "start": 34253,
                        "end": 34258,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34262,
                        "end": 34264,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34274,
      "end": 34381,
      "test": {
        "type": "BinaryExpression",
        "start": 34278,
        "end": 34295,
        "left": {
          "type": "BinaryExpression",
          "start": 34278,
          "end": 34289,
          "left": {
            "type": "Literal",
            "start": 34278,
            "end": 34283,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34287,
            "end": 34289,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34294,
          "end": 34295,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34297,
        "end": 34381,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34302,
            "end": 34378,
            "argument": {
              "type": "NewExpression",
              "start": 34308,
              "end": 34377,
              "callee": {
                "type": "Identifier",
                "start": 34312,
                "end": 34324,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34325,
                  "end": 34376,
                  "left": {
                    "type": "Literal",
                    "start": 34325,
                    "end": 34360,
                    "value": "#816: 32767 >> 25 === 0. Actual: ",
                    "raw": "'#816: 32767 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34363,
                    "end": 34376,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34364,
                      "end": 34375,
                      "left": {
                        "type": "Literal",
                        "start": 34364,
                        "end": 34369,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34373,
                        "end": 34375,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34385,
      "end": 34492,
      "test": {
        "type": "BinaryExpression",
        "start": 34389,
        "end": 34406,
        "left": {
          "type": "BinaryExpression",
          "start": 34389,
          "end": 34400,
          "left": {
            "type": "Literal",
            "start": 34389,
            "end": 34394,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34398,
            "end": 34400,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34405,
          "end": 34406,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34408,
        "end": 34492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34413,
            "end": 34489,
            "argument": {
              "type": "NewExpression",
              "start": 34419,
              "end": 34488,
              "callee": {
                "type": "Identifier",
                "start": 34423,
                "end": 34435,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34436,
                  "end": 34487,
                  "left": {
                    "type": "Literal",
                    "start": 34436,
                    "end": 34471,
                    "value": "#817: 65535 >> 25 === 0. Actual: ",
                    "raw": "'#817: 65535 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34474,
                    "end": 34487,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34475,
                      "end": 34486,
                      "left": {
                        "type": "Literal",
                        "start": 34475,
                        "end": 34480,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34484,
                        "end": 34486,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34496,
      "end": 34606,
      "test": {
        "type": "BinaryExpression",
        "start": 34500,
        "end": 34518,
        "left": {
          "type": "BinaryExpression",
          "start": 34500,
          "end": 34512,
          "left": {
            "type": "Literal",
            "start": 34500,
            "end": 34506,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34510,
            "end": 34512,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34517,
          "end": 34518,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34520,
        "end": 34606,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34525,
            "end": 34603,
            "argument": {
              "type": "NewExpression",
              "start": 34531,
              "end": 34602,
              "callee": {
                "type": "Identifier",
                "start": 34535,
                "end": 34547,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34548,
                  "end": 34601,
                  "left": {
                    "type": "Literal",
                    "start": 34548,
                    "end": 34584,
                    "value": "#818: 131071 >> 25 === 0. Actual: ",
                    "raw": "'#818: 131071 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34587,
                    "end": 34601,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34588,
                      "end": 34600,
                      "left": {
                        "type": "Literal",
                        "start": 34588,
                        "end": 34594,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34598,
                        "end": 34600,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34610,
      "end": 34720,
      "test": {
        "type": "BinaryExpression",
        "start": 34614,
        "end": 34632,
        "left": {
          "type": "BinaryExpression",
          "start": 34614,
          "end": 34626,
          "left": {
            "type": "Literal",
            "start": 34614,
            "end": 34620,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34624,
            "end": 34626,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34631,
          "end": 34632,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34634,
        "end": 34720,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34639,
            "end": 34717,
            "argument": {
              "type": "NewExpression",
              "start": 34645,
              "end": 34716,
              "callee": {
                "type": "Identifier",
                "start": 34649,
                "end": 34661,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34662,
                  "end": 34715,
                  "left": {
                    "type": "Literal",
                    "start": 34662,
                    "end": 34698,
                    "value": "#819: 262143 >> 25 === 0. Actual: ",
                    "raw": "'#819: 262143 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34701,
                    "end": 34715,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34702,
                      "end": 34714,
                      "left": {
                        "type": "Literal",
                        "start": 34702,
                        "end": 34708,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34712,
                        "end": 34714,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34724,
      "end": 34834,
      "test": {
        "type": "BinaryExpression",
        "start": 34728,
        "end": 34746,
        "left": {
          "type": "BinaryExpression",
          "start": 34728,
          "end": 34740,
          "left": {
            "type": "Literal",
            "start": 34728,
            "end": 34734,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34738,
            "end": 34740,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34745,
          "end": 34746,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34748,
        "end": 34834,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34753,
            "end": 34831,
            "argument": {
              "type": "NewExpression",
              "start": 34759,
              "end": 34830,
              "callee": {
                "type": "Identifier",
                "start": 34763,
                "end": 34775,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34776,
                  "end": 34829,
                  "left": {
                    "type": "Literal",
                    "start": 34776,
                    "end": 34812,
                    "value": "#820: 524287 >> 25 === 0. Actual: ",
                    "raw": "'#820: 524287 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34815,
                    "end": 34829,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34816,
                      "end": 34828,
                      "left": {
                        "type": "Literal",
                        "start": 34816,
                        "end": 34822,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34826,
                        "end": 34828,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34838,
      "end": 34951,
      "test": {
        "type": "BinaryExpression",
        "start": 34842,
        "end": 34861,
        "left": {
          "type": "BinaryExpression",
          "start": 34842,
          "end": 34855,
          "left": {
            "type": "Literal",
            "start": 34842,
            "end": 34849,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34853,
            "end": 34855,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34860,
          "end": 34861,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34863,
        "end": 34951,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34868,
            "end": 34948,
            "argument": {
              "type": "NewExpression",
              "start": 34874,
              "end": 34947,
              "callee": {
                "type": "Identifier",
                "start": 34878,
                "end": 34890,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 34891,
                  "end": 34946,
                  "left": {
                    "type": "Literal",
                    "start": 34891,
                    "end": 34928,
                    "value": "#821: 1048575 >> 25 === 0. Actual: ",
                    "raw": "'#821: 1048575 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 34931,
                    "end": 34946,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 34932,
                      "end": 34945,
                      "left": {
                        "type": "Literal",
                        "start": 34932,
                        "end": 34939,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 34943,
                        "end": 34945,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 34955,
      "end": 35068,
      "test": {
        "type": "BinaryExpression",
        "start": 34959,
        "end": 34978,
        "left": {
          "type": "BinaryExpression",
          "start": 34959,
          "end": 34972,
          "left": {
            "type": "Literal",
            "start": 34959,
            "end": 34966,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 34970,
            "end": 34972,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 34977,
          "end": 34978,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 34980,
        "end": 35068,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 34985,
            "end": 35065,
            "argument": {
              "type": "NewExpression",
              "start": 34991,
              "end": 35064,
              "callee": {
                "type": "Identifier",
                "start": 34995,
                "end": 35007,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35008,
                  "end": 35063,
                  "left": {
                    "type": "Literal",
                    "start": 35008,
                    "end": 35045,
                    "value": "#822: 2097151 >> 25 === 0. Actual: ",
                    "raw": "'#822: 2097151 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35048,
                    "end": 35063,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35049,
                      "end": 35062,
                      "left": {
                        "type": "Literal",
                        "start": 35049,
                        "end": 35056,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35060,
                        "end": 35062,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35072,
      "end": 35185,
      "test": {
        "type": "BinaryExpression",
        "start": 35076,
        "end": 35095,
        "left": {
          "type": "BinaryExpression",
          "start": 35076,
          "end": 35089,
          "left": {
            "type": "Literal",
            "start": 35076,
            "end": 35083,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35087,
            "end": 35089,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35094,
          "end": 35095,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35097,
        "end": 35185,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35102,
            "end": 35182,
            "argument": {
              "type": "NewExpression",
              "start": 35108,
              "end": 35181,
              "callee": {
                "type": "Identifier",
                "start": 35112,
                "end": 35124,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35125,
                  "end": 35180,
                  "left": {
                    "type": "Literal",
                    "start": 35125,
                    "end": 35162,
                    "value": "#823: 4194303 >> 25 === 0. Actual: ",
                    "raw": "'#823: 4194303 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35165,
                    "end": 35180,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35166,
                      "end": 35179,
                      "left": {
                        "type": "Literal",
                        "start": 35166,
                        "end": 35173,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35177,
                        "end": 35179,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35189,
      "end": 35302,
      "test": {
        "type": "BinaryExpression",
        "start": 35193,
        "end": 35212,
        "left": {
          "type": "BinaryExpression",
          "start": 35193,
          "end": 35206,
          "left": {
            "type": "Literal",
            "start": 35193,
            "end": 35200,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35204,
            "end": 35206,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35211,
          "end": 35212,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35214,
        "end": 35302,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35219,
            "end": 35299,
            "argument": {
              "type": "NewExpression",
              "start": 35225,
              "end": 35298,
              "callee": {
                "type": "Identifier",
                "start": 35229,
                "end": 35241,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35242,
                  "end": 35297,
                  "left": {
                    "type": "Literal",
                    "start": 35242,
                    "end": 35279,
                    "value": "#824: 8388607 >> 25 === 0. Actual: ",
                    "raw": "'#824: 8388607 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35282,
                    "end": 35297,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35283,
                      "end": 35296,
                      "left": {
                        "type": "Literal",
                        "start": 35283,
                        "end": 35290,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35294,
                        "end": 35296,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35306,
      "end": 35422,
      "test": {
        "type": "BinaryExpression",
        "start": 35310,
        "end": 35330,
        "left": {
          "type": "BinaryExpression",
          "start": 35310,
          "end": 35324,
          "left": {
            "type": "Literal",
            "start": 35310,
            "end": 35318,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35322,
            "end": 35324,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35329,
          "end": 35330,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35332,
        "end": 35422,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35337,
            "end": 35419,
            "argument": {
              "type": "NewExpression",
              "start": 35343,
              "end": 35418,
              "callee": {
                "type": "Identifier",
                "start": 35347,
                "end": 35359,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35360,
                  "end": 35417,
                  "left": {
                    "type": "Literal",
                    "start": 35360,
                    "end": 35398,
                    "value": "#825: 16777215 >> 25 === 0. Actual: ",
                    "raw": "'#825: 16777215 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35401,
                    "end": 35417,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35402,
                      "end": 35416,
                      "left": {
                        "type": "Literal",
                        "start": 35402,
                        "end": 35410,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35414,
                        "end": 35416,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35426,
      "end": 35542,
      "test": {
        "type": "BinaryExpression",
        "start": 35430,
        "end": 35450,
        "left": {
          "type": "BinaryExpression",
          "start": 35430,
          "end": 35444,
          "left": {
            "type": "Literal",
            "start": 35430,
            "end": 35438,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35442,
            "end": 35444,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35449,
          "end": 35450,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35452,
        "end": 35542,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35457,
            "end": 35539,
            "argument": {
              "type": "NewExpression",
              "start": 35463,
              "end": 35538,
              "callee": {
                "type": "Identifier",
                "start": 35467,
                "end": 35479,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35480,
                  "end": 35537,
                  "left": {
                    "type": "Literal",
                    "start": 35480,
                    "end": 35518,
                    "value": "#826: 33554431 >> 25 === 0. Actual: ",
                    "raw": "'#826: 33554431 >> 25 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35521,
                    "end": 35537,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35522,
                      "end": 35536,
                      "left": {
                        "type": "Literal",
                        "start": 35522,
                        "end": 35530,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35534,
                        "end": 35536,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35546,
      "end": 35662,
      "test": {
        "type": "BinaryExpression",
        "start": 35550,
        "end": 35570,
        "left": {
          "type": "BinaryExpression",
          "start": 35550,
          "end": 35564,
          "left": {
            "type": "Literal",
            "start": 35550,
            "end": 35558,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35562,
            "end": 35564,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35569,
          "end": 35570,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35572,
        "end": 35662,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35577,
            "end": 35659,
            "argument": {
              "type": "NewExpression",
              "start": 35583,
              "end": 35658,
              "callee": {
                "type": "Identifier",
                "start": 35587,
                "end": 35599,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35600,
                  "end": 35657,
                  "left": {
                    "type": "Literal",
                    "start": 35600,
                    "end": 35638,
                    "value": "#827: 67108863 >> 25 === 1. Actual: ",
                    "raw": "'#827: 67108863 >> 25 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35641,
                    "end": 35657,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35642,
                      "end": 35656,
                      "left": {
                        "type": "Literal",
                        "start": 35642,
                        "end": 35650,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35654,
                        "end": 35656,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35666,
      "end": 35785,
      "test": {
        "type": "BinaryExpression",
        "start": 35670,
        "end": 35691,
        "left": {
          "type": "BinaryExpression",
          "start": 35670,
          "end": 35685,
          "left": {
            "type": "Literal",
            "start": 35670,
            "end": 35679,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35683,
            "end": 35685,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35690,
          "end": 35691,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35693,
        "end": 35785,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35698,
            "end": 35782,
            "argument": {
              "type": "NewExpression",
              "start": 35704,
              "end": 35781,
              "callee": {
                "type": "Identifier",
                "start": 35708,
                "end": 35720,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35721,
                  "end": 35780,
                  "left": {
                    "type": "Literal",
                    "start": 35721,
                    "end": 35760,
                    "value": "#828: 134217727 >> 25 === 3. Actual: ",
                    "raw": "'#828: 134217727 >> 25 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35763,
                    "end": 35780,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35764,
                      "end": 35779,
                      "left": {
                        "type": "Literal",
                        "start": 35764,
                        "end": 35773,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35777,
                        "end": 35779,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35789,
      "end": 35908,
      "test": {
        "type": "BinaryExpression",
        "start": 35793,
        "end": 35814,
        "left": {
          "type": "BinaryExpression",
          "start": 35793,
          "end": 35808,
          "left": {
            "type": "Literal",
            "start": 35793,
            "end": 35802,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35806,
            "end": 35808,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35813,
          "end": 35814,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35816,
        "end": 35908,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35821,
            "end": 35905,
            "argument": {
              "type": "NewExpression",
              "start": 35827,
              "end": 35904,
              "callee": {
                "type": "Identifier",
                "start": 35831,
                "end": 35843,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35844,
                  "end": 35903,
                  "left": {
                    "type": "Literal",
                    "start": 35844,
                    "end": 35883,
                    "value": "#829: 268435455 >> 25 === 7. Actual: ",
                    "raw": "'#829: 268435455 >> 25 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 35886,
                    "end": 35903,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 35887,
                      "end": 35902,
                      "left": {
                        "type": "Literal",
                        "start": 35887,
                        "end": 35896,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 35900,
                        "end": 35902,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 35912,
      "end": 36033,
      "test": {
        "type": "BinaryExpression",
        "start": 35916,
        "end": 35938,
        "left": {
          "type": "BinaryExpression",
          "start": 35916,
          "end": 35931,
          "left": {
            "type": "Literal",
            "start": 35916,
            "end": 35925,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 35929,
            "end": 35931,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 35936,
          "end": 35938,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 35940,
        "end": 36033,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 35945,
            "end": 36030,
            "argument": {
              "type": "NewExpression",
              "start": 35951,
              "end": 36029,
              "callee": {
                "type": "Identifier",
                "start": 35955,
                "end": 35967,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 35968,
                  "end": 36028,
                  "left": {
                    "type": "Literal",
                    "start": 35968,
                    "end": 36008,
                    "value": "#830: 536870911 >> 25 === 15. Actual: ",
                    "raw": "'#830: 536870911 >> 25 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36011,
                    "end": 36028,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36012,
                      "end": 36027,
                      "left": {
                        "type": "Literal",
                        "start": 36012,
                        "end": 36021,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36025,
                        "end": 36027,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36037,
      "end": 36161,
      "test": {
        "type": "BinaryExpression",
        "start": 36041,
        "end": 36064,
        "left": {
          "type": "BinaryExpression",
          "start": 36041,
          "end": 36057,
          "left": {
            "type": "Literal",
            "start": 36041,
            "end": 36051,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36055,
            "end": 36057,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36062,
          "end": 36064,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36066,
        "end": 36161,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36071,
            "end": 36158,
            "argument": {
              "type": "NewExpression",
              "start": 36077,
              "end": 36157,
              "callee": {
                "type": "Identifier",
                "start": 36081,
                "end": 36093,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36094,
                  "end": 36156,
                  "left": {
                    "type": "Literal",
                    "start": 36094,
                    "end": 36135,
                    "value": "#831: 1073741823 >> 25 === 31. Actual: ",
                    "raw": "'#831: 1073741823 >> 25 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36138,
                    "end": 36156,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36139,
                      "end": 36155,
                      "left": {
                        "type": "Literal",
                        "start": 36139,
                        "end": 36149,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36153,
                        "end": 36155,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36165,
      "end": 36289,
      "test": {
        "type": "BinaryExpression",
        "start": 36169,
        "end": 36192,
        "left": {
          "type": "BinaryExpression",
          "start": 36169,
          "end": 36185,
          "left": {
            "type": "Literal",
            "start": 36169,
            "end": 36179,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36183,
            "end": 36185,
            "value": 25,
            "raw": "25",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36190,
          "end": 36192,
          "value": 63,
          "raw": "63",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36194,
        "end": 36289,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36199,
            "end": 36286,
            "argument": {
              "type": "NewExpression",
              "start": 36205,
              "end": 36285,
              "callee": {
                "type": "Identifier",
                "start": 36209,
                "end": 36221,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36222,
                  "end": 36284,
                  "left": {
                    "type": "Literal",
                    "start": 36222,
                    "end": 36263,
                    "value": "#832: 2147483647 >> 25 === 63. Actual: ",
                    "raw": "'#832: 2147483647 >> 25 === 63. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36266,
                    "end": 36284,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36267,
                      "end": 36283,
                      "left": {
                        "type": "Literal",
                        "start": 36267,
                        "end": 36277,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36281,
                        "end": 36283,
                        "value": 25,
                        "raw": "25",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36293,
      "end": 36388,
      "test": {
        "type": "BinaryExpression",
        "start": 36297,
        "end": 36310,
        "left": {
          "type": "BinaryExpression",
          "start": 36297,
          "end": 36304,
          "left": {
            "type": "Literal",
            "start": 36297,
            "end": 36298,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36302,
            "end": 36304,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36309,
          "end": 36310,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36312,
        "end": 36388,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36317,
            "end": 36385,
            "argument": {
              "type": "NewExpression",
              "start": 36323,
              "end": 36384,
              "callee": {
                "type": "Identifier",
                "start": 36327,
                "end": 36339,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36340,
                  "end": 36383,
                  "left": {
                    "type": "Literal",
                    "start": 36340,
                    "end": 36371,
                    "value": "#833: 0 >> 26 === 0. Actual: ",
                    "raw": "'#833: 0 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36374,
                    "end": 36383,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36375,
                      "end": 36382,
                      "left": {
                        "type": "Literal",
                        "start": 36375,
                        "end": 36376,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36380,
                        "end": 36382,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36392,
      "end": 36487,
      "test": {
        "type": "BinaryExpression",
        "start": 36396,
        "end": 36409,
        "left": {
          "type": "BinaryExpression",
          "start": 36396,
          "end": 36403,
          "left": {
            "type": "Literal",
            "start": 36396,
            "end": 36397,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36401,
            "end": 36403,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36408,
          "end": 36409,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36411,
        "end": 36487,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36416,
            "end": 36484,
            "argument": {
              "type": "NewExpression",
              "start": 36422,
              "end": 36483,
              "callee": {
                "type": "Identifier",
                "start": 36426,
                "end": 36438,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36439,
                  "end": 36482,
                  "left": {
                    "type": "Literal",
                    "start": 36439,
                    "end": 36470,
                    "value": "#834: 1 >> 26 === 0. Actual: ",
                    "raw": "'#834: 1 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36473,
                    "end": 36482,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36474,
                      "end": 36481,
                      "left": {
                        "type": "Literal",
                        "start": 36474,
                        "end": 36475,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36479,
                        "end": 36481,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36491,
      "end": 36586,
      "test": {
        "type": "BinaryExpression",
        "start": 36495,
        "end": 36508,
        "left": {
          "type": "BinaryExpression",
          "start": 36495,
          "end": 36502,
          "left": {
            "type": "Literal",
            "start": 36495,
            "end": 36496,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36500,
            "end": 36502,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36507,
          "end": 36508,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36510,
        "end": 36586,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36515,
            "end": 36583,
            "argument": {
              "type": "NewExpression",
              "start": 36521,
              "end": 36582,
              "callee": {
                "type": "Identifier",
                "start": 36525,
                "end": 36537,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36538,
                  "end": 36581,
                  "left": {
                    "type": "Literal",
                    "start": 36538,
                    "end": 36569,
                    "value": "#835: 3 >> 26 === 0. Actual: ",
                    "raw": "'#835: 3 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36572,
                    "end": 36581,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36573,
                      "end": 36580,
                      "left": {
                        "type": "Literal",
                        "start": 36573,
                        "end": 36574,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36578,
                        "end": 36580,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36590,
      "end": 36685,
      "test": {
        "type": "BinaryExpression",
        "start": 36594,
        "end": 36607,
        "left": {
          "type": "BinaryExpression",
          "start": 36594,
          "end": 36601,
          "left": {
            "type": "Literal",
            "start": 36594,
            "end": 36595,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36599,
            "end": 36601,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36606,
          "end": 36607,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36609,
        "end": 36685,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36614,
            "end": 36682,
            "argument": {
              "type": "NewExpression",
              "start": 36620,
              "end": 36681,
              "callee": {
                "type": "Identifier",
                "start": 36624,
                "end": 36636,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36637,
                  "end": 36680,
                  "left": {
                    "type": "Literal",
                    "start": 36637,
                    "end": 36668,
                    "value": "#836: 7 >> 26 === 0. Actual: ",
                    "raw": "'#836: 7 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36671,
                    "end": 36680,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36672,
                      "end": 36679,
                      "left": {
                        "type": "Literal",
                        "start": 36672,
                        "end": 36673,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36677,
                        "end": 36679,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36689,
      "end": 36787,
      "test": {
        "type": "BinaryExpression",
        "start": 36693,
        "end": 36707,
        "left": {
          "type": "BinaryExpression",
          "start": 36693,
          "end": 36701,
          "left": {
            "type": "Literal",
            "start": 36693,
            "end": 36695,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36699,
            "end": 36701,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36706,
          "end": 36707,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36709,
        "end": 36787,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36714,
            "end": 36784,
            "argument": {
              "type": "NewExpression",
              "start": 36720,
              "end": 36783,
              "callee": {
                "type": "Identifier",
                "start": 36724,
                "end": 36736,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36737,
                  "end": 36782,
                  "left": {
                    "type": "Literal",
                    "start": 36737,
                    "end": 36769,
                    "value": "#837: 15 >> 26 === 0. Actual: ",
                    "raw": "'#837: 15 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36772,
                    "end": 36782,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36773,
                      "end": 36781,
                      "left": {
                        "type": "Literal",
                        "start": 36773,
                        "end": 36775,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36779,
                        "end": 36781,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36791,
      "end": 36889,
      "test": {
        "type": "BinaryExpression",
        "start": 36795,
        "end": 36809,
        "left": {
          "type": "BinaryExpression",
          "start": 36795,
          "end": 36803,
          "left": {
            "type": "Literal",
            "start": 36795,
            "end": 36797,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36801,
            "end": 36803,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36808,
          "end": 36809,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36811,
        "end": 36889,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36816,
            "end": 36886,
            "argument": {
              "type": "NewExpression",
              "start": 36822,
              "end": 36885,
              "callee": {
                "type": "Identifier",
                "start": 36826,
                "end": 36838,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36839,
                  "end": 36884,
                  "left": {
                    "type": "Literal",
                    "start": 36839,
                    "end": 36871,
                    "value": "#838: 31 >> 26 === 0. Actual: ",
                    "raw": "'#838: 31 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36874,
                    "end": 36884,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36875,
                      "end": 36883,
                      "left": {
                        "type": "Literal",
                        "start": 36875,
                        "end": 36877,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36881,
                        "end": 36883,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36893,
      "end": 36991,
      "test": {
        "type": "BinaryExpression",
        "start": 36897,
        "end": 36911,
        "left": {
          "type": "BinaryExpression",
          "start": 36897,
          "end": 36905,
          "left": {
            "type": "Literal",
            "start": 36897,
            "end": 36899,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 36903,
            "end": 36905,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 36910,
          "end": 36911,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 36913,
        "end": 36991,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 36918,
            "end": 36988,
            "argument": {
              "type": "NewExpression",
              "start": 36924,
              "end": 36987,
              "callee": {
                "type": "Identifier",
                "start": 36928,
                "end": 36940,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 36941,
                  "end": 36986,
                  "left": {
                    "type": "Literal",
                    "start": 36941,
                    "end": 36973,
                    "value": "#839: 63 >> 26 === 0. Actual: ",
                    "raw": "'#839: 63 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 36976,
                    "end": 36986,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 36977,
                      "end": 36985,
                      "left": {
                        "type": "Literal",
                        "start": 36977,
                        "end": 36979,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 36983,
                        "end": 36985,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 36995,
      "end": 37096,
      "test": {
        "type": "BinaryExpression",
        "start": 36999,
        "end": 37014,
        "left": {
          "type": "BinaryExpression",
          "start": 36999,
          "end": 37008,
          "left": {
            "type": "Literal",
            "start": 36999,
            "end": 37002,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37006,
            "end": 37008,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37013,
          "end": 37014,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37016,
        "end": 37096,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37021,
            "end": 37093,
            "argument": {
              "type": "NewExpression",
              "start": 37027,
              "end": 37092,
              "callee": {
                "type": "Identifier",
                "start": 37031,
                "end": 37043,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37044,
                  "end": 37091,
                  "left": {
                    "type": "Literal",
                    "start": 37044,
                    "end": 37077,
                    "value": "#840: 127 >> 26 === 0. Actual: ",
                    "raw": "'#840: 127 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37080,
                    "end": 37091,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37081,
                      "end": 37090,
                      "left": {
                        "type": "Literal",
                        "start": 37081,
                        "end": 37084,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37088,
                        "end": 37090,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37100,
      "end": 37201,
      "test": {
        "type": "BinaryExpression",
        "start": 37104,
        "end": 37119,
        "left": {
          "type": "BinaryExpression",
          "start": 37104,
          "end": 37113,
          "left": {
            "type": "Literal",
            "start": 37104,
            "end": 37107,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37111,
            "end": 37113,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37118,
          "end": 37119,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37121,
        "end": 37201,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37126,
            "end": 37198,
            "argument": {
              "type": "NewExpression",
              "start": 37132,
              "end": 37197,
              "callee": {
                "type": "Identifier",
                "start": 37136,
                "end": 37148,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37149,
                  "end": 37196,
                  "left": {
                    "type": "Literal",
                    "start": 37149,
                    "end": 37182,
                    "value": "#841: 255 >> 26 === 0. Actual: ",
                    "raw": "'#841: 255 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37185,
                    "end": 37196,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37186,
                      "end": 37195,
                      "left": {
                        "type": "Literal",
                        "start": 37186,
                        "end": 37189,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37193,
                        "end": 37195,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37205,
      "end": 37306,
      "test": {
        "type": "BinaryExpression",
        "start": 37209,
        "end": 37224,
        "left": {
          "type": "BinaryExpression",
          "start": 37209,
          "end": 37218,
          "left": {
            "type": "Literal",
            "start": 37209,
            "end": 37212,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37216,
            "end": 37218,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37223,
          "end": 37224,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37226,
        "end": 37306,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37231,
            "end": 37303,
            "argument": {
              "type": "NewExpression",
              "start": 37237,
              "end": 37302,
              "callee": {
                "type": "Identifier",
                "start": 37241,
                "end": 37253,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37254,
                  "end": 37301,
                  "left": {
                    "type": "Literal",
                    "start": 37254,
                    "end": 37287,
                    "value": "#842: 511 >> 26 === 0. Actual: ",
                    "raw": "'#842: 511 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37290,
                    "end": 37301,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37291,
                      "end": 37300,
                      "left": {
                        "type": "Literal",
                        "start": 37291,
                        "end": 37294,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37298,
                        "end": 37300,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37310,
      "end": 37414,
      "test": {
        "type": "BinaryExpression",
        "start": 37314,
        "end": 37330,
        "left": {
          "type": "BinaryExpression",
          "start": 37314,
          "end": 37324,
          "left": {
            "type": "Literal",
            "start": 37314,
            "end": 37318,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37322,
            "end": 37324,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37329,
          "end": 37330,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37332,
        "end": 37414,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37337,
            "end": 37411,
            "argument": {
              "type": "NewExpression",
              "start": 37343,
              "end": 37410,
              "callee": {
                "type": "Identifier",
                "start": 37347,
                "end": 37359,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37360,
                  "end": 37409,
                  "left": {
                    "type": "Literal",
                    "start": 37360,
                    "end": 37394,
                    "value": "#843: 1023 >> 26 === 0. Actual: ",
                    "raw": "'#843: 1023 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37397,
                    "end": 37409,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37398,
                      "end": 37408,
                      "left": {
                        "type": "Literal",
                        "start": 37398,
                        "end": 37402,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37406,
                        "end": 37408,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37418,
      "end": 37522,
      "test": {
        "type": "BinaryExpression",
        "start": 37422,
        "end": 37438,
        "left": {
          "type": "BinaryExpression",
          "start": 37422,
          "end": 37432,
          "left": {
            "type": "Literal",
            "start": 37422,
            "end": 37426,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37430,
            "end": 37432,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37437,
          "end": 37438,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37440,
        "end": 37522,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37445,
            "end": 37519,
            "argument": {
              "type": "NewExpression",
              "start": 37451,
              "end": 37518,
              "callee": {
                "type": "Identifier",
                "start": 37455,
                "end": 37467,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37468,
                  "end": 37517,
                  "left": {
                    "type": "Literal",
                    "start": 37468,
                    "end": 37502,
                    "value": "#844: 2047 >> 26 === 0. Actual: ",
                    "raw": "'#844: 2047 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37505,
                    "end": 37517,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37506,
                      "end": 37516,
                      "left": {
                        "type": "Literal",
                        "start": 37506,
                        "end": 37510,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37514,
                        "end": 37516,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37526,
      "end": 37630,
      "test": {
        "type": "BinaryExpression",
        "start": 37530,
        "end": 37546,
        "left": {
          "type": "BinaryExpression",
          "start": 37530,
          "end": 37540,
          "left": {
            "type": "Literal",
            "start": 37530,
            "end": 37534,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37538,
            "end": 37540,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37545,
          "end": 37546,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37548,
        "end": 37630,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37553,
            "end": 37627,
            "argument": {
              "type": "NewExpression",
              "start": 37559,
              "end": 37626,
              "callee": {
                "type": "Identifier",
                "start": 37563,
                "end": 37575,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37576,
                  "end": 37625,
                  "left": {
                    "type": "Literal",
                    "start": 37576,
                    "end": 37610,
                    "value": "#845: 4095 >> 26 === 0. Actual: ",
                    "raw": "'#845: 4095 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37613,
                    "end": 37625,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37614,
                      "end": 37624,
                      "left": {
                        "type": "Literal",
                        "start": 37614,
                        "end": 37618,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37622,
                        "end": 37624,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37634,
      "end": 37738,
      "test": {
        "type": "BinaryExpression",
        "start": 37638,
        "end": 37654,
        "left": {
          "type": "BinaryExpression",
          "start": 37638,
          "end": 37648,
          "left": {
            "type": "Literal",
            "start": 37638,
            "end": 37642,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37646,
            "end": 37648,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37653,
          "end": 37654,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37656,
        "end": 37738,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37661,
            "end": 37735,
            "argument": {
              "type": "NewExpression",
              "start": 37667,
              "end": 37734,
              "callee": {
                "type": "Identifier",
                "start": 37671,
                "end": 37683,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37684,
                  "end": 37733,
                  "left": {
                    "type": "Literal",
                    "start": 37684,
                    "end": 37718,
                    "value": "#846: 8191 >> 26 === 0. Actual: ",
                    "raw": "'#846: 8191 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37721,
                    "end": 37733,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37722,
                      "end": 37732,
                      "left": {
                        "type": "Literal",
                        "start": 37722,
                        "end": 37726,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37730,
                        "end": 37732,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37742,
      "end": 37849,
      "test": {
        "type": "BinaryExpression",
        "start": 37746,
        "end": 37763,
        "left": {
          "type": "BinaryExpression",
          "start": 37746,
          "end": 37757,
          "left": {
            "type": "Literal",
            "start": 37746,
            "end": 37751,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37755,
            "end": 37757,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37762,
          "end": 37763,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37765,
        "end": 37849,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37770,
            "end": 37846,
            "argument": {
              "type": "NewExpression",
              "start": 37776,
              "end": 37845,
              "callee": {
                "type": "Identifier",
                "start": 37780,
                "end": 37792,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37793,
                  "end": 37844,
                  "left": {
                    "type": "Literal",
                    "start": 37793,
                    "end": 37828,
                    "value": "#847: 16383 >> 26 === 0. Actual: ",
                    "raw": "'#847: 16383 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37831,
                    "end": 37844,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37832,
                      "end": 37843,
                      "left": {
                        "type": "Literal",
                        "start": 37832,
                        "end": 37837,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37841,
                        "end": 37843,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37853,
      "end": 37960,
      "test": {
        "type": "BinaryExpression",
        "start": 37857,
        "end": 37874,
        "left": {
          "type": "BinaryExpression",
          "start": 37857,
          "end": 37868,
          "left": {
            "type": "Literal",
            "start": 37857,
            "end": 37862,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37866,
            "end": 37868,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37873,
          "end": 37874,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37876,
        "end": 37960,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37881,
            "end": 37957,
            "argument": {
              "type": "NewExpression",
              "start": 37887,
              "end": 37956,
              "callee": {
                "type": "Identifier",
                "start": 37891,
                "end": 37903,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 37904,
                  "end": 37955,
                  "left": {
                    "type": "Literal",
                    "start": 37904,
                    "end": 37939,
                    "value": "#848: 32767 >> 26 === 0. Actual: ",
                    "raw": "'#848: 32767 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 37942,
                    "end": 37955,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 37943,
                      "end": 37954,
                      "left": {
                        "type": "Literal",
                        "start": 37943,
                        "end": 37948,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 37952,
                        "end": 37954,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 37964,
      "end": 38071,
      "test": {
        "type": "BinaryExpression",
        "start": 37968,
        "end": 37985,
        "left": {
          "type": "BinaryExpression",
          "start": 37968,
          "end": 37979,
          "left": {
            "type": "Literal",
            "start": 37968,
            "end": 37973,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 37977,
            "end": 37979,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 37984,
          "end": 37985,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 37987,
        "end": 38071,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 37992,
            "end": 38068,
            "argument": {
              "type": "NewExpression",
              "start": 37998,
              "end": 38067,
              "callee": {
                "type": "Identifier",
                "start": 38002,
                "end": 38014,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38015,
                  "end": 38066,
                  "left": {
                    "type": "Literal",
                    "start": 38015,
                    "end": 38050,
                    "value": "#849: 65535 >> 26 === 0. Actual: ",
                    "raw": "'#849: 65535 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38053,
                    "end": 38066,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38054,
                      "end": 38065,
                      "left": {
                        "type": "Literal",
                        "start": 38054,
                        "end": 38059,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38063,
                        "end": 38065,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38075,
      "end": 38185,
      "test": {
        "type": "BinaryExpression",
        "start": 38079,
        "end": 38097,
        "left": {
          "type": "BinaryExpression",
          "start": 38079,
          "end": 38091,
          "left": {
            "type": "Literal",
            "start": 38079,
            "end": 38085,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38089,
            "end": 38091,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38096,
          "end": 38097,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38099,
        "end": 38185,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38104,
            "end": 38182,
            "argument": {
              "type": "NewExpression",
              "start": 38110,
              "end": 38181,
              "callee": {
                "type": "Identifier",
                "start": 38114,
                "end": 38126,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38127,
                  "end": 38180,
                  "left": {
                    "type": "Literal",
                    "start": 38127,
                    "end": 38163,
                    "value": "#850: 131071 >> 26 === 0. Actual: ",
                    "raw": "'#850: 131071 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38166,
                    "end": 38180,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38167,
                      "end": 38179,
                      "left": {
                        "type": "Literal",
                        "start": 38167,
                        "end": 38173,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38177,
                        "end": 38179,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38189,
      "end": 38299,
      "test": {
        "type": "BinaryExpression",
        "start": 38193,
        "end": 38211,
        "left": {
          "type": "BinaryExpression",
          "start": 38193,
          "end": 38205,
          "left": {
            "type": "Literal",
            "start": 38193,
            "end": 38199,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38203,
            "end": 38205,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38210,
          "end": 38211,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38213,
        "end": 38299,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38218,
            "end": 38296,
            "argument": {
              "type": "NewExpression",
              "start": 38224,
              "end": 38295,
              "callee": {
                "type": "Identifier",
                "start": 38228,
                "end": 38240,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38241,
                  "end": 38294,
                  "left": {
                    "type": "Literal",
                    "start": 38241,
                    "end": 38277,
                    "value": "#851: 262143 >> 26 === 0. Actual: ",
                    "raw": "'#851: 262143 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38280,
                    "end": 38294,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38281,
                      "end": 38293,
                      "left": {
                        "type": "Literal",
                        "start": 38281,
                        "end": 38287,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38291,
                        "end": 38293,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38303,
      "end": 38413,
      "test": {
        "type": "BinaryExpression",
        "start": 38307,
        "end": 38325,
        "left": {
          "type": "BinaryExpression",
          "start": 38307,
          "end": 38319,
          "left": {
            "type": "Literal",
            "start": 38307,
            "end": 38313,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38317,
            "end": 38319,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38324,
          "end": 38325,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38327,
        "end": 38413,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38332,
            "end": 38410,
            "argument": {
              "type": "NewExpression",
              "start": 38338,
              "end": 38409,
              "callee": {
                "type": "Identifier",
                "start": 38342,
                "end": 38354,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38355,
                  "end": 38408,
                  "left": {
                    "type": "Literal",
                    "start": 38355,
                    "end": 38391,
                    "value": "#852: 524287 >> 26 === 0. Actual: ",
                    "raw": "'#852: 524287 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38394,
                    "end": 38408,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38395,
                      "end": 38407,
                      "left": {
                        "type": "Literal",
                        "start": 38395,
                        "end": 38401,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38405,
                        "end": 38407,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38417,
      "end": 38530,
      "test": {
        "type": "BinaryExpression",
        "start": 38421,
        "end": 38440,
        "left": {
          "type": "BinaryExpression",
          "start": 38421,
          "end": 38434,
          "left": {
            "type": "Literal",
            "start": 38421,
            "end": 38428,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38432,
            "end": 38434,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38439,
          "end": 38440,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38442,
        "end": 38530,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38447,
            "end": 38527,
            "argument": {
              "type": "NewExpression",
              "start": 38453,
              "end": 38526,
              "callee": {
                "type": "Identifier",
                "start": 38457,
                "end": 38469,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38470,
                  "end": 38525,
                  "left": {
                    "type": "Literal",
                    "start": 38470,
                    "end": 38507,
                    "value": "#853: 1048575 >> 26 === 0. Actual: ",
                    "raw": "'#853: 1048575 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38510,
                    "end": 38525,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38511,
                      "end": 38524,
                      "left": {
                        "type": "Literal",
                        "start": 38511,
                        "end": 38518,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38522,
                        "end": 38524,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38534,
      "end": 38647,
      "test": {
        "type": "BinaryExpression",
        "start": 38538,
        "end": 38557,
        "left": {
          "type": "BinaryExpression",
          "start": 38538,
          "end": 38551,
          "left": {
            "type": "Literal",
            "start": 38538,
            "end": 38545,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38549,
            "end": 38551,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38556,
          "end": 38557,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38559,
        "end": 38647,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38564,
            "end": 38644,
            "argument": {
              "type": "NewExpression",
              "start": 38570,
              "end": 38643,
              "callee": {
                "type": "Identifier",
                "start": 38574,
                "end": 38586,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38587,
                  "end": 38642,
                  "left": {
                    "type": "Literal",
                    "start": 38587,
                    "end": 38624,
                    "value": "#854: 2097151 >> 26 === 0. Actual: ",
                    "raw": "'#854: 2097151 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38627,
                    "end": 38642,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38628,
                      "end": 38641,
                      "left": {
                        "type": "Literal",
                        "start": 38628,
                        "end": 38635,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38639,
                        "end": 38641,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38651,
      "end": 38764,
      "test": {
        "type": "BinaryExpression",
        "start": 38655,
        "end": 38674,
        "left": {
          "type": "BinaryExpression",
          "start": 38655,
          "end": 38668,
          "left": {
            "type": "Literal",
            "start": 38655,
            "end": 38662,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38666,
            "end": 38668,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38673,
          "end": 38674,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38676,
        "end": 38764,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38681,
            "end": 38761,
            "argument": {
              "type": "NewExpression",
              "start": 38687,
              "end": 38760,
              "callee": {
                "type": "Identifier",
                "start": 38691,
                "end": 38703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38704,
                  "end": 38759,
                  "left": {
                    "type": "Literal",
                    "start": 38704,
                    "end": 38741,
                    "value": "#855: 4194303 >> 26 === 0. Actual: ",
                    "raw": "'#855: 4194303 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38744,
                    "end": 38759,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38745,
                      "end": 38758,
                      "left": {
                        "type": "Literal",
                        "start": 38745,
                        "end": 38752,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38756,
                        "end": 38758,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38768,
      "end": 38881,
      "test": {
        "type": "BinaryExpression",
        "start": 38772,
        "end": 38791,
        "left": {
          "type": "BinaryExpression",
          "start": 38772,
          "end": 38785,
          "left": {
            "type": "Literal",
            "start": 38772,
            "end": 38779,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38783,
            "end": 38785,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38790,
          "end": 38791,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38793,
        "end": 38881,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38798,
            "end": 38878,
            "argument": {
              "type": "NewExpression",
              "start": 38804,
              "end": 38877,
              "callee": {
                "type": "Identifier",
                "start": 38808,
                "end": 38820,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38821,
                  "end": 38876,
                  "left": {
                    "type": "Literal",
                    "start": 38821,
                    "end": 38858,
                    "value": "#856: 8388607 >> 26 === 0. Actual: ",
                    "raw": "'#856: 8388607 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38861,
                    "end": 38876,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38862,
                      "end": 38875,
                      "left": {
                        "type": "Literal",
                        "start": 38862,
                        "end": 38869,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38873,
                        "end": 38875,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 38885,
      "end": 39001,
      "test": {
        "type": "BinaryExpression",
        "start": 38889,
        "end": 38909,
        "left": {
          "type": "BinaryExpression",
          "start": 38889,
          "end": 38903,
          "left": {
            "type": "Literal",
            "start": 38889,
            "end": 38897,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 38901,
            "end": 38903,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 38908,
          "end": 38909,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 38911,
        "end": 39001,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 38916,
            "end": 38998,
            "argument": {
              "type": "NewExpression",
              "start": 38922,
              "end": 38997,
              "callee": {
                "type": "Identifier",
                "start": 38926,
                "end": 38938,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 38939,
                  "end": 38996,
                  "left": {
                    "type": "Literal",
                    "start": 38939,
                    "end": 38977,
                    "value": "#857: 16777215 >> 26 === 0. Actual: ",
                    "raw": "'#857: 16777215 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 38980,
                    "end": 38996,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 38981,
                      "end": 38995,
                      "left": {
                        "type": "Literal",
                        "start": 38981,
                        "end": 38989,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 38993,
                        "end": 38995,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39005,
      "end": 39121,
      "test": {
        "type": "BinaryExpression",
        "start": 39009,
        "end": 39029,
        "left": {
          "type": "BinaryExpression",
          "start": 39009,
          "end": 39023,
          "left": {
            "type": "Literal",
            "start": 39009,
            "end": 39017,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39021,
            "end": 39023,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39028,
          "end": 39029,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39031,
        "end": 39121,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39036,
            "end": 39118,
            "argument": {
              "type": "NewExpression",
              "start": 39042,
              "end": 39117,
              "callee": {
                "type": "Identifier",
                "start": 39046,
                "end": 39058,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39059,
                  "end": 39116,
                  "left": {
                    "type": "Literal",
                    "start": 39059,
                    "end": 39097,
                    "value": "#858: 33554431 >> 26 === 0. Actual: ",
                    "raw": "'#858: 33554431 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39100,
                    "end": 39116,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39101,
                      "end": 39115,
                      "left": {
                        "type": "Literal",
                        "start": 39101,
                        "end": 39109,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39113,
                        "end": 39115,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39125,
      "end": 39241,
      "test": {
        "type": "BinaryExpression",
        "start": 39129,
        "end": 39149,
        "left": {
          "type": "BinaryExpression",
          "start": 39129,
          "end": 39143,
          "left": {
            "type": "Literal",
            "start": 39129,
            "end": 39137,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39141,
            "end": 39143,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39148,
          "end": 39149,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39151,
        "end": 39241,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39156,
            "end": 39238,
            "argument": {
              "type": "NewExpression",
              "start": 39162,
              "end": 39237,
              "callee": {
                "type": "Identifier",
                "start": 39166,
                "end": 39178,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39179,
                  "end": 39236,
                  "left": {
                    "type": "Literal",
                    "start": 39179,
                    "end": 39217,
                    "value": "#859: 67108863 >> 26 === 0. Actual: ",
                    "raw": "'#859: 67108863 >> 26 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39220,
                    "end": 39236,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39221,
                      "end": 39235,
                      "left": {
                        "type": "Literal",
                        "start": 39221,
                        "end": 39229,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39233,
                        "end": 39235,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39245,
      "end": 39364,
      "test": {
        "type": "BinaryExpression",
        "start": 39249,
        "end": 39270,
        "left": {
          "type": "BinaryExpression",
          "start": 39249,
          "end": 39264,
          "left": {
            "type": "Literal",
            "start": 39249,
            "end": 39258,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39262,
            "end": 39264,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39269,
          "end": 39270,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39272,
        "end": 39364,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39277,
            "end": 39361,
            "argument": {
              "type": "NewExpression",
              "start": 39283,
              "end": 39360,
              "callee": {
                "type": "Identifier",
                "start": 39287,
                "end": 39299,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39300,
                  "end": 39359,
                  "left": {
                    "type": "Literal",
                    "start": 39300,
                    "end": 39339,
                    "value": "#860: 134217727 >> 26 === 1. Actual: ",
                    "raw": "'#860: 134217727 >> 26 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39342,
                    "end": 39359,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39343,
                      "end": 39358,
                      "left": {
                        "type": "Literal",
                        "start": 39343,
                        "end": 39352,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39356,
                        "end": 39358,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39368,
      "end": 39487,
      "test": {
        "type": "BinaryExpression",
        "start": 39372,
        "end": 39393,
        "left": {
          "type": "BinaryExpression",
          "start": 39372,
          "end": 39387,
          "left": {
            "type": "Literal",
            "start": 39372,
            "end": 39381,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39385,
            "end": 39387,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39392,
          "end": 39393,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39395,
        "end": 39487,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39400,
            "end": 39484,
            "argument": {
              "type": "NewExpression",
              "start": 39406,
              "end": 39483,
              "callee": {
                "type": "Identifier",
                "start": 39410,
                "end": 39422,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39423,
                  "end": 39482,
                  "left": {
                    "type": "Literal",
                    "start": 39423,
                    "end": 39462,
                    "value": "#861: 268435455 >> 26 === 3. Actual: ",
                    "raw": "'#861: 268435455 >> 26 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39465,
                    "end": 39482,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39466,
                      "end": 39481,
                      "left": {
                        "type": "Literal",
                        "start": 39466,
                        "end": 39475,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39479,
                        "end": 39481,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39491,
      "end": 39610,
      "test": {
        "type": "BinaryExpression",
        "start": 39495,
        "end": 39516,
        "left": {
          "type": "BinaryExpression",
          "start": 39495,
          "end": 39510,
          "left": {
            "type": "Literal",
            "start": 39495,
            "end": 39504,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39508,
            "end": 39510,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39515,
          "end": 39516,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39518,
        "end": 39610,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39523,
            "end": 39607,
            "argument": {
              "type": "NewExpression",
              "start": 39529,
              "end": 39606,
              "callee": {
                "type": "Identifier",
                "start": 39533,
                "end": 39545,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39546,
                  "end": 39605,
                  "left": {
                    "type": "Literal",
                    "start": 39546,
                    "end": 39585,
                    "value": "#862: 536870911 >> 26 === 7. Actual: ",
                    "raw": "'#862: 536870911 >> 26 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39588,
                    "end": 39605,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39589,
                      "end": 39604,
                      "left": {
                        "type": "Literal",
                        "start": 39589,
                        "end": 39598,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39602,
                        "end": 39604,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39614,
      "end": 39738,
      "test": {
        "type": "BinaryExpression",
        "start": 39618,
        "end": 39641,
        "left": {
          "type": "BinaryExpression",
          "start": 39618,
          "end": 39634,
          "left": {
            "type": "Literal",
            "start": 39618,
            "end": 39628,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39632,
            "end": 39634,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39639,
          "end": 39641,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39643,
        "end": 39738,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39648,
            "end": 39735,
            "argument": {
              "type": "NewExpression",
              "start": 39654,
              "end": 39734,
              "callee": {
                "type": "Identifier",
                "start": 39658,
                "end": 39670,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39671,
                  "end": 39733,
                  "left": {
                    "type": "Literal",
                    "start": 39671,
                    "end": 39712,
                    "value": "#863: 1073741823 >> 26 === 15. Actual: ",
                    "raw": "'#863: 1073741823 >> 26 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39715,
                    "end": 39733,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39716,
                      "end": 39732,
                      "left": {
                        "type": "Literal",
                        "start": 39716,
                        "end": 39726,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39730,
                        "end": 39732,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39742,
      "end": 39866,
      "test": {
        "type": "BinaryExpression",
        "start": 39746,
        "end": 39769,
        "left": {
          "type": "BinaryExpression",
          "start": 39746,
          "end": 39762,
          "left": {
            "type": "Literal",
            "start": 39746,
            "end": 39756,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39760,
            "end": 39762,
            "value": 26,
            "raw": "26",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39767,
          "end": 39769,
          "value": 31,
          "raw": "31",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39771,
        "end": 39866,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39776,
            "end": 39863,
            "argument": {
              "type": "NewExpression",
              "start": 39782,
              "end": 39862,
              "callee": {
                "type": "Identifier",
                "start": 39786,
                "end": 39798,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39799,
                  "end": 39861,
                  "left": {
                    "type": "Literal",
                    "start": 39799,
                    "end": 39840,
                    "value": "#864: 2147483647 >> 26 === 31. Actual: ",
                    "raw": "'#864: 2147483647 >> 26 === 31. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39843,
                    "end": 39861,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39844,
                      "end": 39860,
                      "left": {
                        "type": "Literal",
                        "start": 39844,
                        "end": 39854,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39858,
                        "end": 39860,
                        "value": 26,
                        "raw": "26",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39870,
      "end": 39965,
      "test": {
        "type": "BinaryExpression",
        "start": 39874,
        "end": 39887,
        "left": {
          "type": "BinaryExpression",
          "start": 39874,
          "end": 39881,
          "left": {
            "type": "Literal",
            "start": 39874,
            "end": 39875,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39879,
            "end": 39881,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39886,
          "end": 39887,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39889,
        "end": 39965,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39894,
            "end": 39962,
            "argument": {
              "type": "NewExpression",
              "start": 39900,
              "end": 39961,
              "callee": {
                "type": "Identifier",
                "start": 39904,
                "end": 39916,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 39917,
                  "end": 39960,
                  "left": {
                    "type": "Literal",
                    "start": 39917,
                    "end": 39948,
                    "value": "#865: 0 >> 27 === 0. Actual: ",
                    "raw": "'#865: 0 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 39951,
                    "end": 39960,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 39952,
                      "end": 39959,
                      "left": {
                        "type": "Literal",
                        "start": 39952,
                        "end": 39953,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 39957,
                        "end": 39959,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 39969,
      "end": 40064,
      "test": {
        "type": "BinaryExpression",
        "start": 39973,
        "end": 39986,
        "left": {
          "type": "BinaryExpression",
          "start": 39973,
          "end": 39980,
          "left": {
            "type": "Literal",
            "start": 39973,
            "end": 39974,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 39978,
            "end": 39980,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 39985,
          "end": 39986,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 39988,
        "end": 40064,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 39993,
            "end": 40061,
            "argument": {
              "type": "NewExpression",
              "start": 39999,
              "end": 40060,
              "callee": {
                "type": "Identifier",
                "start": 40003,
                "end": 40015,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40016,
                  "end": 40059,
                  "left": {
                    "type": "Literal",
                    "start": 40016,
                    "end": 40047,
                    "value": "#866: 1 >> 27 === 0. Actual: ",
                    "raw": "'#866: 1 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40050,
                    "end": 40059,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40051,
                      "end": 40058,
                      "left": {
                        "type": "Literal",
                        "start": 40051,
                        "end": 40052,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40056,
                        "end": 40058,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40068,
      "end": 40163,
      "test": {
        "type": "BinaryExpression",
        "start": 40072,
        "end": 40085,
        "left": {
          "type": "BinaryExpression",
          "start": 40072,
          "end": 40079,
          "left": {
            "type": "Literal",
            "start": 40072,
            "end": 40073,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40077,
            "end": 40079,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40084,
          "end": 40085,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40087,
        "end": 40163,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40092,
            "end": 40160,
            "argument": {
              "type": "NewExpression",
              "start": 40098,
              "end": 40159,
              "callee": {
                "type": "Identifier",
                "start": 40102,
                "end": 40114,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40115,
                  "end": 40158,
                  "left": {
                    "type": "Literal",
                    "start": 40115,
                    "end": 40146,
                    "value": "#867: 3 >> 27 === 0. Actual: ",
                    "raw": "'#867: 3 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40149,
                    "end": 40158,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40150,
                      "end": 40157,
                      "left": {
                        "type": "Literal",
                        "start": 40150,
                        "end": 40151,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40155,
                        "end": 40157,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40167,
      "end": 40262,
      "test": {
        "type": "BinaryExpression",
        "start": 40171,
        "end": 40184,
        "left": {
          "type": "BinaryExpression",
          "start": 40171,
          "end": 40178,
          "left": {
            "type": "Literal",
            "start": 40171,
            "end": 40172,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40176,
            "end": 40178,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40183,
          "end": 40184,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40186,
        "end": 40262,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40191,
            "end": 40259,
            "argument": {
              "type": "NewExpression",
              "start": 40197,
              "end": 40258,
              "callee": {
                "type": "Identifier",
                "start": 40201,
                "end": 40213,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40214,
                  "end": 40257,
                  "left": {
                    "type": "Literal",
                    "start": 40214,
                    "end": 40245,
                    "value": "#868: 7 >> 27 === 0. Actual: ",
                    "raw": "'#868: 7 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40248,
                    "end": 40257,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40249,
                      "end": 40256,
                      "left": {
                        "type": "Literal",
                        "start": 40249,
                        "end": 40250,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40254,
                        "end": 40256,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40266,
      "end": 40364,
      "test": {
        "type": "BinaryExpression",
        "start": 40270,
        "end": 40284,
        "left": {
          "type": "BinaryExpression",
          "start": 40270,
          "end": 40278,
          "left": {
            "type": "Literal",
            "start": 40270,
            "end": 40272,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40276,
            "end": 40278,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40283,
          "end": 40284,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40286,
        "end": 40364,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40291,
            "end": 40361,
            "argument": {
              "type": "NewExpression",
              "start": 40297,
              "end": 40360,
              "callee": {
                "type": "Identifier",
                "start": 40301,
                "end": 40313,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40314,
                  "end": 40359,
                  "left": {
                    "type": "Literal",
                    "start": 40314,
                    "end": 40346,
                    "value": "#869: 15 >> 27 === 0. Actual: ",
                    "raw": "'#869: 15 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40349,
                    "end": 40359,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40350,
                      "end": 40358,
                      "left": {
                        "type": "Literal",
                        "start": 40350,
                        "end": 40352,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40356,
                        "end": 40358,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40368,
      "end": 40466,
      "test": {
        "type": "BinaryExpression",
        "start": 40372,
        "end": 40386,
        "left": {
          "type": "BinaryExpression",
          "start": 40372,
          "end": 40380,
          "left": {
            "type": "Literal",
            "start": 40372,
            "end": 40374,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40378,
            "end": 40380,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40385,
          "end": 40386,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40388,
        "end": 40466,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40393,
            "end": 40463,
            "argument": {
              "type": "NewExpression",
              "start": 40399,
              "end": 40462,
              "callee": {
                "type": "Identifier",
                "start": 40403,
                "end": 40415,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40416,
                  "end": 40461,
                  "left": {
                    "type": "Literal",
                    "start": 40416,
                    "end": 40448,
                    "value": "#870: 31 >> 27 === 0. Actual: ",
                    "raw": "'#870: 31 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40451,
                    "end": 40461,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40452,
                      "end": 40460,
                      "left": {
                        "type": "Literal",
                        "start": 40452,
                        "end": 40454,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40458,
                        "end": 40460,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40470,
      "end": 40568,
      "test": {
        "type": "BinaryExpression",
        "start": 40474,
        "end": 40488,
        "left": {
          "type": "BinaryExpression",
          "start": 40474,
          "end": 40482,
          "left": {
            "type": "Literal",
            "start": 40474,
            "end": 40476,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40480,
            "end": 40482,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40487,
          "end": 40488,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40490,
        "end": 40568,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40495,
            "end": 40565,
            "argument": {
              "type": "NewExpression",
              "start": 40501,
              "end": 40564,
              "callee": {
                "type": "Identifier",
                "start": 40505,
                "end": 40517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40518,
                  "end": 40563,
                  "left": {
                    "type": "Literal",
                    "start": 40518,
                    "end": 40550,
                    "value": "#871: 63 >> 27 === 0. Actual: ",
                    "raw": "'#871: 63 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40553,
                    "end": 40563,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40554,
                      "end": 40562,
                      "left": {
                        "type": "Literal",
                        "start": 40554,
                        "end": 40556,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40560,
                        "end": 40562,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40572,
      "end": 40673,
      "test": {
        "type": "BinaryExpression",
        "start": 40576,
        "end": 40591,
        "left": {
          "type": "BinaryExpression",
          "start": 40576,
          "end": 40585,
          "left": {
            "type": "Literal",
            "start": 40576,
            "end": 40579,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40583,
            "end": 40585,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40590,
          "end": 40591,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40593,
        "end": 40673,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40598,
            "end": 40670,
            "argument": {
              "type": "NewExpression",
              "start": 40604,
              "end": 40669,
              "callee": {
                "type": "Identifier",
                "start": 40608,
                "end": 40620,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40621,
                  "end": 40668,
                  "left": {
                    "type": "Literal",
                    "start": 40621,
                    "end": 40654,
                    "value": "#872: 127 >> 27 === 0. Actual: ",
                    "raw": "'#872: 127 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40657,
                    "end": 40668,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40658,
                      "end": 40667,
                      "left": {
                        "type": "Literal",
                        "start": 40658,
                        "end": 40661,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40665,
                        "end": 40667,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40677,
      "end": 40778,
      "test": {
        "type": "BinaryExpression",
        "start": 40681,
        "end": 40696,
        "left": {
          "type": "BinaryExpression",
          "start": 40681,
          "end": 40690,
          "left": {
            "type": "Literal",
            "start": 40681,
            "end": 40684,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40688,
            "end": 40690,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40695,
          "end": 40696,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40698,
        "end": 40778,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40703,
            "end": 40775,
            "argument": {
              "type": "NewExpression",
              "start": 40709,
              "end": 40774,
              "callee": {
                "type": "Identifier",
                "start": 40713,
                "end": 40725,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40726,
                  "end": 40773,
                  "left": {
                    "type": "Literal",
                    "start": 40726,
                    "end": 40759,
                    "value": "#873: 255 >> 27 === 0. Actual: ",
                    "raw": "'#873: 255 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40762,
                    "end": 40773,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40763,
                      "end": 40772,
                      "left": {
                        "type": "Literal",
                        "start": 40763,
                        "end": 40766,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40770,
                        "end": 40772,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40782,
      "end": 40883,
      "test": {
        "type": "BinaryExpression",
        "start": 40786,
        "end": 40801,
        "left": {
          "type": "BinaryExpression",
          "start": 40786,
          "end": 40795,
          "left": {
            "type": "Literal",
            "start": 40786,
            "end": 40789,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40793,
            "end": 40795,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40800,
          "end": 40801,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40803,
        "end": 40883,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40808,
            "end": 40880,
            "argument": {
              "type": "NewExpression",
              "start": 40814,
              "end": 40879,
              "callee": {
                "type": "Identifier",
                "start": 40818,
                "end": 40830,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40831,
                  "end": 40878,
                  "left": {
                    "type": "Literal",
                    "start": 40831,
                    "end": 40864,
                    "value": "#874: 511 >> 27 === 0. Actual: ",
                    "raw": "'#874: 511 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40867,
                    "end": 40878,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40868,
                      "end": 40877,
                      "left": {
                        "type": "Literal",
                        "start": 40868,
                        "end": 40871,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40875,
                        "end": 40877,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40887,
      "end": 40991,
      "test": {
        "type": "BinaryExpression",
        "start": 40891,
        "end": 40907,
        "left": {
          "type": "BinaryExpression",
          "start": 40891,
          "end": 40901,
          "left": {
            "type": "Literal",
            "start": 40891,
            "end": 40895,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 40899,
            "end": 40901,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 40906,
          "end": 40907,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 40909,
        "end": 40991,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 40914,
            "end": 40988,
            "argument": {
              "type": "NewExpression",
              "start": 40920,
              "end": 40987,
              "callee": {
                "type": "Identifier",
                "start": 40924,
                "end": 40936,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 40937,
                  "end": 40986,
                  "left": {
                    "type": "Literal",
                    "start": 40937,
                    "end": 40971,
                    "value": "#875: 1023 >> 27 === 0. Actual: ",
                    "raw": "'#875: 1023 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 40974,
                    "end": 40986,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 40975,
                      "end": 40985,
                      "left": {
                        "type": "Literal",
                        "start": 40975,
                        "end": 40979,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 40983,
                        "end": 40985,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 40995,
      "end": 41099,
      "test": {
        "type": "BinaryExpression",
        "start": 40999,
        "end": 41015,
        "left": {
          "type": "BinaryExpression",
          "start": 40999,
          "end": 41009,
          "left": {
            "type": "Literal",
            "start": 40999,
            "end": 41003,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41007,
            "end": 41009,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41014,
          "end": 41015,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41017,
        "end": 41099,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41022,
            "end": 41096,
            "argument": {
              "type": "NewExpression",
              "start": 41028,
              "end": 41095,
              "callee": {
                "type": "Identifier",
                "start": 41032,
                "end": 41044,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41045,
                  "end": 41094,
                  "left": {
                    "type": "Literal",
                    "start": 41045,
                    "end": 41079,
                    "value": "#876: 2047 >> 27 === 0. Actual: ",
                    "raw": "'#876: 2047 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41082,
                    "end": 41094,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41083,
                      "end": 41093,
                      "left": {
                        "type": "Literal",
                        "start": 41083,
                        "end": 41087,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41091,
                        "end": 41093,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41103,
      "end": 41207,
      "test": {
        "type": "BinaryExpression",
        "start": 41107,
        "end": 41123,
        "left": {
          "type": "BinaryExpression",
          "start": 41107,
          "end": 41117,
          "left": {
            "type": "Literal",
            "start": 41107,
            "end": 41111,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41115,
            "end": 41117,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41122,
          "end": 41123,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41125,
        "end": 41207,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41130,
            "end": 41204,
            "argument": {
              "type": "NewExpression",
              "start": 41136,
              "end": 41203,
              "callee": {
                "type": "Identifier",
                "start": 41140,
                "end": 41152,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41153,
                  "end": 41202,
                  "left": {
                    "type": "Literal",
                    "start": 41153,
                    "end": 41187,
                    "value": "#877: 4095 >> 27 === 0. Actual: ",
                    "raw": "'#877: 4095 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41190,
                    "end": 41202,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41191,
                      "end": 41201,
                      "left": {
                        "type": "Literal",
                        "start": 41191,
                        "end": 41195,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41199,
                        "end": 41201,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41211,
      "end": 41315,
      "test": {
        "type": "BinaryExpression",
        "start": 41215,
        "end": 41231,
        "left": {
          "type": "BinaryExpression",
          "start": 41215,
          "end": 41225,
          "left": {
            "type": "Literal",
            "start": 41215,
            "end": 41219,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41223,
            "end": 41225,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41230,
          "end": 41231,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41233,
        "end": 41315,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41238,
            "end": 41312,
            "argument": {
              "type": "NewExpression",
              "start": 41244,
              "end": 41311,
              "callee": {
                "type": "Identifier",
                "start": 41248,
                "end": 41260,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41261,
                  "end": 41310,
                  "left": {
                    "type": "Literal",
                    "start": 41261,
                    "end": 41295,
                    "value": "#878: 8191 >> 27 === 0. Actual: ",
                    "raw": "'#878: 8191 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41298,
                    "end": 41310,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41299,
                      "end": 41309,
                      "left": {
                        "type": "Literal",
                        "start": 41299,
                        "end": 41303,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41307,
                        "end": 41309,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41319,
      "end": 41426,
      "test": {
        "type": "BinaryExpression",
        "start": 41323,
        "end": 41340,
        "left": {
          "type": "BinaryExpression",
          "start": 41323,
          "end": 41334,
          "left": {
            "type": "Literal",
            "start": 41323,
            "end": 41328,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41332,
            "end": 41334,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41339,
          "end": 41340,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41342,
        "end": 41426,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41347,
            "end": 41423,
            "argument": {
              "type": "NewExpression",
              "start": 41353,
              "end": 41422,
              "callee": {
                "type": "Identifier",
                "start": 41357,
                "end": 41369,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41370,
                  "end": 41421,
                  "left": {
                    "type": "Literal",
                    "start": 41370,
                    "end": 41405,
                    "value": "#879: 16383 >> 27 === 0. Actual: ",
                    "raw": "'#879: 16383 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41408,
                    "end": 41421,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41409,
                      "end": 41420,
                      "left": {
                        "type": "Literal",
                        "start": 41409,
                        "end": 41414,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41418,
                        "end": 41420,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41430,
      "end": 41537,
      "test": {
        "type": "BinaryExpression",
        "start": 41434,
        "end": 41451,
        "left": {
          "type": "BinaryExpression",
          "start": 41434,
          "end": 41445,
          "left": {
            "type": "Literal",
            "start": 41434,
            "end": 41439,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41443,
            "end": 41445,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41450,
          "end": 41451,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41453,
        "end": 41537,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41458,
            "end": 41534,
            "argument": {
              "type": "NewExpression",
              "start": 41464,
              "end": 41533,
              "callee": {
                "type": "Identifier",
                "start": 41468,
                "end": 41480,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41481,
                  "end": 41532,
                  "left": {
                    "type": "Literal",
                    "start": 41481,
                    "end": 41516,
                    "value": "#880: 32767 >> 27 === 0. Actual: ",
                    "raw": "'#880: 32767 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41519,
                    "end": 41532,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41520,
                      "end": 41531,
                      "left": {
                        "type": "Literal",
                        "start": 41520,
                        "end": 41525,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41529,
                        "end": 41531,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41541,
      "end": 41648,
      "test": {
        "type": "BinaryExpression",
        "start": 41545,
        "end": 41562,
        "left": {
          "type": "BinaryExpression",
          "start": 41545,
          "end": 41556,
          "left": {
            "type": "Literal",
            "start": 41545,
            "end": 41550,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41554,
            "end": 41556,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41561,
          "end": 41562,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41564,
        "end": 41648,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41569,
            "end": 41645,
            "argument": {
              "type": "NewExpression",
              "start": 41575,
              "end": 41644,
              "callee": {
                "type": "Identifier",
                "start": 41579,
                "end": 41591,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41592,
                  "end": 41643,
                  "left": {
                    "type": "Literal",
                    "start": 41592,
                    "end": 41627,
                    "value": "#881: 65535 >> 27 === 0. Actual: ",
                    "raw": "'#881: 65535 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41630,
                    "end": 41643,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41631,
                      "end": 41642,
                      "left": {
                        "type": "Literal",
                        "start": 41631,
                        "end": 41636,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41640,
                        "end": 41642,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41652,
      "end": 41762,
      "test": {
        "type": "BinaryExpression",
        "start": 41656,
        "end": 41674,
        "left": {
          "type": "BinaryExpression",
          "start": 41656,
          "end": 41668,
          "left": {
            "type": "Literal",
            "start": 41656,
            "end": 41662,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41666,
            "end": 41668,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41673,
          "end": 41674,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41676,
        "end": 41762,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41681,
            "end": 41759,
            "argument": {
              "type": "NewExpression",
              "start": 41687,
              "end": 41758,
              "callee": {
                "type": "Identifier",
                "start": 41691,
                "end": 41703,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41704,
                  "end": 41757,
                  "left": {
                    "type": "Literal",
                    "start": 41704,
                    "end": 41740,
                    "value": "#882: 131071 >> 27 === 0. Actual: ",
                    "raw": "'#882: 131071 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41743,
                    "end": 41757,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41744,
                      "end": 41756,
                      "left": {
                        "type": "Literal",
                        "start": 41744,
                        "end": 41750,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41754,
                        "end": 41756,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41766,
      "end": 41876,
      "test": {
        "type": "BinaryExpression",
        "start": 41770,
        "end": 41788,
        "left": {
          "type": "BinaryExpression",
          "start": 41770,
          "end": 41782,
          "left": {
            "type": "Literal",
            "start": 41770,
            "end": 41776,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41780,
            "end": 41782,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41787,
          "end": 41788,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41790,
        "end": 41876,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41795,
            "end": 41873,
            "argument": {
              "type": "NewExpression",
              "start": 41801,
              "end": 41872,
              "callee": {
                "type": "Identifier",
                "start": 41805,
                "end": 41817,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41818,
                  "end": 41871,
                  "left": {
                    "type": "Literal",
                    "start": 41818,
                    "end": 41854,
                    "value": "#883: 262143 >> 27 === 0. Actual: ",
                    "raw": "'#883: 262143 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41857,
                    "end": 41871,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41858,
                      "end": 41870,
                      "left": {
                        "type": "Literal",
                        "start": 41858,
                        "end": 41864,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41868,
                        "end": 41870,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41880,
      "end": 41990,
      "test": {
        "type": "BinaryExpression",
        "start": 41884,
        "end": 41902,
        "left": {
          "type": "BinaryExpression",
          "start": 41884,
          "end": 41896,
          "left": {
            "type": "Literal",
            "start": 41884,
            "end": 41890,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 41894,
            "end": 41896,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 41901,
          "end": 41902,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 41904,
        "end": 41990,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 41909,
            "end": 41987,
            "argument": {
              "type": "NewExpression",
              "start": 41915,
              "end": 41986,
              "callee": {
                "type": "Identifier",
                "start": 41919,
                "end": 41931,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 41932,
                  "end": 41985,
                  "left": {
                    "type": "Literal",
                    "start": 41932,
                    "end": 41968,
                    "value": "#884: 524287 >> 27 === 0. Actual: ",
                    "raw": "'#884: 524287 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 41971,
                    "end": 41985,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 41972,
                      "end": 41984,
                      "left": {
                        "type": "Literal",
                        "start": 41972,
                        "end": 41978,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 41982,
                        "end": 41984,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 41994,
      "end": 42107,
      "test": {
        "type": "BinaryExpression",
        "start": 41998,
        "end": 42017,
        "left": {
          "type": "BinaryExpression",
          "start": 41998,
          "end": 42011,
          "left": {
            "type": "Literal",
            "start": 41998,
            "end": 42005,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42009,
            "end": 42011,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42016,
          "end": 42017,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42019,
        "end": 42107,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42024,
            "end": 42104,
            "argument": {
              "type": "NewExpression",
              "start": 42030,
              "end": 42103,
              "callee": {
                "type": "Identifier",
                "start": 42034,
                "end": 42046,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42047,
                  "end": 42102,
                  "left": {
                    "type": "Literal",
                    "start": 42047,
                    "end": 42084,
                    "value": "#885: 1048575 >> 27 === 0. Actual: ",
                    "raw": "'#885: 1048575 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42087,
                    "end": 42102,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42088,
                      "end": 42101,
                      "left": {
                        "type": "Literal",
                        "start": 42088,
                        "end": 42095,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42099,
                        "end": 42101,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42111,
      "end": 42224,
      "test": {
        "type": "BinaryExpression",
        "start": 42115,
        "end": 42134,
        "left": {
          "type": "BinaryExpression",
          "start": 42115,
          "end": 42128,
          "left": {
            "type": "Literal",
            "start": 42115,
            "end": 42122,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42126,
            "end": 42128,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42133,
          "end": 42134,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42136,
        "end": 42224,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42141,
            "end": 42221,
            "argument": {
              "type": "NewExpression",
              "start": 42147,
              "end": 42220,
              "callee": {
                "type": "Identifier",
                "start": 42151,
                "end": 42163,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42164,
                  "end": 42219,
                  "left": {
                    "type": "Literal",
                    "start": 42164,
                    "end": 42201,
                    "value": "#886: 2097151 >> 27 === 0. Actual: ",
                    "raw": "'#886: 2097151 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42204,
                    "end": 42219,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42205,
                      "end": 42218,
                      "left": {
                        "type": "Literal",
                        "start": 42205,
                        "end": 42212,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42216,
                        "end": 42218,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42228,
      "end": 42341,
      "test": {
        "type": "BinaryExpression",
        "start": 42232,
        "end": 42251,
        "left": {
          "type": "BinaryExpression",
          "start": 42232,
          "end": 42245,
          "left": {
            "type": "Literal",
            "start": 42232,
            "end": 42239,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42243,
            "end": 42245,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42250,
          "end": 42251,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42253,
        "end": 42341,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42258,
            "end": 42338,
            "argument": {
              "type": "NewExpression",
              "start": 42264,
              "end": 42337,
              "callee": {
                "type": "Identifier",
                "start": 42268,
                "end": 42280,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42281,
                  "end": 42336,
                  "left": {
                    "type": "Literal",
                    "start": 42281,
                    "end": 42318,
                    "value": "#887: 4194303 >> 27 === 0. Actual: ",
                    "raw": "'#887: 4194303 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42321,
                    "end": 42336,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42322,
                      "end": 42335,
                      "left": {
                        "type": "Literal",
                        "start": 42322,
                        "end": 42329,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42333,
                        "end": 42335,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42345,
      "end": 42458,
      "test": {
        "type": "BinaryExpression",
        "start": 42349,
        "end": 42368,
        "left": {
          "type": "BinaryExpression",
          "start": 42349,
          "end": 42362,
          "left": {
            "type": "Literal",
            "start": 42349,
            "end": 42356,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42360,
            "end": 42362,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42367,
          "end": 42368,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42370,
        "end": 42458,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42375,
            "end": 42455,
            "argument": {
              "type": "NewExpression",
              "start": 42381,
              "end": 42454,
              "callee": {
                "type": "Identifier",
                "start": 42385,
                "end": 42397,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42398,
                  "end": 42453,
                  "left": {
                    "type": "Literal",
                    "start": 42398,
                    "end": 42435,
                    "value": "#888: 8388607 >> 27 === 0. Actual: ",
                    "raw": "'#888: 8388607 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42438,
                    "end": 42453,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42439,
                      "end": 42452,
                      "left": {
                        "type": "Literal",
                        "start": 42439,
                        "end": 42446,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42450,
                        "end": 42452,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42462,
      "end": 42578,
      "test": {
        "type": "BinaryExpression",
        "start": 42466,
        "end": 42486,
        "left": {
          "type": "BinaryExpression",
          "start": 42466,
          "end": 42480,
          "left": {
            "type": "Literal",
            "start": 42466,
            "end": 42474,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42478,
            "end": 42480,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42485,
          "end": 42486,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42488,
        "end": 42578,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42493,
            "end": 42575,
            "argument": {
              "type": "NewExpression",
              "start": 42499,
              "end": 42574,
              "callee": {
                "type": "Identifier",
                "start": 42503,
                "end": 42515,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42516,
                  "end": 42573,
                  "left": {
                    "type": "Literal",
                    "start": 42516,
                    "end": 42554,
                    "value": "#889: 16777215 >> 27 === 0. Actual: ",
                    "raw": "'#889: 16777215 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42557,
                    "end": 42573,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42558,
                      "end": 42572,
                      "left": {
                        "type": "Literal",
                        "start": 42558,
                        "end": 42566,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42570,
                        "end": 42572,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42582,
      "end": 42698,
      "test": {
        "type": "BinaryExpression",
        "start": 42586,
        "end": 42606,
        "left": {
          "type": "BinaryExpression",
          "start": 42586,
          "end": 42600,
          "left": {
            "type": "Literal",
            "start": 42586,
            "end": 42594,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42598,
            "end": 42600,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42605,
          "end": 42606,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42608,
        "end": 42698,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42613,
            "end": 42695,
            "argument": {
              "type": "NewExpression",
              "start": 42619,
              "end": 42694,
              "callee": {
                "type": "Identifier",
                "start": 42623,
                "end": 42635,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42636,
                  "end": 42693,
                  "left": {
                    "type": "Literal",
                    "start": 42636,
                    "end": 42674,
                    "value": "#890: 33554431 >> 27 === 0. Actual: ",
                    "raw": "'#890: 33554431 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42677,
                    "end": 42693,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42678,
                      "end": 42692,
                      "left": {
                        "type": "Literal",
                        "start": 42678,
                        "end": 42686,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42690,
                        "end": 42692,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42702,
      "end": 42818,
      "test": {
        "type": "BinaryExpression",
        "start": 42706,
        "end": 42726,
        "left": {
          "type": "BinaryExpression",
          "start": 42706,
          "end": 42720,
          "left": {
            "type": "Literal",
            "start": 42706,
            "end": 42714,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42718,
            "end": 42720,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42725,
          "end": 42726,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42728,
        "end": 42818,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42733,
            "end": 42815,
            "argument": {
              "type": "NewExpression",
              "start": 42739,
              "end": 42814,
              "callee": {
                "type": "Identifier",
                "start": 42743,
                "end": 42755,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42756,
                  "end": 42813,
                  "left": {
                    "type": "Literal",
                    "start": 42756,
                    "end": 42794,
                    "value": "#891: 67108863 >> 27 === 0. Actual: ",
                    "raw": "'#891: 67108863 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42797,
                    "end": 42813,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42798,
                      "end": 42812,
                      "left": {
                        "type": "Literal",
                        "start": 42798,
                        "end": 42806,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42810,
                        "end": 42812,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42822,
      "end": 42941,
      "test": {
        "type": "BinaryExpression",
        "start": 42826,
        "end": 42847,
        "left": {
          "type": "BinaryExpression",
          "start": 42826,
          "end": 42841,
          "left": {
            "type": "Literal",
            "start": 42826,
            "end": 42835,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42839,
            "end": 42841,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42846,
          "end": 42847,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42849,
        "end": 42941,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42854,
            "end": 42938,
            "argument": {
              "type": "NewExpression",
              "start": 42860,
              "end": 42937,
              "callee": {
                "type": "Identifier",
                "start": 42864,
                "end": 42876,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 42877,
                  "end": 42936,
                  "left": {
                    "type": "Literal",
                    "start": 42877,
                    "end": 42916,
                    "value": "#892: 134217727 >> 27 === 0. Actual: ",
                    "raw": "'#892: 134217727 >> 27 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 42919,
                    "end": 42936,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 42920,
                      "end": 42935,
                      "left": {
                        "type": "Literal",
                        "start": 42920,
                        "end": 42929,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 42933,
                        "end": 42935,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 42945,
      "end": 43064,
      "test": {
        "type": "BinaryExpression",
        "start": 42949,
        "end": 42970,
        "left": {
          "type": "BinaryExpression",
          "start": 42949,
          "end": 42964,
          "left": {
            "type": "Literal",
            "start": 42949,
            "end": 42958,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 42962,
            "end": 42964,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 42969,
          "end": 42970,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 42972,
        "end": 43064,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 42977,
            "end": 43061,
            "argument": {
              "type": "NewExpression",
              "start": 42983,
              "end": 43060,
              "callee": {
                "type": "Identifier",
                "start": 42987,
                "end": 42999,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43000,
                  "end": 43059,
                  "left": {
                    "type": "Literal",
                    "start": 43000,
                    "end": 43039,
                    "value": "#893: 268435455 >> 27 === 1. Actual: ",
                    "raw": "'#893: 268435455 >> 27 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43042,
                    "end": 43059,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43043,
                      "end": 43058,
                      "left": {
                        "type": "Literal",
                        "start": 43043,
                        "end": 43052,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43056,
                        "end": 43058,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43068,
      "end": 43187,
      "test": {
        "type": "BinaryExpression",
        "start": 43072,
        "end": 43093,
        "left": {
          "type": "BinaryExpression",
          "start": 43072,
          "end": 43087,
          "left": {
            "type": "Literal",
            "start": 43072,
            "end": 43081,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43085,
            "end": 43087,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43092,
          "end": 43093,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43095,
        "end": 43187,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43100,
            "end": 43184,
            "argument": {
              "type": "NewExpression",
              "start": 43106,
              "end": 43183,
              "callee": {
                "type": "Identifier",
                "start": 43110,
                "end": 43122,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43123,
                  "end": 43182,
                  "left": {
                    "type": "Literal",
                    "start": 43123,
                    "end": 43162,
                    "value": "#894: 536870911 >> 27 === 3. Actual: ",
                    "raw": "'#894: 536870911 >> 27 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43165,
                    "end": 43182,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43166,
                      "end": 43181,
                      "left": {
                        "type": "Literal",
                        "start": 43166,
                        "end": 43175,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43179,
                        "end": 43181,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43191,
      "end": 43313,
      "test": {
        "type": "BinaryExpression",
        "start": 43195,
        "end": 43217,
        "left": {
          "type": "BinaryExpression",
          "start": 43195,
          "end": 43211,
          "left": {
            "type": "Literal",
            "start": 43195,
            "end": 43205,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43209,
            "end": 43211,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43216,
          "end": 43217,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43219,
        "end": 43313,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43224,
            "end": 43310,
            "argument": {
              "type": "NewExpression",
              "start": 43230,
              "end": 43309,
              "callee": {
                "type": "Identifier",
                "start": 43234,
                "end": 43246,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43247,
                  "end": 43308,
                  "left": {
                    "type": "Literal",
                    "start": 43247,
                    "end": 43287,
                    "value": "#895: 1073741823 >> 27 === 7. Actual: ",
                    "raw": "'#895: 1073741823 >> 27 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43290,
                    "end": 43308,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43291,
                      "end": 43307,
                      "left": {
                        "type": "Literal",
                        "start": 43291,
                        "end": 43301,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43305,
                        "end": 43307,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43317,
      "end": 43441,
      "test": {
        "type": "BinaryExpression",
        "start": 43321,
        "end": 43344,
        "left": {
          "type": "BinaryExpression",
          "start": 43321,
          "end": 43337,
          "left": {
            "type": "Literal",
            "start": 43321,
            "end": 43331,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43335,
            "end": 43337,
            "value": 27,
            "raw": "27",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43342,
          "end": 43344,
          "value": 15,
          "raw": "15",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43346,
        "end": 43441,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43351,
            "end": 43438,
            "argument": {
              "type": "NewExpression",
              "start": 43357,
              "end": 43437,
              "callee": {
                "type": "Identifier",
                "start": 43361,
                "end": 43373,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43374,
                  "end": 43436,
                  "left": {
                    "type": "Literal",
                    "start": 43374,
                    "end": 43415,
                    "value": "#896: 2147483647 >> 27 === 15. Actual: ",
                    "raw": "'#896: 2147483647 >> 27 === 15. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43418,
                    "end": 43436,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43419,
                      "end": 43435,
                      "left": {
                        "type": "Literal",
                        "start": 43419,
                        "end": 43429,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43433,
                        "end": 43435,
                        "value": 27,
                        "raw": "27",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43445,
      "end": 43540,
      "test": {
        "type": "BinaryExpression",
        "start": 43449,
        "end": 43462,
        "left": {
          "type": "BinaryExpression",
          "start": 43449,
          "end": 43456,
          "left": {
            "type": "Literal",
            "start": 43449,
            "end": 43450,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43454,
            "end": 43456,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43461,
          "end": 43462,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43464,
        "end": 43540,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43469,
            "end": 43537,
            "argument": {
              "type": "NewExpression",
              "start": 43475,
              "end": 43536,
              "callee": {
                "type": "Identifier",
                "start": 43479,
                "end": 43491,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43492,
                  "end": 43535,
                  "left": {
                    "type": "Literal",
                    "start": 43492,
                    "end": 43523,
                    "value": "#897: 0 >> 28 === 0. Actual: ",
                    "raw": "'#897: 0 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43526,
                    "end": 43535,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43527,
                      "end": 43534,
                      "left": {
                        "type": "Literal",
                        "start": 43527,
                        "end": 43528,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43532,
                        "end": 43534,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43544,
      "end": 43639,
      "test": {
        "type": "BinaryExpression",
        "start": 43548,
        "end": 43561,
        "left": {
          "type": "BinaryExpression",
          "start": 43548,
          "end": 43555,
          "left": {
            "type": "Literal",
            "start": 43548,
            "end": 43549,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43553,
            "end": 43555,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43560,
          "end": 43561,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43563,
        "end": 43639,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43568,
            "end": 43636,
            "argument": {
              "type": "NewExpression",
              "start": 43574,
              "end": 43635,
              "callee": {
                "type": "Identifier",
                "start": 43578,
                "end": 43590,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43591,
                  "end": 43634,
                  "left": {
                    "type": "Literal",
                    "start": 43591,
                    "end": 43622,
                    "value": "#898: 1 >> 28 === 0. Actual: ",
                    "raw": "'#898: 1 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43625,
                    "end": 43634,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43626,
                      "end": 43633,
                      "left": {
                        "type": "Literal",
                        "start": 43626,
                        "end": 43627,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43631,
                        "end": 43633,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43643,
      "end": 43738,
      "test": {
        "type": "BinaryExpression",
        "start": 43647,
        "end": 43660,
        "left": {
          "type": "BinaryExpression",
          "start": 43647,
          "end": 43654,
          "left": {
            "type": "Literal",
            "start": 43647,
            "end": 43648,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43652,
            "end": 43654,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43659,
          "end": 43660,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43662,
        "end": 43738,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43667,
            "end": 43735,
            "argument": {
              "type": "NewExpression",
              "start": 43673,
              "end": 43734,
              "callee": {
                "type": "Identifier",
                "start": 43677,
                "end": 43689,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43690,
                  "end": 43733,
                  "left": {
                    "type": "Literal",
                    "start": 43690,
                    "end": 43721,
                    "value": "#899: 3 >> 28 === 0. Actual: ",
                    "raw": "'#899: 3 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43724,
                    "end": 43733,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43725,
                      "end": 43732,
                      "left": {
                        "type": "Literal",
                        "start": 43725,
                        "end": 43726,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43730,
                        "end": 43732,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43742,
      "end": 43837,
      "test": {
        "type": "BinaryExpression",
        "start": 43746,
        "end": 43759,
        "left": {
          "type": "BinaryExpression",
          "start": 43746,
          "end": 43753,
          "left": {
            "type": "Literal",
            "start": 43746,
            "end": 43747,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43751,
            "end": 43753,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43758,
          "end": 43759,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43761,
        "end": 43837,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43766,
            "end": 43834,
            "argument": {
              "type": "NewExpression",
              "start": 43772,
              "end": 43833,
              "callee": {
                "type": "Identifier",
                "start": 43776,
                "end": 43788,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43789,
                  "end": 43832,
                  "left": {
                    "type": "Literal",
                    "start": 43789,
                    "end": 43820,
                    "value": "#900: 7 >> 28 === 0. Actual: ",
                    "raw": "'#900: 7 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43823,
                    "end": 43832,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43824,
                      "end": 43831,
                      "left": {
                        "type": "Literal",
                        "start": 43824,
                        "end": 43825,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43829,
                        "end": 43831,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43841,
      "end": 43939,
      "test": {
        "type": "BinaryExpression",
        "start": 43845,
        "end": 43859,
        "left": {
          "type": "BinaryExpression",
          "start": 43845,
          "end": 43853,
          "left": {
            "type": "Literal",
            "start": 43845,
            "end": 43847,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43851,
            "end": 43853,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43858,
          "end": 43859,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43861,
        "end": 43939,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43866,
            "end": 43936,
            "argument": {
              "type": "NewExpression",
              "start": 43872,
              "end": 43935,
              "callee": {
                "type": "Identifier",
                "start": 43876,
                "end": 43888,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43889,
                  "end": 43934,
                  "left": {
                    "type": "Literal",
                    "start": 43889,
                    "end": 43921,
                    "value": "#901: 15 >> 28 === 0. Actual: ",
                    "raw": "'#901: 15 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 43924,
                    "end": 43934,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 43925,
                      "end": 43933,
                      "left": {
                        "type": "Literal",
                        "start": 43925,
                        "end": 43927,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 43931,
                        "end": 43933,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 43943,
      "end": 44041,
      "test": {
        "type": "BinaryExpression",
        "start": 43947,
        "end": 43961,
        "left": {
          "type": "BinaryExpression",
          "start": 43947,
          "end": 43955,
          "left": {
            "type": "Literal",
            "start": 43947,
            "end": 43949,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 43953,
            "end": 43955,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 43960,
          "end": 43961,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 43963,
        "end": 44041,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 43968,
            "end": 44038,
            "argument": {
              "type": "NewExpression",
              "start": 43974,
              "end": 44037,
              "callee": {
                "type": "Identifier",
                "start": 43978,
                "end": 43990,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 43991,
                  "end": 44036,
                  "left": {
                    "type": "Literal",
                    "start": 43991,
                    "end": 44023,
                    "value": "#902: 31 >> 28 === 0. Actual: ",
                    "raw": "'#902: 31 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44026,
                    "end": 44036,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44027,
                      "end": 44035,
                      "left": {
                        "type": "Literal",
                        "start": 44027,
                        "end": 44029,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44033,
                        "end": 44035,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44045,
      "end": 44143,
      "test": {
        "type": "BinaryExpression",
        "start": 44049,
        "end": 44063,
        "left": {
          "type": "BinaryExpression",
          "start": 44049,
          "end": 44057,
          "left": {
            "type": "Literal",
            "start": 44049,
            "end": 44051,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44055,
            "end": 44057,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44062,
          "end": 44063,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44065,
        "end": 44143,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44070,
            "end": 44140,
            "argument": {
              "type": "NewExpression",
              "start": 44076,
              "end": 44139,
              "callee": {
                "type": "Identifier",
                "start": 44080,
                "end": 44092,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44093,
                  "end": 44138,
                  "left": {
                    "type": "Literal",
                    "start": 44093,
                    "end": 44125,
                    "value": "#903: 63 >> 28 === 0. Actual: ",
                    "raw": "'#903: 63 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44128,
                    "end": 44138,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44129,
                      "end": 44137,
                      "left": {
                        "type": "Literal",
                        "start": 44129,
                        "end": 44131,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44135,
                        "end": 44137,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44147,
      "end": 44248,
      "test": {
        "type": "BinaryExpression",
        "start": 44151,
        "end": 44166,
        "left": {
          "type": "BinaryExpression",
          "start": 44151,
          "end": 44160,
          "left": {
            "type": "Literal",
            "start": 44151,
            "end": 44154,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44158,
            "end": 44160,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44165,
          "end": 44166,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44168,
        "end": 44248,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44173,
            "end": 44245,
            "argument": {
              "type": "NewExpression",
              "start": 44179,
              "end": 44244,
              "callee": {
                "type": "Identifier",
                "start": 44183,
                "end": 44195,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44196,
                  "end": 44243,
                  "left": {
                    "type": "Literal",
                    "start": 44196,
                    "end": 44229,
                    "value": "#904: 127 >> 28 === 0. Actual: ",
                    "raw": "'#904: 127 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44232,
                    "end": 44243,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44233,
                      "end": 44242,
                      "left": {
                        "type": "Literal",
                        "start": 44233,
                        "end": 44236,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44240,
                        "end": 44242,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44252,
      "end": 44353,
      "test": {
        "type": "BinaryExpression",
        "start": 44256,
        "end": 44271,
        "left": {
          "type": "BinaryExpression",
          "start": 44256,
          "end": 44265,
          "left": {
            "type": "Literal",
            "start": 44256,
            "end": 44259,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44263,
            "end": 44265,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44270,
          "end": 44271,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44273,
        "end": 44353,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44278,
            "end": 44350,
            "argument": {
              "type": "NewExpression",
              "start": 44284,
              "end": 44349,
              "callee": {
                "type": "Identifier",
                "start": 44288,
                "end": 44300,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44301,
                  "end": 44348,
                  "left": {
                    "type": "Literal",
                    "start": 44301,
                    "end": 44334,
                    "value": "#905: 255 >> 28 === 0. Actual: ",
                    "raw": "'#905: 255 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44337,
                    "end": 44348,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44338,
                      "end": 44347,
                      "left": {
                        "type": "Literal",
                        "start": 44338,
                        "end": 44341,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44345,
                        "end": 44347,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44357,
      "end": 44458,
      "test": {
        "type": "BinaryExpression",
        "start": 44361,
        "end": 44376,
        "left": {
          "type": "BinaryExpression",
          "start": 44361,
          "end": 44370,
          "left": {
            "type": "Literal",
            "start": 44361,
            "end": 44364,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44368,
            "end": 44370,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44375,
          "end": 44376,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44378,
        "end": 44458,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44383,
            "end": 44455,
            "argument": {
              "type": "NewExpression",
              "start": 44389,
              "end": 44454,
              "callee": {
                "type": "Identifier",
                "start": 44393,
                "end": 44405,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44406,
                  "end": 44453,
                  "left": {
                    "type": "Literal",
                    "start": 44406,
                    "end": 44439,
                    "value": "#906: 511 >> 28 === 0. Actual: ",
                    "raw": "'#906: 511 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44442,
                    "end": 44453,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44443,
                      "end": 44452,
                      "left": {
                        "type": "Literal",
                        "start": 44443,
                        "end": 44446,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44450,
                        "end": 44452,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44462,
      "end": 44566,
      "test": {
        "type": "BinaryExpression",
        "start": 44466,
        "end": 44482,
        "left": {
          "type": "BinaryExpression",
          "start": 44466,
          "end": 44476,
          "left": {
            "type": "Literal",
            "start": 44466,
            "end": 44470,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44474,
            "end": 44476,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44481,
          "end": 44482,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44484,
        "end": 44566,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44489,
            "end": 44563,
            "argument": {
              "type": "NewExpression",
              "start": 44495,
              "end": 44562,
              "callee": {
                "type": "Identifier",
                "start": 44499,
                "end": 44511,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44512,
                  "end": 44561,
                  "left": {
                    "type": "Literal",
                    "start": 44512,
                    "end": 44546,
                    "value": "#907: 1023 >> 28 === 0. Actual: ",
                    "raw": "'#907: 1023 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44549,
                    "end": 44561,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44550,
                      "end": 44560,
                      "left": {
                        "type": "Literal",
                        "start": 44550,
                        "end": 44554,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44558,
                        "end": 44560,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44570,
      "end": 44674,
      "test": {
        "type": "BinaryExpression",
        "start": 44574,
        "end": 44590,
        "left": {
          "type": "BinaryExpression",
          "start": 44574,
          "end": 44584,
          "left": {
            "type": "Literal",
            "start": 44574,
            "end": 44578,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44582,
            "end": 44584,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44589,
          "end": 44590,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44592,
        "end": 44674,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44597,
            "end": 44671,
            "argument": {
              "type": "NewExpression",
              "start": 44603,
              "end": 44670,
              "callee": {
                "type": "Identifier",
                "start": 44607,
                "end": 44619,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44620,
                  "end": 44669,
                  "left": {
                    "type": "Literal",
                    "start": 44620,
                    "end": 44654,
                    "value": "#908: 2047 >> 28 === 0. Actual: ",
                    "raw": "'#908: 2047 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44657,
                    "end": 44669,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44658,
                      "end": 44668,
                      "left": {
                        "type": "Literal",
                        "start": 44658,
                        "end": 44662,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44666,
                        "end": 44668,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44678,
      "end": 44782,
      "test": {
        "type": "BinaryExpression",
        "start": 44682,
        "end": 44698,
        "left": {
          "type": "BinaryExpression",
          "start": 44682,
          "end": 44692,
          "left": {
            "type": "Literal",
            "start": 44682,
            "end": 44686,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44690,
            "end": 44692,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44697,
          "end": 44698,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44700,
        "end": 44782,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44705,
            "end": 44779,
            "argument": {
              "type": "NewExpression",
              "start": 44711,
              "end": 44778,
              "callee": {
                "type": "Identifier",
                "start": 44715,
                "end": 44727,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44728,
                  "end": 44777,
                  "left": {
                    "type": "Literal",
                    "start": 44728,
                    "end": 44762,
                    "value": "#909: 4095 >> 28 === 0. Actual: ",
                    "raw": "'#909: 4095 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44765,
                    "end": 44777,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44766,
                      "end": 44776,
                      "left": {
                        "type": "Literal",
                        "start": 44766,
                        "end": 44770,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44774,
                        "end": 44776,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44786,
      "end": 44890,
      "test": {
        "type": "BinaryExpression",
        "start": 44790,
        "end": 44806,
        "left": {
          "type": "BinaryExpression",
          "start": 44790,
          "end": 44800,
          "left": {
            "type": "Literal",
            "start": 44790,
            "end": 44794,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44798,
            "end": 44800,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44805,
          "end": 44806,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44808,
        "end": 44890,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44813,
            "end": 44887,
            "argument": {
              "type": "NewExpression",
              "start": 44819,
              "end": 44886,
              "callee": {
                "type": "Identifier",
                "start": 44823,
                "end": 44835,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44836,
                  "end": 44885,
                  "left": {
                    "type": "Literal",
                    "start": 44836,
                    "end": 44870,
                    "value": "#910: 8191 >> 28 === 0. Actual: ",
                    "raw": "'#910: 8191 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44873,
                    "end": 44885,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44874,
                      "end": 44884,
                      "left": {
                        "type": "Literal",
                        "start": 44874,
                        "end": 44878,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44882,
                        "end": 44884,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 44894,
      "end": 45001,
      "test": {
        "type": "BinaryExpression",
        "start": 44898,
        "end": 44915,
        "left": {
          "type": "BinaryExpression",
          "start": 44898,
          "end": 44909,
          "left": {
            "type": "Literal",
            "start": 44898,
            "end": 44903,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 44907,
            "end": 44909,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 44914,
          "end": 44915,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 44917,
        "end": 45001,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 44922,
            "end": 44998,
            "argument": {
              "type": "NewExpression",
              "start": 44928,
              "end": 44997,
              "callee": {
                "type": "Identifier",
                "start": 44932,
                "end": 44944,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 44945,
                  "end": 44996,
                  "left": {
                    "type": "Literal",
                    "start": 44945,
                    "end": 44980,
                    "value": "#911: 16383 >> 28 === 0. Actual: ",
                    "raw": "'#911: 16383 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 44983,
                    "end": 44996,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 44984,
                      "end": 44995,
                      "left": {
                        "type": "Literal",
                        "start": 44984,
                        "end": 44989,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 44993,
                        "end": 44995,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45005,
      "end": 45112,
      "test": {
        "type": "BinaryExpression",
        "start": 45009,
        "end": 45026,
        "left": {
          "type": "BinaryExpression",
          "start": 45009,
          "end": 45020,
          "left": {
            "type": "Literal",
            "start": 45009,
            "end": 45014,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45018,
            "end": 45020,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45025,
          "end": 45026,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45028,
        "end": 45112,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45033,
            "end": 45109,
            "argument": {
              "type": "NewExpression",
              "start": 45039,
              "end": 45108,
              "callee": {
                "type": "Identifier",
                "start": 45043,
                "end": 45055,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45056,
                  "end": 45107,
                  "left": {
                    "type": "Literal",
                    "start": 45056,
                    "end": 45091,
                    "value": "#912: 32767 >> 28 === 0. Actual: ",
                    "raw": "'#912: 32767 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45094,
                    "end": 45107,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45095,
                      "end": 45106,
                      "left": {
                        "type": "Literal",
                        "start": 45095,
                        "end": 45100,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45104,
                        "end": 45106,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45116,
      "end": 45223,
      "test": {
        "type": "BinaryExpression",
        "start": 45120,
        "end": 45137,
        "left": {
          "type": "BinaryExpression",
          "start": 45120,
          "end": 45131,
          "left": {
            "type": "Literal",
            "start": 45120,
            "end": 45125,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45129,
            "end": 45131,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45136,
          "end": 45137,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45139,
        "end": 45223,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45144,
            "end": 45220,
            "argument": {
              "type": "NewExpression",
              "start": 45150,
              "end": 45219,
              "callee": {
                "type": "Identifier",
                "start": 45154,
                "end": 45166,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45167,
                  "end": 45218,
                  "left": {
                    "type": "Literal",
                    "start": 45167,
                    "end": 45202,
                    "value": "#913: 65535 >> 28 === 0. Actual: ",
                    "raw": "'#913: 65535 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45205,
                    "end": 45218,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45206,
                      "end": 45217,
                      "left": {
                        "type": "Literal",
                        "start": 45206,
                        "end": 45211,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45215,
                        "end": 45217,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45227,
      "end": 45337,
      "test": {
        "type": "BinaryExpression",
        "start": 45231,
        "end": 45249,
        "left": {
          "type": "BinaryExpression",
          "start": 45231,
          "end": 45243,
          "left": {
            "type": "Literal",
            "start": 45231,
            "end": 45237,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45241,
            "end": 45243,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45248,
          "end": 45249,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45251,
        "end": 45337,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45256,
            "end": 45334,
            "argument": {
              "type": "NewExpression",
              "start": 45262,
              "end": 45333,
              "callee": {
                "type": "Identifier",
                "start": 45266,
                "end": 45278,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45279,
                  "end": 45332,
                  "left": {
                    "type": "Literal",
                    "start": 45279,
                    "end": 45315,
                    "value": "#914: 131071 >> 28 === 0. Actual: ",
                    "raw": "'#914: 131071 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45318,
                    "end": 45332,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45319,
                      "end": 45331,
                      "left": {
                        "type": "Literal",
                        "start": 45319,
                        "end": 45325,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45329,
                        "end": 45331,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45341,
      "end": 45451,
      "test": {
        "type": "BinaryExpression",
        "start": 45345,
        "end": 45363,
        "left": {
          "type": "BinaryExpression",
          "start": 45345,
          "end": 45357,
          "left": {
            "type": "Literal",
            "start": 45345,
            "end": 45351,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45355,
            "end": 45357,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45362,
          "end": 45363,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45365,
        "end": 45451,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45370,
            "end": 45448,
            "argument": {
              "type": "NewExpression",
              "start": 45376,
              "end": 45447,
              "callee": {
                "type": "Identifier",
                "start": 45380,
                "end": 45392,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45393,
                  "end": 45446,
                  "left": {
                    "type": "Literal",
                    "start": 45393,
                    "end": 45429,
                    "value": "#915: 262143 >> 28 === 0. Actual: ",
                    "raw": "'#915: 262143 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45432,
                    "end": 45446,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45433,
                      "end": 45445,
                      "left": {
                        "type": "Literal",
                        "start": 45433,
                        "end": 45439,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45443,
                        "end": 45445,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45455,
      "end": 45565,
      "test": {
        "type": "BinaryExpression",
        "start": 45459,
        "end": 45477,
        "left": {
          "type": "BinaryExpression",
          "start": 45459,
          "end": 45471,
          "left": {
            "type": "Literal",
            "start": 45459,
            "end": 45465,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45469,
            "end": 45471,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45476,
          "end": 45477,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45479,
        "end": 45565,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45484,
            "end": 45562,
            "argument": {
              "type": "NewExpression",
              "start": 45490,
              "end": 45561,
              "callee": {
                "type": "Identifier",
                "start": 45494,
                "end": 45506,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45507,
                  "end": 45560,
                  "left": {
                    "type": "Literal",
                    "start": 45507,
                    "end": 45543,
                    "value": "#916: 524287 >> 28 === 0. Actual: ",
                    "raw": "'#916: 524287 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45546,
                    "end": 45560,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45547,
                      "end": 45559,
                      "left": {
                        "type": "Literal",
                        "start": 45547,
                        "end": 45553,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45557,
                        "end": 45559,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45569,
      "end": 45682,
      "test": {
        "type": "BinaryExpression",
        "start": 45573,
        "end": 45592,
        "left": {
          "type": "BinaryExpression",
          "start": 45573,
          "end": 45586,
          "left": {
            "type": "Literal",
            "start": 45573,
            "end": 45580,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45584,
            "end": 45586,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45591,
          "end": 45592,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45594,
        "end": 45682,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45599,
            "end": 45679,
            "argument": {
              "type": "NewExpression",
              "start": 45605,
              "end": 45678,
              "callee": {
                "type": "Identifier",
                "start": 45609,
                "end": 45621,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45622,
                  "end": 45677,
                  "left": {
                    "type": "Literal",
                    "start": 45622,
                    "end": 45659,
                    "value": "#917: 1048575 >> 28 === 0. Actual: ",
                    "raw": "'#917: 1048575 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45662,
                    "end": 45677,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45663,
                      "end": 45676,
                      "left": {
                        "type": "Literal",
                        "start": 45663,
                        "end": 45670,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45674,
                        "end": 45676,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45686,
      "end": 45799,
      "test": {
        "type": "BinaryExpression",
        "start": 45690,
        "end": 45709,
        "left": {
          "type": "BinaryExpression",
          "start": 45690,
          "end": 45703,
          "left": {
            "type": "Literal",
            "start": 45690,
            "end": 45697,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45701,
            "end": 45703,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45708,
          "end": 45709,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45711,
        "end": 45799,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45716,
            "end": 45796,
            "argument": {
              "type": "NewExpression",
              "start": 45722,
              "end": 45795,
              "callee": {
                "type": "Identifier",
                "start": 45726,
                "end": 45738,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45739,
                  "end": 45794,
                  "left": {
                    "type": "Literal",
                    "start": 45739,
                    "end": 45776,
                    "value": "#918: 2097151 >> 28 === 0. Actual: ",
                    "raw": "'#918: 2097151 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45779,
                    "end": 45794,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45780,
                      "end": 45793,
                      "left": {
                        "type": "Literal",
                        "start": 45780,
                        "end": 45787,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45791,
                        "end": 45793,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45803,
      "end": 45916,
      "test": {
        "type": "BinaryExpression",
        "start": 45807,
        "end": 45826,
        "left": {
          "type": "BinaryExpression",
          "start": 45807,
          "end": 45820,
          "left": {
            "type": "Literal",
            "start": 45807,
            "end": 45814,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45818,
            "end": 45820,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45825,
          "end": 45826,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45828,
        "end": 45916,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45833,
            "end": 45913,
            "argument": {
              "type": "NewExpression",
              "start": 45839,
              "end": 45912,
              "callee": {
                "type": "Identifier",
                "start": 45843,
                "end": 45855,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45856,
                  "end": 45911,
                  "left": {
                    "type": "Literal",
                    "start": 45856,
                    "end": 45893,
                    "value": "#919: 4194303 >> 28 === 0. Actual: ",
                    "raw": "'#919: 4194303 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 45896,
                    "end": 45911,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 45897,
                      "end": 45910,
                      "left": {
                        "type": "Literal",
                        "start": 45897,
                        "end": 45904,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 45908,
                        "end": 45910,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 45920,
      "end": 46033,
      "test": {
        "type": "BinaryExpression",
        "start": 45924,
        "end": 45943,
        "left": {
          "type": "BinaryExpression",
          "start": 45924,
          "end": 45937,
          "left": {
            "type": "Literal",
            "start": 45924,
            "end": 45931,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 45935,
            "end": 45937,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 45942,
          "end": 45943,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 45945,
        "end": 46033,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 45950,
            "end": 46030,
            "argument": {
              "type": "NewExpression",
              "start": 45956,
              "end": 46029,
              "callee": {
                "type": "Identifier",
                "start": 45960,
                "end": 45972,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 45973,
                  "end": 46028,
                  "left": {
                    "type": "Literal",
                    "start": 45973,
                    "end": 46010,
                    "value": "#920: 8388607 >> 28 === 0. Actual: ",
                    "raw": "'#920: 8388607 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46013,
                    "end": 46028,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46014,
                      "end": 46027,
                      "left": {
                        "type": "Literal",
                        "start": 46014,
                        "end": 46021,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46025,
                        "end": 46027,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46037,
      "end": 46153,
      "test": {
        "type": "BinaryExpression",
        "start": 46041,
        "end": 46061,
        "left": {
          "type": "BinaryExpression",
          "start": 46041,
          "end": 46055,
          "left": {
            "type": "Literal",
            "start": 46041,
            "end": 46049,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46053,
            "end": 46055,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46060,
          "end": 46061,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46063,
        "end": 46153,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46068,
            "end": 46150,
            "argument": {
              "type": "NewExpression",
              "start": 46074,
              "end": 46149,
              "callee": {
                "type": "Identifier",
                "start": 46078,
                "end": 46090,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46091,
                  "end": 46148,
                  "left": {
                    "type": "Literal",
                    "start": 46091,
                    "end": 46129,
                    "value": "#921: 16777215 >> 28 === 0. Actual: ",
                    "raw": "'#921: 16777215 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46132,
                    "end": 46148,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46133,
                      "end": 46147,
                      "left": {
                        "type": "Literal",
                        "start": 46133,
                        "end": 46141,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46145,
                        "end": 46147,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46157,
      "end": 46273,
      "test": {
        "type": "BinaryExpression",
        "start": 46161,
        "end": 46181,
        "left": {
          "type": "BinaryExpression",
          "start": 46161,
          "end": 46175,
          "left": {
            "type": "Literal",
            "start": 46161,
            "end": 46169,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46173,
            "end": 46175,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46180,
          "end": 46181,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46183,
        "end": 46273,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46188,
            "end": 46270,
            "argument": {
              "type": "NewExpression",
              "start": 46194,
              "end": 46269,
              "callee": {
                "type": "Identifier",
                "start": 46198,
                "end": 46210,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46211,
                  "end": 46268,
                  "left": {
                    "type": "Literal",
                    "start": 46211,
                    "end": 46249,
                    "value": "#922: 33554431 >> 28 === 0. Actual: ",
                    "raw": "'#922: 33554431 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46252,
                    "end": 46268,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46253,
                      "end": 46267,
                      "left": {
                        "type": "Literal",
                        "start": 46253,
                        "end": 46261,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46265,
                        "end": 46267,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46277,
      "end": 46393,
      "test": {
        "type": "BinaryExpression",
        "start": 46281,
        "end": 46301,
        "left": {
          "type": "BinaryExpression",
          "start": 46281,
          "end": 46295,
          "left": {
            "type": "Literal",
            "start": 46281,
            "end": 46289,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46293,
            "end": 46295,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46300,
          "end": 46301,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46303,
        "end": 46393,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46308,
            "end": 46390,
            "argument": {
              "type": "NewExpression",
              "start": 46314,
              "end": 46389,
              "callee": {
                "type": "Identifier",
                "start": 46318,
                "end": 46330,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46331,
                  "end": 46388,
                  "left": {
                    "type": "Literal",
                    "start": 46331,
                    "end": 46369,
                    "value": "#923: 67108863 >> 28 === 0. Actual: ",
                    "raw": "'#923: 67108863 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46372,
                    "end": 46388,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46373,
                      "end": 46387,
                      "left": {
                        "type": "Literal",
                        "start": 46373,
                        "end": 46381,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46385,
                        "end": 46387,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46397,
      "end": 46516,
      "test": {
        "type": "BinaryExpression",
        "start": 46401,
        "end": 46422,
        "left": {
          "type": "BinaryExpression",
          "start": 46401,
          "end": 46416,
          "left": {
            "type": "Literal",
            "start": 46401,
            "end": 46410,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46414,
            "end": 46416,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46421,
          "end": 46422,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46424,
        "end": 46516,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46429,
            "end": 46513,
            "argument": {
              "type": "NewExpression",
              "start": 46435,
              "end": 46512,
              "callee": {
                "type": "Identifier",
                "start": 46439,
                "end": 46451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46452,
                  "end": 46511,
                  "left": {
                    "type": "Literal",
                    "start": 46452,
                    "end": 46491,
                    "value": "#924: 134217727 >> 28 === 0. Actual: ",
                    "raw": "'#924: 134217727 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46494,
                    "end": 46511,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46495,
                      "end": 46510,
                      "left": {
                        "type": "Literal",
                        "start": 46495,
                        "end": 46504,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46508,
                        "end": 46510,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46520,
      "end": 46639,
      "test": {
        "type": "BinaryExpression",
        "start": 46524,
        "end": 46545,
        "left": {
          "type": "BinaryExpression",
          "start": 46524,
          "end": 46539,
          "left": {
            "type": "Literal",
            "start": 46524,
            "end": 46533,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46537,
            "end": 46539,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46544,
          "end": 46545,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46547,
        "end": 46639,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46552,
            "end": 46636,
            "argument": {
              "type": "NewExpression",
              "start": 46558,
              "end": 46635,
              "callee": {
                "type": "Identifier",
                "start": 46562,
                "end": 46574,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46575,
                  "end": 46634,
                  "left": {
                    "type": "Literal",
                    "start": 46575,
                    "end": 46614,
                    "value": "#925: 268435455 >> 28 === 0. Actual: ",
                    "raw": "'#925: 268435455 >> 28 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46617,
                    "end": 46634,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46618,
                      "end": 46633,
                      "left": {
                        "type": "Literal",
                        "start": 46618,
                        "end": 46627,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46631,
                        "end": 46633,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46643,
      "end": 46762,
      "test": {
        "type": "BinaryExpression",
        "start": 46647,
        "end": 46668,
        "left": {
          "type": "BinaryExpression",
          "start": 46647,
          "end": 46662,
          "left": {
            "type": "Literal",
            "start": 46647,
            "end": 46656,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46660,
            "end": 46662,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46667,
          "end": 46668,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46670,
        "end": 46762,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46675,
            "end": 46759,
            "argument": {
              "type": "NewExpression",
              "start": 46681,
              "end": 46758,
              "callee": {
                "type": "Identifier",
                "start": 46685,
                "end": 46697,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46698,
                  "end": 46757,
                  "left": {
                    "type": "Literal",
                    "start": 46698,
                    "end": 46737,
                    "value": "#926: 536870911 >> 28 === 1. Actual: ",
                    "raw": "'#926: 536870911 >> 28 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46740,
                    "end": 46757,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46741,
                      "end": 46756,
                      "left": {
                        "type": "Literal",
                        "start": 46741,
                        "end": 46750,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46754,
                        "end": 46756,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46766,
      "end": 46888,
      "test": {
        "type": "BinaryExpression",
        "start": 46770,
        "end": 46792,
        "left": {
          "type": "BinaryExpression",
          "start": 46770,
          "end": 46786,
          "left": {
            "type": "Literal",
            "start": 46770,
            "end": 46780,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46784,
            "end": 46786,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46791,
          "end": 46792,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46794,
        "end": 46888,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46799,
            "end": 46885,
            "argument": {
              "type": "NewExpression",
              "start": 46805,
              "end": 46884,
              "callee": {
                "type": "Identifier",
                "start": 46809,
                "end": 46821,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46822,
                  "end": 46883,
                  "left": {
                    "type": "Literal",
                    "start": 46822,
                    "end": 46862,
                    "value": "#927: 1073741823 >> 28 === 3. Actual: ",
                    "raw": "'#927: 1073741823 >> 28 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46865,
                    "end": 46883,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46866,
                      "end": 46882,
                      "left": {
                        "type": "Literal",
                        "start": 46866,
                        "end": 46876,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 46880,
                        "end": 46882,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 46892,
      "end": 47014,
      "test": {
        "type": "BinaryExpression",
        "start": 46896,
        "end": 46918,
        "left": {
          "type": "BinaryExpression",
          "start": 46896,
          "end": 46912,
          "left": {
            "type": "Literal",
            "start": 46896,
            "end": 46906,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 46910,
            "end": 46912,
            "value": 28,
            "raw": "28",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 46917,
          "end": 46918,
          "value": 7,
          "raw": "7",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 46920,
        "end": 47014,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 46925,
            "end": 47011,
            "argument": {
              "type": "NewExpression",
              "start": 46931,
              "end": 47010,
              "callee": {
                "type": "Identifier",
                "start": 46935,
                "end": 46947,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 46948,
                  "end": 47009,
                  "left": {
                    "type": "Literal",
                    "start": 46948,
                    "end": 46988,
                    "value": "#928: 2147483647 >> 28 === 7. Actual: ",
                    "raw": "'#928: 2147483647 >> 28 === 7. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 46991,
                    "end": 47009,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 46992,
                      "end": 47008,
                      "left": {
                        "type": "Literal",
                        "start": 46992,
                        "end": 47002,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47006,
                        "end": 47008,
                        "value": 28,
                        "raw": "28",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47018,
      "end": 47113,
      "test": {
        "type": "BinaryExpression",
        "start": 47022,
        "end": 47035,
        "left": {
          "type": "BinaryExpression",
          "start": 47022,
          "end": 47029,
          "left": {
            "type": "Literal",
            "start": 47022,
            "end": 47023,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47027,
            "end": 47029,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47034,
          "end": 47035,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47037,
        "end": 47113,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47042,
            "end": 47110,
            "argument": {
              "type": "NewExpression",
              "start": 47048,
              "end": 47109,
              "callee": {
                "type": "Identifier",
                "start": 47052,
                "end": 47064,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47065,
                  "end": 47108,
                  "left": {
                    "type": "Literal",
                    "start": 47065,
                    "end": 47096,
                    "value": "#929: 0 >> 29 === 0. Actual: ",
                    "raw": "'#929: 0 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47099,
                    "end": 47108,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47100,
                      "end": 47107,
                      "left": {
                        "type": "Literal",
                        "start": 47100,
                        "end": 47101,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47105,
                        "end": 47107,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47117,
      "end": 47212,
      "test": {
        "type": "BinaryExpression",
        "start": 47121,
        "end": 47134,
        "left": {
          "type": "BinaryExpression",
          "start": 47121,
          "end": 47128,
          "left": {
            "type": "Literal",
            "start": 47121,
            "end": 47122,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47126,
            "end": 47128,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47133,
          "end": 47134,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47136,
        "end": 47212,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47141,
            "end": 47209,
            "argument": {
              "type": "NewExpression",
              "start": 47147,
              "end": 47208,
              "callee": {
                "type": "Identifier",
                "start": 47151,
                "end": 47163,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47164,
                  "end": 47207,
                  "left": {
                    "type": "Literal",
                    "start": 47164,
                    "end": 47195,
                    "value": "#930: 1 >> 29 === 0. Actual: ",
                    "raw": "'#930: 1 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47198,
                    "end": 47207,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47199,
                      "end": 47206,
                      "left": {
                        "type": "Literal",
                        "start": 47199,
                        "end": 47200,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47204,
                        "end": 47206,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47216,
      "end": 47311,
      "test": {
        "type": "BinaryExpression",
        "start": 47220,
        "end": 47233,
        "left": {
          "type": "BinaryExpression",
          "start": 47220,
          "end": 47227,
          "left": {
            "type": "Literal",
            "start": 47220,
            "end": 47221,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47225,
            "end": 47227,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47232,
          "end": 47233,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47235,
        "end": 47311,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47240,
            "end": 47308,
            "argument": {
              "type": "NewExpression",
              "start": 47246,
              "end": 47307,
              "callee": {
                "type": "Identifier",
                "start": 47250,
                "end": 47262,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47263,
                  "end": 47306,
                  "left": {
                    "type": "Literal",
                    "start": 47263,
                    "end": 47294,
                    "value": "#931: 3 >> 29 === 0. Actual: ",
                    "raw": "'#931: 3 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47297,
                    "end": 47306,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47298,
                      "end": 47305,
                      "left": {
                        "type": "Literal",
                        "start": 47298,
                        "end": 47299,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47303,
                        "end": 47305,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47315,
      "end": 47410,
      "test": {
        "type": "BinaryExpression",
        "start": 47319,
        "end": 47332,
        "left": {
          "type": "BinaryExpression",
          "start": 47319,
          "end": 47326,
          "left": {
            "type": "Literal",
            "start": 47319,
            "end": 47320,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47324,
            "end": 47326,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47331,
          "end": 47332,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47334,
        "end": 47410,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47339,
            "end": 47407,
            "argument": {
              "type": "NewExpression",
              "start": 47345,
              "end": 47406,
              "callee": {
                "type": "Identifier",
                "start": 47349,
                "end": 47361,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47362,
                  "end": 47405,
                  "left": {
                    "type": "Literal",
                    "start": 47362,
                    "end": 47393,
                    "value": "#932: 7 >> 29 === 0. Actual: ",
                    "raw": "'#932: 7 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47396,
                    "end": 47405,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47397,
                      "end": 47404,
                      "left": {
                        "type": "Literal",
                        "start": 47397,
                        "end": 47398,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47402,
                        "end": 47404,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47414,
      "end": 47512,
      "test": {
        "type": "BinaryExpression",
        "start": 47418,
        "end": 47432,
        "left": {
          "type": "BinaryExpression",
          "start": 47418,
          "end": 47426,
          "left": {
            "type": "Literal",
            "start": 47418,
            "end": 47420,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47424,
            "end": 47426,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47431,
          "end": 47432,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47434,
        "end": 47512,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47439,
            "end": 47509,
            "argument": {
              "type": "NewExpression",
              "start": 47445,
              "end": 47508,
              "callee": {
                "type": "Identifier",
                "start": 47449,
                "end": 47461,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47462,
                  "end": 47507,
                  "left": {
                    "type": "Literal",
                    "start": 47462,
                    "end": 47494,
                    "value": "#933: 15 >> 29 === 0. Actual: ",
                    "raw": "'#933: 15 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47497,
                    "end": 47507,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47498,
                      "end": 47506,
                      "left": {
                        "type": "Literal",
                        "start": 47498,
                        "end": 47500,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47504,
                        "end": 47506,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47516,
      "end": 47614,
      "test": {
        "type": "BinaryExpression",
        "start": 47520,
        "end": 47534,
        "left": {
          "type": "BinaryExpression",
          "start": 47520,
          "end": 47528,
          "left": {
            "type": "Literal",
            "start": 47520,
            "end": 47522,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47526,
            "end": 47528,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47533,
          "end": 47534,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47536,
        "end": 47614,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47541,
            "end": 47611,
            "argument": {
              "type": "NewExpression",
              "start": 47547,
              "end": 47610,
              "callee": {
                "type": "Identifier",
                "start": 47551,
                "end": 47563,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47564,
                  "end": 47609,
                  "left": {
                    "type": "Literal",
                    "start": 47564,
                    "end": 47596,
                    "value": "#934: 31 >> 29 === 0. Actual: ",
                    "raw": "'#934: 31 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47599,
                    "end": 47609,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47600,
                      "end": 47608,
                      "left": {
                        "type": "Literal",
                        "start": 47600,
                        "end": 47602,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47606,
                        "end": 47608,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47618,
      "end": 47716,
      "test": {
        "type": "BinaryExpression",
        "start": 47622,
        "end": 47636,
        "left": {
          "type": "BinaryExpression",
          "start": 47622,
          "end": 47630,
          "left": {
            "type": "Literal",
            "start": 47622,
            "end": 47624,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47628,
            "end": 47630,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47635,
          "end": 47636,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47638,
        "end": 47716,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47643,
            "end": 47713,
            "argument": {
              "type": "NewExpression",
              "start": 47649,
              "end": 47712,
              "callee": {
                "type": "Identifier",
                "start": 47653,
                "end": 47665,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47666,
                  "end": 47711,
                  "left": {
                    "type": "Literal",
                    "start": 47666,
                    "end": 47698,
                    "value": "#935: 63 >> 29 === 0. Actual: ",
                    "raw": "'#935: 63 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47701,
                    "end": 47711,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47702,
                      "end": 47710,
                      "left": {
                        "type": "Literal",
                        "start": 47702,
                        "end": 47704,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47708,
                        "end": 47710,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47720,
      "end": 47821,
      "test": {
        "type": "BinaryExpression",
        "start": 47724,
        "end": 47739,
        "left": {
          "type": "BinaryExpression",
          "start": 47724,
          "end": 47733,
          "left": {
            "type": "Literal",
            "start": 47724,
            "end": 47727,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47731,
            "end": 47733,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47738,
          "end": 47739,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47741,
        "end": 47821,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47746,
            "end": 47818,
            "argument": {
              "type": "NewExpression",
              "start": 47752,
              "end": 47817,
              "callee": {
                "type": "Identifier",
                "start": 47756,
                "end": 47768,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47769,
                  "end": 47816,
                  "left": {
                    "type": "Literal",
                    "start": 47769,
                    "end": 47802,
                    "value": "#936: 127 >> 29 === 0. Actual: ",
                    "raw": "'#936: 127 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47805,
                    "end": 47816,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47806,
                      "end": 47815,
                      "left": {
                        "type": "Literal",
                        "start": 47806,
                        "end": 47809,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47813,
                        "end": 47815,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47825,
      "end": 47926,
      "test": {
        "type": "BinaryExpression",
        "start": 47829,
        "end": 47844,
        "left": {
          "type": "BinaryExpression",
          "start": 47829,
          "end": 47838,
          "left": {
            "type": "Literal",
            "start": 47829,
            "end": 47832,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47836,
            "end": 47838,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47843,
          "end": 47844,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47846,
        "end": 47926,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47851,
            "end": 47923,
            "argument": {
              "type": "NewExpression",
              "start": 47857,
              "end": 47922,
              "callee": {
                "type": "Identifier",
                "start": 47861,
                "end": 47873,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47874,
                  "end": 47921,
                  "left": {
                    "type": "Literal",
                    "start": 47874,
                    "end": 47907,
                    "value": "#937: 255 >> 29 === 0. Actual: ",
                    "raw": "'#937: 255 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 47910,
                    "end": 47921,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 47911,
                      "end": 47920,
                      "left": {
                        "type": "Literal",
                        "start": 47911,
                        "end": 47914,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 47918,
                        "end": 47920,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 47930,
      "end": 48031,
      "test": {
        "type": "BinaryExpression",
        "start": 47934,
        "end": 47949,
        "left": {
          "type": "BinaryExpression",
          "start": 47934,
          "end": 47943,
          "left": {
            "type": "Literal",
            "start": 47934,
            "end": 47937,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 47941,
            "end": 47943,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 47948,
          "end": 47949,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 47951,
        "end": 48031,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 47956,
            "end": 48028,
            "argument": {
              "type": "NewExpression",
              "start": 47962,
              "end": 48027,
              "callee": {
                "type": "Identifier",
                "start": 47966,
                "end": 47978,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 47979,
                  "end": 48026,
                  "left": {
                    "type": "Literal",
                    "start": 47979,
                    "end": 48012,
                    "value": "#938: 511 >> 29 === 0. Actual: ",
                    "raw": "'#938: 511 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48015,
                    "end": 48026,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48016,
                      "end": 48025,
                      "left": {
                        "type": "Literal",
                        "start": 48016,
                        "end": 48019,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48023,
                        "end": 48025,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48035,
      "end": 48139,
      "test": {
        "type": "BinaryExpression",
        "start": 48039,
        "end": 48055,
        "left": {
          "type": "BinaryExpression",
          "start": 48039,
          "end": 48049,
          "left": {
            "type": "Literal",
            "start": 48039,
            "end": 48043,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48047,
            "end": 48049,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48054,
          "end": 48055,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48057,
        "end": 48139,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48062,
            "end": 48136,
            "argument": {
              "type": "NewExpression",
              "start": 48068,
              "end": 48135,
              "callee": {
                "type": "Identifier",
                "start": 48072,
                "end": 48084,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48085,
                  "end": 48134,
                  "left": {
                    "type": "Literal",
                    "start": 48085,
                    "end": 48119,
                    "value": "#939: 1023 >> 29 === 0. Actual: ",
                    "raw": "'#939: 1023 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48122,
                    "end": 48134,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48123,
                      "end": 48133,
                      "left": {
                        "type": "Literal",
                        "start": 48123,
                        "end": 48127,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48131,
                        "end": 48133,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48143,
      "end": 48247,
      "test": {
        "type": "BinaryExpression",
        "start": 48147,
        "end": 48163,
        "left": {
          "type": "BinaryExpression",
          "start": 48147,
          "end": 48157,
          "left": {
            "type": "Literal",
            "start": 48147,
            "end": 48151,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48155,
            "end": 48157,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48162,
          "end": 48163,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48165,
        "end": 48247,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48170,
            "end": 48244,
            "argument": {
              "type": "NewExpression",
              "start": 48176,
              "end": 48243,
              "callee": {
                "type": "Identifier",
                "start": 48180,
                "end": 48192,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48193,
                  "end": 48242,
                  "left": {
                    "type": "Literal",
                    "start": 48193,
                    "end": 48227,
                    "value": "#940: 2047 >> 29 === 0. Actual: ",
                    "raw": "'#940: 2047 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48230,
                    "end": 48242,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48231,
                      "end": 48241,
                      "left": {
                        "type": "Literal",
                        "start": 48231,
                        "end": 48235,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48239,
                        "end": 48241,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48251,
      "end": 48355,
      "test": {
        "type": "BinaryExpression",
        "start": 48255,
        "end": 48271,
        "left": {
          "type": "BinaryExpression",
          "start": 48255,
          "end": 48265,
          "left": {
            "type": "Literal",
            "start": 48255,
            "end": 48259,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48263,
            "end": 48265,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48270,
          "end": 48271,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48273,
        "end": 48355,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48278,
            "end": 48352,
            "argument": {
              "type": "NewExpression",
              "start": 48284,
              "end": 48351,
              "callee": {
                "type": "Identifier",
                "start": 48288,
                "end": 48300,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48301,
                  "end": 48350,
                  "left": {
                    "type": "Literal",
                    "start": 48301,
                    "end": 48335,
                    "value": "#941: 4095 >> 29 === 0. Actual: ",
                    "raw": "'#941: 4095 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48338,
                    "end": 48350,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48339,
                      "end": 48349,
                      "left": {
                        "type": "Literal",
                        "start": 48339,
                        "end": 48343,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48347,
                        "end": 48349,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48359,
      "end": 48463,
      "test": {
        "type": "BinaryExpression",
        "start": 48363,
        "end": 48379,
        "left": {
          "type": "BinaryExpression",
          "start": 48363,
          "end": 48373,
          "left": {
            "type": "Literal",
            "start": 48363,
            "end": 48367,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48371,
            "end": 48373,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48378,
          "end": 48379,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48381,
        "end": 48463,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48386,
            "end": 48460,
            "argument": {
              "type": "NewExpression",
              "start": 48392,
              "end": 48459,
              "callee": {
                "type": "Identifier",
                "start": 48396,
                "end": 48408,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48409,
                  "end": 48458,
                  "left": {
                    "type": "Literal",
                    "start": 48409,
                    "end": 48443,
                    "value": "#942: 8191 >> 29 === 0. Actual: ",
                    "raw": "'#942: 8191 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48446,
                    "end": 48458,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48447,
                      "end": 48457,
                      "left": {
                        "type": "Literal",
                        "start": 48447,
                        "end": 48451,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48455,
                        "end": 48457,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48467,
      "end": 48574,
      "test": {
        "type": "BinaryExpression",
        "start": 48471,
        "end": 48488,
        "left": {
          "type": "BinaryExpression",
          "start": 48471,
          "end": 48482,
          "left": {
            "type": "Literal",
            "start": 48471,
            "end": 48476,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48480,
            "end": 48482,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48487,
          "end": 48488,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48490,
        "end": 48574,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48495,
            "end": 48571,
            "argument": {
              "type": "NewExpression",
              "start": 48501,
              "end": 48570,
              "callee": {
                "type": "Identifier",
                "start": 48505,
                "end": 48517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48518,
                  "end": 48569,
                  "left": {
                    "type": "Literal",
                    "start": 48518,
                    "end": 48553,
                    "value": "#943: 16383 >> 29 === 0. Actual: ",
                    "raw": "'#943: 16383 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48556,
                    "end": 48569,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48557,
                      "end": 48568,
                      "left": {
                        "type": "Literal",
                        "start": 48557,
                        "end": 48562,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48566,
                        "end": 48568,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48578,
      "end": 48685,
      "test": {
        "type": "BinaryExpression",
        "start": 48582,
        "end": 48599,
        "left": {
          "type": "BinaryExpression",
          "start": 48582,
          "end": 48593,
          "left": {
            "type": "Literal",
            "start": 48582,
            "end": 48587,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48591,
            "end": 48593,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48598,
          "end": 48599,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48601,
        "end": 48685,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48606,
            "end": 48682,
            "argument": {
              "type": "NewExpression",
              "start": 48612,
              "end": 48681,
              "callee": {
                "type": "Identifier",
                "start": 48616,
                "end": 48628,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48629,
                  "end": 48680,
                  "left": {
                    "type": "Literal",
                    "start": 48629,
                    "end": 48664,
                    "value": "#944: 32767 >> 29 === 0. Actual: ",
                    "raw": "'#944: 32767 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48667,
                    "end": 48680,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48668,
                      "end": 48679,
                      "left": {
                        "type": "Literal",
                        "start": 48668,
                        "end": 48673,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48677,
                        "end": 48679,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48689,
      "end": 48796,
      "test": {
        "type": "BinaryExpression",
        "start": 48693,
        "end": 48710,
        "left": {
          "type": "BinaryExpression",
          "start": 48693,
          "end": 48704,
          "left": {
            "type": "Literal",
            "start": 48693,
            "end": 48698,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48702,
            "end": 48704,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48709,
          "end": 48710,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48712,
        "end": 48796,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48717,
            "end": 48793,
            "argument": {
              "type": "NewExpression",
              "start": 48723,
              "end": 48792,
              "callee": {
                "type": "Identifier",
                "start": 48727,
                "end": 48739,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48740,
                  "end": 48791,
                  "left": {
                    "type": "Literal",
                    "start": 48740,
                    "end": 48775,
                    "value": "#945: 65535 >> 29 === 0. Actual: ",
                    "raw": "'#945: 65535 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48778,
                    "end": 48791,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48779,
                      "end": 48790,
                      "left": {
                        "type": "Literal",
                        "start": 48779,
                        "end": 48784,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48788,
                        "end": 48790,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48800,
      "end": 48910,
      "test": {
        "type": "BinaryExpression",
        "start": 48804,
        "end": 48822,
        "left": {
          "type": "BinaryExpression",
          "start": 48804,
          "end": 48816,
          "left": {
            "type": "Literal",
            "start": 48804,
            "end": 48810,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48814,
            "end": 48816,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48821,
          "end": 48822,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48824,
        "end": 48910,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48829,
            "end": 48907,
            "argument": {
              "type": "NewExpression",
              "start": 48835,
              "end": 48906,
              "callee": {
                "type": "Identifier",
                "start": 48839,
                "end": 48851,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48852,
                  "end": 48905,
                  "left": {
                    "type": "Literal",
                    "start": 48852,
                    "end": 48888,
                    "value": "#946: 131071 >> 29 === 0. Actual: ",
                    "raw": "'#946: 131071 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 48891,
                    "end": 48905,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 48892,
                      "end": 48904,
                      "left": {
                        "type": "Literal",
                        "start": 48892,
                        "end": 48898,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 48902,
                        "end": 48904,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 48914,
      "end": 49024,
      "test": {
        "type": "BinaryExpression",
        "start": 48918,
        "end": 48936,
        "left": {
          "type": "BinaryExpression",
          "start": 48918,
          "end": 48930,
          "left": {
            "type": "Literal",
            "start": 48918,
            "end": 48924,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 48928,
            "end": 48930,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 48935,
          "end": 48936,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 48938,
        "end": 49024,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 48943,
            "end": 49021,
            "argument": {
              "type": "NewExpression",
              "start": 48949,
              "end": 49020,
              "callee": {
                "type": "Identifier",
                "start": 48953,
                "end": 48965,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 48966,
                  "end": 49019,
                  "left": {
                    "type": "Literal",
                    "start": 48966,
                    "end": 49002,
                    "value": "#947: 262143 >> 29 === 0. Actual: ",
                    "raw": "'#947: 262143 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49005,
                    "end": 49019,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49006,
                      "end": 49018,
                      "left": {
                        "type": "Literal",
                        "start": 49006,
                        "end": 49012,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49016,
                        "end": 49018,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49028,
      "end": 49138,
      "test": {
        "type": "BinaryExpression",
        "start": 49032,
        "end": 49050,
        "left": {
          "type": "BinaryExpression",
          "start": 49032,
          "end": 49044,
          "left": {
            "type": "Literal",
            "start": 49032,
            "end": 49038,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49042,
            "end": 49044,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49049,
          "end": 49050,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49052,
        "end": 49138,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49057,
            "end": 49135,
            "argument": {
              "type": "NewExpression",
              "start": 49063,
              "end": 49134,
              "callee": {
                "type": "Identifier",
                "start": 49067,
                "end": 49079,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49080,
                  "end": 49133,
                  "left": {
                    "type": "Literal",
                    "start": 49080,
                    "end": 49116,
                    "value": "#948: 524287 >> 29 === 0. Actual: ",
                    "raw": "'#948: 524287 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49119,
                    "end": 49133,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49120,
                      "end": 49132,
                      "left": {
                        "type": "Literal",
                        "start": 49120,
                        "end": 49126,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49130,
                        "end": 49132,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49142,
      "end": 49255,
      "test": {
        "type": "BinaryExpression",
        "start": 49146,
        "end": 49165,
        "left": {
          "type": "BinaryExpression",
          "start": 49146,
          "end": 49159,
          "left": {
            "type": "Literal",
            "start": 49146,
            "end": 49153,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49157,
            "end": 49159,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49164,
          "end": 49165,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49167,
        "end": 49255,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49172,
            "end": 49252,
            "argument": {
              "type": "NewExpression",
              "start": 49178,
              "end": 49251,
              "callee": {
                "type": "Identifier",
                "start": 49182,
                "end": 49194,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49195,
                  "end": 49250,
                  "left": {
                    "type": "Literal",
                    "start": 49195,
                    "end": 49232,
                    "value": "#949: 1048575 >> 29 === 0. Actual: ",
                    "raw": "'#949: 1048575 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49235,
                    "end": 49250,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49236,
                      "end": 49249,
                      "left": {
                        "type": "Literal",
                        "start": 49236,
                        "end": 49243,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49247,
                        "end": 49249,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49259,
      "end": 49372,
      "test": {
        "type": "BinaryExpression",
        "start": 49263,
        "end": 49282,
        "left": {
          "type": "BinaryExpression",
          "start": 49263,
          "end": 49276,
          "left": {
            "type": "Literal",
            "start": 49263,
            "end": 49270,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49274,
            "end": 49276,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49281,
          "end": 49282,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49284,
        "end": 49372,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49289,
            "end": 49369,
            "argument": {
              "type": "NewExpression",
              "start": 49295,
              "end": 49368,
              "callee": {
                "type": "Identifier",
                "start": 49299,
                "end": 49311,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49312,
                  "end": 49367,
                  "left": {
                    "type": "Literal",
                    "start": 49312,
                    "end": 49349,
                    "value": "#950: 2097151 >> 29 === 0. Actual: ",
                    "raw": "'#950: 2097151 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49352,
                    "end": 49367,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49353,
                      "end": 49366,
                      "left": {
                        "type": "Literal",
                        "start": 49353,
                        "end": 49360,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49364,
                        "end": 49366,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49376,
      "end": 49489,
      "test": {
        "type": "BinaryExpression",
        "start": 49380,
        "end": 49399,
        "left": {
          "type": "BinaryExpression",
          "start": 49380,
          "end": 49393,
          "left": {
            "type": "Literal",
            "start": 49380,
            "end": 49387,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49391,
            "end": 49393,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49398,
          "end": 49399,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49401,
        "end": 49489,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49406,
            "end": 49486,
            "argument": {
              "type": "NewExpression",
              "start": 49412,
              "end": 49485,
              "callee": {
                "type": "Identifier",
                "start": 49416,
                "end": 49428,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49429,
                  "end": 49484,
                  "left": {
                    "type": "Literal",
                    "start": 49429,
                    "end": 49466,
                    "value": "#951: 4194303 >> 29 === 0. Actual: ",
                    "raw": "'#951: 4194303 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49469,
                    "end": 49484,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49470,
                      "end": 49483,
                      "left": {
                        "type": "Literal",
                        "start": 49470,
                        "end": 49477,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49481,
                        "end": 49483,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49493,
      "end": 49606,
      "test": {
        "type": "BinaryExpression",
        "start": 49497,
        "end": 49516,
        "left": {
          "type": "BinaryExpression",
          "start": 49497,
          "end": 49510,
          "left": {
            "type": "Literal",
            "start": 49497,
            "end": 49504,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49508,
            "end": 49510,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49515,
          "end": 49516,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49518,
        "end": 49606,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49523,
            "end": 49603,
            "argument": {
              "type": "NewExpression",
              "start": 49529,
              "end": 49602,
              "callee": {
                "type": "Identifier",
                "start": 49533,
                "end": 49545,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49546,
                  "end": 49601,
                  "left": {
                    "type": "Literal",
                    "start": 49546,
                    "end": 49583,
                    "value": "#952: 8388607 >> 29 === 0. Actual: ",
                    "raw": "'#952: 8388607 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49586,
                    "end": 49601,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49587,
                      "end": 49600,
                      "left": {
                        "type": "Literal",
                        "start": 49587,
                        "end": 49594,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49598,
                        "end": 49600,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49610,
      "end": 49726,
      "test": {
        "type": "BinaryExpression",
        "start": 49614,
        "end": 49634,
        "left": {
          "type": "BinaryExpression",
          "start": 49614,
          "end": 49628,
          "left": {
            "type": "Literal",
            "start": 49614,
            "end": 49622,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49626,
            "end": 49628,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49633,
          "end": 49634,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49636,
        "end": 49726,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49641,
            "end": 49723,
            "argument": {
              "type": "NewExpression",
              "start": 49647,
              "end": 49722,
              "callee": {
                "type": "Identifier",
                "start": 49651,
                "end": 49663,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49664,
                  "end": 49721,
                  "left": {
                    "type": "Literal",
                    "start": 49664,
                    "end": 49702,
                    "value": "#953: 16777215 >> 29 === 0. Actual: ",
                    "raw": "'#953: 16777215 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49705,
                    "end": 49721,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49706,
                      "end": 49720,
                      "left": {
                        "type": "Literal",
                        "start": 49706,
                        "end": 49714,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49718,
                        "end": 49720,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49730,
      "end": 49846,
      "test": {
        "type": "BinaryExpression",
        "start": 49734,
        "end": 49754,
        "left": {
          "type": "BinaryExpression",
          "start": 49734,
          "end": 49748,
          "left": {
            "type": "Literal",
            "start": 49734,
            "end": 49742,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49746,
            "end": 49748,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49753,
          "end": 49754,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49756,
        "end": 49846,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49761,
            "end": 49843,
            "argument": {
              "type": "NewExpression",
              "start": 49767,
              "end": 49842,
              "callee": {
                "type": "Identifier",
                "start": 49771,
                "end": 49783,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49784,
                  "end": 49841,
                  "left": {
                    "type": "Literal",
                    "start": 49784,
                    "end": 49822,
                    "value": "#954: 33554431 >> 29 === 0. Actual: ",
                    "raw": "'#954: 33554431 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49825,
                    "end": 49841,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49826,
                      "end": 49840,
                      "left": {
                        "type": "Literal",
                        "start": 49826,
                        "end": 49834,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49838,
                        "end": 49840,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49850,
      "end": 49966,
      "test": {
        "type": "BinaryExpression",
        "start": 49854,
        "end": 49874,
        "left": {
          "type": "BinaryExpression",
          "start": 49854,
          "end": 49868,
          "left": {
            "type": "Literal",
            "start": 49854,
            "end": 49862,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49866,
            "end": 49868,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49873,
          "end": 49874,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49876,
        "end": 49966,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 49881,
            "end": 49963,
            "argument": {
              "type": "NewExpression",
              "start": 49887,
              "end": 49962,
              "callee": {
                "type": "Identifier",
                "start": 49891,
                "end": 49903,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 49904,
                  "end": 49961,
                  "left": {
                    "type": "Literal",
                    "start": 49904,
                    "end": 49942,
                    "value": "#955: 67108863 >> 29 === 0. Actual: ",
                    "raw": "'#955: 67108863 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 49945,
                    "end": 49961,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 49946,
                      "end": 49960,
                      "left": {
                        "type": "Literal",
                        "start": 49946,
                        "end": 49954,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 49958,
                        "end": 49960,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 49970,
      "end": 50089,
      "test": {
        "type": "BinaryExpression",
        "start": 49974,
        "end": 49995,
        "left": {
          "type": "BinaryExpression",
          "start": 49974,
          "end": 49989,
          "left": {
            "type": "Literal",
            "start": 49974,
            "end": 49983,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 49987,
            "end": 49989,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 49994,
          "end": 49995,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 49997,
        "end": 50089,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50002,
            "end": 50086,
            "argument": {
              "type": "NewExpression",
              "start": 50008,
              "end": 50085,
              "callee": {
                "type": "Identifier",
                "start": 50012,
                "end": 50024,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50025,
                  "end": 50084,
                  "left": {
                    "type": "Literal",
                    "start": 50025,
                    "end": 50064,
                    "value": "#956: 134217727 >> 29 === 0. Actual: ",
                    "raw": "'#956: 134217727 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50067,
                    "end": 50084,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50068,
                      "end": 50083,
                      "left": {
                        "type": "Literal",
                        "start": 50068,
                        "end": 50077,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50081,
                        "end": 50083,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50093,
      "end": 50212,
      "test": {
        "type": "BinaryExpression",
        "start": 50097,
        "end": 50118,
        "left": {
          "type": "BinaryExpression",
          "start": 50097,
          "end": 50112,
          "left": {
            "type": "Literal",
            "start": 50097,
            "end": 50106,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50110,
            "end": 50112,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50117,
          "end": 50118,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50120,
        "end": 50212,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50125,
            "end": 50209,
            "argument": {
              "type": "NewExpression",
              "start": 50131,
              "end": 50208,
              "callee": {
                "type": "Identifier",
                "start": 50135,
                "end": 50147,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50148,
                  "end": 50207,
                  "left": {
                    "type": "Literal",
                    "start": 50148,
                    "end": 50187,
                    "value": "#957: 268435455 >> 29 === 0. Actual: ",
                    "raw": "'#957: 268435455 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50190,
                    "end": 50207,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50191,
                      "end": 50206,
                      "left": {
                        "type": "Literal",
                        "start": 50191,
                        "end": 50200,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50204,
                        "end": 50206,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50216,
      "end": 50335,
      "test": {
        "type": "BinaryExpression",
        "start": 50220,
        "end": 50241,
        "left": {
          "type": "BinaryExpression",
          "start": 50220,
          "end": 50235,
          "left": {
            "type": "Literal",
            "start": 50220,
            "end": 50229,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50233,
            "end": 50235,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50240,
          "end": 50241,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50243,
        "end": 50335,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50248,
            "end": 50332,
            "argument": {
              "type": "NewExpression",
              "start": 50254,
              "end": 50331,
              "callee": {
                "type": "Identifier",
                "start": 50258,
                "end": 50270,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50271,
                  "end": 50330,
                  "left": {
                    "type": "Literal",
                    "start": 50271,
                    "end": 50310,
                    "value": "#958: 536870911 >> 29 === 0. Actual: ",
                    "raw": "'#958: 536870911 >> 29 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50313,
                    "end": 50330,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50314,
                      "end": 50329,
                      "left": {
                        "type": "Literal",
                        "start": 50314,
                        "end": 50323,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50327,
                        "end": 50329,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50339,
      "end": 50461,
      "test": {
        "type": "BinaryExpression",
        "start": 50343,
        "end": 50365,
        "left": {
          "type": "BinaryExpression",
          "start": 50343,
          "end": 50359,
          "left": {
            "type": "Literal",
            "start": 50343,
            "end": 50353,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50357,
            "end": 50359,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50364,
          "end": 50365,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50367,
        "end": 50461,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50372,
            "end": 50458,
            "argument": {
              "type": "NewExpression",
              "start": 50378,
              "end": 50457,
              "callee": {
                "type": "Identifier",
                "start": 50382,
                "end": 50394,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50395,
                  "end": 50456,
                  "left": {
                    "type": "Literal",
                    "start": 50395,
                    "end": 50435,
                    "value": "#959: 1073741823 >> 29 === 1. Actual: ",
                    "raw": "'#959: 1073741823 >> 29 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50438,
                    "end": 50456,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50439,
                      "end": 50455,
                      "left": {
                        "type": "Literal",
                        "start": 50439,
                        "end": 50449,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50453,
                        "end": 50455,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50465,
      "end": 50587,
      "test": {
        "type": "BinaryExpression",
        "start": 50469,
        "end": 50491,
        "left": {
          "type": "BinaryExpression",
          "start": 50469,
          "end": 50485,
          "left": {
            "type": "Literal",
            "start": 50469,
            "end": 50479,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50483,
            "end": 50485,
            "value": 29,
            "raw": "29",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50490,
          "end": 50491,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50493,
        "end": 50587,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50498,
            "end": 50584,
            "argument": {
              "type": "NewExpression",
              "start": 50504,
              "end": 50583,
              "callee": {
                "type": "Identifier",
                "start": 50508,
                "end": 50520,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50521,
                  "end": 50582,
                  "left": {
                    "type": "Literal",
                    "start": 50521,
                    "end": 50561,
                    "value": "#960: 2147483647 >> 29 === 3. Actual: ",
                    "raw": "'#960: 2147483647 >> 29 === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50564,
                    "end": 50582,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50565,
                      "end": 50581,
                      "left": {
                        "type": "Literal",
                        "start": 50565,
                        "end": 50575,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50579,
                        "end": 50581,
                        "value": 29,
                        "raw": "29",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50591,
      "end": 50686,
      "test": {
        "type": "BinaryExpression",
        "start": 50595,
        "end": 50608,
        "left": {
          "type": "BinaryExpression",
          "start": 50595,
          "end": 50602,
          "left": {
            "type": "Literal",
            "start": 50595,
            "end": 50596,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50600,
            "end": 50602,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50607,
          "end": 50608,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50610,
        "end": 50686,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50615,
            "end": 50683,
            "argument": {
              "type": "NewExpression",
              "start": 50621,
              "end": 50682,
              "callee": {
                "type": "Identifier",
                "start": 50625,
                "end": 50637,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50638,
                  "end": 50681,
                  "left": {
                    "type": "Literal",
                    "start": 50638,
                    "end": 50669,
                    "value": "#961: 0 >> 30 === 0. Actual: ",
                    "raw": "'#961: 0 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50672,
                    "end": 50681,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50673,
                      "end": 50680,
                      "left": {
                        "type": "Literal",
                        "start": 50673,
                        "end": 50674,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50678,
                        "end": 50680,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50690,
      "end": 50785,
      "test": {
        "type": "BinaryExpression",
        "start": 50694,
        "end": 50707,
        "left": {
          "type": "BinaryExpression",
          "start": 50694,
          "end": 50701,
          "left": {
            "type": "Literal",
            "start": 50694,
            "end": 50695,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50699,
            "end": 50701,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50706,
          "end": 50707,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50709,
        "end": 50785,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50714,
            "end": 50782,
            "argument": {
              "type": "NewExpression",
              "start": 50720,
              "end": 50781,
              "callee": {
                "type": "Identifier",
                "start": 50724,
                "end": 50736,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50737,
                  "end": 50780,
                  "left": {
                    "type": "Literal",
                    "start": 50737,
                    "end": 50768,
                    "value": "#962: 1 >> 30 === 0. Actual: ",
                    "raw": "'#962: 1 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50771,
                    "end": 50780,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50772,
                      "end": 50779,
                      "left": {
                        "type": "Literal",
                        "start": 50772,
                        "end": 50773,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50777,
                        "end": 50779,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50789,
      "end": 50884,
      "test": {
        "type": "BinaryExpression",
        "start": 50793,
        "end": 50806,
        "left": {
          "type": "BinaryExpression",
          "start": 50793,
          "end": 50800,
          "left": {
            "type": "Literal",
            "start": 50793,
            "end": 50794,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50798,
            "end": 50800,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50805,
          "end": 50806,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50808,
        "end": 50884,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50813,
            "end": 50881,
            "argument": {
              "type": "NewExpression",
              "start": 50819,
              "end": 50880,
              "callee": {
                "type": "Identifier",
                "start": 50823,
                "end": 50835,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50836,
                  "end": 50879,
                  "left": {
                    "type": "Literal",
                    "start": 50836,
                    "end": 50867,
                    "value": "#963: 3 >> 30 === 0. Actual: ",
                    "raw": "'#963: 3 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50870,
                    "end": 50879,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50871,
                      "end": 50878,
                      "left": {
                        "type": "Literal",
                        "start": 50871,
                        "end": 50872,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50876,
                        "end": 50878,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50888,
      "end": 50983,
      "test": {
        "type": "BinaryExpression",
        "start": 50892,
        "end": 50905,
        "left": {
          "type": "BinaryExpression",
          "start": 50892,
          "end": 50899,
          "left": {
            "type": "Literal",
            "start": 50892,
            "end": 50893,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50897,
            "end": 50899,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 50904,
          "end": 50905,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 50907,
        "end": 50983,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 50912,
            "end": 50980,
            "argument": {
              "type": "NewExpression",
              "start": 50918,
              "end": 50979,
              "callee": {
                "type": "Identifier",
                "start": 50922,
                "end": 50934,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 50935,
                  "end": 50978,
                  "left": {
                    "type": "Literal",
                    "start": 50935,
                    "end": 50966,
                    "value": "#964: 7 >> 30 === 0. Actual: ",
                    "raw": "'#964: 7 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 50969,
                    "end": 50978,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 50970,
                      "end": 50977,
                      "left": {
                        "type": "Literal",
                        "start": 50970,
                        "end": 50971,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 50975,
                        "end": 50977,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 50987,
      "end": 51085,
      "test": {
        "type": "BinaryExpression",
        "start": 50991,
        "end": 51005,
        "left": {
          "type": "BinaryExpression",
          "start": 50991,
          "end": 50999,
          "left": {
            "type": "Literal",
            "start": 50991,
            "end": 50993,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 50997,
            "end": 50999,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51004,
          "end": 51005,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51007,
        "end": 51085,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51012,
            "end": 51082,
            "argument": {
              "type": "NewExpression",
              "start": 51018,
              "end": 51081,
              "callee": {
                "type": "Identifier",
                "start": 51022,
                "end": 51034,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51035,
                  "end": 51080,
                  "left": {
                    "type": "Literal",
                    "start": 51035,
                    "end": 51067,
                    "value": "#965: 15 >> 30 === 0. Actual: ",
                    "raw": "'#965: 15 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51070,
                    "end": 51080,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51071,
                      "end": 51079,
                      "left": {
                        "type": "Literal",
                        "start": 51071,
                        "end": 51073,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51077,
                        "end": 51079,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51089,
      "end": 51187,
      "test": {
        "type": "BinaryExpression",
        "start": 51093,
        "end": 51107,
        "left": {
          "type": "BinaryExpression",
          "start": 51093,
          "end": 51101,
          "left": {
            "type": "Literal",
            "start": 51093,
            "end": 51095,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51099,
            "end": 51101,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51106,
          "end": 51107,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51109,
        "end": 51187,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51114,
            "end": 51184,
            "argument": {
              "type": "NewExpression",
              "start": 51120,
              "end": 51183,
              "callee": {
                "type": "Identifier",
                "start": 51124,
                "end": 51136,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51137,
                  "end": 51182,
                  "left": {
                    "type": "Literal",
                    "start": 51137,
                    "end": 51169,
                    "value": "#966: 31 >> 30 === 0. Actual: ",
                    "raw": "'#966: 31 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51172,
                    "end": 51182,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51173,
                      "end": 51181,
                      "left": {
                        "type": "Literal",
                        "start": 51173,
                        "end": 51175,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51179,
                        "end": 51181,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51191,
      "end": 51289,
      "test": {
        "type": "BinaryExpression",
        "start": 51195,
        "end": 51209,
        "left": {
          "type": "BinaryExpression",
          "start": 51195,
          "end": 51203,
          "left": {
            "type": "Literal",
            "start": 51195,
            "end": 51197,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51201,
            "end": 51203,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51208,
          "end": 51209,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51211,
        "end": 51289,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51216,
            "end": 51286,
            "argument": {
              "type": "NewExpression",
              "start": 51222,
              "end": 51285,
              "callee": {
                "type": "Identifier",
                "start": 51226,
                "end": 51238,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51239,
                  "end": 51284,
                  "left": {
                    "type": "Literal",
                    "start": 51239,
                    "end": 51271,
                    "value": "#967: 63 >> 30 === 0. Actual: ",
                    "raw": "'#967: 63 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51274,
                    "end": 51284,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51275,
                      "end": 51283,
                      "left": {
                        "type": "Literal",
                        "start": 51275,
                        "end": 51277,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51281,
                        "end": 51283,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51293,
      "end": 51394,
      "test": {
        "type": "BinaryExpression",
        "start": 51297,
        "end": 51312,
        "left": {
          "type": "BinaryExpression",
          "start": 51297,
          "end": 51306,
          "left": {
            "type": "Literal",
            "start": 51297,
            "end": 51300,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51304,
            "end": 51306,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51311,
          "end": 51312,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51314,
        "end": 51394,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51319,
            "end": 51391,
            "argument": {
              "type": "NewExpression",
              "start": 51325,
              "end": 51390,
              "callee": {
                "type": "Identifier",
                "start": 51329,
                "end": 51341,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51342,
                  "end": 51389,
                  "left": {
                    "type": "Literal",
                    "start": 51342,
                    "end": 51375,
                    "value": "#968: 127 >> 30 === 0. Actual: ",
                    "raw": "'#968: 127 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51378,
                    "end": 51389,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51379,
                      "end": 51388,
                      "left": {
                        "type": "Literal",
                        "start": 51379,
                        "end": 51382,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51386,
                        "end": 51388,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51398,
      "end": 51499,
      "test": {
        "type": "BinaryExpression",
        "start": 51402,
        "end": 51417,
        "left": {
          "type": "BinaryExpression",
          "start": 51402,
          "end": 51411,
          "left": {
            "type": "Literal",
            "start": 51402,
            "end": 51405,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51409,
            "end": 51411,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51416,
          "end": 51417,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51419,
        "end": 51499,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51424,
            "end": 51496,
            "argument": {
              "type": "NewExpression",
              "start": 51430,
              "end": 51495,
              "callee": {
                "type": "Identifier",
                "start": 51434,
                "end": 51446,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51447,
                  "end": 51494,
                  "left": {
                    "type": "Literal",
                    "start": 51447,
                    "end": 51480,
                    "value": "#969: 255 >> 30 === 0. Actual: ",
                    "raw": "'#969: 255 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51483,
                    "end": 51494,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51484,
                      "end": 51493,
                      "left": {
                        "type": "Literal",
                        "start": 51484,
                        "end": 51487,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51491,
                        "end": 51493,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51503,
      "end": 51604,
      "test": {
        "type": "BinaryExpression",
        "start": 51507,
        "end": 51522,
        "left": {
          "type": "BinaryExpression",
          "start": 51507,
          "end": 51516,
          "left": {
            "type": "Literal",
            "start": 51507,
            "end": 51510,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51514,
            "end": 51516,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51521,
          "end": 51522,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51524,
        "end": 51604,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51529,
            "end": 51601,
            "argument": {
              "type": "NewExpression",
              "start": 51535,
              "end": 51600,
              "callee": {
                "type": "Identifier",
                "start": 51539,
                "end": 51551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51552,
                  "end": 51599,
                  "left": {
                    "type": "Literal",
                    "start": 51552,
                    "end": 51585,
                    "value": "#970: 511 >> 30 === 0. Actual: ",
                    "raw": "'#970: 511 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51588,
                    "end": 51599,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51589,
                      "end": 51598,
                      "left": {
                        "type": "Literal",
                        "start": 51589,
                        "end": 51592,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51596,
                        "end": 51598,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51608,
      "end": 51712,
      "test": {
        "type": "BinaryExpression",
        "start": 51612,
        "end": 51628,
        "left": {
          "type": "BinaryExpression",
          "start": 51612,
          "end": 51622,
          "left": {
            "type": "Literal",
            "start": 51612,
            "end": 51616,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51620,
            "end": 51622,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51627,
          "end": 51628,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51630,
        "end": 51712,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51635,
            "end": 51709,
            "argument": {
              "type": "NewExpression",
              "start": 51641,
              "end": 51708,
              "callee": {
                "type": "Identifier",
                "start": 51645,
                "end": 51657,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51658,
                  "end": 51707,
                  "left": {
                    "type": "Literal",
                    "start": 51658,
                    "end": 51692,
                    "value": "#971: 1023 >> 30 === 0. Actual: ",
                    "raw": "'#971: 1023 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51695,
                    "end": 51707,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51696,
                      "end": 51706,
                      "left": {
                        "type": "Literal",
                        "start": 51696,
                        "end": 51700,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51704,
                        "end": 51706,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51716,
      "end": 51820,
      "test": {
        "type": "BinaryExpression",
        "start": 51720,
        "end": 51736,
        "left": {
          "type": "BinaryExpression",
          "start": 51720,
          "end": 51730,
          "left": {
            "type": "Literal",
            "start": 51720,
            "end": 51724,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51728,
            "end": 51730,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51735,
          "end": 51736,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51738,
        "end": 51820,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51743,
            "end": 51817,
            "argument": {
              "type": "NewExpression",
              "start": 51749,
              "end": 51816,
              "callee": {
                "type": "Identifier",
                "start": 51753,
                "end": 51765,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51766,
                  "end": 51815,
                  "left": {
                    "type": "Literal",
                    "start": 51766,
                    "end": 51800,
                    "value": "#972: 2047 >> 30 === 0. Actual: ",
                    "raw": "'#972: 2047 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51803,
                    "end": 51815,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51804,
                      "end": 51814,
                      "left": {
                        "type": "Literal",
                        "start": 51804,
                        "end": 51808,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51812,
                        "end": 51814,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51824,
      "end": 51928,
      "test": {
        "type": "BinaryExpression",
        "start": 51828,
        "end": 51844,
        "left": {
          "type": "BinaryExpression",
          "start": 51828,
          "end": 51838,
          "left": {
            "type": "Literal",
            "start": 51828,
            "end": 51832,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51836,
            "end": 51838,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51843,
          "end": 51844,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51846,
        "end": 51928,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51851,
            "end": 51925,
            "argument": {
              "type": "NewExpression",
              "start": 51857,
              "end": 51924,
              "callee": {
                "type": "Identifier",
                "start": 51861,
                "end": 51873,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51874,
                  "end": 51923,
                  "left": {
                    "type": "Literal",
                    "start": 51874,
                    "end": 51908,
                    "value": "#973: 4095 >> 30 === 0. Actual: ",
                    "raw": "'#973: 4095 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 51911,
                    "end": 51923,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 51912,
                      "end": 51922,
                      "left": {
                        "type": "Literal",
                        "start": 51912,
                        "end": 51916,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 51920,
                        "end": 51922,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 51932,
      "end": 52036,
      "test": {
        "type": "BinaryExpression",
        "start": 51936,
        "end": 51952,
        "left": {
          "type": "BinaryExpression",
          "start": 51936,
          "end": 51946,
          "left": {
            "type": "Literal",
            "start": 51936,
            "end": 51940,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 51944,
            "end": 51946,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 51951,
          "end": 51952,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 51954,
        "end": 52036,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 51959,
            "end": 52033,
            "argument": {
              "type": "NewExpression",
              "start": 51965,
              "end": 52032,
              "callee": {
                "type": "Identifier",
                "start": 51969,
                "end": 51981,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 51982,
                  "end": 52031,
                  "left": {
                    "type": "Literal",
                    "start": 51982,
                    "end": 52016,
                    "value": "#974: 8191 >> 30 === 0. Actual: ",
                    "raw": "'#974: 8191 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52019,
                    "end": 52031,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52020,
                      "end": 52030,
                      "left": {
                        "type": "Literal",
                        "start": 52020,
                        "end": 52024,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52028,
                        "end": 52030,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52040,
      "end": 52147,
      "test": {
        "type": "BinaryExpression",
        "start": 52044,
        "end": 52061,
        "left": {
          "type": "BinaryExpression",
          "start": 52044,
          "end": 52055,
          "left": {
            "type": "Literal",
            "start": 52044,
            "end": 52049,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52053,
            "end": 52055,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52060,
          "end": 52061,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52063,
        "end": 52147,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52068,
            "end": 52144,
            "argument": {
              "type": "NewExpression",
              "start": 52074,
              "end": 52143,
              "callee": {
                "type": "Identifier",
                "start": 52078,
                "end": 52090,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52091,
                  "end": 52142,
                  "left": {
                    "type": "Literal",
                    "start": 52091,
                    "end": 52126,
                    "value": "#975: 16383 >> 30 === 0. Actual: ",
                    "raw": "'#975: 16383 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52129,
                    "end": 52142,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52130,
                      "end": 52141,
                      "left": {
                        "type": "Literal",
                        "start": 52130,
                        "end": 52135,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52139,
                        "end": 52141,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52151,
      "end": 52258,
      "test": {
        "type": "BinaryExpression",
        "start": 52155,
        "end": 52172,
        "left": {
          "type": "BinaryExpression",
          "start": 52155,
          "end": 52166,
          "left": {
            "type": "Literal",
            "start": 52155,
            "end": 52160,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52164,
            "end": 52166,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52171,
          "end": 52172,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52174,
        "end": 52258,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52179,
            "end": 52255,
            "argument": {
              "type": "NewExpression",
              "start": 52185,
              "end": 52254,
              "callee": {
                "type": "Identifier",
                "start": 52189,
                "end": 52201,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52202,
                  "end": 52253,
                  "left": {
                    "type": "Literal",
                    "start": 52202,
                    "end": 52237,
                    "value": "#976: 32767 >> 30 === 0. Actual: ",
                    "raw": "'#976: 32767 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52240,
                    "end": 52253,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52241,
                      "end": 52252,
                      "left": {
                        "type": "Literal",
                        "start": 52241,
                        "end": 52246,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52250,
                        "end": 52252,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52262,
      "end": 52369,
      "test": {
        "type": "BinaryExpression",
        "start": 52266,
        "end": 52283,
        "left": {
          "type": "BinaryExpression",
          "start": 52266,
          "end": 52277,
          "left": {
            "type": "Literal",
            "start": 52266,
            "end": 52271,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52275,
            "end": 52277,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52282,
          "end": 52283,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52285,
        "end": 52369,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52290,
            "end": 52366,
            "argument": {
              "type": "NewExpression",
              "start": 52296,
              "end": 52365,
              "callee": {
                "type": "Identifier",
                "start": 52300,
                "end": 52312,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52313,
                  "end": 52364,
                  "left": {
                    "type": "Literal",
                    "start": 52313,
                    "end": 52348,
                    "value": "#977: 65535 >> 30 === 0. Actual: ",
                    "raw": "'#977: 65535 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52351,
                    "end": 52364,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52352,
                      "end": 52363,
                      "left": {
                        "type": "Literal",
                        "start": 52352,
                        "end": 52357,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52361,
                        "end": 52363,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52373,
      "end": 52483,
      "test": {
        "type": "BinaryExpression",
        "start": 52377,
        "end": 52395,
        "left": {
          "type": "BinaryExpression",
          "start": 52377,
          "end": 52389,
          "left": {
            "type": "Literal",
            "start": 52377,
            "end": 52383,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52387,
            "end": 52389,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52394,
          "end": 52395,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52397,
        "end": 52483,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52402,
            "end": 52480,
            "argument": {
              "type": "NewExpression",
              "start": 52408,
              "end": 52479,
              "callee": {
                "type": "Identifier",
                "start": 52412,
                "end": 52424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52425,
                  "end": 52478,
                  "left": {
                    "type": "Literal",
                    "start": 52425,
                    "end": 52461,
                    "value": "#978: 131071 >> 30 === 0. Actual: ",
                    "raw": "'#978: 131071 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52464,
                    "end": 52478,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52465,
                      "end": 52477,
                      "left": {
                        "type": "Literal",
                        "start": 52465,
                        "end": 52471,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52475,
                        "end": 52477,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52487,
      "end": 52597,
      "test": {
        "type": "BinaryExpression",
        "start": 52491,
        "end": 52509,
        "left": {
          "type": "BinaryExpression",
          "start": 52491,
          "end": 52503,
          "left": {
            "type": "Literal",
            "start": 52491,
            "end": 52497,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52501,
            "end": 52503,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52508,
          "end": 52509,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52511,
        "end": 52597,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52516,
            "end": 52594,
            "argument": {
              "type": "NewExpression",
              "start": 52522,
              "end": 52593,
              "callee": {
                "type": "Identifier",
                "start": 52526,
                "end": 52538,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52539,
                  "end": 52592,
                  "left": {
                    "type": "Literal",
                    "start": 52539,
                    "end": 52575,
                    "value": "#979: 262143 >> 30 === 0. Actual: ",
                    "raw": "'#979: 262143 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52578,
                    "end": 52592,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52579,
                      "end": 52591,
                      "left": {
                        "type": "Literal",
                        "start": 52579,
                        "end": 52585,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52589,
                        "end": 52591,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52601,
      "end": 52711,
      "test": {
        "type": "BinaryExpression",
        "start": 52605,
        "end": 52623,
        "left": {
          "type": "BinaryExpression",
          "start": 52605,
          "end": 52617,
          "left": {
            "type": "Literal",
            "start": 52605,
            "end": 52611,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52615,
            "end": 52617,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52622,
          "end": 52623,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52625,
        "end": 52711,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52630,
            "end": 52708,
            "argument": {
              "type": "NewExpression",
              "start": 52636,
              "end": 52707,
              "callee": {
                "type": "Identifier",
                "start": 52640,
                "end": 52652,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52653,
                  "end": 52706,
                  "left": {
                    "type": "Literal",
                    "start": 52653,
                    "end": 52689,
                    "value": "#980: 524287 >> 30 === 0. Actual: ",
                    "raw": "'#980: 524287 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52692,
                    "end": 52706,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52693,
                      "end": 52705,
                      "left": {
                        "type": "Literal",
                        "start": 52693,
                        "end": 52699,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52703,
                        "end": 52705,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52715,
      "end": 52828,
      "test": {
        "type": "BinaryExpression",
        "start": 52719,
        "end": 52738,
        "left": {
          "type": "BinaryExpression",
          "start": 52719,
          "end": 52732,
          "left": {
            "type": "Literal",
            "start": 52719,
            "end": 52726,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52730,
            "end": 52732,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52737,
          "end": 52738,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52740,
        "end": 52828,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52745,
            "end": 52825,
            "argument": {
              "type": "NewExpression",
              "start": 52751,
              "end": 52824,
              "callee": {
                "type": "Identifier",
                "start": 52755,
                "end": 52767,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52768,
                  "end": 52823,
                  "left": {
                    "type": "Literal",
                    "start": 52768,
                    "end": 52805,
                    "value": "#981: 1048575 >> 30 === 0. Actual: ",
                    "raw": "'#981: 1048575 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52808,
                    "end": 52823,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52809,
                      "end": 52822,
                      "left": {
                        "type": "Literal",
                        "start": 52809,
                        "end": 52816,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52820,
                        "end": 52822,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52832,
      "end": 52945,
      "test": {
        "type": "BinaryExpression",
        "start": 52836,
        "end": 52855,
        "left": {
          "type": "BinaryExpression",
          "start": 52836,
          "end": 52849,
          "left": {
            "type": "Literal",
            "start": 52836,
            "end": 52843,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52847,
            "end": 52849,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52854,
          "end": 52855,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52857,
        "end": 52945,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52862,
            "end": 52942,
            "argument": {
              "type": "NewExpression",
              "start": 52868,
              "end": 52941,
              "callee": {
                "type": "Identifier",
                "start": 52872,
                "end": 52884,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 52885,
                  "end": 52940,
                  "left": {
                    "type": "Literal",
                    "start": 52885,
                    "end": 52922,
                    "value": "#982: 2097151 >> 30 === 0. Actual: ",
                    "raw": "'#982: 2097151 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 52925,
                    "end": 52940,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 52926,
                      "end": 52939,
                      "left": {
                        "type": "Literal",
                        "start": 52926,
                        "end": 52933,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 52937,
                        "end": 52939,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 52949,
      "end": 53062,
      "test": {
        "type": "BinaryExpression",
        "start": 52953,
        "end": 52972,
        "left": {
          "type": "BinaryExpression",
          "start": 52953,
          "end": 52966,
          "left": {
            "type": "Literal",
            "start": 52953,
            "end": 52960,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 52964,
            "end": 52966,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 52971,
          "end": 52972,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 52974,
        "end": 53062,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 52979,
            "end": 53059,
            "argument": {
              "type": "NewExpression",
              "start": 52985,
              "end": 53058,
              "callee": {
                "type": "Identifier",
                "start": 52989,
                "end": 53001,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53002,
                  "end": 53057,
                  "left": {
                    "type": "Literal",
                    "start": 53002,
                    "end": 53039,
                    "value": "#983: 4194303 >> 30 === 0. Actual: ",
                    "raw": "'#983: 4194303 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53042,
                    "end": 53057,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53043,
                      "end": 53056,
                      "left": {
                        "type": "Literal",
                        "start": 53043,
                        "end": 53050,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53054,
                        "end": 53056,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53066,
      "end": 53179,
      "test": {
        "type": "BinaryExpression",
        "start": 53070,
        "end": 53089,
        "left": {
          "type": "BinaryExpression",
          "start": 53070,
          "end": 53083,
          "left": {
            "type": "Literal",
            "start": 53070,
            "end": 53077,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53081,
            "end": 53083,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53088,
          "end": 53089,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53091,
        "end": 53179,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53096,
            "end": 53176,
            "argument": {
              "type": "NewExpression",
              "start": 53102,
              "end": 53175,
              "callee": {
                "type": "Identifier",
                "start": 53106,
                "end": 53118,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53119,
                  "end": 53174,
                  "left": {
                    "type": "Literal",
                    "start": 53119,
                    "end": 53156,
                    "value": "#984: 8388607 >> 30 === 0. Actual: ",
                    "raw": "'#984: 8388607 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53159,
                    "end": 53174,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53160,
                      "end": 53173,
                      "left": {
                        "type": "Literal",
                        "start": 53160,
                        "end": 53167,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53171,
                        "end": 53173,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53183,
      "end": 53299,
      "test": {
        "type": "BinaryExpression",
        "start": 53187,
        "end": 53207,
        "left": {
          "type": "BinaryExpression",
          "start": 53187,
          "end": 53201,
          "left": {
            "type": "Literal",
            "start": 53187,
            "end": 53195,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53199,
            "end": 53201,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53206,
          "end": 53207,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53209,
        "end": 53299,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53214,
            "end": 53296,
            "argument": {
              "type": "NewExpression",
              "start": 53220,
              "end": 53295,
              "callee": {
                "type": "Identifier",
                "start": 53224,
                "end": 53236,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53237,
                  "end": 53294,
                  "left": {
                    "type": "Literal",
                    "start": 53237,
                    "end": 53275,
                    "value": "#985: 16777215 >> 30 === 0. Actual: ",
                    "raw": "'#985: 16777215 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53278,
                    "end": 53294,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53279,
                      "end": 53293,
                      "left": {
                        "type": "Literal",
                        "start": 53279,
                        "end": 53287,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53291,
                        "end": 53293,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53303,
      "end": 53419,
      "test": {
        "type": "BinaryExpression",
        "start": 53307,
        "end": 53327,
        "left": {
          "type": "BinaryExpression",
          "start": 53307,
          "end": 53321,
          "left": {
            "type": "Literal",
            "start": 53307,
            "end": 53315,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53319,
            "end": 53321,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53326,
          "end": 53327,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53329,
        "end": 53419,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53334,
            "end": 53416,
            "argument": {
              "type": "NewExpression",
              "start": 53340,
              "end": 53415,
              "callee": {
                "type": "Identifier",
                "start": 53344,
                "end": 53356,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53357,
                  "end": 53414,
                  "left": {
                    "type": "Literal",
                    "start": 53357,
                    "end": 53395,
                    "value": "#986: 33554431 >> 30 === 0. Actual: ",
                    "raw": "'#986: 33554431 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53398,
                    "end": 53414,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53399,
                      "end": 53413,
                      "left": {
                        "type": "Literal",
                        "start": 53399,
                        "end": 53407,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53411,
                        "end": 53413,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53423,
      "end": 53539,
      "test": {
        "type": "BinaryExpression",
        "start": 53427,
        "end": 53447,
        "left": {
          "type": "BinaryExpression",
          "start": 53427,
          "end": 53441,
          "left": {
            "type": "Literal",
            "start": 53427,
            "end": 53435,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53439,
            "end": 53441,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53446,
          "end": 53447,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53449,
        "end": 53539,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53454,
            "end": 53536,
            "argument": {
              "type": "NewExpression",
              "start": 53460,
              "end": 53535,
              "callee": {
                "type": "Identifier",
                "start": 53464,
                "end": 53476,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53477,
                  "end": 53534,
                  "left": {
                    "type": "Literal",
                    "start": 53477,
                    "end": 53515,
                    "value": "#987: 67108863 >> 30 === 0. Actual: ",
                    "raw": "'#987: 67108863 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53518,
                    "end": 53534,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53519,
                      "end": 53533,
                      "left": {
                        "type": "Literal",
                        "start": 53519,
                        "end": 53527,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53531,
                        "end": 53533,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53543,
      "end": 53662,
      "test": {
        "type": "BinaryExpression",
        "start": 53547,
        "end": 53568,
        "left": {
          "type": "BinaryExpression",
          "start": 53547,
          "end": 53562,
          "left": {
            "type": "Literal",
            "start": 53547,
            "end": 53556,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53560,
            "end": 53562,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53567,
          "end": 53568,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53570,
        "end": 53662,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53575,
            "end": 53659,
            "argument": {
              "type": "NewExpression",
              "start": 53581,
              "end": 53658,
              "callee": {
                "type": "Identifier",
                "start": 53585,
                "end": 53597,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53598,
                  "end": 53657,
                  "left": {
                    "type": "Literal",
                    "start": 53598,
                    "end": 53637,
                    "value": "#988: 134217727 >> 30 === 0. Actual: ",
                    "raw": "'#988: 134217727 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53640,
                    "end": 53657,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53641,
                      "end": 53656,
                      "left": {
                        "type": "Literal",
                        "start": 53641,
                        "end": 53650,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53654,
                        "end": 53656,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53666,
      "end": 53785,
      "test": {
        "type": "BinaryExpression",
        "start": 53670,
        "end": 53691,
        "left": {
          "type": "BinaryExpression",
          "start": 53670,
          "end": 53685,
          "left": {
            "type": "Literal",
            "start": 53670,
            "end": 53679,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53683,
            "end": 53685,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53690,
          "end": 53691,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53693,
        "end": 53785,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53698,
            "end": 53782,
            "argument": {
              "type": "NewExpression",
              "start": 53704,
              "end": 53781,
              "callee": {
                "type": "Identifier",
                "start": 53708,
                "end": 53720,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53721,
                  "end": 53780,
                  "left": {
                    "type": "Literal",
                    "start": 53721,
                    "end": 53760,
                    "value": "#989: 268435455 >> 30 === 0. Actual: ",
                    "raw": "'#989: 268435455 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53763,
                    "end": 53780,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53764,
                      "end": 53779,
                      "left": {
                        "type": "Literal",
                        "start": 53764,
                        "end": 53773,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53777,
                        "end": 53779,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53789,
      "end": 53908,
      "test": {
        "type": "BinaryExpression",
        "start": 53793,
        "end": 53814,
        "left": {
          "type": "BinaryExpression",
          "start": 53793,
          "end": 53808,
          "left": {
            "type": "Literal",
            "start": 53793,
            "end": 53802,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53806,
            "end": 53808,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53813,
          "end": 53814,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53816,
        "end": 53908,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53821,
            "end": 53905,
            "argument": {
              "type": "NewExpression",
              "start": 53827,
              "end": 53904,
              "callee": {
                "type": "Identifier",
                "start": 53831,
                "end": 53843,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53844,
                  "end": 53903,
                  "left": {
                    "type": "Literal",
                    "start": 53844,
                    "end": 53883,
                    "value": "#990: 536870911 >> 30 === 0. Actual: ",
                    "raw": "'#990: 536870911 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 53886,
                    "end": 53903,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 53887,
                      "end": 53902,
                      "left": {
                        "type": "Literal",
                        "start": 53887,
                        "end": 53896,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 53900,
                        "end": 53902,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 53912,
      "end": 54034,
      "test": {
        "type": "BinaryExpression",
        "start": 53916,
        "end": 53938,
        "left": {
          "type": "BinaryExpression",
          "start": 53916,
          "end": 53932,
          "left": {
            "type": "Literal",
            "start": 53916,
            "end": 53926,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 53930,
            "end": 53932,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 53937,
          "end": 53938,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 53940,
        "end": 54034,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 53945,
            "end": 54031,
            "argument": {
              "type": "NewExpression",
              "start": 53951,
              "end": 54030,
              "callee": {
                "type": "Identifier",
                "start": 53955,
                "end": 53967,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 53968,
                  "end": 54029,
                  "left": {
                    "type": "Literal",
                    "start": 53968,
                    "end": 54008,
                    "value": "#991: 1073741823 >> 30 === 0. Actual: ",
                    "raw": "'#991: 1073741823 >> 30 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54011,
                    "end": 54029,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54012,
                      "end": 54028,
                      "left": {
                        "type": "Literal",
                        "start": 54012,
                        "end": 54022,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54026,
                        "end": 54028,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54038,
      "end": 54160,
      "test": {
        "type": "BinaryExpression",
        "start": 54042,
        "end": 54064,
        "left": {
          "type": "BinaryExpression",
          "start": 54042,
          "end": 54058,
          "left": {
            "type": "Literal",
            "start": 54042,
            "end": 54052,
            "value": 2147483647,
            "raw": "2147483647",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54056,
            "end": 54058,
            "value": 30,
            "raw": "30",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54063,
          "end": 54064,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54066,
        "end": 54160,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54071,
            "end": 54157,
            "argument": {
              "type": "NewExpression",
              "start": 54077,
              "end": 54156,
              "callee": {
                "type": "Identifier",
                "start": 54081,
                "end": 54093,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54094,
                  "end": 54155,
                  "left": {
                    "type": "Literal",
                    "start": 54094,
                    "end": 54134,
                    "value": "#992: 2147483647 >> 30 === 1. Actual: ",
                    "raw": "'#992: 2147483647 >> 30 === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54137,
                    "end": 54155,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54138,
                      "end": 54154,
                      "left": {
                        "type": "Literal",
                        "start": 54138,
                        "end": 54148,
                        "value": 2147483647,
                        "raw": "2147483647",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54152,
                        "end": 54154,
                        "value": 30,
                        "raw": "30",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54164,
      "end": 54259,
      "test": {
        "type": "BinaryExpression",
        "start": 54168,
        "end": 54181,
        "left": {
          "type": "BinaryExpression",
          "start": 54168,
          "end": 54175,
          "left": {
            "type": "Literal",
            "start": 54168,
            "end": 54169,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54173,
            "end": 54175,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54180,
          "end": 54181,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54183,
        "end": 54259,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54188,
            "end": 54256,
            "argument": {
              "type": "NewExpression",
              "start": 54194,
              "end": 54255,
              "callee": {
                "type": "Identifier",
                "start": 54198,
                "end": 54210,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54211,
                  "end": 54254,
                  "left": {
                    "type": "Literal",
                    "start": 54211,
                    "end": 54242,
                    "value": "#993: 0 >> 31 === 0. Actual: ",
                    "raw": "'#993: 0 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54245,
                    "end": 54254,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54246,
                      "end": 54253,
                      "left": {
                        "type": "Literal",
                        "start": 54246,
                        "end": 54247,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54251,
                        "end": 54253,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54263,
      "end": 54358,
      "test": {
        "type": "BinaryExpression",
        "start": 54267,
        "end": 54280,
        "left": {
          "type": "BinaryExpression",
          "start": 54267,
          "end": 54274,
          "left": {
            "type": "Literal",
            "start": 54267,
            "end": 54268,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54272,
            "end": 54274,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54279,
          "end": 54280,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54282,
        "end": 54358,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54287,
            "end": 54355,
            "argument": {
              "type": "NewExpression",
              "start": 54293,
              "end": 54354,
              "callee": {
                "type": "Identifier",
                "start": 54297,
                "end": 54309,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54310,
                  "end": 54353,
                  "left": {
                    "type": "Literal",
                    "start": 54310,
                    "end": 54341,
                    "value": "#994: 1 >> 31 === 0. Actual: ",
                    "raw": "'#994: 1 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54344,
                    "end": 54353,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54345,
                      "end": 54352,
                      "left": {
                        "type": "Literal",
                        "start": 54345,
                        "end": 54346,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54350,
                        "end": 54352,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54362,
      "end": 54457,
      "test": {
        "type": "BinaryExpression",
        "start": 54366,
        "end": 54379,
        "left": {
          "type": "BinaryExpression",
          "start": 54366,
          "end": 54373,
          "left": {
            "type": "Literal",
            "start": 54366,
            "end": 54367,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54371,
            "end": 54373,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54378,
          "end": 54379,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54381,
        "end": 54457,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54386,
            "end": 54454,
            "argument": {
              "type": "NewExpression",
              "start": 54392,
              "end": 54453,
              "callee": {
                "type": "Identifier",
                "start": 54396,
                "end": 54408,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54409,
                  "end": 54452,
                  "left": {
                    "type": "Literal",
                    "start": 54409,
                    "end": 54440,
                    "value": "#995: 3 >> 31 === 0. Actual: ",
                    "raw": "'#995: 3 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54443,
                    "end": 54452,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54444,
                      "end": 54451,
                      "left": {
                        "type": "Literal",
                        "start": 54444,
                        "end": 54445,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54449,
                        "end": 54451,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54461,
      "end": 54556,
      "test": {
        "type": "BinaryExpression",
        "start": 54465,
        "end": 54478,
        "left": {
          "type": "BinaryExpression",
          "start": 54465,
          "end": 54472,
          "left": {
            "type": "Literal",
            "start": 54465,
            "end": 54466,
            "value": 7,
            "raw": "7",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54470,
            "end": 54472,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54477,
          "end": 54478,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54480,
        "end": 54556,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54485,
            "end": 54553,
            "argument": {
              "type": "NewExpression",
              "start": 54491,
              "end": 54552,
              "callee": {
                "type": "Identifier",
                "start": 54495,
                "end": 54507,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54508,
                  "end": 54551,
                  "left": {
                    "type": "Literal",
                    "start": 54508,
                    "end": 54539,
                    "value": "#996: 7 >> 31 === 0. Actual: ",
                    "raw": "'#996: 7 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54542,
                    "end": 54551,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54543,
                      "end": 54550,
                      "left": {
                        "type": "Literal",
                        "start": 54543,
                        "end": 54544,
                        "value": 7,
                        "raw": "7",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54548,
                        "end": 54550,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54560,
      "end": 54658,
      "test": {
        "type": "BinaryExpression",
        "start": 54564,
        "end": 54578,
        "left": {
          "type": "BinaryExpression",
          "start": 54564,
          "end": 54572,
          "left": {
            "type": "Literal",
            "start": 54564,
            "end": 54566,
            "value": 15,
            "raw": "15",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54570,
            "end": 54572,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54577,
          "end": 54578,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54580,
        "end": 54658,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54585,
            "end": 54655,
            "argument": {
              "type": "NewExpression",
              "start": 54591,
              "end": 54654,
              "callee": {
                "type": "Identifier",
                "start": 54595,
                "end": 54607,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54608,
                  "end": 54653,
                  "left": {
                    "type": "Literal",
                    "start": 54608,
                    "end": 54640,
                    "value": "#997: 15 >> 31 === 0. Actual: ",
                    "raw": "'#997: 15 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54643,
                    "end": 54653,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54644,
                      "end": 54652,
                      "left": {
                        "type": "Literal",
                        "start": 54644,
                        "end": 54646,
                        "value": 15,
                        "raw": "15",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54650,
                        "end": 54652,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54662,
      "end": 54760,
      "test": {
        "type": "BinaryExpression",
        "start": 54666,
        "end": 54680,
        "left": {
          "type": "BinaryExpression",
          "start": 54666,
          "end": 54674,
          "left": {
            "type": "Literal",
            "start": 54666,
            "end": 54668,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54672,
            "end": 54674,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54679,
          "end": 54680,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54682,
        "end": 54760,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54687,
            "end": 54757,
            "argument": {
              "type": "NewExpression",
              "start": 54693,
              "end": 54756,
              "callee": {
                "type": "Identifier",
                "start": 54697,
                "end": 54709,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54710,
                  "end": 54755,
                  "left": {
                    "type": "Literal",
                    "start": 54710,
                    "end": 54742,
                    "value": "#998: 31 >> 31 === 0. Actual: ",
                    "raw": "'#998: 31 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54745,
                    "end": 54755,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54746,
                      "end": 54754,
                      "left": {
                        "type": "Literal",
                        "start": 54746,
                        "end": 54748,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54752,
                        "end": 54754,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54764,
      "end": 54862,
      "test": {
        "type": "BinaryExpression",
        "start": 54768,
        "end": 54782,
        "left": {
          "type": "BinaryExpression",
          "start": 54768,
          "end": 54776,
          "left": {
            "type": "Literal",
            "start": 54768,
            "end": 54770,
            "value": 63,
            "raw": "63",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54774,
            "end": 54776,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54781,
          "end": 54782,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54784,
        "end": 54862,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54789,
            "end": 54859,
            "argument": {
              "type": "NewExpression",
              "start": 54795,
              "end": 54858,
              "callee": {
                "type": "Identifier",
                "start": 54799,
                "end": 54811,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54812,
                  "end": 54857,
                  "left": {
                    "type": "Literal",
                    "start": 54812,
                    "end": 54844,
                    "value": "#999: 63 >> 31 === 0. Actual: ",
                    "raw": "'#999: 63 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54847,
                    "end": 54857,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54848,
                      "end": 54856,
                      "left": {
                        "type": "Literal",
                        "start": 54848,
                        "end": 54850,
                        "value": 63,
                        "raw": "63",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54854,
                        "end": 54856,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54866,
      "end": 54968,
      "test": {
        "type": "BinaryExpression",
        "start": 54870,
        "end": 54885,
        "left": {
          "type": "BinaryExpression",
          "start": 54870,
          "end": 54879,
          "left": {
            "type": "Literal",
            "start": 54870,
            "end": 54873,
            "value": 127,
            "raw": "127",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54877,
            "end": 54879,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54884,
          "end": 54885,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54887,
        "end": 54968,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54892,
            "end": 54965,
            "argument": {
              "type": "NewExpression",
              "start": 54898,
              "end": 54964,
              "callee": {
                "type": "Identifier",
                "start": 54902,
                "end": 54914,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 54915,
                  "end": 54963,
                  "left": {
                    "type": "Literal",
                    "start": 54915,
                    "end": 54949,
                    "value": "#1000: 127 >> 31 === 0. Actual: ",
                    "raw": "'#1000: 127 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 54952,
                    "end": 54963,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 54953,
                      "end": 54962,
                      "left": {
                        "type": "Literal",
                        "start": 54953,
                        "end": 54956,
                        "value": 127,
                        "raw": "127",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 54960,
                        "end": 54962,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 54972,
      "end": 55074,
      "test": {
        "type": "BinaryExpression",
        "start": 54976,
        "end": 54991,
        "left": {
          "type": "BinaryExpression",
          "start": 54976,
          "end": 54985,
          "left": {
            "type": "Literal",
            "start": 54976,
            "end": 54979,
            "value": 255,
            "raw": "255",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 54983,
            "end": 54985,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 54990,
          "end": 54991,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 54993,
        "end": 55074,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 54998,
            "end": 55071,
            "argument": {
              "type": "NewExpression",
              "start": 55004,
              "end": 55070,
              "callee": {
                "type": "Identifier",
                "start": 55008,
                "end": 55020,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55021,
                  "end": 55069,
                  "left": {
                    "type": "Literal",
                    "start": 55021,
                    "end": 55055,
                    "value": "#1001: 255 >> 31 === 0. Actual: ",
                    "raw": "'#1001: 255 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55058,
                    "end": 55069,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55059,
                      "end": 55068,
                      "left": {
                        "type": "Literal",
                        "start": 55059,
                        "end": 55062,
                        "value": 255,
                        "raw": "255",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55066,
                        "end": 55068,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55078,
      "end": 55180,
      "test": {
        "type": "BinaryExpression",
        "start": 55082,
        "end": 55097,
        "left": {
          "type": "BinaryExpression",
          "start": 55082,
          "end": 55091,
          "left": {
            "type": "Literal",
            "start": 55082,
            "end": 55085,
            "value": 511,
            "raw": "511",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55089,
            "end": 55091,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55096,
          "end": 55097,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55099,
        "end": 55180,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55104,
            "end": 55177,
            "argument": {
              "type": "NewExpression",
              "start": 55110,
              "end": 55176,
              "callee": {
                "type": "Identifier",
                "start": 55114,
                "end": 55126,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55127,
                  "end": 55175,
                  "left": {
                    "type": "Literal",
                    "start": 55127,
                    "end": 55161,
                    "value": "#1002: 511 >> 31 === 0. Actual: ",
                    "raw": "'#1002: 511 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55164,
                    "end": 55175,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55165,
                      "end": 55174,
                      "left": {
                        "type": "Literal",
                        "start": 55165,
                        "end": 55168,
                        "value": 511,
                        "raw": "511",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55172,
                        "end": 55174,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55184,
      "end": 55289,
      "test": {
        "type": "BinaryExpression",
        "start": 55188,
        "end": 55204,
        "left": {
          "type": "BinaryExpression",
          "start": 55188,
          "end": 55198,
          "left": {
            "type": "Literal",
            "start": 55188,
            "end": 55192,
            "value": 1023,
            "raw": "1023",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55196,
            "end": 55198,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55203,
          "end": 55204,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55206,
        "end": 55289,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55211,
            "end": 55286,
            "argument": {
              "type": "NewExpression",
              "start": 55217,
              "end": 55285,
              "callee": {
                "type": "Identifier",
                "start": 55221,
                "end": 55233,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55234,
                  "end": 55284,
                  "left": {
                    "type": "Literal",
                    "start": 55234,
                    "end": 55269,
                    "value": "#1003: 1023 >> 31 === 0. Actual: ",
                    "raw": "'#1003: 1023 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55272,
                    "end": 55284,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55273,
                      "end": 55283,
                      "left": {
                        "type": "Literal",
                        "start": 55273,
                        "end": 55277,
                        "value": 1023,
                        "raw": "1023",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55281,
                        "end": 55283,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55293,
      "end": 55398,
      "test": {
        "type": "BinaryExpression",
        "start": 55297,
        "end": 55313,
        "left": {
          "type": "BinaryExpression",
          "start": 55297,
          "end": 55307,
          "left": {
            "type": "Literal",
            "start": 55297,
            "end": 55301,
            "value": 2047,
            "raw": "2047",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55305,
            "end": 55307,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55312,
          "end": 55313,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55315,
        "end": 55398,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55320,
            "end": 55395,
            "argument": {
              "type": "NewExpression",
              "start": 55326,
              "end": 55394,
              "callee": {
                "type": "Identifier",
                "start": 55330,
                "end": 55342,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55343,
                  "end": 55393,
                  "left": {
                    "type": "Literal",
                    "start": 55343,
                    "end": 55378,
                    "value": "#1004: 2047 >> 31 === 0. Actual: ",
                    "raw": "'#1004: 2047 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55381,
                    "end": 55393,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55382,
                      "end": 55392,
                      "left": {
                        "type": "Literal",
                        "start": 55382,
                        "end": 55386,
                        "value": 2047,
                        "raw": "2047",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55390,
                        "end": 55392,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55402,
      "end": 55507,
      "test": {
        "type": "BinaryExpression",
        "start": 55406,
        "end": 55422,
        "left": {
          "type": "BinaryExpression",
          "start": 55406,
          "end": 55416,
          "left": {
            "type": "Literal",
            "start": 55406,
            "end": 55410,
            "value": 4095,
            "raw": "4095",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55414,
            "end": 55416,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55421,
          "end": 55422,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55424,
        "end": 55507,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55429,
            "end": 55504,
            "argument": {
              "type": "NewExpression",
              "start": 55435,
              "end": 55503,
              "callee": {
                "type": "Identifier",
                "start": 55439,
                "end": 55451,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55452,
                  "end": 55502,
                  "left": {
                    "type": "Literal",
                    "start": 55452,
                    "end": 55487,
                    "value": "#1005: 4095 >> 31 === 0. Actual: ",
                    "raw": "'#1005: 4095 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55490,
                    "end": 55502,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55491,
                      "end": 55501,
                      "left": {
                        "type": "Literal",
                        "start": 55491,
                        "end": 55495,
                        "value": 4095,
                        "raw": "4095",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55499,
                        "end": 55501,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55511,
      "end": 55616,
      "test": {
        "type": "BinaryExpression",
        "start": 55515,
        "end": 55531,
        "left": {
          "type": "BinaryExpression",
          "start": 55515,
          "end": 55525,
          "left": {
            "type": "Literal",
            "start": 55515,
            "end": 55519,
            "value": 8191,
            "raw": "8191",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55523,
            "end": 55525,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55530,
          "end": 55531,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55533,
        "end": 55616,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55538,
            "end": 55613,
            "argument": {
              "type": "NewExpression",
              "start": 55544,
              "end": 55612,
              "callee": {
                "type": "Identifier",
                "start": 55548,
                "end": 55560,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55561,
                  "end": 55611,
                  "left": {
                    "type": "Literal",
                    "start": 55561,
                    "end": 55596,
                    "value": "#1006: 8191 >> 31 === 0. Actual: ",
                    "raw": "'#1006: 8191 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55599,
                    "end": 55611,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55600,
                      "end": 55610,
                      "left": {
                        "type": "Literal",
                        "start": 55600,
                        "end": 55604,
                        "value": 8191,
                        "raw": "8191",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55608,
                        "end": 55610,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55620,
      "end": 55728,
      "test": {
        "type": "BinaryExpression",
        "start": 55624,
        "end": 55641,
        "left": {
          "type": "BinaryExpression",
          "start": 55624,
          "end": 55635,
          "left": {
            "type": "Literal",
            "start": 55624,
            "end": 55629,
            "value": 16383,
            "raw": "16383",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55633,
            "end": 55635,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55640,
          "end": 55641,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55643,
        "end": 55728,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55648,
            "end": 55725,
            "argument": {
              "type": "NewExpression",
              "start": 55654,
              "end": 55724,
              "callee": {
                "type": "Identifier",
                "start": 55658,
                "end": 55670,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55671,
                  "end": 55723,
                  "left": {
                    "type": "Literal",
                    "start": 55671,
                    "end": 55707,
                    "value": "#1007: 16383 >> 31 === 0. Actual: ",
                    "raw": "'#1007: 16383 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55710,
                    "end": 55723,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55711,
                      "end": 55722,
                      "left": {
                        "type": "Literal",
                        "start": 55711,
                        "end": 55716,
                        "value": 16383,
                        "raw": "16383",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55720,
                        "end": 55722,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55732,
      "end": 55840,
      "test": {
        "type": "BinaryExpression",
        "start": 55736,
        "end": 55753,
        "left": {
          "type": "BinaryExpression",
          "start": 55736,
          "end": 55747,
          "left": {
            "type": "Literal",
            "start": 55736,
            "end": 55741,
            "value": 32767,
            "raw": "32767",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55745,
            "end": 55747,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55752,
          "end": 55753,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55755,
        "end": 55840,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55760,
            "end": 55837,
            "argument": {
              "type": "NewExpression",
              "start": 55766,
              "end": 55836,
              "callee": {
                "type": "Identifier",
                "start": 55770,
                "end": 55782,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55783,
                  "end": 55835,
                  "left": {
                    "type": "Literal",
                    "start": 55783,
                    "end": 55819,
                    "value": "#1008: 32767 >> 31 === 0. Actual: ",
                    "raw": "'#1008: 32767 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55822,
                    "end": 55835,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55823,
                      "end": 55834,
                      "left": {
                        "type": "Literal",
                        "start": 55823,
                        "end": 55828,
                        "value": 32767,
                        "raw": "32767",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55832,
                        "end": 55834,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55844,
      "end": 55952,
      "test": {
        "type": "BinaryExpression",
        "start": 55848,
        "end": 55865,
        "left": {
          "type": "BinaryExpression",
          "start": 55848,
          "end": 55859,
          "left": {
            "type": "Literal",
            "start": 55848,
            "end": 55853,
            "value": 65535,
            "raw": "65535",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55857,
            "end": 55859,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55864,
          "end": 55865,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55867,
        "end": 55952,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55872,
            "end": 55949,
            "argument": {
              "type": "NewExpression",
              "start": 55878,
              "end": 55948,
              "callee": {
                "type": "Identifier",
                "start": 55882,
                "end": 55894,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 55895,
                  "end": 55947,
                  "left": {
                    "type": "Literal",
                    "start": 55895,
                    "end": 55931,
                    "value": "#1009: 65535 >> 31 === 0. Actual: ",
                    "raw": "'#1009: 65535 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 55934,
                    "end": 55947,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 55935,
                      "end": 55946,
                      "left": {
                        "type": "Literal",
                        "start": 55935,
                        "end": 55940,
                        "value": 65535,
                        "raw": "65535",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 55944,
                        "end": 55946,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 55956,
      "end": 56067,
      "test": {
        "type": "BinaryExpression",
        "start": 55960,
        "end": 55978,
        "left": {
          "type": "BinaryExpression",
          "start": 55960,
          "end": 55972,
          "left": {
            "type": "Literal",
            "start": 55960,
            "end": 55966,
            "value": 131071,
            "raw": "131071",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 55970,
            "end": 55972,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 55977,
          "end": 55978,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 55980,
        "end": 56067,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 55985,
            "end": 56064,
            "argument": {
              "type": "NewExpression",
              "start": 55991,
              "end": 56063,
              "callee": {
                "type": "Identifier",
                "start": 55995,
                "end": 56007,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56008,
                  "end": 56062,
                  "left": {
                    "type": "Literal",
                    "start": 56008,
                    "end": 56045,
                    "value": "#1010: 131071 >> 31 === 0. Actual: ",
                    "raw": "'#1010: 131071 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56048,
                    "end": 56062,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56049,
                      "end": 56061,
                      "left": {
                        "type": "Literal",
                        "start": 56049,
                        "end": 56055,
                        "value": 131071,
                        "raw": "131071",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56059,
                        "end": 56061,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56071,
      "end": 56182,
      "test": {
        "type": "BinaryExpression",
        "start": 56075,
        "end": 56093,
        "left": {
          "type": "BinaryExpression",
          "start": 56075,
          "end": 56087,
          "left": {
            "type": "Literal",
            "start": 56075,
            "end": 56081,
            "value": 262143,
            "raw": "262143",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56085,
            "end": 56087,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56092,
          "end": 56093,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56095,
        "end": 56182,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56100,
            "end": 56179,
            "argument": {
              "type": "NewExpression",
              "start": 56106,
              "end": 56178,
              "callee": {
                "type": "Identifier",
                "start": 56110,
                "end": 56122,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56123,
                  "end": 56177,
                  "left": {
                    "type": "Literal",
                    "start": 56123,
                    "end": 56160,
                    "value": "#1011: 262143 >> 31 === 0. Actual: ",
                    "raw": "'#1011: 262143 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56163,
                    "end": 56177,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56164,
                      "end": 56176,
                      "left": {
                        "type": "Literal",
                        "start": 56164,
                        "end": 56170,
                        "value": 262143,
                        "raw": "262143",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56174,
                        "end": 56176,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56186,
      "end": 56297,
      "test": {
        "type": "BinaryExpression",
        "start": 56190,
        "end": 56208,
        "left": {
          "type": "BinaryExpression",
          "start": 56190,
          "end": 56202,
          "left": {
            "type": "Literal",
            "start": 56190,
            "end": 56196,
            "value": 524287,
            "raw": "524287",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56200,
            "end": 56202,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56207,
          "end": 56208,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56210,
        "end": 56297,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56215,
            "end": 56294,
            "argument": {
              "type": "NewExpression",
              "start": 56221,
              "end": 56293,
              "callee": {
                "type": "Identifier",
                "start": 56225,
                "end": 56237,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56238,
                  "end": 56292,
                  "left": {
                    "type": "Literal",
                    "start": 56238,
                    "end": 56275,
                    "value": "#1012: 524287 >> 31 === 0. Actual: ",
                    "raw": "'#1012: 524287 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56278,
                    "end": 56292,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56279,
                      "end": 56291,
                      "left": {
                        "type": "Literal",
                        "start": 56279,
                        "end": 56285,
                        "value": 524287,
                        "raw": "524287",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56289,
                        "end": 56291,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56301,
      "end": 56415,
      "test": {
        "type": "BinaryExpression",
        "start": 56305,
        "end": 56324,
        "left": {
          "type": "BinaryExpression",
          "start": 56305,
          "end": 56318,
          "left": {
            "type": "Literal",
            "start": 56305,
            "end": 56312,
            "value": 1048575,
            "raw": "1048575",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56316,
            "end": 56318,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56323,
          "end": 56324,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56326,
        "end": 56415,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56331,
            "end": 56412,
            "argument": {
              "type": "NewExpression",
              "start": 56337,
              "end": 56411,
              "callee": {
                "type": "Identifier",
                "start": 56341,
                "end": 56353,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56354,
                  "end": 56410,
                  "left": {
                    "type": "Literal",
                    "start": 56354,
                    "end": 56392,
                    "value": "#1013: 1048575 >> 31 === 0. Actual: ",
                    "raw": "'#1013: 1048575 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56395,
                    "end": 56410,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56396,
                      "end": 56409,
                      "left": {
                        "type": "Literal",
                        "start": 56396,
                        "end": 56403,
                        "value": 1048575,
                        "raw": "1048575",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56407,
                        "end": 56409,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56419,
      "end": 56533,
      "test": {
        "type": "BinaryExpression",
        "start": 56423,
        "end": 56442,
        "left": {
          "type": "BinaryExpression",
          "start": 56423,
          "end": 56436,
          "left": {
            "type": "Literal",
            "start": 56423,
            "end": 56430,
            "value": 2097151,
            "raw": "2097151",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56434,
            "end": 56436,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56441,
          "end": 56442,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56444,
        "end": 56533,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56449,
            "end": 56530,
            "argument": {
              "type": "NewExpression",
              "start": 56455,
              "end": 56529,
              "callee": {
                "type": "Identifier",
                "start": 56459,
                "end": 56471,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56472,
                  "end": 56528,
                  "left": {
                    "type": "Literal",
                    "start": 56472,
                    "end": 56510,
                    "value": "#1014: 2097151 >> 31 === 0. Actual: ",
                    "raw": "'#1014: 2097151 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56513,
                    "end": 56528,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56514,
                      "end": 56527,
                      "left": {
                        "type": "Literal",
                        "start": 56514,
                        "end": 56521,
                        "value": 2097151,
                        "raw": "2097151",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56525,
                        "end": 56527,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56537,
      "end": 56651,
      "test": {
        "type": "BinaryExpression",
        "start": 56541,
        "end": 56560,
        "left": {
          "type": "BinaryExpression",
          "start": 56541,
          "end": 56554,
          "left": {
            "type": "Literal",
            "start": 56541,
            "end": 56548,
            "value": 4194303,
            "raw": "4194303",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56552,
            "end": 56554,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56559,
          "end": 56560,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56562,
        "end": 56651,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56567,
            "end": 56648,
            "argument": {
              "type": "NewExpression",
              "start": 56573,
              "end": 56647,
              "callee": {
                "type": "Identifier",
                "start": 56577,
                "end": 56589,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56590,
                  "end": 56646,
                  "left": {
                    "type": "Literal",
                    "start": 56590,
                    "end": 56628,
                    "value": "#1015: 4194303 >> 31 === 0. Actual: ",
                    "raw": "'#1015: 4194303 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56631,
                    "end": 56646,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56632,
                      "end": 56645,
                      "left": {
                        "type": "Literal",
                        "start": 56632,
                        "end": 56639,
                        "value": 4194303,
                        "raw": "4194303",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56643,
                        "end": 56645,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56655,
      "end": 56769,
      "test": {
        "type": "BinaryExpression",
        "start": 56659,
        "end": 56678,
        "left": {
          "type": "BinaryExpression",
          "start": 56659,
          "end": 56672,
          "left": {
            "type": "Literal",
            "start": 56659,
            "end": 56666,
            "value": 8388607,
            "raw": "8388607",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56670,
            "end": 56672,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56677,
          "end": 56678,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56680,
        "end": 56769,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56685,
            "end": 56766,
            "argument": {
              "type": "NewExpression",
              "start": 56691,
              "end": 56765,
              "callee": {
                "type": "Identifier",
                "start": 56695,
                "end": 56707,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56708,
                  "end": 56764,
                  "left": {
                    "type": "Literal",
                    "start": 56708,
                    "end": 56746,
                    "value": "#1016: 8388607 >> 31 === 0. Actual: ",
                    "raw": "'#1016: 8388607 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56749,
                    "end": 56764,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56750,
                      "end": 56763,
                      "left": {
                        "type": "Literal",
                        "start": 56750,
                        "end": 56757,
                        "value": 8388607,
                        "raw": "8388607",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56761,
                        "end": 56763,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56773,
      "end": 56890,
      "test": {
        "type": "BinaryExpression",
        "start": 56777,
        "end": 56797,
        "left": {
          "type": "BinaryExpression",
          "start": 56777,
          "end": 56791,
          "left": {
            "type": "Literal",
            "start": 56777,
            "end": 56785,
            "value": 16777215,
            "raw": "16777215",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56789,
            "end": 56791,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56796,
          "end": 56797,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56799,
        "end": 56890,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56804,
            "end": 56887,
            "argument": {
              "type": "NewExpression",
              "start": 56810,
              "end": 56886,
              "callee": {
                "type": "Identifier",
                "start": 56814,
                "end": 56826,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56827,
                  "end": 56885,
                  "left": {
                    "type": "Literal",
                    "start": 56827,
                    "end": 56866,
                    "value": "#1017: 16777215 >> 31 === 0. Actual: ",
                    "raw": "'#1017: 16777215 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56869,
                    "end": 56885,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56870,
                      "end": 56884,
                      "left": {
                        "type": "Literal",
                        "start": 56870,
                        "end": 56878,
                        "value": 16777215,
                        "raw": "16777215",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 56882,
                        "end": 56884,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 56894,
      "end": 57011,
      "test": {
        "type": "BinaryExpression",
        "start": 56898,
        "end": 56918,
        "left": {
          "type": "BinaryExpression",
          "start": 56898,
          "end": 56912,
          "left": {
            "type": "Literal",
            "start": 56898,
            "end": 56906,
            "value": 33554431,
            "raw": "33554431",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 56910,
            "end": 56912,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 56917,
          "end": 56918,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 56920,
        "end": 57011,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 56925,
            "end": 57008,
            "argument": {
              "type": "NewExpression",
              "start": 56931,
              "end": 57007,
              "callee": {
                "type": "Identifier",
                "start": 56935,
                "end": 56947,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 56948,
                  "end": 57006,
                  "left": {
                    "type": "Literal",
                    "start": 56948,
                    "end": 56987,
                    "value": "#1018: 33554431 >> 31 === 0. Actual: ",
                    "raw": "'#1018: 33554431 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 56990,
                    "end": 57006,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 56991,
                      "end": 57005,
                      "left": {
                        "type": "Literal",
                        "start": 56991,
                        "end": 56999,
                        "value": 33554431,
                        "raw": "33554431",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57003,
                        "end": 57005,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57015,
      "end": 57132,
      "test": {
        "type": "BinaryExpression",
        "start": 57019,
        "end": 57039,
        "left": {
          "type": "BinaryExpression",
          "start": 57019,
          "end": 57033,
          "left": {
            "type": "Literal",
            "start": 57019,
            "end": 57027,
            "value": 67108863,
            "raw": "67108863",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57031,
            "end": 57033,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 57038,
          "end": 57039,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57041,
        "end": 57132,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57046,
            "end": 57129,
            "argument": {
              "type": "NewExpression",
              "start": 57052,
              "end": 57128,
              "callee": {
                "type": "Identifier",
                "start": 57056,
                "end": 57068,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57069,
                  "end": 57127,
                  "left": {
                    "type": "Literal",
                    "start": 57069,
                    "end": 57108,
                    "value": "#1019: 67108863 >> 31 === 0. Actual: ",
                    "raw": "'#1019: 67108863 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57111,
                    "end": 57127,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57112,
                      "end": 57126,
                      "left": {
                        "type": "Literal",
                        "start": 57112,
                        "end": 57120,
                        "value": 67108863,
                        "raw": "67108863",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57124,
                        "end": 57126,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57136,
      "end": 57256,
      "test": {
        "type": "BinaryExpression",
        "start": 57140,
        "end": 57161,
        "left": {
          "type": "BinaryExpression",
          "start": 57140,
          "end": 57155,
          "left": {
            "type": "Literal",
            "start": 57140,
            "end": 57149,
            "value": 134217727,
            "raw": "134217727",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57153,
            "end": 57155,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 57160,
          "end": 57161,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57163,
        "end": 57256,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57168,
            "end": 57253,
            "argument": {
              "type": "NewExpression",
              "start": 57174,
              "end": 57252,
              "callee": {
                "type": "Identifier",
                "start": 57178,
                "end": 57190,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57191,
                  "end": 57251,
                  "left": {
                    "type": "Literal",
                    "start": 57191,
                    "end": 57231,
                    "value": "#1020: 134217727 >> 31 === 0. Actual: ",
                    "raw": "'#1020: 134217727 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57234,
                    "end": 57251,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57235,
                      "end": 57250,
                      "left": {
                        "type": "Literal",
                        "start": 57235,
                        "end": 57244,
                        "value": 134217727,
                        "raw": "134217727",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57248,
                        "end": 57250,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57260,
      "end": 57380,
      "test": {
        "type": "BinaryExpression",
        "start": 57264,
        "end": 57285,
        "left": {
          "type": "BinaryExpression",
          "start": 57264,
          "end": 57279,
          "left": {
            "type": "Literal",
            "start": 57264,
            "end": 57273,
            "value": 268435455,
            "raw": "268435455",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57277,
            "end": 57279,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 57284,
          "end": 57285,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57287,
        "end": 57380,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57292,
            "end": 57377,
            "argument": {
              "type": "NewExpression",
              "start": 57298,
              "end": 57376,
              "callee": {
                "type": "Identifier",
                "start": 57302,
                "end": 57314,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57315,
                  "end": 57375,
                  "left": {
                    "type": "Literal",
                    "start": 57315,
                    "end": 57355,
                    "value": "#1021: 268435455 >> 31 === 0. Actual: ",
                    "raw": "'#1021: 268435455 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57358,
                    "end": 57375,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57359,
                      "end": 57374,
                      "left": {
                        "type": "Literal",
                        "start": 57359,
                        "end": 57368,
                        "value": 268435455,
                        "raw": "268435455",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57372,
                        "end": 57374,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57384,
      "end": 57504,
      "test": {
        "type": "BinaryExpression",
        "start": 57388,
        "end": 57409,
        "left": {
          "type": "BinaryExpression",
          "start": 57388,
          "end": 57403,
          "left": {
            "type": "Literal",
            "start": 57388,
            "end": 57397,
            "value": 536870911,
            "raw": "536870911",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57401,
            "end": 57403,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 57408,
          "end": 57409,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57411,
        "end": 57504,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57416,
            "end": 57501,
            "argument": {
              "type": "NewExpression",
              "start": 57422,
              "end": 57500,
              "callee": {
                "type": "Identifier",
                "start": 57426,
                "end": 57438,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57439,
                  "end": 57499,
                  "left": {
                    "type": "Literal",
                    "start": 57439,
                    "end": 57479,
                    "value": "#1022: 536870911 >> 31 === 0. Actual: ",
                    "raw": "'#1022: 536870911 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57482,
                    "end": 57499,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57483,
                      "end": 57498,
                      "left": {
                        "type": "Literal",
                        "start": 57483,
                        "end": 57492,
                        "value": 536870911,
                        "raw": "536870911",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57496,
                        "end": 57498,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 57508,
      "end": 57631,
      "test": {
        "type": "BinaryExpression",
        "start": 57512,
        "end": 57534,
        "left": {
          "type": "BinaryExpression",
          "start": 57512,
          "end": 57528,
          "left": {
            "type": "Literal",
            "start": 57512,
            "end": 57522,
            "value": 1073741823,
            "raw": "1073741823",
            "regex": null,
            "bigint": null
          },
          "operator": ">>",
          "right": {
            "type": "Literal",
            "start": 57526,
            "end": 57528,
            "value": 31,
            "raw": "31",
            "regex": null,
            "bigint": null
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 57533,
          "end": 57534,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 57536,
        "end": 57631,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 57541,
            "end": 57628,
            "argument": {
              "type": "NewExpression",
              "start": 57547,
              "end": 57627,
              "callee": {
                "type": "Identifier",
                "start": 57551,
                "end": 57563,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 57564,
                  "end": 57626,
                  "left": {
                    "type": "Literal",
                    "start": 57564,
                    "end": 57605,
                    "value": "#1023: 1073741823 >> 31 === 0. Actual: ",
                    "raw": "'#1023: 1073741823 >> 31 === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 57608,
                    "end": 57626,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 57609,
                      "end": 57625,
                      "left": {
                        "type": "Literal",
                        "start": 57609,
                        "end": 57619,
                        "value": 1073741823,
                        "raw": "1073741823",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": ">>",
                      "right": {
                        "type": "Literal",
                        "start": 57623,
                        "end": 57625,
                        "value": 31,
                        "raw": "31",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}