{
  "type": "Program",
  "start": 0,
  "end": 1597,
  "body": [
    {
      "type": "IfStatement",
      "start": 360,
      "end": 492,
      "test": {
        "type": "BinaryExpression",
        "start": 364,
        "end": 403,
        "left": {
          "type": "CallExpression",
          "start": 364,
          "end": 394,
          "callee": {
            "type": "Identifier",
            "start": 364,
            "end": 369,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 370,
              "end": 393,
              "left": {
                "type": "MemberExpression",
                "start": 370,
                "end": 380,
                "object": {
                  "type": "Identifier",
                  "start": 370,
                  "end": 376,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 377,
                  "end": 380,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 383,
                "end": 393,
                "object": {
                  "type": "Identifier",
                  "start": 383,
                  "end": 389,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 390,
                  "end": 393,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 399,
          "end": 403,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 405,
        "end": 492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 409,
            "end": 490,
            "argument": {
              "type": "NewExpression",
              "start": 415,
              "end": 489,
              "callee": {
                "type": "Identifier",
                "start": 419,
                "end": 431,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 432,
                  "end": 488,
                  "left": {
                    "type": "Literal",
                    "start": 432,
                    "end": 474,
                    "value": "#1: NaN % NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 477,
                    "end": 488,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 478,
                      "end": 487,
                      "left": {
                        "type": "Identifier",
                        "start": 478,
                        "end": 481,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 484,
                        "end": 487,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 506,
      "end": 629,
      "test": {
        "type": "BinaryExpression",
        "start": 510,
        "end": 541,
        "left": {
          "type": "CallExpression",
          "start": 510,
          "end": 532,
          "callee": {
            "type": "Identifier",
            "start": 510,
            "end": 515,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 516,
              "end": 531,
              "left": {
                "type": "UnaryExpression",
                "start": 516,
                "end": 518,
                "operator": "+",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 517,
                  "end": 518,
                  "value": 0,
                  "raw": "0"
                }
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 521,
                "end": 531,
                "object": {
                  "type": "Identifier",
                  "start": 521,
                  "end": 527,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 528,
                  "end": 531,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 537,
          "end": 541,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 543,
        "end": 629,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 547,
            "end": 626,
            "argument": {
              "type": "NewExpression",
              "start": 553,
              "end": 625,
              "callee": {
                "type": "Identifier",
                "start": 557,
                "end": 569,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 570,
                  "end": 624,
                  "left": {
                    "type": "Literal",
                    "start": 570,
                    "end": 611,
                    "value": "#2: +0 % NaN === Not-a-Number. Actual: ",
                    "raw": "'#2: +0 % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 614,
                    "end": 624,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 615,
                      "end": 623,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 615,
                        "end": 617,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 616,
                          "end": 617,
                          "value": 0,
                          "raw": "0"
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 620,
                        "end": 623,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 642,
      "end": 765,
      "test": {
        "type": "BinaryExpression",
        "start": 646,
        "end": 677,
        "left": {
          "type": "CallExpression",
          "start": 646,
          "end": 668,
          "callee": {
            "type": "Identifier",
            "start": 646,
            "end": 651,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 652,
              "end": 667,
              "left": {
                "type": "UnaryExpression",
                "start": 652,
                "end": 654,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 653,
                  "end": 654,
                  "value": 0,
                  "raw": "0"
                }
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 657,
                "end": 667,
                "object": {
                  "type": "Identifier",
                  "start": 657,
                  "end": 663,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 664,
                  "end": 667,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 673,
          "end": 677,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 679,
        "end": 765,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 683,
            "end": 762,
            "argument": {
              "type": "NewExpression",
              "start": 689,
              "end": 761,
              "callee": {
                "type": "Identifier",
                "start": 693,
                "end": 705,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 706,
                  "end": 760,
                  "left": {
                    "type": "Literal",
                    "start": 706,
                    "end": 747,
                    "value": "#3: -0 % NaN === Not-a-Number. Actual: ",
                    "raw": "'#3: -0 % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 750,
                    "end": 760,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 751,
                      "end": 759,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 751,
                        "end": 753,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 752,
                          "end": 753,
                          "value": 0,
                          "raw": "0"
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 756,
                        "end": 759,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 778,
      "end": 934,
      "test": {
        "type": "BinaryExpression",
        "start": 782,
        "end": 835,
        "left": {
          "type": "CallExpression",
          "start": 782,
          "end": 826,
          "callee": {
            "type": "Identifier",
            "start": 782,
            "end": 787,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 788,
              "end": 825,
              "left": {
                "type": "MemberExpression",
                "start": 788,
                "end": 812,
                "object": {
                  "type": "Identifier",
                  "start": 788,
                  "end": 794,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 795,
                  "end": 812,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 815,
                "end": 825,
                "object": {
                  "type": "Identifier",
                  "start": 815,
                  "end": 821,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 822,
                  "end": 825,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 831,
          "end": 835,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 837,
        "end": 934,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 841,
            "end": 932,
            "argument": {
              "type": "NewExpression",
              "start": 847,
              "end": 931,
              "callee": {
                "type": "Identifier",
                "start": 851,
                "end": 863,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 864,
                  "end": 930,
                  "left": {
                    "type": "Literal",
                    "start": 864,
                    "end": 911,
                    "value": "#4: Infinity % NaN === Not-a-Number. Actual: ",
                    "raw": "'#4: Infinity % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 914,
                    "end": 930,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 915,
                      "end": 929,
                      "left": {
                        "type": "Identifier",
                        "start": 915,
                        "end": 923,
                        "name": "Infinity"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 926,
                        "end": 929,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 947,
      "end": 1108,
      "test": {
        "type": "BinaryExpression",
        "start": 951,
        "end": 1004,
        "left": {
          "type": "CallExpression",
          "start": 951,
          "end": 995,
          "callee": {
            "type": "Identifier",
            "start": 951,
            "end": 956,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 957,
              "end": 994,
              "left": {
                "type": "MemberExpression",
                "start": 957,
                "end": 981,
                "object": {
                  "type": "Identifier",
                  "start": 957,
                  "end": 963,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 964,
                  "end": 981,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 984,
                "end": 994,
                "object": {
                  "type": "Identifier",
                  "start": 984,
                  "end": 990,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 991,
                  "end": 994,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1000,
          "end": 1004,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1006,
        "end": 1108,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1010,
            "end": 1105,
            "argument": {
              "type": "NewExpression",
              "start": 1016,
              "end": 1104,
              "callee": {
                "type": "Identifier",
                "start": 1020,
                "end": 1032,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1033,
                  "end": 1103,
                  "left": {
                    "type": "Literal",
                    "start": 1033,
                    "end": 1082,
                    "value": "#5:  -Infinity % NaN === Not-a-Number. Actual: ",
                    "raw": "'#5:  -Infinity % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1085,
                    "end": 1103,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1087,
                      "end": 1102,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1087,
                        "end": 1096,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1088,
                          "end": 1096,
                          "name": "Infinity"
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 1099,
                        "end": 1102,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1121,
      "end": 1285,
      "test": {
        "type": "BinaryExpression",
        "start": 1125,
        "end": 1170,
        "left": {
          "type": "CallExpression",
          "start": 1125,
          "end": 1161,
          "callee": {
            "type": "Identifier",
            "start": 1125,
            "end": 1130,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1131,
              "end": 1160,
              "left": {
                "type": "MemberExpression",
                "start": 1131,
                "end": 1147,
                "object": {
                  "type": "Identifier",
                  "start": 1131,
                  "end": 1137,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1138,
                  "end": 1147,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 1150,
                "end": 1160,
                "object": {
                  "type": "Identifier",
                  "start": 1150,
                  "end": 1156,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1157,
                  "end": 1160,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1166,
          "end": 1170,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1172,
        "end": 1285,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1176,
            "end": 1283,
            "argument": {
              "type": "NewExpression",
              "start": 1182,
              "end": 1282,
              "callee": {
                "type": "Identifier",
                "start": 1186,
                "end": 1198,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1199,
                  "end": 1281,
                  "left": {
                    "type": "Literal",
                    "start": 1199,
                    "end": 1254,
                    "value": "#6: Number.MAX_VALUE % NaN === Not-a-Number. Actual: ",
                    "raw": "'#6: Number.MAX_VALUE % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1257,
                    "end": 1281,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1258,
                      "end": 1280,
                      "left": {
                        "type": "MemberExpression",
                        "start": 1258,
                        "end": 1274,
                        "object": {
                          "type": "Identifier",
                          "start": 1258,
                          "end": 1264,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1265,
                          "end": 1274,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 1277,
                        "end": 1280,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1298,
      "end": 1463,
      "test": {
        "type": "BinaryExpression",
        "start": 1302,
        "end": 1347,
        "left": {
          "type": "CallExpression",
          "start": 1302,
          "end": 1338,
          "callee": {
            "type": "Identifier",
            "start": 1302,
            "end": 1307,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1308,
              "end": 1337,
              "left": {
                "type": "MemberExpression",
                "start": 1308,
                "end": 1324,
                "object": {
                  "type": "Identifier",
                  "start": 1308,
                  "end": 1314,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1315,
                  "end": 1324,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 1327,
                "end": 1337,
                "object": {
                  "type": "Identifier",
                  "start": 1327,
                  "end": 1333,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1334,
                  "end": 1337,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1343,
          "end": 1347,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1349,
        "end": 1463,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1353,
            "end": 1460,
            "argument": {
              "type": "NewExpression",
              "start": 1359,
              "end": 1459,
              "callee": {
                "type": "Identifier",
                "start": 1363,
                "end": 1375,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1376,
                  "end": 1458,
                  "left": {
                    "type": "Literal",
                    "start": 1376,
                    "end": 1431,
                    "value": "#7: Number.MIN_VALUE % NaN === Not-a-Number. Actual: ",
                    "raw": "'#7: Number.MIN_VALUE % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1434,
                    "end": 1458,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1435,
                      "end": 1457,
                      "left": {
                        "type": "MemberExpression",
                        "start": 1435,
                        "end": 1451,
                        "object": {
                          "type": "Identifier",
                          "start": 1435,
                          "end": 1441,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1442,
                          "end": 1451,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 1454,
                        "end": 1457,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1475,
      "end": 1596,
      "test": {
        "type": "BinaryExpression",
        "start": 1479,
        "end": 1509,
        "left": {
          "type": "CallExpression",
          "start": 1479,
          "end": 1500,
          "callee": {
            "type": "Identifier",
            "start": 1479,
            "end": 1484,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1485,
              "end": 1499,
              "left": {
                "type": "Literal",
                "start": 1485,
                "end": 1486,
                "value": 1,
                "raw": "1"
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 1489,
                "end": 1499,
                "object": {
                  "type": "Identifier",
                  "start": 1489,
                  "end": 1495,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1496,
                  "end": 1499,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1505,
          "end": 1509,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1511,
        "end": 1596,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1515,
            "end": 1592,
            "argument": {
              "type": "NewExpression",
              "start": 1521,
              "end": 1591,
              "callee": {
                "type": "Identifier",
                "start": 1525,
                "end": 1537,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1538,
                  "end": 1590,
                  "left": {
                    "type": "Literal",
                    "start": 1538,
                    "end": 1578,
                    "value": "#8: 1 % NaN === Not-a-Number. Actual: ",
                    "raw": "'#8: 1 % NaN === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1581,
                    "end": 1590,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1582,
                      "end": 1589,
                      "left": {
                        "type": "Literal",
                        "start": 1582,
                        "end": 1583,
                        "value": 1,
                        "raw": "1"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 1586,
                        "end": 1589,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}