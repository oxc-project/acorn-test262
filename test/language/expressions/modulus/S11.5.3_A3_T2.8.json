{
  "type": "Program",
  "start": 0,
  "end": 1033,
  "body": [
    {
      "type": "IfStatement",
      "start": 362,
      "end": 501,
      "test": {
        "type": "BinaryExpression",
        "start": 366,
        "end": 398,
        "left": {
          "type": "CallExpression",
          "start": 366,
          "end": 389,
          "callee": {
            "type": "Identifier",
            "start": 366,
            "end": 371,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 372,
              "end": 388,
              "left": {
                "type": "Literal",
                "start": 372,
                "end": 376,
                "value": true,
                "raw": "true"
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "start": 379,
                "end": 388,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 394,
          "end": 398,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 400,
        "end": 501,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 404,
            "end": 499,
            "argument": {
              "type": "NewExpression",
              "start": 410,
              "end": 498,
              "callee": {
                "type": "Identifier",
                "start": 414,
                "end": 426,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 427,
                  "end": 497,
                  "left": {
                    "type": "Literal",
                    "start": 427,
                    "end": 476,
                    "value": "#1: true % undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: true % undefined === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 479,
                    "end": 497,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 480,
                      "end": 496,
                      "left": {
                        "type": "Literal",
                        "start": 480,
                        "end": 484,
                        "value": true,
                        "raw": "true"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 487,
                        "end": 496,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 513,
      "end": 652,
      "test": {
        "type": "BinaryExpression",
        "start": 517,
        "end": 549,
        "left": {
          "type": "CallExpression",
          "start": 517,
          "end": 540,
          "callee": {
            "type": "Identifier",
            "start": 517,
            "end": 522,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 523,
              "end": 539,
              "left": {
                "type": "Identifier",
                "start": 523,
                "end": 532,
                "name": "undefined"
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 535,
                "end": 539,
                "value": true,
                "raw": "true"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 545,
          "end": 549,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 551,
        "end": 652,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 555,
            "end": 650,
            "argument": {
              "type": "NewExpression",
              "start": 561,
              "end": 649,
              "callee": {
                "type": "Identifier",
                "start": 565,
                "end": 577,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 578,
                  "end": 648,
                  "left": {
                    "type": "Literal",
                    "start": 578,
                    "end": 627,
                    "value": "#2: undefined % true === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined % true === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 630,
                    "end": 648,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 631,
                      "end": 647,
                      "left": {
                        "type": "Identifier",
                        "start": 631,
                        "end": 640,
                        "name": "undefined"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 643,
                        "end": 647,
                        "value": true,
                        "raw": "true"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 664,
      "end": 842,
      "test": {
        "type": "BinaryExpression",
        "start": 668,
        "end": 713,
        "left": {
          "type": "CallExpression",
          "start": 668,
          "end": 704,
          "callee": {
            "type": "Identifier",
            "start": 668,
            "end": 673,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 674,
              "end": 703,
              "left": {
                "type": "NewExpression",
                "start": 674,
                "end": 691,
                "callee": {
                  "type": "Identifier",
                  "start": 678,
                  "end": 685,
                  "name": "Boolean"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 686,
                    "end": 690,
                    "value": true,
                    "raw": "true"
                  }
                ]
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "start": 694,
                "end": 703,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 709,
          "end": 713,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 715,
        "end": 842,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 719,
            "end": 840,
            "argument": {
              "type": "NewExpression",
              "start": 725,
              "end": 839,
              "callee": {
                "type": "Identifier",
                "start": 729,
                "end": 741,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 742,
                  "end": 838,
                  "left": {
                    "type": "Literal",
                    "start": 742,
                    "end": 804,
                    "value": "#3: new Boolean(true) % undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Boolean(true) % undefined === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 807,
                    "end": 838,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 808,
                      "end": 837,
                      "left": {
                        "type": "NewExpression",
                        "start": 808,
                        "end": 825,
                        "callee": {
                          "type": "Identifier",
                          "start": 812,
                          "end": 819,
                          "name": "Boolean"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 820,
                            "end": 824,
                            "value": true,
                            "raw": "true"
                          }
                        ]
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 828,
                        "end": 837,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 854,
      "end": 1032,
      "test": {
        "type": "BinaryExpression",
        "start": 858,
        "end": 903,
        "left": {
          "type": "CallExpression",
          "start": 858,
          "end": 894,
          "callee": {
            "type": "Identifier",
            "start": 858,
            "end": 863,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 864,
              "end": 893,
              "left": {
                "type": "Identifier",
                "start": 864,
                "end": 873,
                "name": "undefined"
              },
              "operator": "%",
              "right": {
                "type": "NewExpression",
                "start": 876,
                "end": 893,
                "callee": {
                  "type": "Identifier",
                  "start": 880,
                  "end": 887,
                  "name": "Boolean"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 888,
                    "end": 892,
                    "value": true,
                    "raw": "true"
                  }
                ]
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 899,
          "end": 903,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 905,
        "end": 1032,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 909,
            "end": 1030,
            "argument": {
              "type": "NewExpression",
              "start": 915,
              "end": 1029,
              "callee": {
                "type": "Identifier",
                "start": 919,
                "end": 931,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 932,
                  "end": 1028,
                  "left": {
                    "type": "Literal",
                    "start": 932,
                    "end": 994,
                    "value": "#4: undefined % new Boolean(true) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined % new Boolean(true) === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 997,
                    "end": 1028,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 998,
                      "end": 1027,
                      "left": {
                        "type": "Identifier",
                        "start": 998,
                        "end": 1007,
                        "name": "undefined"
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "start": 1010,
                        "end": 1027,
                        "callee": {
                          "type": "Identifier",
                          "start": 1014,
                          "end": 1021,
                          "name": "Boolean"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1022,
                            "end": 1026,
                            "value": true,
                            "raw": "true"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}