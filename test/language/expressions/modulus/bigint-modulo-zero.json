{
  "type": "Program",
  "start": 0,
  "end": 1007,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 634,
      "end": 716,
      "expression": {
        "type": "CallExpression",
        "start": 634,
        "end": 715,
        "callee": {
          "type": "MemberExpression",
          "start": 634,
          "end": 647,
          "object": {
            "type": "Identifier",
            "start": 634,
            "end": 640,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 641,
            "end": 647,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 648,
            "end": 658,
            "name": "RangeError"
          },
          {
            "type": "FunctionExpression",
            "start": 660,
            "end": 685,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 671,
              "end": 685,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 675,
                  "end": 683,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 675,
                    "end": 682,
                    "left": {
                      "type": "Literal",
                      "start": 675,
                      "end": 677,
                      "value": null,
                      "raw": "1n",
                      "regex": null,
                      "bigint": "1"
                    },
                    "operator": "%",
                    "right": {
                      "type": "Literal",
                      "start": 680,
                      "end": 682,
                      "value": null,
                      "raw": "0n",
                      "regex": null,
                      "bigint": "0"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 687,
            "end": 714,
            "value": "1n % 0n throws RangeError",
            "raw": "'1n % 0n throws RangeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 718,
      "end": 802,
      "expression": {
        "type": "CallExpression",
        "start": 718,
        "end": 801,
        "callee": {
          "type": "MemberExpression",
          "start": 718,
          "end": 731,
          "object": {
            "type": "Identifier",
            "start": 718,
            "end": 724,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 725,
            "end": 731,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 732,
            "end": 742,
            "name": "RangeError"
          },
          {
            "type": "FunctionExpression",
            "start": 744,
            "end": 770,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 755,
              "end": 770,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 759,
                  "end": 768,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 759,
                    "end": 767,
                    "left": {
                      "type": "Literal",
                      "start": 759,
                      "end": 762,
                      "value": null,
                      "raw": "10n",
                      "regex": null,
                      "bigint": "10"
                    },
                    "operator": "%",
                    "right": {
                      "type": "Literal",
                      "start": 765,
                      "end": 767,
                      "value": null,
                      "raw": "0n",
                      "regex": null,
                      "bigint": "0"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 772,
            "end": 800,
            "value": "10n % 0n throws RangeError",
            "raw": "'10n % 0n throws RangeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 804,
      "end": 886,
      "expression": {
        "type": "CallExpression",
        "start": 804,
        "end": 885,
        "callee": {
          "type": "MemberExpression",
          "start": 804,
          "end": 817,
          "object": {
            "type": "Identifier",
            "start": 804,
            "end": 810,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 811,
            "end": 817,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 818,
            "end": 828,
            "name": "RangeError"
          },
          {
            "type": "FunctionExpression",
            "start": 830,
            "end": 855,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 841,
              "end": 855,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 845,
                  "end": 853,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 845,
                    "end": 852,
                    "left": {
                      "type": "Literal",
                      "start": 845,
                      "end": 847,
                      "value": null,
                      "raw": "0n",
                      "regex": null,
                      "bigint": "0"
                    },
                    "operator": "%",
                    "right": {
                      "type": "Literal",
                      "start": 850,
                      "end": 852,
                      "value": null,
                      "raw": "0n",
                      "regex": null,
                      "bigint": "0"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 857,
            "end": 884,
            "value": "0n % 0n throws RangeError",
            "raw": "'0n % 0n throws RangeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 888,
      "end": 1006,
      "expression": {
        "type": "CallExpression",
        "start": 888,
        "end": 1005,
        "callee": {
          "type": "MemberExpression",
          "start": 888,
          "end": 901,
          "object": {
            "type": "Identifier",
            "start": 888,
            "end": 894,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 895,
            "end": 901,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 902,
            "end": 912,
            "name": "RangeError"
          },
          {
            "type": "FunctionExpression",
            "start": 914,
            "end": 957,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 925,
              "end": 957,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 929,
                  "end": 955,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 929,
                    "end": 954,
                    "left": {
                      "type": "Literal",
                      "start": 929,
                      "end": 949,
                      "value": null,
                      "raw": "1000000000000000000n",
                      "regex": null,
                      "bigint": "1000000000000000000"
                    },
                    "operator": "%",
                    "right": {
                      "type": "Literal",
                      "start": 952,
                      "end": 954,
                      "value": null,
                      "raw": "0n",
                      "regex": null,
                      "bigint": "0"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 959,
            "end": 1004,
            "value": "1000000000000000000n % 0n throws RangeError",
            "raw": "'1000000000000000000n % 0n throws RangeError'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}