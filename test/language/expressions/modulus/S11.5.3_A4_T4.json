{
  "type": "Program",
  "start": 0,
  "end": 2609,
  "body": [
    {
      "type": "IfStatement",
      "start": 352,
      "end": 461,
      "test": {
        "type": "BinaryExpression",
        "start": 356,
        "end": 378,
        "left": {
          "type": "CallExpression",
          "start": 356,
          "end": 369,
          "callee": {
            "type": "Identifier",
            "start": 356,
            "end": 361,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 362,
              "end": 368,
              "left": {
                "type": "UnaryExpression",
                "start": 362,
                "end": 364,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 363,
                  "end": 364,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 367,
                "end": 368,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 374,
          "end": 378,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 380,
        "end": 461,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 384,
            "end": 459,
            "argument": {
              "type": "NewExpression",
              "start": 390,
              "end": 458,
              "callee": {
                "type": "Identifier",
                "start": 394,
                "end": 406,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 407,
                  "end": 457,
                  "left": {
                    "type": "Literal",
                    "start": 407,
                    "end": 446,
                    "value": "#1: -0 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#1: -0 % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 449,
                    "end": 457,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 450,
                      "end": 456,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 450,
                        "end": 452,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 451,
                          "end": 452,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 455,
                        "end": 456,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 473,
      "end": 585,
      "test": {
        "type": "BinaryExpression",
        "start": 477,
        "end": 500,
        "left": {
          "type": "CallExpression",
          "start": 477,
          "end": 491,
          "callee": {
            "type": "Identifier",
            "start": 477,
            "end": 482,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 483,
              "end": 490,
              "left": {
                "type": "UnaryExpression",
                "start": 483,
                "end": 485,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 484,
                  "end": 485,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 488,
                "end": 490,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 489,
                  "end": 490,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 496,
          "end": 500,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 502,
        "end": 585,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 506,
            "end": 583,
            "argument": {
              "type": "NewExpression",
              "start": 512,
              "end": 582,
              "callee": {
                "type": "Identifier",
                "start": 516,
                "end": 528,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 529,
                  "end": 581,
                  "left": {
                    "type": "Literal",
                    "start": 529,
                    "end": 569,
                    "value": "#2: -0 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#2: -0 % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 572,
                    "end": 581,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 573,
                      "end": 580,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 573,
                        "end": 575,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 574,
                          "end": 575,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 578,
                        "end": 580,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 579,
                          "end": 580,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 597,
      "end": 703,
      "test": {
        "type": "BinaryExpression",
        "start": 601,
        "end": 622,
        "left": {
          "type": "CallExpression",
          "start": 601,
          "end": 613,
          "callee": {
            "type": "Identifier",
            "start": 601,
            "end": 606,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 607,
              "end": 612,
              "left": {
                "type": "Literal",
                "start": 607,
                "end": 608,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 611,
                "end": 612,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 618,
          "end": 622,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 624,
        "end": 703,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 628,
            "end": 701,
            "argument": {
              "type": "NewExpression",
              "start": 634,
              "end": 700,
              "callee": {
                "type": "Identifier",
                "start": 638,
                "end": 650,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 651,
                  "end": 699,
                  "left": {
                    "type": "Literal",
                    "start": 651,
                    "end": 689,
                    "value": "#3: 0 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#3: 0 % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 692,
                    "end": 699,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 693,
                      "end": 698,
                      "left": {
                        "type": "Literal",
                        "start": 693,
                        "end": 694,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 697,
                        "end": 698,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 715,
      "end": 824,
      "test": {
        "type": "BinaryExpression",
        "start": 719,
        "end": 741,
        "left": {
          "type": "CallExpression",
          "start": 719,
          "end": 732,
          "callee": {
            "type": "Identifier",
            "start": 719,
            "end": 724,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 725,
              "end": 731,
              "left": {
                "type": "Literal",
                "start": 725,
                "end": 726,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 729,
                "end": 731,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 730,
                  "end": 731,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 737,
          "end": 741,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 743,
        "end": 824,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 747,
            "end": 822,
            "argument": {
              "type": "NewExpression",
              "start": 753,
              "end": 821,
              "callee": {
                "type": "Identifier",
                "start": 757,
                "end": 769,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 770,
                  "end": 820,
                  "left": {
                    "type": "Literal",
                    "start": 770,
                    "end": 809,
                    "value": "#4: 0 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#4: 0 % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 812,
                    "end": 820,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 813,
                      "end": 819,
                      "left": {
                        "type": "Literal",
                        "start": 813,
                        "end": 814,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 817,
                        "end": 819,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 818,
                          "end": 819,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 836,
      "end": 943,
      "test": {
        "type": "BinaryExpression",
        "start": 840,
        "end": 862,
        "left": {
          "type": "CallExpression",
          "start": 840,
          "end": 853,
          "callee": {
            "type": "Identifier",
            "start": 840,
            "end": 845,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 846,
              "end": 852,
              "left": {
                "type": "UnaryExpression",
                "start": 846,
                "end": 848,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 847,
                  "end": 848,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 851,
                "end": 852,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 858,
          "end": 862,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 864,
        "end": 943,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 868,
            "end": 941,
            "argument": {
              "type": "NewExpression",
              "start": 874,
              "end": 940,
              "callee": {
                "type": "Identifier",
                "start": 878,
                "end": 890,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 891,
                  "end": 939,
                  "left": {
                    "type": "Literal",
                    "start": 891,
                    "end": 929,
                    "value": "#5: 1 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#5: 1 % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 932,
                    "end": 939,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 933,
                      "end": 938,
                      "left": {
                        "type": "Literal",
                        "start": 933,
                        "end": 934,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 937,
                        "end": 938,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 955,
      "end": 1067,
      "test": {
        "type": "BinaryExpression",
        "start": 959,
        "end": 982,
        "left": {
          "type": "CallExpression",
          "start": 959,
          "end": 973,
          "callee": {
            "type": "Identifier",
            "start": 959,
            "end": 964,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 965,
              "end": 972,
              "left": {
                "type": "UnaryExpression",
                "start": 965,
                "end": 967,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 966,
                  "end": 967,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 970,
                "end": 972,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 971,
                  "end": 972,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 978,
          "end": 982,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 984,
        "end": 1067,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 988,
            "end": 1065,
            "argument": {
              "type": "NewExpression",
              "start": 994,
              "end": 1064,
              "callee": {
                "type": "Identifier",
                "start": 998,
                "end": 1010,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1011,
                  "end": 1063,
                  "left": {
                    "type": "Literal",
                    "start": 1011,
                    "end": 1051,
                    "value": "#6: -1 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#6: -1 % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1054,
                    "end": 1063,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1055,
                      "end": 1062,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1055,
                        "end": 1057,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1056,
                          "end": 1057,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1060,
                        "end": 1062,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1061,
                          "end": 1062,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1079,
      "end": 1185,
      "test": {
        "type": "BinaryExpression",
        "start": 1083,
        "end": 1104,
        "left": {
          "type": "CallExpression",
          "start": 1083,
          "end": 1095,
          "callee": {
            "type": "Identifier",
            "start": 1083,
            "end": 1088,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1089,
              "end": 1094,
              "left": {
                "type": "Literal",
                "start": 1089,
                "end": 1090,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1093,
                "end": 1094,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1100,
          "end": 1104,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1106,
        "end": 1185,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1110,
            "end": 1183,
            "argument": {
              "type": "NewExpression",
              "start": 1116,
              "end": 1182,
              "callee": {
                "type": "Identifier",
                "start": 1120,
                "end": 1132,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1133,
                  "end": 1181,
                  "left": {
                    "type": "Literal",
                    "start": 1133,
                    "end": 1171,
                    "value": "#7: 1 % 0 === Not-a-Number. Actual: ",
                    "raw": "'#7: 1 % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1174,
                    "end": 1181,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1175,
                      "end": 1180,
                      "left": {
                        "type": "Literal",
                        "start": 1175,
                        "end": 1176,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 1179,
                        "end": 1180,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1197,
      "end": 1306,
      "test": {
        "type": "BinaryExpression",
        "start": 1201,
        "end": 1223,
        "left": {
          "type": "CallExpression",
          "start": 1201,
          "end": 1214,
          "callee": {
            "type": "Identifier",
            "start": 1201,
            "end": 1206,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1207,
              "end": 1213,
              "left": {
                "type": "Literal",
                "start": 1207,
                "end": 1208,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 1211,
                "end": 1213,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 1212,
                  "end": 1213,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1219,
          "end": 1223,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1225,
        "end": 1306,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1229,
            "end": 1304,
            "argument": {
              "type": "NewExpression",
              "start": 1235,
              "end": 1303,
              "callee": {
                "type": "Identifier",
                "start": 1239,
                "end": 1251,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1252,
                  "end": 1302,
                  "left": {
                    "type": "Literal",
                    "start": 1252,
                    "end": 1291,
                    "value": "#8: 1 % -0 === Not-a-Number. Actual: ",
                    "raw": "'#8: 1 % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1294,
                    "end": 1302,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1295,
                      "end": 1301,
                      "left": {
                        "type": "Literal",
                        "start": 1295,
                        "end": 1296,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1299,
                        "end": 1301,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1300,
                          "end": 1301,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1318,
      "end": 1461,
      "test": {
        "type": "BinaryExpression",
        "start": 1322,
        "end": 1366,
        "left": {
          "type": "CallExpression",
          "start": 1322,
          "end": 1357,
          "callee": {
            "type": "Identifier",
            "start": 1322,
            "end": 1327,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1328,
              "end": 1356,
              "left": {
                "type": "MemberExpression",
                "start": 1328,
                "end": 1352,
                "object": {
                  "type": "Identifier",
                  "start": 1328,
                  "end": 1334,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1335,
                  "end": 1352,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1355,
                "end": 1356,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1362,
          "end": 1366,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1368,
        "end": 1461,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1372,
            "end": 1459,
            "argument": {
              "type": "NewExpression",
              "start": 1378,
              "end": 1458,
              "callee": {
                "type": "Identifier",
                "start": 1382,
                "end": 1394,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1395,
                  "end": 1457,
                  "left": {
                    "type": "Literal",
                    "start": 1395,
                    "end": 1440,
                    "value": "#9: Infinity % 0 === Not-a-Number. Actual: ",
                    "raw": "'#9: Infinity % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1443,
                    "end": 1457,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1444,
                      "end": 1456,
                      "left": {
                        "type": "Identifier",
                        "start": 1444,
                        "end": 1452,
                        "name": "Infinity"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 1455,
                        "end": 1456,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1474,
      "end": 1623,
      "test": {
        "type": "BinaryExpression",
        "start": 1478,
        "end": 1523,
        "left": {
          "type": "CallExpression",
          "start": 1478,
          "end": 1514,
          "callee": {
            "type": "Identifier",
            "start": 1478,
            "end": 1483,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1484,
              "end": 1513,
              "left": {
                "type": "MemberExpression",
                "start": 1484,
                "end": 1508,
                "object": {
                  "type": "Identifier",
                  "start": 1484,
                  "end": 1490,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1491,
                  "end": 1508,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 1511,
                "end": 1513,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 1512,
                  "end": 1513,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1519,
          "end": 1523,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1525,
        "end": 1623,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1529,
            "end": 1621,
            "argument": {
              "type": "NewExpression",
              "start": 1535,
              "end": 1620,
              "callee": {
                "type": "Identifier",
                "start": 1539,
                "end": 1551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1552,
                  "end": 1619,
                  "left": {
                    "type": "Literal",
                    "start": 1552,
                    "end": 1600,
                    "value": "#10: -Infinity % -0 === Not-a-Number. Actual: ",
                    "raw": "'#10: -Infinity % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1603,
                    "end": 1619,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1604,
                      "end": 1618,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 1604,
                        "end": 1613,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1605,
                          "end": 1613,
                          "name": "Infinity"
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1616,
                        "end": 1618,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1617,
                          "end": 1618,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1636,
      "end": 1780,
      "test": {
        "type": "BinaryExpression",
        "start": 1640,
        "end": 1684,
        "left": {
          "type": "CallExpression",
          "start": 1640,
          "end": 1675,
          "callee": {
            "type": "Identifier",
            "start": 1640,
            "end": 1645,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1646,
              "end": 1674,
              "left": {
                "type": "MemberExpression",
                "start": 1646,
                "end": 1670,
                "object": {
                  "type": "Identifier",
                  "start": 1646,
                  "end": 1652,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1653,
                  "end": 1670,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1673,
                "end": 1674,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1680,
          "end": 1684,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1686,
        "end": 1780,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1690,
            "end": 1778,
            "argument": {
              "type": "NewExpression",
              "start": 1696,
              "end": 1777,
              "callee": {
                "type": "Identifier",
                "start": 1700,
                "end": 1712,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1713,
                  "end": 1776,
                  "left": {
                    "type": "Literal",
                    "start": 1713,
                    "end": 1759,
                    "value": "#11: Infinity % 0 === Not-a-Number. Actual: ",
                    "raw": "'#11: Infinity % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1762,
                    "end": 1776,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1763,
                      "end": 1775,
                      "left": {
                        "type": "Identifier",
                        "start": 1763,
                        "end": 1771,
                        "name": "Infinity"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 1774,
                        "end": 1775,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1793,
      "end": 1940,
      "test": {
        "type": "BinaryExpression",
        "start": 1797,
        "end": 1842,
        "left": {
          "type": "CallExpression",
          "start": 1797,
          "end": 1833,
          "callee": {
            "type": "Identifier",
            "start": 1797,
            "end": 1802,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1803,
              "end": 1832,
              "left": {
                "type": "MemberExpression",
                "start": 1803,
                "end": 1827,
                "object": {
                  "type": "Identifier",
                  "start": 1803,
                  "end": 1809,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1810,
                  "end": 1827,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 1830,
                "end": 1832,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 1831,
                  "end": 1832,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1838,
          "end": 1842,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1844,
        "end": 1940,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1848,
            "end": 1938,
            "argument": {
              "type": "NewExpression",
              "start": 1854,
              "end": 1937,
              "callee": {
                "type": "Identifier",
                "start": 1858,
                "end": 1870,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1871,
                  "end": 1936,
                  "left": {
                    "type": "Literal",
                    "start": 1871,
                    "end": 1918,
                    "value": "#12: Infinity % -0 === Not-a-Number. Actual: ",
                    "raw": "'#12: Infinity % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1921,
                    "end": 1936,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1922,
                      "end": 1935,
                      "left": {
                        "type": "Identifier",
                        "start": 1922,
                        "end": 1930,
                        "name": "Infinity"
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1933,
                        "end": 1935,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 1934,
                          "end": 1935,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1953,
      "end": 2105,
      "test": {
        "type": "BinaryExpression",
        "start": 1957,
        "end": 1993,
        "left": {
          "type": "CallExpression",
          "start": 1957,
          "end": 1984,
          "callee": {
            "type": "Identifier",
            "start": 1957,
            "end": 1962,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1963,
              "end": 1983,
              "left": {
                "type": "MemberExpression",
                "start": 1963,
                "end": 1979,
                "object": {
                  "type": "Identifier",
                  "start": 1963,
                  "end": 1969,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1970,
                  "end": 1979,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1982,
                "end": 1983,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1989,
          "end": 1993,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1995,
        "end": 2105,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1999,
            "end": 2103,
            "argument": {
              "type": "NewExpression",
              "start": 2005,
              "end": 2102,
              "callee": {
                "type": "Identifier",
                "start": 2009,
                "end": 2021,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2022,
                  "end": 2101,
                  "left": {
                    "type": "Literal",
                    "start": 2022,
                    "end": 2076,
                    "value": "#13: Number.MIN_VALUE % 0 === Not-a-Number. Actual: ",
                    "raw": "'#13: Number.MIN_VALUE % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2079,
                    "end": 2101,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2080,
                      "end": 2100,
                      "left": {
                        "type": "MemberExpression",
                        "start": 2080,
                        "end": 2096,
                        "object": {
                          "type": "Identifier",
                          "start": 2080,
                          "end": 2086,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2087,
                          "end": 2096,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 2099,
                        "end": 2100,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2118,
      "end": 2275,
      "test": {
        "type": "BinaryExpression",
        "start": 2122,
        "end": 2159,
        "left": {
          "type": "CallExpression",
          "start": 2122,
          "end": 2150,
          "callee": {
            "type": "Identifier",
            "start": 2122,
            "end": 2127,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 2128,
              "end": 2149,
              "left": {
                "type": "MemberExpression",
                "start": 2128,
                "end": 2144,
                "object": {
                  "type": "Identifier",
                  "start": 2128,
                  "end": 2134,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2135,
                  "end": 2144,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 2147,
                "end": 2149,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 2148,
                  "end": 2149,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2155,
          "end": 2159,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2161,
        "end": 2275,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2165,
            "end": 2273,
            "argument": {
              "type": "NewExpression",
              "start": 2171,
              "end": 2272,
              "callee": {
                "type": "Identifier",
                "start": 2175,
                "end": 2187,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2188,
                  "end": 2271,
                  "left": {
                    "type": "Literal",
                    "start": 2188,
                    "end": 2244,
                    "value": "#14: -Number.MIN_VALUE % -0 === Not-a-Number. Actual: ",
                    "raw": "'#14: -Number.MIN_VALUE % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2247,
                    "end": 2271,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2248,
                      "end": 2270,
                      "left": {
                        "type": "UnaryExpression",
                        "start": 2248,
                        "end": 2265,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "MemberExpression",
                          "start": 2249,
                          "end": 2265,
                          "object": {
                            "type": "Identifier",
                            "start": 2249,
                            "end": 2255,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 2256,
                            "end": 2265,
                            "name": "MIN_VALUE"
                          },
                          "computed": false,
                          "optional": false
                        }
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 2268,
                        "end": 2270,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2269,
                          "end": 2270,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2288,
      "end": 2440,
      "test": {
        "type": "BinaryExpression",
        "start": 2292,
        "end": 2328,
        "left": {
          "type": "CallExpression",
          "start": 2292,
          "end": 2319,
          "callee": {
            "type": "Identifier",
            "start": 2292,
            "end": 2297,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 2298,
              "end": 2318,
              "left": {
                "type": "MemberExpression",
                "start": 2298,
                "end": 2314,
                "object": {
                  "type": "Identifier",
                  "start": 2298,
                  "end": 2304,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2305,
                  "end": 2314,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 2317,
                "end": 2318,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2324,
          "end": 2328,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2330,
        "end": 2440,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2334,
            "end": 2438,
            "argument": {
              "type": "NewExpression",
              "start": 2340,
              "end": 2437,
              "callee": {
                "type": "Identifier",
                "start": 2344,
                "end": 2356,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2357,
                  "end": 2436,
                  "left": {
                    "type": "Literal",
                    "start": 2357,
                    "end": 2411,
                    "value": "#15: Number.MAX_VALUE % 0 === Not-a-Number. Actual: ",
                    "raw": "'#15: Number.MAX_VALUE % 0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2414,
                    "end": 2436,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2415,
                      "end": 2435,
                      "left": {
                        "type": "MemberExpression",
                        "start": 2415,
                        "end": 2431,
                        "object": {
                          "type": "Identifier",
                          "start": 2415,
                          "end": 2421,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2422,
                          "end": 2431,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 2434,
                        "end": 2435,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2453,
      "end": 2608,
      "test": {
        "type": "BinaryExpression",
        "start": 2457,
        "end": 2494,
        "left": {
          "type": "CallExpression",
          "start": 2457,
          "end": 2485,
          "callee": {
            "type": "Identifier",
            "start": 2457,
            "end": 2462,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 2463,
              "end": 2484,
              "left": {
                "type": "MemberExpression",
                "start": 2463,
                "end": 2479,
                "object": {
                  "type": "Identifier",
                  "start": 2463,
                  "end": 2469,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2470,
                  "end": 2479,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 2482,
                "end": 2484,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 2483,
                  "end": 2484,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2490,
          "end": 2494,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2496,
        "end": 2608,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2500,
            "end": 2606,
            "argument": {
              "type": "NewExpression",
              "start": 2506,
              "end": 2605,
              "callee": {
                "type": "Identifier",
                "start": 2510,
                "end": 2522,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2523,
                  "end": 2604,
                  "left": {
                    "type": "Literal",
                    "start": 2523,
                    "end": 2578,
                    "value": "#16: Number.MAX_VALUE % -0 === Not-a-Number. Actual: ",
                    "raw": "'#16: Number.MAX_VALUE % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2581,
                    "end": 2604,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 2582,
                      "end": 2603,
                      "left": {
                        "type": "MemberExpression",
                        "start": 2582,
                        "end": 2598,
                        "object": {
                          "type": "Identifier",
                          "start": 2582,
                          "end": 2588,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2589,
                          "end": 2598,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 2601,
                        "end": 2603,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 2602,
                          "end": 2603,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}