{
  "type": "Program",
  "start": 0,
  "end": 1595,
  "body": [
    {
      "type": "IfStatement",
      "start": 360,
      "end": 492,
      "test": {
        "type": "BinaryExpression",
        "start": 364,
        "end": 403,
        "left": {
          "type": "CallExpression",
          "start": 364,
          "end": 394,
          "callee": {
            "type": "Identifier",
            "start": 364,
            "end": 369,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 370,
              "end": 393,
              "left": {
                "type": "MemberExpression",
                "start": 370,
                "end": 380,
                "object": {
                  "type": "Identifier",
                  "start": 370,
                  "end": 376,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 377,
                  "end": 380,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 383,
                "end": 393,
                "object": {
                  "type": "Identifier",
                  "start": 383,
                  "end": 389,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 390,
                  "end": 393,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 399,
          "end": 403,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 405,
        "end": 492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 409,
            "end": 490,
            "argument": {
              "type": "NewExpression",
              "start": 415,
              "end": 489,
              "callee": {
                "type": "Identifier",
                "start": 419,
                "end": 431,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 432,
                  "end": 488,
                  "left": {
                    "type": "Literal",
                    "start": 432,
                    "end": 474,
                    "value": "#1: NaN % NaN === Not-a-Number. Actual: ",
                    "raw": "'#1: NaN % NaN === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 477,
                    "end": 488,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 478,
                      "end": 487,
                      "left": {
                        "type": "Identifier",
                        "start": 478,
                        "end": 481,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 484,
                        "end": 487,
                        "name": "NaN"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 506,
      "end": 629,
      "test": {
        "type": "BinaryExpression",
        "start": 510,
        "end": 541,
        "left": {
          "type": "CallExpression",
          "start": 510,
          "end": 532,
          "callee": {
            "type": "Identifier",
            "start": 510,
            "end": 515,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 516,
              "end": 531,
              "left": {
                "type": "MemberExpression",
                "start": 516,
                "end": 526,
                "object": {
                  "type": "Identifier",
                  "start": 516,
                  "end": 522,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 523,
                  "end": 526,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 529,
                "end": 531,
                "operator": "+",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 530,
                  "end": 531,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 537,
          "end": 541,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 543,
        "end": 629,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 547,
            "end": 626,
            "argument": {
              "type": "NewExpression",
              "start": 553,
              "end": 625,
              "callee": {
                "type": "Identifier",
                "start": 557,
                "end": 569,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 570,
                  "end": 624,
                  "left": {
                    "type": "Literal",
                    "start": 570,
                    "end": 611,
                    "value": "#2: NaN % +0 === Not-a-Number. Actual: ",
                    "raw": "'#2: NaN % +0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 614,
                    "end": 624,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 615,
                      "end": 623,
                      "left": {
                        "type": "Identifier",
                        "start": 615,
                        "end": 618,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 621,
                        "end": 623,
                        "operator": "+",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 622,
                          "end": 623,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 642,
      "end": 765,
      "test": {
        "type": "BinaryExpression",
        "start": 646,
        "end": 677,
        "left": {
          "type": "CallExpression",
          "start": 646,
          "end": 668,
          "callee": {
            "type": "Identifier",
            "start": 646,
            "end": 651,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 652,
              "end": 667,
              "left": {
                "type": "MemberExpression",
                "start": 652,
                "end": 662,
                "object": {
                  "type": "Identifier",
                  "start": 652,
                  "end": 658,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 659,
                  "end": 662,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "UnaryExpression",
                "start": 665,
                "end": 667,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 666,
                  "end": 667,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 673,
          "end": 677,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 679,
        "end": 765,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 683,
            "end": 762,
            "argument": {
              "type": "NewExpression",
              "start": 689,
              "end": 761,
              "callee": {
                "type": "Identifier",
                "start": 693,
                "end": 705,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 706,
                  "end": 760,
                  "left": {
                    "type": "Literal",
                    "start": 706,
                    "end": 747,
                    "value": "#3: NaN % -0 === Not-a-Number. Actual: ",
                    "raw": "'#3: NaN % -0 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 750,
                    "end": 760,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 751,
                      "end": 759,
                      "left": {
                        "type": "Identifier",
                        "start": 751,
                        "end": 754,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 757,
                        "end": 759,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Literal",
                          "start": 758,
                          "end": 759,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 778,
      "end": 934,
      "test": {
        "type": "BinaryExpression",
        "start": 782,
        "end": 835,
        "left": {
          "type": "CallExpression",
          "start": 782,
          "end": 826,
          "callee": {
            "type": "Identifier",
            "start": 782,
            "end": 787,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 788,
              "end": 825,
              "left": {
                "type": "MemberExpression",
                "start": 788,
                "end": 798,
                "object": {
                  "type": "Identifier",
                  "start": 788,
                  "end": 794,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 795,
                  "end": 798,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 801,
                "end": 825,
                "object": {
                  "type": "Identifier",
                  "start": 801,
                  "end": 807,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 808,
                  "end": 825,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 831,
          "end": 835,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 837,
        "end": 934,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 841,
            "end": 932,
            "argument": {
              "type": "NewExpression",
              "start": 847,
              "end": 931,
              "callee": {
                "type": "Identifier",
                "start": 851,
                "end": 863,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 864,
                  "end": 930,
                  "left": {
                    "type": "Literal",
                    "start": 864,
                    "end": 911,
                    "value": "#4: NaN % Infinity === Not-a-Number. Actual: ",
                    "raw": "'#4: NaN % Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 914,
                    "end": 930,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 915,
                      "end": 929,
                      "left": {
                        "type": "Identifier",
                        "start": 915,
                        "end": 918,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 921,
                        "end": 929,
                        "name": "Infinity"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 947,
      "end": 1106,
      "test": {
        "type": "BinaryExpression",
        "start": 951,
        "end": 1004,
        "left": {
          "type": "CallExpression",
          "start": 951,
          "end": 995,
          "callee": {
            "type": "Identifier",
            "start": 951,
            "end": 956,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 957,
              "end": 994,
              "left": {
                "type": "MemberExpression",
                "start": 957,
                "end": 967,
                "object": {
                  "type": "Identifier",
                  "start": 957,
                  "end": 963,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 964,
                  "end": 967,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 970,
                "end": 994,
                "object": {
                  "type": "Identifier",
                  "start": 970,
                  "end": 976,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 977,
                  "end": 994,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1000,
          "end": 1004,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1006,
        "end": 1106,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1010,
            "end": 1103,
            "argument": {
              "type": "NewExpression",
              "start": 1016,
              "end": 1102,
              "callee": {
                "type": "Identifier",
                "start": 1020,
                "end": 1032,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1033,
                  "end": 1101,
                  "left": {
                    "type": "Literal",
                    "start": 1033,
                    "end": 1081,
                    "value": "#5: NaN % -Infinity === Not-a-Number. Actual: ",
                    "raw": "'#5: NaN % -Infinity === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1084,
                    "end": 1101,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1085,
                      "end": 1100,
                      "left": {
                        "type": "Identifier",
                        "start": 1085,
                        "end": 1088,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "UnaryExpression",
                        "start": 1091,
                        "end": 1100,
                        "operator": "-",
                        "prefix": true,
                        "argument": {
                          "type": "Identifier",
                          "start": 1092,
                          "end": 1100,
                          "name": "Infinity"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1119,
      "end": 1283,
      "test": {
        "type": "BinaryExpression",
        "start": 1123,
        "end": 1168,
        "left": {
          "type": "CallExpression",
          "start": 1123,
          "end": 1159,
          "callee": {
            "type": "Identifier",
            "start": 1123,
            "end": 1128,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1129,
              "end": 1158,
              "left": {
                "type": "MemberExpression",
                "start": 1129,
                "end": 1139,
                "object": {
                  "type": "Identifier",
                  "start": 1129,
                  "end": 1135,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1136,
                  "end": 1139,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 1142,
                "end": 1158,
                "object": {
                  "type": "Identifier",
                  "start": 1142,
                  "end": 1148,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1149,
                  "end": 1158,
                  "name": "MAX_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1164,
          "end": 1168,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1170,
        "end": 1283,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1174,
            "end": 1281,
            "argument": {
              "type": "NewExpression",
              "start": 1180,
              "end": 1280,
              "callee": {
                "type": "Identifier",
                "start": 1184,
                "end": 1196,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1197,
                  "end": 1279,
                  "left": {
                    "type": "Literal",
                    "start": 1197,
                    "end": 1252,
                    "value": "#6: NaN % Number.MAX_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#6: NaN % Number.MAX_VALUE === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1255,
                    "end": 1279,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1256,
                      "end": 1278,
                      "left": {
                        "type": "Identifier",
                        "start": 1256,
                        "end": 1259,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1262,
                        "end": 1278,
                        "object": {
                          "type": "Identifier",
                          "start": 1262,
                          "end": 1268,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1269,
                          "end": 1278,
                          "name": "MAX_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1296,
      "end": 1461,
      "test": {
        "type": "BinaryExpression",
        "start": 1300,
        "end": 1345,
        "left": {
          "type": "CallExpression",
          "start": 1300,
          "end": 1336,
          "callee": {
            "type": "Identifier",
            "start": 1300,
            "end": 1305,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1306,
              "end": 1335,
              "left": {
                "type": "MemberExpression",
                "start": 1306,
                "end": 1316,
                "object": {
                  "type": "Identifier",
                  "start": 1306,
                  "end": 1312,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1313,
                  "end": 1316,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "MemberExpression",
                "start": 1319,
                "end": 1335,
                "object": {
                  "type": "Identifier",
                  "start": 1319,
                  "end": 1325,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1326,
                  "end": 1335,
                  "name": "MIN_VALUE"
                },
                "computed": false,
                "optional": false
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1341,
          "end": 1345,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1347,
        "end": 1461,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1351,
            "end": 1458,
            "argument": {
              "type": "NewExpression",
              "start": 1357,
              "end": 1457,
              "callee": {
                "type": "Identifier",
                "start": 1361,
                "end": 1373,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1374,
                  "end": 1456,
                  "left": {
                    "type": "Literal",
                    "start": 1374,
                    "end": 1429,
                    "value": "#7: NaN % Number.MIN_VALUE === Not-a-Number. Actual: ",
                    "raw": "'#7: NaN % Number.MIN_VALUE === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1432,
                    "end": 1456,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1433,
                      "end": 1455,
                      "left": {
                        "type": "Identifier",
                        "start": 1433,
                        "end": 1436,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "MemberExpression",
                        "start": 1439,
                        "end": 1455,
                        "object": {
                          "type": "Identifier",
                          "start": 1439,
                          "end": 1445,
                          "name": "Number"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1446,
                          "end": 1455,
                          "name": "MIN_VALUE"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1473,
      "end": 1594,
      "test": {
        "type": "BinaryExpression",
        "start": 1477,
        "end": 1507,
        "left": {
          "type": "CallExpression",
          "start": 1477,
          "end": 1498,
          "callee": {
            "type": "Identifier",
            "start": 1477,
            "end": 1482,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1483,
              "end": 1497,
              "left": {
                "type": "MemberExpression",
                "start": 1483,
                "end": 1493,
                "object": {
                  "type": "Identifier",
                  "start": 1483,
                  "end": 1489,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1490,
                  "end": 1493,
                  "name": "NaN"
                },
                "computed": false,
                "optional": false
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1496,
                "end": 1497,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1503,
          "end": 1507,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1509,
        "end": 1594,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1513,
            "end": 1590,
            "argument": {
              "type": "NewExpression",
              "start": 1519,
              "end": 1589,
              "callee": {
                "type": "Identifier",
                "start": 1523,
                "end": 1535,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1536,
                  "end": 1588,
                  "left": {
                    "type": "Literal",
                    "start": 1536,
                    "end": 1576,
                    "value": "#8: NaN % 1 === Not-a-Number. Actual: ",
                    "raw": "'#8: NaN % 1 === Not-a-Number. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1579,
                    "end": 1588,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1580,
                      "end": 1587,
                      "left": {
                        "type": "Identifier",
                        "start": 1580,
                        "end": 1583,
                        "name": "NaN"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 1586,
                        "end": 1587,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}