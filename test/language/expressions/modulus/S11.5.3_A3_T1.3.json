{
  "type": "Program",
  "start": 0,
  "end": 1143,
  "body": [
    {
      "type": "IfStatement",
      "start": 314,
      "end": 411,
      "test": {
        "type": "BinaryExpression",
        "start": 318,
        "end": 333,
        "left": {
          "type": "BinaryExpression",
          "start": 318,
          "end": 327,
          "left": {
            "type": "Literal",
            "start": 318,
            "end": 321,
            "value": "1",
            "raw": "\"1\""
          },
          "operator": "%",
          "right": {
            "type": "Literal",
            "start": 324,
            "end": 327,
            "value": "1",
            "raw": "\"1\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 332,
          "end": 333,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 335,
        "end": 411,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 339,
            "end": 409,
            "argument": {
              "type": "NewExpression",
              "start": 345,
              "end": 408,
              "callee": {
                "type": "Identifier",
                "start": 349,
                "end": 361,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 362,
                  "end": 407,
                  "left": {
                    "type": "Literal",
                    "start": 362,
                    "end": 393,
                    "value": "#1: \"1\" % \"1\" === 0. Actual: ",
                    "raw": "'#1: \"1\" % \"1\" === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 396,
                    "end": 407,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 397,
                      "end": 406,
                      "left": {
                        "type": "Literal",
                        "start": 397,
                        "end": 400,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 403,
                        "end": 406,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 423,
      "end": 556,
      "test": {
        "type": "BinaryExpression",
        "start": 427,
        "end": 454,
        "left": {
          "type": "BinaryExpression",
          "start": 427,
          "end": 448,
          "left": {
            "type": "NewExpression",
            "start": 427,
            "end": 442,
            "callee": {
              "type": "Identifier",
              "start": 431,
              "end": 437,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 438,
                "end": 441,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          },
          "operator": "%",
          "right": {
            "type": "Literal",
            "start": 445,
            "end": 448,
            "value": "1",
            "raw": "\"1\""
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 453,
          "end": 454,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 456,
        "end": 556,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 460,
            "end": 554,
            "argument": {
              "type": "NewExpression",
              "start": 466,
              "end": 553,
              "callee": {
                "type": "Identifier",
                "start": 470,
                "end": 482,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 483,
                  "end": 552,
                  "left": {
                    "type": "Literal",
                    "start": 483,
                    "end": 526,
                    "value": "#2: new String(\"1\") % \"1\" === 0. Actual: ",
                    "raw": "'#2: new String(\"1\") % \"1\" === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 529,
                    "end": 552,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 530,
                      "end": 551,
                      "left": {
                        "type": "NewExpression",
                        "start": 530,
                        "end": 545,
                        "callee": {
                          "type": "Identifier",
                          "start": 534,
                          "end": 540,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 541,
                            "end": 544,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 548,
                        "end": 551,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 568,
      "end": 701,
      "test": {
        "type": "BinaryExpression",
        "start": 572,
        "end": 599,
        "left": {
          "type": "BinaryExpression",
          "start": 572,
          "end": 593,
          "left": {
            "type": "Literal",
            "start": 572,
            "end": 575,
            "value": "1",
            "raw": "\"1\""
          },
          "operator": "%",
          "right": {
            "type": "NewExpression",
            "start": 578,
            "end": 593,
            "callee": {
              "type": "Identifier",
              "start": 582,
              "end": 588,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 589,
                "end": 592,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 598,
          "end": 599,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 601,
        "end": 701,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 605,
            "end": 699,
            "argument": {
              "type": "NewExpression",
              "start": 611,
              "end": 698,
              "callee": {
                "type": "Identifier",
                "start": 615,
                "end": 627,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 628,
                  "end": 697,
                  "left": {
                    "type": "Literal",
                    "start": 628,
                    "end": 671,
                    "value": "#3: \"1\" % new String(\"1\") === 0. Actual: ",
                    "raw": "'#3: \"1\" % new String(\"1\") === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 674,
                    "end": 697,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 675,
                      "end": 696,
                      "left": {
                        "type": "Literal",
                        "start": 675,
                        "end": 678,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "start": 681,
                        "end": 696,
                        "callee": {
                          "type": "Identifier",
                          "start": 685,
                          "end": 691,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 692,
                            "end": 695,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 713,
      "end": 882,
      "test": {
        "type": "BinaryExpression",
        "start": 717,
        "end": 756,
        "left": {
          "type": "BinaryExpression",
          "start": 717,
          "end": 750,
          "left": {
            "type": "NewExpression",
            "start": 717,
            "end": 732,
            "callee": {
              "type": "Identifier",
              "start": 721,
              "end": 727,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 728,
                "end": 731,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          },
          "operator": "%",
          "right": {
            "type": "NewExpression",
            "start": 735,
            "end": 750,
            "callee": {
              "type": "Identifier",
              "start": 739,
              "end": 745,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 746,
                "end": 749,
                "value": "1",
                "raw": "\"1\""
              }
            ]
          }
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 755,
          "end": 756,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 758,
        "end": 882,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 762,
            "end": 880,
            "argument": {
              "type": "NewExpression",
              "start": 768,
              "end": 879,
              "callee": {
                "type": "Identifier",
                "start": 772,
                "end": 784,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 785,
                  "end": 878,
                  "left": {
                    "type": "Literal",
                    "start": 785,
                    "end": 840,
                    "value": "#4: new String(\"1\") % new String(\"1\") === 0. Actual: ",
                    "raw": "'#4: new String(\"1\") % new String(\"1\") === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 843,
                    "end": 878,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 844,
                      "end": 877,
                      "left": {
                        "type": "NewExpression",
                        "start": 844,
                        "end": 859,
                        "callee": {
                          "type": "Identifier",
                          "start": 848,
                          "end": 854,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 855,
                            "end": 858,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "start": 862,
                        "end": 877,
                        "callee": {
                          "type": "Identifier",
                          "start": 866,
                          "end": 872,
                          "name": "String"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 873,
                            "end": 876,
                            "value": "1",
                            "raw": "\"1\""
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 894,
      "end": 1012,
      "test": {
        "type": "BinaryExpression",
        "start": 898,
        "end": 923,
        "left": {
          "type": "CallExpression",
          "start": 898,
          "end": 914,
          "callee": {
            "type": "Identifier",
            "start": 898,
            "end": 903,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 904,
              "end": 913,
              "left": {
                "type": "Literal",
                "start": 904,
                "end": 907,
                "value": "x",
                "raw": "\"x\""
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 910,
                "end": 913,
                "value": "1",
                "raw": "\"1\""
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 919,
          "end": 923,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 925,
        "end": 1012,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 929,
            "end": 1010,
            "argument": {
              "type": "NewExpression",
              "start": 935,
              "end": 1009,
              "callee": {
                "type": "Identifier",
                "start": 939,
                "end": 951,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 952,
                  "end": 1008,
                  "left": {
                    "type": "Literal",
                    "start": 952,
                    "end": 994,
                    "value": "#5: \"x\" % \"1\" === Not-a-Number. Actual: ",
                    "raw": "'#5: \"x\" % \"1\" === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 997,
                    "end": 1008,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 998,
                      "end": 1007,
                      "left": {
                        "type": "Literal",
                        "start": 998,
                        "end": 1001,
                        "value": "x",
                        "raw": "\"x\""
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 1004,
                        "end": 1007,
                        "value": "1",
                        "raw": "\"1\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1024,
      "end": 1142,
      "test": {
        "type": "BinaryExpression",
        "start": 1028,
        "end": 1053,
        "left": {
          "type": "CallExpression",
          "start": 1028,
          "end": 1044,
          "callee": {
            "type": "Identifier",
            "start": 1028,
            "end": 1033,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 1034,
              "end": 1043,
              "left": {
                "type": "Literal",
                "start": 1034,
                "end": 1037,
                "value": "1",
                "raw": "\"1\""
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 1040,
                "end": 1043,
                "value": "x",
                "raw": "\"x\""
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1049,
          "end": 1053,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1055,
        "end": 1142,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1059,
            "end": 1140,
            "argument": {
              "type": "NewExpression",
              "start": 1065,
              "end": 1139,
              "callee": {
                "type": "Identifier",
                "start": 1069,
                "end": 1081,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1082,
                  "end": 1138,
                  "left": {
                    "type": "Literal",
                    "start": 1082,
                    "end": 1124,
                    "value": "#6: \"1\" % \"x\" === Not-a-Number. Actual: ",
                    "raw": "'#6: \"1\" % \"x\" === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1127,
                    "end": 1138,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 1128,
                      "end": 1137,
                      "left": {
                        "type": "Literal",
                        "start": 1128,
                        "end": 1131,
                        "value": "1",
                        "raw": "\"1\""
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 1134,
                        "end": 1137,
                        "value": "x",
                        "raw": "\"x\""
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}