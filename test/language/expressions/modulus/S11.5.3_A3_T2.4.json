{
  "type": "Program",
  "start": 0,
  "end": 990,
  "body": [
    {
      "type": "IfStatement",
      "start": 361,
      "end": 491,
      "test": {
        "type": "BinaryExpression",
        "start": 365,
        "end": 394,
        "left": {
          "type": "CallExpression",
          "start": 365,
          "end": 385,
          "callee": {
            "type": "Identifier",
            "start": 365,
            "end": 370,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 371,
              "end": 384,
              "left": {
                "type": "Literal",
                "start": 371,
                "end": 372,
                "value": 1,
                "raw": "1"
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "start": 375,
                "end": 384,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 390,
          "end": 394,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 396,
        "end": 491,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 400,
            "end": 489,
            "argument": {
              "type": "NewExpression",
              "start": 406,
              "end": 488,
              "callee": {
                "type": "Identifier",
                "start": 410,
                "end": 422,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 423,
                  "end": 487,
                  "left": {
                    "type": "Literal",
                    "start": 423,
                    "end": 469,
                    "value": "#1: 1 % undefined === Not-a-Number. Actual: ",
                    "raw": "'#1: 1 % undefined === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 472,
                    "end": 487,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 473,
                      "end": 486,
                      "left": {
                        "type": "Literal",
                        "start": 473,
                        "end": 474,
                        "value": 1,
                        "raw": "1"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 477,
                        "end": 486,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 503,
      "end": 633,
      "test": {
        "type": "BinaryExpression",
        "start": 507,
        "end": 536,
        "left": {
          "type": "CallExpression",
          "start": 507,
          "end": 527,
          "callee": {
            "type": "Identifier",
            "start": 507,
            "end": 512,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 513,
              "end": 526,
              "left": {
                "type": "Identifier",
                "start": 513,
                "end": 522,
                "name": "undefined"
              },
              "operator": "%",
              "right": {
                "type": "Literal",
                "start": 525,
                "end": 526,
                "value": 1,
                "raw": "1"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 532,
          "end": 536,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 538,
        "end": 633,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 542,
            "end": 631,
            "argument": {
              "type": "NewExpression",
              "start": 548,
              "end": 630,
              "callee": {
                "type": "Identifier",
                "start": 552,
                "end": 564,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 565,
                  "end": 629,
                  "left": {
                    "type": "Literal",
                    "start": 565,
                    "end": 611,
                    "value": "#2: undefined % 1 === Not-a-Number. Actual: ",
                    "raw": "'#2: undefined % 1 === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 614,
                    "end": 629,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 615,
                      "end": 628,
                      "left": {
                        "type": "Identifier",
                        "start": 615,
                        "end": 624,
                        "name": "undefined"
                      },
                      "operator": "%",
                      "right": {
                        "type": "Literal",
                        "start": 627,
                        "end": 628,
                        "value": 1,
                        "raw": "1"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 645,
      "end": 811,
      "test": {
        "type": "BinaryExpression",
        "start": 649,
        "end": 690,
        "left": {
          "type": "CallExpression",
          "start": 649,
          "end": 681,
          "callee": {
            "type": "Identifier",
            "start": 649,
            "end": 654,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 655,
              "end": 680,
              "left": {
                "type": "NewExpression",
                "start": 655,
                "end": 668,
                "callee": {
                  "type": "Identifier",
                  "start": 659,
                  "end": 665,
                  "name": "Number"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 666,
                    "end": 667,
                    "value": 1,
                    "raw": "1"
                  }
                ]
              },
              "operator": "%",
              "right": {
                "type": "Identifier",
                "start": 671,
                "end": 680,
                "name": "undefined"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 686,
          "end": 690,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 692,
        "end": 811,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 696,
            "end": 809,
            "argument": {
              "type": "NewExpression",
              "start": 702,
              "end": 808,
              "callee": {
                "type": "Identifier",
                "start": 706,
                "end": 718,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 719,
                  "end": 807,
                  "left": {
                    "type": "Literal",
                    "start": 719,
                    "end": 777,
                    "value": "#3: new Number(1) % undefined === Not-a-Number. Actual: ",
                    "raw": "'#3: new Number(1) % undefined === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 780,
                    "end": 807,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 781,
                      "end": 806,
                      "left": {
                        "type": "NewExpression",
                        "start": 781,
                        "end": 794,
                        "callee": {
                          "type": "Identifier",
                          "start": 785,
                          "end": 791,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 792,
                            "end": 793,
                            "value": 1,
                            "raw": "1"
                          }
                        ]
                      },
                      "operator": "%",
                      "right": {
                        "type": "Identifier",
                        "start": 797,
                        "end": 806,
                        "name": "undefined"
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 823,
      "end": 989,
      "test": {
        "type": "BinaryExpression",
        "start": 827,
        "end": 868,
        "left": {
          "type": "CallExpression",
          "start": 827,
          "end": 859,
          "callee": {
            "type": "Identifier",
            "start": 827,
            "end": 832,
            "name": "isNaN"
          },
          "arguments": [
            {
              "type": "BinaryExpression",
              "start": 833,
              "end": 858,
              "left": {
                "type": "Identifier",
                "start": 833,
                "end": 842,
                "name": "undefined"
              },
              "operator": "%",
              "right": {
                "type": "NewExpression",
                "start": 845,
                "end": 858,
                "callee": {
                  "type": "Identifier",
                  "start": 849,
                  "end": 855,
                  "name": "Number"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 856,
                    "end": 857,
                    "value": 1,
                    "raw": "1"
                  }
                ]
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 864,
          "end": 868,
          "value": true,
          "raw": "true"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 870,
        "end": 989,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 874,
            "end": 987,
            "argument": {
              "type": "NewExpression",
              "start": 880,
              "end": 986,
              "callee": {
                "type": "Identifier",
                "start": 884,
                "end": 896,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 897,
                  "end": 985,
                  "left": {
                    "type": "Literal",
                    "start": 897,
                    "end": 955,
                    "value": "#4: undefined % new Number(1) === Not-a-Number. Actual: ",
                    "raw": "'#4: undefined % new Number(1) === Not-a-Number. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 958,
                    "end": 985,
                    "expression": {
                      "type": "BinaryExpression",
                      "start": 959,
                      "end": 984,
                      "left": {
                        "type": "Identifier",
                        "start": 959,
                        "end": 968,
                        "name": "undefined"
                      },
                      "operator": "%",
                      "right": {
                        "type": "NewExpression",
                        "start": 971,
                        "end": 984,
                        "callee": {
                          "type": "Identifier",
                          "start": 975,
                          "end": 981,
                          "name": "Number"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 982,
                            "end": 983,
                            "value": 1,
                            "raw": "1"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}