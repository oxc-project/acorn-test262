{
  "type": "Program",
  "start": 0,
  "end": 1485,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 888,
      "end": 898,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 892,
          "end": 897,
          "id": {
            "type": "Identifier",
            "start": 892,
            "end": 893,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 896,
            "end": 897,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 901,
      "end": 1086,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 905,
          "end": 1085,
          "id": {
            "type": "Identifier",
            "start": 905,
            "end": 906,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 909,
            "end": 1085,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 915,
              "end": 1085,
              "body": [
                {
                  "type": "MethodDefinition",
                  "start": 919,
                  "end": 953,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "LogicalExpression",
                    "start": 924,
                    "end": 930,
                    "left": {
                      "type": "Identifier",
                      "start": 924,
                      "end": 925,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 929,
                      "end": 930,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "kind": "get",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 931,
                    "end": 953,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 934,
                      "end": 953,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 940,
                          "end": 949,
                          "argument": {
                            "type": "Literal",
                            "start": 947,
                            "end": 948,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "MethodDefinition",
                  "start": 957,
                  "end": 992,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "LogicalExpression",
                    "start": 962,
                    "end": 968,
                    "left": {
                      "type": "Identifier",
                      "start": 962,
                      "end": 963,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 967,
                      "end": 968,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "kind": "set",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 969,
                    "end": 992,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "start": 970,
                        "end": 971,
                        "name": "v"
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "start": 973,
                      "end": 992,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 979,
                          "end": 988,
                          "argument": {
                            "type": "Literal",
                            "start": 986,
                            "end": 987,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "MethodDefinition",
                  "start": 996,
                  "end": 1037,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "LogicalExpression",
                    "start": 1008,
                    "end": 1014,
                    "left": {
                      "type": "Identifier",
                      "start": 1008,
                      "end": 1009,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1013,
                      "end": 1014,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "kind": "get",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1015,
                    "end": 1037,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1018,
                      "end": 1037,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1024,
                          "end": 1033,
                          "argument": {
                            "type": "Literal",
                            "start": 1031,
                            "end": 1032,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "MethodDefinition",
                  "start": 1041,
                  "end": 1083,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "LogicalExpression",
                    "start": 1053,
                    "end": 1059,
                    "left": {
                      "type": "Identifier",
                      "start": 1053,
                      "end": 1054,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1058,
                      "end": 1059,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "kind": "set",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 1060,
                    "end": 1083,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [
                      {
                        "type": "Identifier",
                        "start": 1061,
                        "end": 1062,
                        "name": "v"
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1064,
                      "end": 1083,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1070,
                          "end": 1079,
                          "argument": {
                            "type": "Literal",
                            "start": 1077,
                            "end": 1078,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1088,
      "end": 1104,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1092,
          "end": 1103,
          "id": {
            "type": "Identifier",
            "start": 1092,
            "end": 1093,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1096,
            "end": 1103,
            "callee": {
              "type": "Identifier",
              "start": 1100,
              "end": 1101,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1106,
      "end": 1143,
      "expression": {
        "type": "CallExpression",
        "start": 1106,
        "end": 1142,
        "callee": {
          "type": "MemberExpression",
          "start": 1106,
          "end": 1122,
          "object": {
            "type": "Identifier",
            "start": 1106,
            "end": 1112,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1113,
            "end": 1122,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1126,
            "end": 1135,
            "object": {
              "type": "Identifier",
              "start": 1126,
              "end": 1127,
              "name": "c"
            },
            "property": {
              "type": "LogicalExpression",
              "start": 1128,
              "end": 1134,
              "left": {
                "type": "Identifier",
                "start": 1128,
                "end": 1129,
                "name": "x"
              },
              "operator": "&&",
              "right": {
                "type": "Literal",
                "start": 1133,
                "end": 1134,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1139,
            "end": 1140,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1144,
      "end": 1185,
      "expression": {
        "type": "CallExpression",
        "start": 1144,
        "end": 1184,
        "callee": {
          "type": "MemberExpression",
          "start": 1144,
          "end": 1160,
          "object": {
            "type": "Identifier",
            "start": 1144,
            "end": 1150,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1151,
            "end": 1160,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1164,
            "end": 1177,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1164,
              "end": 1173,
              "object": {
                "type": "Identifier",
                "start": 1164,
                "end": 1165,
                "name": "c"
              },
              "property": {
                "type": "LogicalExpression",
                "start": 1166,
                "end": 1172,
                "left": {
                  "type": "Identifier",
                  "start": 1166,
                  "end": 1167,
                  "name": "x"
                },
                "operator": "&&",
                "right": {
                  "type": "Literal",
                  "start": 1171,
                  "end": 1172,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1176,
              "end": 1177,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1181,
            "end": 1182,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1187,
      "end": 1224,
      "expression": {
        "type": "CallExpression",
        "start": 1187,
        "end": 1223,
        "callee": {
          "type": "MemberExpression",
          "start": 1187,
          "end": 1203,
          "object": {
            "type": "Identifier",
            "start": 1187,
            "end": 1193,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1194,
            "end": 1203,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1207,
            "end": 1216,
            "object": {
              "type": "Identifier",
              "start": 1207,
              "end": 1208,
              "name": "C"
            },
            "property": {
              "type": "LogicalExpression",
              "start": 1209,
              "end": 1215,
              "left": {
                "type": "Identifier",
                "start": 1209,
                "end": 1210,
                "name": "x"
              },
              "operator": "&&",
              "right": {
                "type": "Literal",
                "start": 1214,
                "end": 1215,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1220,
            "end": 1221,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1225,
      "end": 1266,
      "expression": {
        "type": "CallExpression",
        "start": 1225,
        "end": 1265,
        "callee": {
          "type": "MemberExpression",
          "start": 1225,
          "end": 1241,
          "object": {
            "type": "Identifier",
            "start": 1225,
            "end": 1231,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1232,
            "end": 1241,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1245,
            "end": 1258,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1245,
              "end": 1254,
              "object": {
                "type": "Identifier",
                "start": 1245,
                "end": 1246,
                "name": "C"
              },
              "property": {
                "type": "LogicalExpression",
                "start": 1247,
                "end": 1253,
                "left": {
                  "type": "Identifier",
                  "start": 1247,
                  "end": 1248,
                  "name": "x"
                },
                "operator": "&&",
                "right": {
                  "type": "Literal",
                  "start": 1252,
                  "end": 1253,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1257,
              "end": 1258,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1262,
            "end": 1263,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1267,
      "end": 1312,
      "expression": {
        "type": "CallExpression",
        "start": 1267,
        "end": 1311,
        "callee": {
          "type": "MemberExpression",
          "start": 1267,
          "end": 1283,
          "object": {
            "type": "Identifier",
            "start": 1267,
            "end": 1273,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1274,
            "end": 1283,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1287,
            "end": 1304,
            "object": {
              "type": "Identifier",
              "start": 1287,
              "end": 1288,
              "name": "c"
            },
            "property": {
              "type": "CallExpression",
              "start": 1289,
              "end": 1303,
              "callee": {
                "type": "Identifier",
                "start": 1289,
                "end": 1295,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "LogicalExpression",
                  "start": 1296,
                  "end": 1302,
                  "left": {
                    "type": "Identifier",
                    "start": 1296,
                    "end": 1297,
                    "name": "x"
                  },
                  "operator": "&&",
                  "right": {
                    "type": "Literal",
                    "start": 1301,
                    "end": 1302,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1308,
            "end": 1309,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1313,
      "end": 1362,
      "expression": {
        "type": "CallExpression",
        "start": 1313,
        "end": 1361,
        "callee": {
          "type": "MemberExpression",
          "start": 1313,
          "end": 1329,
          "object": {
            "type": "Identifier",
            "start": 1313,
            "end": 1319,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1320,
            "end": 1329,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1333,
            "end": 1354,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1333,
              "end": 1350,
              "object": {
                "type": "Identifier",
                "start": 1333,
                "end": 1334,
                "name": "c"
              },
              "property": {
                "type": "CallExpression",
                "start": 1335,
                "end": 1349,
                "callee": {
                  "type": "Identifier",
                  "start": 1335,
                  "end": 1341,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "LogicalExpression",
                    "start": 1342,
                    "end": 1348,
                    "left": {
                      "type": "Identifier",
                      "start": 1342,
                      "end": 1343,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1347,
                      "end": 1348,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1353,
              "end": 1354,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1358,
            "end": 1359,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1364,
      "end": 1409,
      "expression": {
        "type": "CallExpression",
        "start": 1364,
        "end": 1408,
        "callee": {
          "type": "MemberExpression",
          "start": 1364,
          "end": 1380,
          "object": {
            "type": "Identifier",
            "start": 1364,
            "end": 1370,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1371,
            "end": 1380,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1384,
            "end": 1401,
            "object": {
              "type": "Identifier",
              "start": 1384,
              "end": 1385,
              "name": "C"
            },
            "property": {
              "type": "CallExpression",
              "start": 1386,
              "end": 1400,
              "callee": {
                "type": "Identifier",
                "start": 1386,
                "end": 1392,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "LogicalExpression",
                  "start": 1393,
                  "end": 1399,
                  "left": {
                    "type": "Identifier",
                    "start": 1393,
                    "end": 1394,
                    "name": "x"
                  },
                  "operator": "&&",
                  "right": {
                    "type": "Literal",
                    "start": 1398,
                    "end": 1399,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1405,
            "end": 1406,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1410,
      "end": 1459,
      "expression": {
        "type": "CallExpression",
        "start": 1410,
        "end": 1458,
        "callee": {
          "type": "MemberExpression",
          "start": 1410,
          "end": 1426,
          "object": {
            "type": "Identifier",
            "start": 1410,
            "end": 1416,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1417,
            "end": 1426,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "AssignmentExpression",
            "start": 1430,
            "end": 1451,
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "start": 1430,
              "end": 1447,
              "object": {
                "type": "Identifier",
                "start": 1430,
                "end": 1431,
                "name": "C"
              },
              "property": {
                "type": "CallExpression",
                "start": 1432,
                "end": 1446,
                "callee": {
                  "type": "Identifier",
                  "start": 1432,
                  "end": 1438,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "LogicalExpression",
                    "start": 1439,
                    "end": 1445,
                    "left": {
                      "type": "Identifier",
                      "start": 1439,
                      "end": 1440,
                      "name": "x"
                    },
                    "operator": "&&",
                    "right": {
                      "type": "Literal",
                      "start": 1444,
                      "end": 1445,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "right": {
              "type": "Literal",
              "start": 1450,
              "end": 1451,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 1455,
            "end": 1456,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1461,
      "end": 1484,
      "expression": {
        "type": "CallExpression",
        "start": 1461,
        "end": 1483,
        "callee": {
          "type": "MemberExpression",
          "start": 1461,
          "end": 1477,
          "object": {
            "type": "Identifier",
            "start": 1461,
            "end": 1467,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1468,
            "end": 1477,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1478,
            "end": 1479,
            "name": "x"
          },
          {
            "type": "Literal",
            "start": 1481,
            "end": 1482,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}