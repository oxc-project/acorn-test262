{
  "type": "Program",
  "start": 0,
  "end": 1230,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 948,
      "end": 1018,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 952,
          "end": 1017,
          "id": {
            "type": "Identifier",
            "start": 952,
            "end": 953,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 956,
            "end": 1017,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 962,
              "end": 1017,
              "body": [
                {
                  "type": "PropertyDefinition",
                  "start": 966,
                  "end": 985,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 967,
                    "end": 979,
                    "test": {
                      "type": "Literal",
                      "start": 967,
                      "end": 971,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 974,
                      "end": 975,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 978,
                      "end": 979,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "Literal",
                    "start": 983,
                    "end": 984,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                },
                {
                  "type": "PropertyDefinition",
                  "start": 989,
                  "end": 1015,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 997,
                    "end": 1009,
                    "test": {
                      "type": "Literal",
                      "start": 997,
                      "end": 1001,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1004,
                      "end": 1005,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1008,
                      "end": 1009,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "Literal",
                    "start": 1013,
                    "end": 1014,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1020,
      "end": 1036,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1024,
          "end": 1035,
          "id": {
            "type": "Identifier",
            "start": 1024,
            "end": 1025,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1028,
            "end": 1035,
            "callee": {
              "type": "Identifier",
              "start": 1032,
              "end": 1033,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1038,
      "end": 1081,
      "expression": {
        "type": "CallExpression",
        "start": 1038,
        "end": 1080,
        "callee": {
          "type": "MemberExpression",
          "start": 1038,
          "end": 1054,
          "object": {
            "type": "Identifier",
            "start": 1038,
            "end": 1044,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1045,
            "end": 1054,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1058,
            "end": 1073,
            "object": {
              "type": "Identifier",
              "start": 1058,
              "end": 1059,
              "name": "c"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1060,
              "end": 1072,
              "test": {
                "type": "Literal",
                "start": 1060,
                "end": 1064,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1067,
                "end": 1068,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1071,
                "end": 1072,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1077,
            "end": 1078,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1082,
      "end": 1125,
      "expression": {
        "type": "CallExpression",
        "start": 1082,
        "end": 1124,
        "callee": {
          "type": "MemberExpression",
          "start": 1082,
          "end": 1098,
          "object": {
            "type": "Identifier",
            "start": 1082,
            "end": 1088,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1089,
            "end": 1098,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1102,
            "end": 1117,
            "object": {
              "type": "Identifier",
              "start": 1102,
              "end": 1103,
              "name": "C"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1104,
              "end": 1116,
              "test": {
                "type": "Literal",
                "start": 1104,
                "end": 1108,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1111,
                "end": 1112,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1115,
                "end": 1116,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1121,
            "end": 1122,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1126,
      "end": 1177,
      "expression": {
        "type": "CallExpression",
        "start": 1126,
        "end": 1176,
        "callee": {
          "type": "MemberExpression",
          "start": 1126,
          "end": 1142,
          "object": {
            "type": "Identifier",
            "start": 1126,
            "end": 1132,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1133,
            "end": 1142,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1146,
            "end": 1169,
            "object": {
              "type": "Identifier",
              "start": 1146,
              "end": 1147,
              "name": "c"
            },
            "property": {
              "type": "CallExpression",
              "start": 1148,
              "end": 1168,
              "callee": {
                "type": "Identifier",
                "start": 1148,
                "end": 1154,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1155,
                  "end": 1167,
                  "test": {
                    "type": "Literal",
                    "start": 1155,
                    "end": 1159,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1162,
                    "end": 1163,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1166,
                    "end": 1167,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1173,
            "end": 1174,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1178,
      "end": 1229,
      "expression": {
        "type": "CallExpression",
        "start": 1178,
        "end": 1228,
        "callee": {
          "type": "MemberExpression",
          "start": 1178,
          "end": 1194,
          "object": {
            "type": "Identifier",
            "start": 1178,
            "end": 1184,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1185,
            "end": 1194,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1198,
            "end": 1221,
            "object": {
              "type": "Identifier",
              "start": 1198,
              "end": 1199,
              "name": "C"
            },
            "property": {
              "type": "CallExpression",
              "start": 1200,
              "end": 1220,
              "callee": {
                "type": "Identifier",
                "start": 1200,
                "end": 1206,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1207,
                  "end": 1219,
                  "test": {
                    "type": "Literal",
                    "start": 1207,
                    "end": 1211,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1214,
                    "end": 1215,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1218,
                    "end": 1219,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1225,
            "end": 1226,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}