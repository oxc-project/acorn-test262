{
  "type": "Program",
  "start": 0,
  "end": 1215,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 892,
      "end": 995,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 896,
          "end": 994,
          "id": {
            "type": "Identifier",
            "start": 896,
            "end": 897,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 900,
            "end": 994,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 906,
              "end": 994,
              "body": [
                {
                  "type": "MethodDefinition",
                  "start": 910,
                  "end": 946,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 911,
                    "end": 923,
                    "test": {
                      "type": "Literal",
                      "start": 911,
                      "end": 915,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 918,
                      "end": 919,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 922,
                      "end": 923,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "kind": "method",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 924,
                    "end": 946,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 927,
                      "end": 946,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 933,
                          "end": 942,
                          "argument": {
                            "type": "Literal",
                            "start": 940,
                            "end": 941,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "MethodDefinition",
                  "start": 949,
                  "end": 992,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 957,
                    "end": 969,
                    "test": {
                      "type": "Literal",
                      "start": 957,
                      "end": 961,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 964,
                      "end": 965,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 968,
                      "end": 969,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "kind": "method",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 970,
                    "end": 992,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 973,
                      "end": 992,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 979,
                          "end": 988,
                          "argument": {
                            "type": "Literal",
                            "start": 986,
                            "end": 987,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 997,
      "end": 1013,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1001,
          "end": 1012,
          "id": {
            "type": "Identifier",
            "start": 1001,
            "end": 1002,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1005,
            "end": 1012,
            "callee": {
              "type": "Identifier",
              "start": 1009,
              "end": 1010,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1015,
      "end": 1060,
      "expression": {
        "type": "CallExpression",
        "start": 1015,
        "end": 1059,
        "callee": {
          "type": "MemberExpression",
          "start": 1015,
          "end": 1031,
          "object": {
            "type": "Identifier",
            "start": 1015,
            "end": 1021,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1022,
            "end": 1031,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1035,
            "end": 1052,
            "callee": {
              "type": "MemberExpression",
              "start": 1035,
              "end": 1050,
              "object": {
                "type": "Identifier",
                "start": 1035,
                "end": 1036,
                "name": "c"
              },
              "property": {
                "type": "ConditionalExpression",
                "start": 1037,
                "end": 1049,
                "test": {
                  "type": "Literal",
                  "start": 1037,
                  "end": 1041,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "consequent": {
                  "type": "Literal",
                  "start": 1044,
                  "end": 1045,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 1048,
                  "end": 1049,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1056,
            "end": 1057,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1061,
      "end": 1106,
      "expression": {
        "type": "CallExpression",
        "start": 1061,
        "end": 1105,
        "callee": {
          "type": "MemberExpression",
          "start": 1061,
          "end": 1077,
          "object": {
            "type": "Identifier",
            "start": 1061,
            "end": 1067,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1068,
            "end": 1077,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1081,
            "end": 1098,
            "callee": {
              "type": "MemberExpression",
              "start": 1081,
              "end": 1096,
              "object": {
                "type": "Identifier",
                "start": 1081,
                "end": 1082,
                "name": "C"
              },
              "property": {
                "type": "ConditionalExpression",
                "start": 1083,
                "end": 1095,
                "test": {
                  "type": "Literal",
                  "start": 1083,
                  "end": 1087,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "consequent": {
                  "type": "Literal",
                  "start": 1090,
                  "end": 1091,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 1094,
                  "end": 1095,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1102,
            "end": 1103,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1107,
      "end": 1160,
      "expression": {
        "type": "CallExpression",
        "start": 1107,
        "end": 1159,
        "callee": {
          "type": "MemberExpression",
          "start": 1107,
          "end": 1123,
          "object": {
            "type": "Identifier",
            "start": 1107,
            "end": 1113,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1114,
            "end": 1123,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1127,
            "end": 1152,
            "callee": {
              "type": "MemberExpression",
              "start": 1127,
              "end": 1150,
              "object": {
                "type": "Identifier",
                "start": 1127,
                "end": 1128,
                "name": "c"
              },
              "property": {
                "type": "CallExpression",
                "start": 1129,
                "end": 1149,
                "callee": {
                  "type": "Identifier",
                  "start": 1129,
                  "end": 1135,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "start": 1136,
                    "end": 1148,
                    "test": {
                      "type": "Literal",
                      "start": 1136,
                      "end": 1140,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1143,
                      "end": 1144,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1147,
                      "end": 1148,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1156,
            "end": 1157,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1161,
      "end": 1214,
      "expression": {
        "type": "CallExpression",
        "start": 1161,
        "end": 1213,
        "callee": {
          "type": "MemberExpression",
          "start": 1161,
          "end": 1177,
          "object": {
            "type": "Identifier",
            "start": 1161,
            "end": 1167,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1168,
            "end": 1177,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1181,
            "end": 1206,
            "callee": {
              "type": "MemberExpression",
              "start": 1181,
              "end": 1204,
              "object": {
                "type": "Identifier",
                "start": 1181,
                "end": 1182,
                "name": "C"
              },
              "property": {
                "type": "CallExpression",
                "start": 1183,
                "end": 1203,
                "callee": {
                  "type": "Identifier",
                  "start": 1183,
                  "end": 1189,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "start": 1190,
                    "end": 1202,
                    "test": {
                      "type": "Literal",
                      "start": 1190,
                      "end": 1194,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1197,
                      "end": 1198,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1201,
                      "end": 1202,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1210,
            "end": 1211,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}