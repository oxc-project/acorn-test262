{
  "type": "Program",
  "start": 0,
  "end": 1296,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 871,
      "end": 1008,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 875,
          "end": 1007,
          "id": {
            "type": "Identifier",
            "start": 875,
            "end": 876,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 879,
            "end": 1007,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 885,
              "end": 1007,
              "body": [
                {
                  "type": "MethodDefinition",
                  "start": 889,
                  "end": 942,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "BinaryExpression",
                    "start": 890,
                    "end": 912,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 890,
                      "end": 895,
                      "left": {
                        "type": "Literal",
                        "start": 890,
                        "end": 891,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 894,
                        "end": 895,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "-",
                    "right": {
                      "type": "BinaryExpression",
                      "start": 898,
                      "end": 912,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 898,
                        "end": 903,
                        "left": {
                          "type": "Literal",
                          "start": 898,
                          "end": 899,
                          "value": 3,
                          "raw": "3",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "*",
                        "right": {
                          "type": "Literal",
                          "start": 902,
                          "end": 903,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "BinaryExpression",
                        "start": 906,
                        "end": 912,
                        "left": {
                          "type": "Literal",
                          "start": 906,
                          "end": 907,
                          "value": 5,
                          "raw": "5",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "**",
                        "right": {
                          "type": "Literal",
                          "start": 911,
                          "end": 912,
                          "value": 6,
                          "raw": "6",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  },
                  "kind": "method",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 913,
                    "end": 942,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 916,
                      "end": 942,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 922,
                          "end": 938,
                          "argument": {
                            "type": "Literal",
                            "start": 929,
                            "end": 937,
                            "value": 2.999232,
                            "raw": "2.999232",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "MethodDefinition",
                  "start": 945,
                  "end": 1005,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "BinaryExpression",
                    "start": 953,
                    "end": 975,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 953,
                      "end": 958,
                      "left": {
                        "type": "Literal",
                        "start": 953,
                        "end": 954,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 957,
                        "end": 958,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "-",
                    "right": {
                      "type": "BinaryExpression",
                      "start": 961,
                      "end": 975,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 961,
                        "end": 966,
                        "left": {
                          "type": "Literal",
                          "start": 961,
                          "end": 962,
                          "value": 3,
                          "raw": "3",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "*",
                        "right": {
                          "type": "Literal",
                          "start": 965,
                          "end": 966,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "BinaryExpression",
                        "start": 969,
                        "end": 975,
                        "left": {
                          "type": "Literal",
                          "start": 969,
                          "end": 970,
                          "value": 5,
                          "raw": "5",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "**",
                        "right": {
                          "type": "Literal",
                          "start": 974,
                          "end": 975,
                          "value": 6,
                          "raw": "6",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  },
                  "kind": "method",
                  "value": {
                    "type": "FunctionExpression",
                    "start": 976,
                    "end": 1005,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 979,
                      "end": 1005,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 985,
                          "end": 1001,
                          "argument": {
                            "type": "Literal",
                            "start": 992,
                            "end": 1000,
                            "value": 2.999232,
                            "raw": "2.999232",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1010,
      "end": 1026,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1014,
          "end": 1025,
          "id": {
            "type": "Identifier",
            "start": 1014,
            "end": 1015,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1018,
            "end": 1025,
            "callee": {
              "type": "Identifier",
              "start": 1022,
              "end": 1023,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1028,
      "end": 1090,
      "expression": {
        "type": "CallExpression",
        "start": 1028,
        "end": 1089,
        "callee": {
          "type": "MemberExpression",
          "start": 1028,
          "end": 1044,
          "object": {
            "type": "Identifier",
            "start": 1028,
            "end": 1034,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1035,
            "end": 1044,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1048,
            "end": 1075,
            "callee": {
              "type": "MemberExpression",
              "start": 1048,
              "end": 1073,
              "object": {
                "type": "Identifier",
                "start": 1048,
                "end": 1049,
                "name": "c"
              },
              "property": {
                "type": "BinaryExpression",
                "start": 1050,
                "end": 1072,
                "left": {
                  "type": "BinaryExpression",
                  "start": 1050,
                  "end": 1055,
                  "left": {
                    "type": "Literal",
                    "start": 1050,
                    "end": 1051,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1054,
                    "end": 1055,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                },
                "operator": "-",
                "right": {
                  "type": "BinaryExpression",
                  "start": 1058,
                  "end": 1072,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1058,
                    "end": 1063,
                    "left": {
                      "type": "Literal",
                      "start": 1058,
                      "end": 1059,
                      "value": 3,
                      "raw": "3",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "start": 1062,
                      "end": 1063,
                      "value": 4,
                      "raw": "4",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "operator": "/",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 1066,
                    "end": 1072,
                    "left": {
                      "type": "Literal",
                      "start": 1066,
                      "end": 1067,
                      "value": 5,
                      "raw": "5",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "**",
                    "right": {
                      "type": "Literal",
                      "start": 1071,
                      "end": 1072,
                      "value": 6,
                      "raw": "6",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1079,
            "end": 1087,
            "value": 2.999232,
            "raw": "2.999232",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1091,
      "end": 1153,
      "expression": {
        "type": "CallExpression",
        "start": 1091,
        "end": 1152,
        "callee": {
          "type": "MemberExpression",
          "start": 1091,
          "end": 1107,
          "object": {
            "type": "Identifier",
            "start": 1091,
            "end": 1097,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1098,
            "end": 1107,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1111,
            "end": 1138,
            "callee": {
              "type": "MemberExpression",
              "start": 1111,
              "end": 1136,
              "object": {
                "type": "Identifier",
                "start": 1111,
                "end": 1112,
                "name": "C"
              },
              "property": {
                "type": "BinaryExpression",
                "start": 1113,
                "end": 1135,
                "left": {
                  "type": "BinaryExpression",
                  "start": 1113,
                  "end": 1118,
                  "left": {
                    "type": "Literal",
                    "start": 1113,
                    "end": 1114,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1117,
                    "end": 1118,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                },
                "operator": "-",
                "right": {
                  "type": "BinaryExpression",
                  "start": 1121,
                  "end": 1135,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1121,
                    "end": 1126,
                    "left": {
                      "type": "Literal",
                      "start": 1121,
                      "end": 1122,
                      "value": 3,
                      "raw": "3",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "*",
                    "right": {
                      "type": "Literal",
                      "start": 1125,
                      "end": 1126,
                      "value": 4,
                      "raw": "4",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "operator": "/",
                  "right": {
                    "type": "BinaryExpression",
                    "start": 1129,
                    "end": 1135,
                    "left": {
                      "type": "Literal",
                      "start": 1129,
                      "end": 1130,
                      "value": 5,
                      "raw": "5",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "**",
                    "right": {
                      "type": "Literal",
                      "start": 1134,
                      "end": 1135,
                      "value": 6,
                      "raw": "6",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1142,
            "end": 1150,
            "value": 2.999232,
            "raw": "2.999232",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1154,
      "end": 1224,
      "expression": {
        "type": "CallExpression",
        "start": 1154,
        "end": 1223,
        "callee": {
          "type": "MemberExpression",
          "start": 1154,
          "end": 1170,
          "object": {
            "type": "Identifier",
            "start": 1154,
            "end": 1160,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1161,
            "end": 1170,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1174,
            "end": 1209,
            "callee": {
              "type": "MemberExpression",
              "start": 1174,
              "end": 1207,
              "object": {
                "type": "Identifier",
                "start": 1174,
                "end": 1175,
                "name": "c"
              },
              "property": {
                "type": "CallExpression",
                "start": 1176,
                "end": 1206,
                "callee": {
                  "type": "Identifier",
                  "start": 1176,
                  "end": 1182,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1183,
                    "end": 1205,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1183,
                      "end": 1188,
                      "left": {
                        "type": "Literal",
                        "start": 1183,
                        "end": 1184,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1187,
                        "end": 1188,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "-",
                    "right": {
                      "type": "BinaryExpression",
                      "start": 1191,
                      "end": 1205,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 1191,
                        "end": 1196,
                        "left": {
                          "type": "Literal",
                          "start": 1191,
                          "end": 1192,
                          "value": 3,
                          "raw": "3",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "*",
                        "right": {
                          "type": "Literal",
                          "start": 1195,
                          "end": 1196,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "BinaryExpression",
                        "start": 1199,
                        "end": 1205,
                        "left": {
                          "type": "Literal",
                          "start": 1199,
                          "end": 1200,
                          "value": 5,
                          "raw": "5",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "**",
                        "right": {
                          "type": "Literal",
                          "start": 1204,
                          "end": 1205,
                          "value": 6,
                          "raw": "6",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1213,
            "end": 1221,
            "value": 2.999232,
            "raw": "2.999232",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1225,
      "end": 1295,
      "expression": {
        "type": "CallExpression",
        "start": 1225,
        "end": 1294,
        "callee": {
          "type": "MemberExpression",
          "start": 1225,
          "end": 1241,
          "object": {
            "type": "Identifier",
            "start": 1225,
            "end": 1231,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1232,
            "end": 1241,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1245,
            "end": 1280,
            "callee": {
              "type": "MemberExpression",
              "start": 1245,
              "end": 1278,
              "object": {
                "type": "Identifier",
                "start": 1245,
                "end": 1246,
                "name": "C"
              },
              "property": {
                "type": "CallExpression",
                "start": 1247,
                "end": 1277,
                "callee": {
                  "type": "Identifier",
                  "start": 1247,
                  "end": 1253,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1254,
                    "end": 1276,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1254,
                      "end": 1259,
                      "left": {
                        "type": "Literal",
                        "start": 1254,
                        "end": 1255,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 1258,
                        "end": 1259,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "-",
                    "right": {
                      "type": "BinaryExpression",
                      "start": 1262,
                      "end": 1276,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 1262,
                        "end": 1267,
                        "left": {
                          "type": "Literal",
                          "start": 1262,
                          "end": 1263,
                          "value": 3,
                          "raw": "3",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "*",
                        "right": {
                          "type": "Literal",
                          "start": 1266,
                          "end": 1267,
                          "value": 4,
                          "raw": "4",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "/",
                      "right": {
                        "type": "BinaryExpression",
                        "start": 1270,
                        "end": 1276,
                        "left": {
                          "type": "Literal",
                          "start": 1270,
                          "end": 1271,
                          "value": 5,
                          "raw": "5",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "**",
                        "right": {
                          "type": "Literal",
                          "start": 1275,
                          "end": 1276,
                          "value": 6,
                          "raw": "6",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1284,
            "end": 1292,
            "value": 2.999232,
            "raw": "2.999232",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}