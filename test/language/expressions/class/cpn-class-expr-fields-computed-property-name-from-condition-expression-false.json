{
  "type": "Program",
  "start": 0,
  "end": 1237,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 949,
      "end": 1021,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 953,
          "end": 1020,
          "id": {
            "type": "Identifier",
            "start": 953,
            "end": 954,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 957,
            "end": 1020,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 963,
              "end": 1020,
              "body": [
                {
                  "type": "PropertyDefinition",
                  "start": 967,
                  "end": 987,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 968,
                    "end": 981,
                    "test": {
                      "type": "Literal",
                      "start": 968,
                      "end": 973,
                      "value": false,
                      "raw": "false",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 976,
                      "end": 977,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 980,
                      "end": 981,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "Literal",
                    "start": 985,
                    "end": 986,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                },
                {
                  "type": "PropertyDefinition",
                  "start": 991,
                  "end": 1018,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 999,
                    "end": 1012,
                    "test": {
                      "type": "Literal",
                      "start": 999,
                      "end": 1004,
                      "value": false,
                      "raw": "false",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1007,
                      "end": 1008,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1011,
                      "end": 1012,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "Literal",
                    "start": 1016,
                    "end": 1017,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1023,
      "end": 1039,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1027,
          "end": 1038,
          "id": {
            "type": "Identifier",
            "start": 1027,
            "end": 1028,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1031,
            "end": 1038,
            "callee": {
              "type": "Identifier",
              "start": 1035,
              "end": 1036,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1041,
      "end": 1085,
      "expression": {
        "type": "CallExpression",
        "start": 1041,
        "end": 1084,
        "callee": {
          "type": "MemberExpression",
          "start": 1041,
          "end": 1057,
          "object": {
            "type": "Identifier",
            "start": 1041,
            "end": 1047,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1048,
            "end": 1057,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1061,
            "end": 1077,
            "object": {
              "type": "Identifier",
              "start": 1061,
              "end": 1062,
              "name": "c"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1063,
              "end": 1076,
              "test": {
                "type": "Literal",
                "start": 1063,
                "end": 1068,
                "value": false,
                "raw": "false",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1071,
                "end": 1072,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1075,
                "end": 1076,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1081,
            "end": 1082,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1086,
      "end": 1130,
      "expression": {
        "type": "CallExpression",
        "start": 1086,
        "end": 1129,
        "callee": {
          "type": "MemberExpression",
          "start": 1086,
          "end": 1102,
          "object": {
            "type": "Identifier",
            "start": 1086,
            "end": 1092,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1093,
            "end": 1102,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1106,
            "end": 1122,
            "object": {
              "type": "Identifier",
              "start": 1106,
              "end": 1107,
              "name": "C"
            },
            "property": {
              "type": "ConditionalExpression",
              "start": 1108,
              "end": 1121,
              "test": {
                "type": "Literal",
                "start": 1108,
                "end": 1113,
                "value": false,
                "raw": "false",
                "regex": null,
                "bigint": null
              },
              "consequent": {
                "type": "Literal",
                "start": 1116,
                "end": 1117,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              "alternate": {
                "type": "Literal",
                "start": 1120,
                "end": 1121,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1126,
            "end": 1127,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1131,
      "end": 1183,
      "expression": {
        "type": "CallExpression",
        "start": 1131,
        "end": 1182,
        "callee": {
          "type": "MemberExpression",
          "start": 1131,
          "end": 1147,
          "object": {
            "type": "Identifier",
            "start": 1131,
            "end": 1137,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1138,
            "end": 1147,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1151,
            "end": 1175,
            "object": {
              "type": "Identifier",
              "start": 1151,
              "end": 1152,
              "name": "c"
            },
            "property": {
              "type": "CallExpression",
              "start": 1153,
              "end": 1174,
              "callee": {
                "type": "Identifier",
                "start": 1153,
                "end": 1159,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1160,
                  "end": 1173,
                  "test": {
                    "type": "Literal",
                    "start": 1160,
                    "end": 1165,
                    "value": false,
                    "raw": "false",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1168,
                    "end": 1169,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1172,
                    "end": 1173,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1179,
            "end": 1180,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1184,
      "end": 1236,
      "expression": {
        "type": "CallExpression",
        "start": 1184,
        "end": 1235,
        "callee": {
          "type": "MemberExpression",
          "start": 1184,
          "end": 1200,
          "object": {
            "type": "Identifier",
            "start": 1184,
            "end": 1190,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1191,
            "end": 1200,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1204,
            "end": 1228,
            "object": {
              "type": "Identifier",
              "start": 1204,
              "end": 1205,
              "name": "C"
            },
            "property": {
              "type": "CallExpression",
              "start": 1206,
              "end": 1227,
              "callee": {
                "type": "Identifier",
                "start": 1206,
                "end": 1212,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 1213,
                  "end": 1226,
                  "test": {
                    "type": "Literal",
                    "start": 1213,
                    "end": 1218,
                    "value": false,
                    "raw": "false",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "Literal",
                    "start": 1221,
                    "end": 1222,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "alternate": {
                    "type": "Literal",
                    "start": 1225,
                    "end": 1226,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  }
                }
              ],
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1232,
            "end": 1233,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}