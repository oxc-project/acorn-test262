{
  "type": "Program",
  "start": 0,
  "end": 1294,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 956,
      "end": 1074,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 960,
          "end": 1073,
          "id": {
            "type": "Identifier",
            "start": 960,
            "end": 961,
            "name": "C"
          },
          "init": {
            "type": "ClassExpression",
            "start": 964,
            "end": 1073,
            "id": null,
            "superClass": null,
            "body": {
              "type": "ClassBody",
              "start": 970,
              "end": 1073,
              "body": [
                {
                  "type": "PropertyDefinition",
                  "start": 974,
                  "end": 1017,
                  "static": false,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 975,
                    "end": 987,
                    "test": {
                      "type": "Literal",
                      "start": 975,
                      "end": 979,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 982,
                      "end": 983,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 986,
                      "end": 987,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "ArrowFunctionExpression",
                    "start": 991,
                    "end": 1016,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 997,
                      "end": 1016,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1003,
                          "end": 1012,
                          "argument": {
                            "type": "Literal",
                            "start": 1010,
                            "end": 1011,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "PropertyDefinition",
                  "start": 1021,
                  "end": 1071,
                  "static": true,
                  "computed": true,
                  "key": {
                    "type": "ConditionalExpression",
                    "start": 1029,
                    "end": 1041,
                    "test": {
                      "type": "Literal",
                      "start": 1029,
                      "end": 1033,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1036,
                      "end": 1037,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1040,
                      "end": 1041,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "value": {
                    "type": "ArrowFunctionExpression",
                    "start": 1045,
                    "end": 1070,
                    "id": null,
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1051,
                      "end": 1070,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1057,
                          "end": 1066,
                          "argument": {
                            "type": "Literal",
                            "start": 1064,
                            "end": 1065,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "VariableDeclaration",
      "start": 1076,
      "end": 1092,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1080,
          "end": 1091,
          "id": {
            "type": "Identifier",
            "start": 1080,
            "end": 1081,
            "name": "c"
          },
          "init": {
            "type": "NewExpression",
            "start": 1084,
            "end": 1091,
            "callee": {
              "type": "Identifier",
              "start": 1088,
              "end": 1089,
              "name": "C"
            },
            "arguments": []
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 1094,
      "end": 1139,
      "expression": {
        "type": "CallExpression",
        "start": 1094,
        "end": 1138,
        "callee": {
          "type": "MemberExpression",
          "start": 1094,
          "end": 1110,
          "object": {
            "type": "Identifier",
            "start": 1094,
            "end": 1100,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1101,
            "end": 1110,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1114,
            "end": 1131,
            "callee": {
              "type": "MemberExpression",
              "start": 1114,
              "end": 1129,
              "object": {
                "type": "Identifier",
                "start": 1114,
                "end": 1115,
                "name": "c"
              },
              "property": {
                "type": "ConditionalExpression",
                "start": 1116,
                "end": 1128,
                "test": {
                  "type": "Literal",
                  "start": 1116,
                  "end": 1120,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "consequent": {
                  "type": "Literal",
                  "start": 1123,
                  "end": 1124,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 1127,
                  "end": 1128,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1135,
            "end": 1136,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1140,
      "end": 1185,
      "expression": {
        "type": "CallExpression",
        "start": 1140,
        "end": 1184,
        "callee": {
          "type": "MemberExpression",
          "start": 1140,
          "end": 1156,
          "object": {
            "type": "Identifier",
            "start": 1140,
            "end": 1146,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1147,
            "end": 1156,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1160,
            "end": 1177,
            "callee": {
              "type": "MemberExpression",
              "start": 1160,
              "end": 1175,
              "object": {
                "type": "Identifier",
                "start": 1160,
                "end": 1161,
                "name": "C"
              },
              "property": {
                "type": "ConditionalExpression",
                "start": 1162,
                "end": 1174,
                "test": {
                  "type": "Literal",
                  "start": 1162,
                  "end": 1166,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "consequent": {
                  "type": "Literal",
                  "start": 1169,
                  "end": 1170,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "alternate": {
                  "type": "Literal",
                  "start": 1173,
                  "end": 1174,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1181,
            "end": 1182,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1186,
      "end": 1239,
      "expression": {
        "type": "CallExpression",
        "start": 1186,
        "end": 1238,
        "callee": {
          "type": "MemberExpression",
          "start": 1186,
          "end": 1202,
          "object": {
            "type": "Identifier",
            "start": 1186,
            "end": 1192,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1193,
            "end": 1202,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1206,
            "end": 1231,
            "callee": {
              "type": "MemberExpression",
              "start": 1206,
              "end": 1229,
              "object": {
                "type": "Identifier",
                "start": 1206,
                "end": 1207,
                "name": "c"
              },
              "property": {
                "type": "CallExpression",
                "start": 1208,
                "end": 1228,
                "callee": {
                  "type": "Identifier",
                  "start": 1208,
                  "end": 1214,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "start": 1215,
                    "end": 1227,
                    "test": {
                      "type": "Literal",
                      "start": 1215,
                      "end": 1219,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1222,
                      "end": 1223,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1226,
                      "end": 1227,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1235,
            "end": 1236,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1240,
      "end": 1293,
      "expression": {
        "type": "CallExpression",
        "start": 1240,
        "end": 1292,
        "callee": {
          "type": "MemberExpression",
          "start": 1240,
          "end": 1256,
          "object": {
            "type": "Identifier",
            "start": 1240,
            "end": 1246,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1247,
            "end": 1256,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1260,
            "end": 1285,
            "callee": {
              "type": "MemberExpression",
              "start": 1260,
              "end": 1283,
              "object": {
                "type": "Identifier",
                "start": 1260,
                "end": 1261,
                "name": "C"
              },
              "property": {
                "type": "CallExpression",
                "start": 1262,
                "end": 1282,
                "callee": {
                  "type": "Identifier",
                  "start": 1262,
                  "end": 1268,
                  "name": "String"
                },
                "arguments": [
                  {
                    "type": "ConditionalExpression",
                    "start": 1269,
                    "end": 1281,
                    "test": {
                      "type": "Literal",
                      "start": 1269,
                      "end": 1273,
                      "value": true,
                      "raw": "true",
                      "regex": null,
                      "bigint": null
                    },
                    "consequent": {
                      "type": "Literal",
                      "start": 1276,
                      "end": 1277,
                      "value": 1,
                      "raw": "1",
                      "regex": null,
                      "bigint": null
                    },
                    "alternate": {
                      "type": "Literal",
                      "start": 1280,
                      "end": 1281,
                      "value": 2,
                      "raw": "2",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ],
                "optional": false
              },
              "computed": true,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1289,
            "end": 1290,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}