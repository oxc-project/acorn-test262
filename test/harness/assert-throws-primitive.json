{
  "type": "Program",
  "start": 0,
  "end": 612,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 238,
      "end": 256,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 242,
          "end": 255,
          "id": {
            "type": "Identifier",
            "start": 242,
            "end": 247,
            "name": "threw"
          },
          "init": {
            "type": "Literal",
            "start": 250,
            "end": 255,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 258,
      "end": 513,
      "block": {
        "type": "BlockStatement",
        "start": 262,
        "end": 320,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 266,
            "end": 318,
            "expression": {
              "type": "CallExpression",
              "start": 266,
              "end": 317,
              "callee": {
                "type": "MemberExpression",
                "start": 266,
                "end": 279,
                "object": {
                  "type": "Identifier",
                  "start": 266,
                  "end": 272,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 273,
                  "end": 279,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 280,
                  "end": 285,
                  "name": "Error"
                },
                {
                  "type": "FunctionExpression",
                  "start": 287,
                  "end": 316,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 298,
                    "end": 316,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 304,
                        "end": 312,
                        "argument": {
                          "type": "Literal",
                          "start": 310,
                          "end": 311,
                          "value": 3,
                          "raw": "3",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ]
                  }
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 321,
        "end": 513,
        "param": {
          "type": "Identifier",
          "start": 327,
          "end": 330,
          "name": "err"
        },
        "body": {
          "type": "BlockStatement",
          "start": 332,
          "end": 513,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 336,
              "end": 349,
              "expression": {
                "type": "AssignmentExpression",
                "start": 336,
                "end": 348,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 336,
                  "end": 341,
                  "name": "threw"
                },
                "right": {
                  "type": "Literal",
                  "start": 344,
                  "end": 348,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              }
            },
            {
              "type": "IfStatement",
              "start": 352,
              "end": 511,
              "test": {
                "type": "BinaryExpression",
                "start": 356,
                "end": 388,
                "left": {
                  "type": "MemberExpression",
                  "start": 356,
                  "end": 371,
                  "object": {
                    "type": "Identifier",
                    "start": 356,
                    "end": 359,
                    "name": "err"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 360,
                    "end": 371,
                    "name": "constructor"
                  },
                  "computed": false,
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Identifier",
                  "start": 376,
                  "end": 388,
                  "name": "Test262Error"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 390,
                "end": 511,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 396,
                    "end": 507,
                    "argument": {
                      "type": "NewExpression",
                      "start": 402,
                      "end": 506,
                      "callee": {
                        "type": "Identifier",
                        "start": 406,
                        "end": 411,
                        "name": "Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 419,
                          "end": 500,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 419,
                            "end": 476,
                            "left": {
                              "type": "Literal",
                              "start": 419,
                              "end": 453,
                              "value": "Expected a Test262Error, but a \"",
                              "raw": "'Expected a Test262Error, but a \"'",
                              "regex": null,
                              "bigint": null
                            },
                            "operator": "+",
                            "right": {
                              "type": "MemberExpression",
                              "start": 456,
                              "end": 476,
                              "object": {
                                "type": "MemberExpression",
                                "start": 456,
                                "end": 471,
                                "object": {
                                  "type": "Identifier",
                                  "start": 456,
                                  "end": 459,
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 460,
                                  "end": 471,
                                  "name": "constructor"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 472,
                                "end": 476,
                                "name": "name"
                              },
                              "computed": false,
                              "optional": false
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 485,
                            "end": 500,
                            "value": "\" was thrown.",
                            "raw": "'\" was thrown.'",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "IfStatement",
      "start": 515,
      "end": 611,
      "test": {
        "type": "BinaryExpression",
        "start": 519,
        "end": 534,
        "left": {
          "type": "Identifier",
          "start": 519,
          "end": 524,
          "name": "threw"
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 529,
          "end": 534,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 536,
        "end": 611,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 540,
            "end": 609,
            "argument": {
              "type": "NewExpression",
              "start": 546,
              "end": 608,
              "callee": {
                "type": "Identifier",
                "start": 550,
                "end": 555,
                "name": "Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 556,
                  "end": 607,
                  "value": "Expected a Test262Error, but no error was thrown.",
                  "raw": "'Expected a Test262Error, but no error was thrown.'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}