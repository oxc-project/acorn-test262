{
  "type": "Program",
  "start": 0,
  "end": 676,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 288,
      "end": 306,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 292,
          "end": 305,
          "id": {
            "type": "Identifier",
            "start": 292,
            "end": 297,
            "name": "threw"
          },
          "init": {
            "type": "Literal",
            "start": 300,
            "end": 305,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 308,
      "end": 577,
      "block": {
        "type": "BlockStatement",
        "start": 312,
        "end": 384,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 316,
            "end": 382,
            "expression": {
              "type": "CallExpression",
              "start": 316,
              "end": 381,
              "callee": {
                "type": "MemberExpression",
                "start": 316,
                "end": 329,
                "object": {
                  "type": "Identifier",
                  "start": 316,
                  "end": 322,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 323,
                  "end": 329,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 330,
                  "end": 335,
                  "name": "Error"
                },
                {
                  "type": "FunctionExpression",
                  "start": 337,
                  "end": 380,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 348,
                    "end": 380,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 354,
                        "end": 376,
                        "argument": {
                          "type": "NewExpression",
                          "start": 360,
                          "end": 375,
                          "callee": {
                            "type": "Identifier",
                            "start": 364,
                            "end": 373,
                            "name": "TypeError"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "optional": false
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 385,
        "end": 577,
        "param": {
          "type": "Identifier",
          "start": 391,
          "end": 394,
          "name": "err"
        },
        "body": {
          "type": "BlockStatement",
          "start": 396,
          "end": 577,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 400,
              "end": 413,
              "expression": {
                "type": "AssignmentExpression",
                "start": 400,
                "end": 412,
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "start": 400,
                  "end": 405,
                  "name": "threw"
                },
                "right": {
                  "type": "Literal",
                  "start": 408,
                  "end": 412,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              }
            },
            {
              "type": "IfStatement",
              "start": 416,
              "end": 575,
              "test": {
                "type": "BinaryExpression",
                "start": 420,
                "end": 452,
                "left": {
                  "type": "MemberExpression",
                  "start": 420,
                  "end": 435,
                  "object": {
                    "type": "Identifier",
                    "start": 420,
                    "end": 423,
                    "name": "err"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 424,
                    "end": 435,
                    "name": "constructor"
                  },
                  "computed": false,
                  "optional": false
                },
                "operator": "!==",
                "right": {
                  "type": "Identifier",
                  "start": 440,
                  "end": 452,
                  "name": "Test262Error"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 454,
                "end": 575,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 460,
                    "end": 571,
                    "argument": {
                      "type": "NewExpression",
                      "start": 466,
                      "end": 570,
                      "callee": {
                        "type": "Identifier",
                        "start": 470,
                        "end": 475,
                        "name": "Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 483,
                          "end": 564,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 483,
                            "end": 540,
                            "left": {
                              "type": "Literal",
                              "start": 483,
                              "end": 517,
                              "value": "Expected a Test262Error, but a \"",
                              "raw": "'Expected a Test262Error, but a \"'",
                              "regex": null,
                              "bigint": null
                            },
                            "operator": "+",
                            "right": {
                              "type": "MemberExpression",
                              "start": 520,
                              "end": 540,
                              "object": {
                                "type": "MemberExpression",
                                "start": 520,
                                "end": 535,
                                "object": {
                                  "type": "Identifier",
                                  "start": 520,
                                  "end": 523,
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 524,
                                  "end": 535,
                                  "name": "constructor"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 536,
                                "end": 540,
                                "name": "name"
                              },
                              "computed": false,
                              "optional": false
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 549,
                            "end": 564,
                            "value": "\" was thrown.",
                            "raw": "'\" was thrown.'",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "IfStatement",
      "start": 579,
      "end": 675,
      "test": {
        "type": "BinaryExpression",
        "start": 583,
        "end": 598,
        "left": {
          "type": "Identifier",
          "start": 583,
          "end": 588,
          "name": "threw"
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 593,
          "end": 598,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 600,
        "end": 675,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 604,
            "end": 673,
            "argument": {
              "type": "NewExpression",
              "start": 610,
              "end": 672,
              "callee": {
                "type": "Identifier",
                "start": 614,
                "end": 619,
                "name": "Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 620,
                  "end": 671,
                  "value": "Expected a Test262Error, but no error was thrown.",
                  "raw": "'Expected a Test262Error, but no error was thrown.'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}