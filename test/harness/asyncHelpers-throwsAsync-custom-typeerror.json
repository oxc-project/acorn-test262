{
  "type": "Program",
  "start": 0,
  "end": 1683,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 364,
      "end": 399,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 368,
          "end": 398,
          "id": {
            "type": "Identifier",
            "start": 368,
            "end": 386,
            "name": "intrinsicTypeError"
          },
          "init": {
            "type": "Identifier",
            "start": 389,
            "end": 398,
            "name": "TypeError"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 401,
      "end": 1682,
      "expression": {
        "type": "CallExpression",
        "start": 401,
        "end": 1682,
        "callee": {
          "type": "Identifier",
          "start": 401,
          "end": 410,
          "name": "asyncTest"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 411,
            "end": 1681,
            "id": null,
            "expression": false,
            "generator": false,
            "async": true,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 429,
              "end": 1681,
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "start": 433,
                  "end": 456,
                  "id": {
                    "type": "Identifier",
                    "start": 442,
                    "end": 451,
                    "name": "TypeError"
                  },
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 454,
                    "end": 456,
                    "body": []
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "start": 459,
                  "end": 478,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 463,
                      "end": 477,
                      "id": {
                        "type": "Identifier",
                        "start": 463,
                        "end": 469,
                        "name": "caught"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 472,
                        "end": 477,
                        "value": false,
                        "raw": "false",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 482,
                  "end": 647,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 486,
                      "end": 646,
                      "id": {
                        "type": "Identifier",
                        "start": 486,
                        "end": 487,
                        "name": "p"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 490,
                        "end": 646,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 490,
                          "end": 508,
                          "object": {
                            "type": "Identifier",
                            "start": 490,
                            "end": 496,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 497,
                            "end": 508,
                            "name": "throwsAsync"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 514,
                            "end": 523,
                            "name": "TypeError"
                          },
                          {
                            "type": "FunctionExpression",
                            "start": 529,
                            "end": 583,
                            "id": null,
                            "expression": false,
                            "generator": false,
                            "async": true,
                            "params": [],
                            "body": {
                              "type": "BlockStatement",
                              "start": 547,
                              "end": 583,
                              "body": [
                                {
                                  "type": "ThrowStatement",
                                  "start": 555,
                                  "end": 577,
                                  "argument": {
                                    "type": "NewExpression",
                                    "start": 561,
                                    "end": 576,
                                    "callee": {
                                      "type": "Identifier",
                                      "start": 565,
                                      "end": 574,
                                      "name": "TypeError"
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "Literal",
                            "start": 589,
                            "end": 642,
                            "value": "Throws an instance of the matching custom TypeError",
                            "raw": "\"Throws an instance of the matching custom TypeError\"",
                            "regex": null,
                            "bigint": null
                          }
                        ],
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 650,
                  "end": 679,
                  "expression": {
                    "type": "CallExpression",
                    "start": 650,
                    "end": 678,
                    "callee": {
                      "type": "Identifier",
                      "start": 650,
                      "end": 656,
                      "name": "assert"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 657,
                        "end": 677,
                        "left": {
                          "type": "Identifier",
                          "start": 657,
                          "end": 658,
                          "name": "p"
                        },
                        "operator": "instanceof",
                        "right": {
                          "type": "Identifier",
                          "start": 670,
                          "end": 677,
                          "name": "Promise"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 682,
                  "end": 690,
                  "expression": {
                    "type": "AwaitExpression",
                    "start": 682,
                    "end": 689,
                    "argument": {
                      "type": "Identifier",
                      "start": 688,
                      "end": 689,
                      "name": "p"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 694,
                  "end": 789,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 694,
                    "end": 788,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 694,
                      "end": 695,
                      "name": "p"
                    },
                    "right": {
                      "type": "CallExpression",
                      "start": 698,
                      "end": 788,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 698,
                        "end": 716,
                        "object": {
                          "type": "Identifier",
                          "start": 698,
                          "end": 704,
                          "name": "assert"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 705,
                          "end": 716,
                          "name": "throwsAsync"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 717,
                          "end": 735,
                          "name": "intrinsicTypeError"
                        },
                        {
                          "type": "FunctionExpression",
                          "start": 737,
                          "end": 787,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": true,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 755,
                            "end": 787,
                            "body": [
                              {
                                "type": "ThrowStatement",
                                "start": 761,
                                "end": 783,
                                "argument": {
                                  "type": "NewExpression",
                                  "start": 767,
                                  "end": 782,
                                  "callee": {
                                    "type": "Identifier",
                                    "start": 771,
                                    "end": 780,
                                    "name": "TypeError"
                                  },
                                  "arguments": []
                                }
                              }
                            ]
                          }
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 792,
                  "end": 821,
                  "expression": {
                    "type": "CallExpression",
                    "start": 792,
                    "end": 820,
                    "callee": {
                      "type": "Identifier",
                      "start": 792,
                      "end": 798,
                      "name": "assert"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 799,
                        "end": 819,
                        "left": {
                          "type": "Identifier",
                          "start": 799,
                          "end": 800,
                          "name": "p"
                        },
                        "operator": "instanceof",
                        "right": {
                          "type": "Identifier",
                          "start": 812,
                          "end": 819,
                          "name": "Promise"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TryStatement",
                  "start": 824,
                  "end": 1175,
                  "block": {
                    "type": "BlockStatement",
                    "start": 828,
                    "end": 846,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 834,
                        "end": 842,
                        "expression": {
                          "type": "AwaitExpression",
                          "start": 834,
                          "end": 841,
                          "argument": {
                            "type": "Identifier",
                            "start": 840,
                            "end": 841,
                            "name": "p"
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 847,
                    "end": 1053,
                    "param": {
                      "type": "Identifier",
                      "start": 854,
                      "end": 857,
                      "name": "err"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 859,
                      "end": 1053,
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "start": 865,
                          "end": 879,
                          "expression": {
                            "type": "AssignmentExpression",
                            "start": 865,
                            "end": 878,
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "start": 865,
                              "end": 871,
                              "name": "caught"
                            },
                            "right": {
                              "type": "Literal",
                              "start": 874,
                              "end": 878,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "start": 884,
                          "end": 1049,
                          "expression": {
                            "type": "CallExpression",
                            "start": 884,
                            "end": 1048,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 884,
                              "end": 900,
                              "object": {
                                "type": "Identifier",
                                "start": 884,
                                "end": 890,
                                "name": "assert"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 891,
                                "end": 900,
                                "name": "sameValue"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "start": 908,
                                "end": 923,
                                "object": {
                                  "type": "Identifier",
                                  "start": 908,
                                  "end": 911,
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 912,
                                  "end": 923,
                                  "name": "constructor"
                                },
                                "computed": false,
                                "optional": false
                              },
                              {
                                "type": "Identifier",
                                "start": 931,
                                "end": 943,
                                "name": "Test262Error"
                              },
                              {
                                "type": "BinaryExpression",
                                "start": 951,
                                "end": 1042,
                                "left": {
                                  "type": "BinaryExpression",
                                  "start": 951,
                                  "end": 1016,
                                  "left": {
                                    "type": "Literal",
                                    "start": 951,
                                    "end": 985,
                                    "value": "Expected a Test262Error, but a '",
                                    "raw": "\"Expected a Test262Error, but a '\"",
                                    "regex": null,
                                    "bigint": null
                                  },
                                  "operator": "+",
                                  "right": {
                                    "type": "MemberExpression",
                                    "start": 996,
                                    "end": 1016,
                                    "object": {
                                      "type": "MemberExpression",
                                      "start": 996,
                                      "end": 1011,
                                      "object": {
                                        "type": "Identifier",
                                        "start": 996,
                                        "end": 999,
                                        "name": "err"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "start": 1000,
                                        "end": 1011,
                                        "name": "constructor"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 1012,
                                      "end": 1016,
                                      "name": "name"
                                    },
                                    "computed": false,
                                    "optional": false
                                  }
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 1027,
                                  "end": 1042,
                                  "value": "' was thrown.",
                                  "raw": "\"' was thrown.\"",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ],
                            "optional": false
                          }
                        }
                      ]
                    }
                  },
                  "finalizer": {
                    "type": "BlockStatement",
                    "start": 1062,
                    "end": 1175,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1068,
                        "end": 1171,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1068,
                          "end": 1170,
                          "callee": {
                            "type": "Identifier",
                            "start": 1068,
                            "end": 1074,
                            "name": "assert"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 1082,
                              "end": 1088,
                              "name": "caught"
                            },
                            {
                              "type": "Literal",
                              "start": 1096,
                              "end": 1164,
                              "value": "assert.throwsAsync did not reject a collision of constructor names",
                              "raw": "\"assert.throwsAsync did not reject a collision of constructor names\"",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1179,
                  "end": 1194,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1179,
                    "end": 1193,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1179,
                      "end": 1185,
                      "name": "caught"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 1188,
                      "end": 1193,
                      "value": false,
                      "raw": "false",
                      "regex": null,
                      "bigint": null
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1198,
                  "end": 1293,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1198,
                    "end": 1292,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1198,
                      "end": 1199,
                      "name": "p"
                    },
                    "right": {
                      "type": "CallExpression",
                      "start": 1202,
                      "end": 1292,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1202,
                        "end": 1220,
                        "object": {
                          "type": "Identifier",
                          "start": 1202,
                          "end": 1208,
                          "name": "assert"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1209,
                          "end": 1220,
                          "name": "throwsAsync"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1221,
                          "end": 1230,
                          "name": "TypeError"
                        },
                        {
                          "type": "FunctionExpression",
                          "start": 1232,
                          "end": 1291,
                          "id": null,
                          "expression": false,
                          "generator": false,
                          "async": true,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 1250,
                            "end": 1291,
                            "body": [
                              {
                                "type": "ThrowStatement",
                                "start": 1256,
                                "end": 1287,
                                "argument": {
                                  "type": "NewExpression",
                                  "start": 1262,
                                  "end": 1286,
                                  "callee": {
                                    "type": "Identifier",
                                    "start": 1266,
                                    "end": 1284,
                                    "name": "intrinsicTypeError"
                                  },
                                  "arguments": []
                                }
                              }
                            ]
                          }
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1296,
                  "end": 1325,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1296,
                    "end": 1324,
                    "callee": {
                      "type": "Identifier",
                      "start": 1296,
                      "end": 1302,
                      "name": "assert"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1303,
                        "end": 1323,
                        "left": {
                          "type": "Identifier",
                          "start": 1303,
                          "end": 1304,
                          "name": "p"
                        },
                        "operator": "instanceof",
                        "right": {
                          "type": "Identifier",
                          "start": 1316,
                          "end": 1323,
                          "name": "Promise"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TryStatement",
                  "start": 1328,
                  "end": 1679,
                  "block": {
                    "type": "BlockStatement",
                    "start": 1332,
                    "end": 1350,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1338,
                        "end": 1346,
                        "expression": {
                          "type": "AwaitExpression",
                          "start": 1338,
                          "end": 1345,
                          "argument": {
                            "type": "Identifier",
                            "start": 1344,
                            "end": 1345,
                            "name": "p"
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 1351,
                    "end": 1557,
                    "param": {
                      "type": "Identifier",
                      "start": 1358,
                      "end": 1361,
                      "name": "err"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 1363,
                      "end": 1557,
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "start": 1369,
                          "end": 1383,
                          "expression": {
                            "type": "AssignmentExpression",
                            "start": 1369,
                            "end": 1382,
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "start": 1369,
                              "end": 1375,
                              "name": "caught"
                            },
                            "right": {
                              "type": "Literal",
                              "start": 1378,
                              "end": 1382,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "start": 1388,
                          "end": 1553,
                          "expression": {
                            "type": "CallExpression",
                            "start": 1388,
                            "end": 1552,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 1388,
                              "end": 1404,
                              "object": {
                                "type": "Identifier",
                                "start": 1388,
                                "end": 1394,
                                "name": "assert"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 1395,
                                "end": 1404,
                                "name": "sameValue"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "start": 1412,
                                "end": 1427,
                                "object": {
                                  "type": "Identifier",
                                  "start": 1412,
                                  "end": 1415,
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 1416,
                                  "end": 1427,
                                  "name": "constructor"
                                },
                                "computed": false,
                                "optional": false
                              },
                              {
                                "type": "Identifier",
                                "start": 1435,
                                "end": 1447,
                                "name": "Test262Error"
                              },
                              {
                                "type": "BinaryExpression",
                                "start": 1455,
                                "end": 1546,
                                "left": {
                                  "type": "BinaryExpression",
                                  "start": 1455,
                                  "end": 1520,
                                  "left": {
                                    "type": "Literal",
                                    "start": 1455,
                                    "end": 1489,
                                    "value": "Expected a Test262Error, but a '",
                                    "raw": "\"Expected a Test262Error, but a '\"",
                                    "regex": null,
                                    "bigint": null
                                  },
                                  "operator": "+",
                                  "right": {
                                    "type": "MemberExpression",
                                    "start": 1500,
                                    "end": 1520,
                                    "object": {
                                      "type": "MemberExpression",
                                      "start": 1500,
                                      "end": 1515,
                                      "object": {
                                        "type": "Identifier",
                                        "start": 1500,
                                        "end": 1503,
                                        "name": "err"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "start": 1504,
                                        "end": 1515,
                                        "name": "constructor"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 1516,
                                      "end": 1520,
                                      "name": "name"
                                    },
                                    "computed": false,
                                    "optional": false
                                  }
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 1531,
                                  "end": 1546,
                                  "value": "' was thrown.",
                                  "raw": "\"' was thrown.\"",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ],
                            "optional": false
                          }
                        }
                      ]
                    }
                  },
                  "finalizer": {
                    "type": "BlockStatement",
                    "start": 1566,
                    "end": 1679,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1572,
                        "end": 1675,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1572,
                          "end": 1674,
                          "callee": {
                            "type": "Identifier",
                            "start": 1572,
                            "end": 1578,
                            "name": "assert"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 1586,
                              "end": 1592,
                              "name": "caught"
                            },
                            {
                              "type": "Literal",
                              "start": 1600,
                              "end": 1668,
                              "value": "assert.throwsAsync did not reject a collision of constructor names",
                              "raw": "\"assert.throwsAsync did not reject a collision of constructor names\"",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}