{
  "type": "Program",
  "start": 0,
  "end": 1721,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 338,
      "end": 1109,
      "expression": {
        "type": "CallExpression",
        "start": 338,
        "end": 1108,
        "callee": {
          "type": "MemberExpression",
          "start": 338,
          "end": 969,
          "object": {
            "type": "ArrayExpression",
            "start": 338,
            "end": 961,
            "elements": [
              {
                "type": "Literal",
                "start": 342,
                "end": 369,
                "value": "function(){[native code]}",
                "raw": "'function(){[native code]}'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 373,
                "end": 402,
                "value": "function(){ [native code] }",
                "raw": "'function(){ [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 406,
                "end": 440,
                "value": "function ( ) { [ native code ] }",
                "raw": "'function ( ) { [ native code ] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 444,
                "end": 475,
                "value": "function a(){ [native code] }",
                "raw": "'function a(){ [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 479,
                "end": 518,
                "value": "function a(){ /* } */ [native code] }",
                "raw": "'function a(){ /* } */ [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "TemplateLiteral",
                "start": 522,
                "end": 587,
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 523,
                    "end": 586,
                    "value": {
                      "raw": "function a() {\n    // test\n    [native code]\n    /* test */\n  }",
                      "cooked": "function a() {\n    // test\n    [native code]\n    /* test */\n  }"
                    },
                    "tail": true
                  }
                ]
              },
              {
                "type": "Literal",
                "start": 591,
                "end": 646,
                "value": "function(a, b = function() { []; }) { [native code] }",
                "raw": "'function(a, b = function() { []; }) { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 650,
                "end": 693,
                "value": "function [Symbol.xyz]() { [native code] }",
                "raw": "'function [Symbol.xyz]() { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 697,
                "end": 742,
                "value": "function [x[y][z[d]()]]() { [native code] }",
                "raw": "'function [x[y][z[d]()]]() { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 746,
                "end": 783,
                "value": "function [\"]\"] () { [native code] }",
                "raw": "'function [\"]\"] () { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 787,
                "end": 826,
                "value": "function [']'] () { [native code] }",
                "raw": "'function [\\']\\'] () { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 830,
                "end": 871,
                "value": "/* test */ function() { [native code] }",
                "raw": "'/* test */ function() { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 875,
                "end": 916,
                "value": "function() { [native code] } /* test */",
                "raw": "'function() { [native code] } /* test */'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 920,
                "end": 958,
                "value": "function() { [native code] } // test",
                "raw": "'function() { [native code] } // test'",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 962,
            "end": 969,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 970,
            "end": 1107,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 971,
                "end": 972,
                "name": "s"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 977,
              "end": 1107,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 981,
                  "end": 1105,
                  "block": {
                    "type": "BlockStatement",
                    "start": 985,
                    "end": 1027,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 991,
                        "end": 1023,
                        "expression": {
                          "type": "CallExpression",
                          "start": 991,
                          "end": 1022,
                          "callee": {
                            "type": "Identifier",
                            "start": 991,
                            "end": 1019,
                            "name": "validateNativeFunctionSource"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 1020,
                              "end": 1021,
                              "name": "s"
                            }
                          ],
                          "optional": false
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 1028,
                    "end": 1105,
                    "param": {
                      "type": "Identifier",
                      "start": 1035,
                      "end": 1041,
                      "name": "unused"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 1043,
                      "end": 1105,
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "start": 1049,
                          "end": 1101,
                          "argument": {
                            "type": "NewExpression",
                            "start": 1055,
                            "end": 1100,
                            "callee": {
                              "type": "Identifier",
                              "start": 1059,
                              "end": 1064,
                              "name": "Error"
                            },
                            "arguments": [
                              {
                                "type": "TemplateLiteral",
                                "start": 1065,
                                "end": 1099,
                                "expressions": [
                                  {
                                    "type": "CallExpression",
                                    "start": 1068,
                                    "end": 1085,
                                    "callee": {
                                      "type": "MemberExpression",
                                      "start": 1068,
                                      "end": 1082,
                                      "object": {
                                        "type": "Identifier",
                                        "start": 1068,
                                        "end": 1072,
                                        "name": "JSON"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "start": 1073,
                                        "end": 1082,
                                        "name": "stringify"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "start": 1083,
                                        "end": 1084,
                                        "name": "s"
                                      }
                                    ],
                                    "optional": false
                                  }
                                ],
                                "quasis": [
                                  {
                                    "type": "TemplateElement",
                                    "start": 1066,
                                    "end": 1066,
                                    "value": {
                                      "raw": "",
                                      "cooked": ""
                                    },
                                    "tail": false
                                  },
                                  {
                                    "type": "TemplateElement",
                                    "start": 1086,
                                    "end": 1098,
                                    "value": {
                                      "raw": " should pass",
                                      "cooked": " should pass"
                                    },
                                    "tail": true
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1111,
      "end": 1720,
      "expression": {
        "type": "CallExpression",
        "start": 1111,
        "end": 1719,
        "callee": {
          "type": "MemberExpression",
          "start": 1111,
          "end": 1528,
          "object": {
            "type": "ArrayExpression",
            "start": 1111,
            "end": 1520,
            "elements": [
              {
                "type": "Literal",
                "start": 1115,
                "end": 1128,
                "value": "native code",
                "raw": "'native code'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1132,
                "end": 1147,
                "value": "function() {}",
                "raw": "'function() {}'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1151,
                "end": 1180,
                "value": "function(){ \"native code\" }",
                "raw": "'function(){ \"native code\" }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1184,
                "end": 1214,
                "value": "function(){ [] native code }",
                "raw": "'function(){ [] native code }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1218,
                "end": 1249,
                "value": "function()) { [native code] }",
                "raw": "'function()) { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1253,
                "end": 1284,
                "value": "function(() { [native code] }",
                "raw": "'function(() { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1288,
                "end": 1323,
                "value": "function []] () { [native code] }",
                "raw": "'function []] () { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1327,
                "end": 1362,
                "value": "function [[] () { [native code] }",
                "raw": "'function [[] () { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1366,
                "end": 1402,
                "value": "function [\"]] () { [native code] }",
                "raw": "'function [\"]] () { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1406,
                "end": 1443,
                "value": "function [']] () { [native code] }",
                "raw": "'function [\\']] () { [native code] }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1447,
                "end": 1480,
                "value": "function() { [native code] /* }",
                "raw": "'function() { [native code] /* }'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1484,
                "end": 1517,
                "value": "// function() { [native code] }",
                "raw": "'// function() { [native code] }'",
                "regex": null,
                "bigint": null
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "start": 1521,
            "end": 1528,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 1529,
            "end": 1718,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1530,
                "end": 1531,
                "name": "s"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1536,
              "end": 1718,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1540,
                  "end": 1557,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1544,
                      "end": 1556,
                      "id": {
                        "type": "Identifier",
                        "start": 1544,
                        "end": 1548,
                        "name": "fail"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 1551,
                        "end": 1556,
                        "value": false,
                        "raw": "false",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "TryStatement",
                  "start": 1560,
                  "end": 1641,
                  "block": {
                    "type": "BlockStatement",
                    "start": 1564,
                    "end": 1623,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1570,
                        "end": 1602,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1570,
                          "end": 1601,
                          "callee": {
                            "type": "Identifier",
                            "start": 1570,
                            "end": 1598,
                            "name": "validateNativeFunctionSource"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 1599,
                              "end": 1600,
                              "name": "s"
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 1607,
                        "end": 1619,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 1607,
                          "end": 1618,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 1607,
                            "end": 1611,
                            "name": "fail"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 1614,
                            "end": 1618,
                            "value": true,
                            "raw": "true",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 1624,
                    "end": 1641,
                    "param": {
                      "type": "Identifier",
                      "start": 1631,
                      "end": 1637,
                      "name": "unused"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 1639,
                      "end": 1641,
                      "body": []
                    }
                  },
                  "finalizer": null
                },
                {
                  "type": "IfStatement",
                  "start": 1644,
                  "end": 1716,
                  "test": {
                    "type": "Identifier",
                    "start": 1648,
                    "end": 1652,
                    "name": "fail"
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1654,
                    "end": 1716,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 1660,
                        "end": 1712,
                        "argument": {
                          "type": "NewExpression",
                          "start": 1666,
                          "end": 1711,
                          "callee": {
                            "type": "Identifier",
                            "start": 1670,
                            "end": 1675,
                            "name": "Error"
                          },
                          "arguments": [
                            {
                              "type": "TemplateLiteral",
                              "start": 1676,
                              "end": 1710,
                              "expressions": [
                                {
                                  "type": "CallExpression",
                                  "start": 1679,
                                  "end": 1696,
                                  "callee": {
                                    "type": "MemberExpression",
                                    "start": 1679,
                                    "end": 1693,
                                    "object": {
                                      "type": "Identifier",
                                      "start": 1679,
                                      "end": 1683,
                                      "name": "JSON"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 1684,
                                      "end": 1693,
                                      "name": "stringify"
                                    },
                                    "computed": false,
                                    "optional": false
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "start": 1694,
                                      "end": 1695,
                                      "name": "s"
                                    }
                                  ],
                                  "optional": false
                                }
                              ],
                              "quasis": [
                                {
                                  "type": "TemplateElement",
                                  "start": 1677,
                                  "end": 1677,
                                  "value": {
                                    "raw": "",
                                    "cooked": ""
                                  },
                                  "tail": false
                                },
                                {
                                  "type": "TemplateElement",
                                  "start": 1697,
                                  "end": 1709,
                                  "value": {
                                    "raw": " should fail",
                                    "cooked": " should fail"
                                  },
                                  "tail": true
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}