{
  "type": "Program",
  "start": 0,
  "end": 616,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 290,
      "end": 305,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 294,
          "end": 304,
          "id": {
            "type": "Identifier",
            "start": 294,
            "end": 295,
            "name": "r"
          },
          "init": {
            "type": "Literal",
            "start": 298,
            "end": 304,
            "value": null,
            "raw": "/[ab]/",
            "regex": {
              "pattern": "[ab]",
              "flags": ""
            },
            "bigint": null
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 307,
      "end": 450,
      "expression": {
        "type": "CallExpression",
        "start": 307,
        "end": 449,
        "callee": {
          "type": "MemberExpression",
          "start": 307,
          "end": 320,
          "object": {
            "type": "Identifier",
            "start": 307,
            "end": 313,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 314,
            "end": 320,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 324,
            "end": 335,
            "name": "SyntaxError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 339,
            "end": 372,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 345,
              "end": 372,
              "callee": {
                "type": "MemberExpression",
                "start": 345,
                "end": 354,
                "object": {
                  "type": "Identifier",
                  "start": 345,
                  "end": 346,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 347,
                  "end": 354,
                  "name": "compile"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 355,
                  "end": 371,
                  "value": "(?<x>a)(?<x>b)",
                  "raw": "\"(?<x>a)(?<x>b)\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 376,
            "end": 447,
            "value": "Duplicate named capturing groups in the same alternative do not parse",
            "raw": "\"Duplicate named capturing groups in the same alternative do not parse\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 452,
      "end": 483,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 456,
          "end": 482,
          "id": {
            "type": "Identifier",
            "start": 456,
            "end": 462,
            "name": "source"
          },
          "init": {
            "type": "Literal",
            "start": 465,
            "end": 482,
            "value": "(?<x>a)|(?<x>b)",
            "raw": "\"(?<x>a)|(?<x>b)\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 484,
      "end": 502,
      "expression": {
        "type": "CallExpression",
        "start": 484,
        "end": 501,
        "callee": {
          "type": "MemberExpression",
          "start": 484,
          "end": 493,
          "object": {
            "type": "Identifier",
            "start": 484,
            "end": 485,
            "name": "r"
          },
          "property": {
            "type": "Identifier",
            "start": 486,
            "end": 493,
            "name": "compile"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 494,
            "end": 500,
            "name": "source"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 503,
      "end": 615,
      "expression": {
        "type": "CallExpression",
        "start": 503,
        "end": 614,
        "callee": {
          "type": "MemberExpression",
          "start": 503,
          "end": 519,
          "object": {
            "type": "Identifier",
            "start": 503,
            "end": 509,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 510,
            "end": 519,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 520,
            "end": 528,
            "object": {
              "type": "Identifier",
              "start": 520,
              "end": 521,
              "name": "r"
            },
            "property": {
              "type": "Identifier",
              "start": 522,
              "end": 528,
              "name": "source"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 530,
            "end": 536,
            "name": "source"
          },
          {
            "type": "Literal",
            "start": 538,
            "end": 613,
            "value": "Duplicate named capturing groups in separate alternatives parse correctly",
            "raw": "\"Duplicate named capturing groups in separate alternatives parse correctly\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}