{
  "type": "Program",
  "start": 0,
  "end": 1695,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1507,
      "end": 1517,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1511,
          "end": 1516,
          "id": {
            "type": "Identifier",
            "start": 1511,
            "end": 1516,
            "name": "after"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1519,
      "end": 1607,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1519,
        "end": 1606,
        "expression": {
          "type": "CallExpression",
          "start": 1520,
          "end": 1605,
          "callee": {
            "type": "FunctionExpression",
            "start": 1520,
            "end": 1603,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1531,
              "end": 1603,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1539,
                  "end": 1587,
                  "test": {
                    "type": "Literal",
                    "start": 1543,
                    "end": 1547,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "FunctionDeclaration",
                    "start": 1549,
                    "end": 1587,
                    "id": {
                      "type": "Identifier",
                      "start": 1558,
                      "end": 1559,
                      "name": "f"
                    },
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1562,
                      "end": 1587,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1564,
                          "end": 1585,
                          "argument": {
                            "type": "Literal",
                            "start": 1571,
                            "end": 1584,
                            "value": "declaration",
                            "raw": "'declaration'",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1591,
                  "end": 1601,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1591,
                    "end": 1600,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1591,
                      "end": 1596,
                      "name": "after"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1599,
                      "end": 1600,
                      "name": "f"
                    }
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1609,
      "end": 1652,
      "expression": {
        "type": "CallExpression",
        "start": 1609,
        "end": 1651,
        "callee": {
          "type": "MemberExpression",
          "start": 1609,
          "end": 1625,
          "object": {
            "type": "Identifier",
            "start": 1609,
            "end": 1615,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1616,
            "end": 1625,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1626,
            "end": 1638,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1633,
              "end": 1638,
              "name": "after"
            }
          },
          {
            "type": "Literal",
            "start": 1640,
            "end": 1650,
            "value": "function",
            "raw": "'function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1653,
      "end": 1694,
      "expression": {
        "type": "CallExpression",
        "start": 1653,
        "end": 1693,
        "callee": {
          "type": "MemberExpression",
          "start": 1653,
          "end": 1669,
          "object": {
            "type": "Identifier",
            "start": 1653,
            "end": 1659,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1660,
            "end": 1669,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1670,
            "end": 1677,
            "callee": {
              "type": "Identifier",
              "start": 1670,
              "end": 1675,
              "name": "after"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1679,
            "end": 1692,
            "value": "declaration",
            "raw": "'declaration'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}