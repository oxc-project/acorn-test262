{
  "type": "Program",
  "start": 0,
  "end": 1506,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1223,
      "end": 1239,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1227,
          "end": 1231,
          "id": {
            "type": "Identifier",
            "start": 1227,
            "end": 1231,
            "name": "init"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1233,
          "end": 1238,
          "id": {
            "type": "Identifier",
            "start": 1233,
            "end": 1238,
            "name": "after"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1241,
      "end": 1355,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1241,
        "end": 1354,
        "expression": {
          "type": "CallExpression",
          "start": 1242,
          "end": 1353,
          "callee": {
            "type": "FunctionExpression",
            "start": 1242,
            "end": 1351,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1253,
              "end": 1351,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1257,
                  "end": 1269,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1261,
                      "end": 1268,
                      "id": {
                        "type": "Identifier",
                        "start": 1261,
                        "end": 1262,
                        "name": "f"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 1265,
                        "end": 1268,
                        "value": 123,
                        "raw": "123",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1272,
                  "end": 1281,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1272,
                    "end": 1280,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1272,
                      "end": 1276,
                      "name": "init"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1279,
                      "end": 1280,
                      "name": "f"
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "start": 1285,
                  "end": 1335,
                  "test": {
                    "type": "Literal",
                    "start": 1289,
                    "end": 1294,
                    "value": false,
                    "raw": "false",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "FunctionDeclaration",
                    "start": 1296,
                    "end": 1312,
                    "id": {
                      "type": "Identifier",
                      "start": 1305,
                      "end": 1307,
                      "name": "_f"
                    },
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1310,
                      "end": 1312,
                      "body": []
                    }
                  },
                  "alternate": {
                    "type": "FunctionDeclaration",
                    "start": 1318,
                    "end": 1335,
                    "id": {
                      "type": "Identifier",
                      "start": 1327,
                      "end": 1328,
                      "name": "f"
                    },
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1331,
                      "end": 1335,
                      "body": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1339,
                  "end": 1349,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1339,
                    "end": 1348,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1339,
                      "end": 1344,
                      "name": "after"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1347,
                      "end": 1348,
                      "name": "f"
                    }
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1357,
      "end": 1430,
      "expression": {
        "type": "CallExpression",
        "start": 1357,
        "end": 1429,
        "callee": {
          "type": "MemberExpression",
          "start": 1357,
          "end": 1373,
          "object": {
            "type": "Identifier",
            "start": 1357,
            "end": 1363,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1364,
            "end": 1373,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1374,
            "end": 1378,
            "name": "init"
          },
          {
            "type": "Literal",
            "start": 1380,
            "end": 1383,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1385,
            "end": 1428,
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1431,
      "end": 1505,
      "expression": {
        "type": "CallExpression",
        "start": 1431,
        "end": 1504,
        "callee": {
          "type": "MemberExpression",
          "start": 1431,
          "end": 1447,
          "object": {
            "type": "Identifier",
            "start": 1431,
            "end": 1437,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1438,
            "end": 1447,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1448,
            "end": 1453,
            "name": "after"
          },
          {
            "type": "Literal",
            "start": 1455,
            "end": 1458,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1460,
            "end": 1503,
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}