{
  "type": "Program",
  "start": 0,
  "end": 1476,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1216,
      "end": 1232,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1220,
          "end": 1224,
          "id": {
            "type": "Identifier",
            "start": 1220,
            "end": 1224,
            "name": "init"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1226,
          "end": 1231,
          "id": {
            "type": "Identifier",
            "start": 1226,
            "end": 1231,
            "name": "after"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1234,
      "end": 1325,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1234,
        "end": 1324,
        "expression": {
          "type": "CallExpression",
          "start": 1235,
          "end": 1323,
          "callee": {
            "type": "FunctionExpression",
            "start": 1235,
            "end": 1321,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "AssignmentPattern",
                "start": 1244,
                "end": 1251,
                "left": {
                  "type": "Identifier",
                  "start": 1244,
                  "end": 1245,
                  "name": "f"
                },
                "right": {
                  "type": "Literal",
                  "start": 1248,
                  "end": 1251,
                  "value": 123,
                  "raw": "123"
                }
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1253,
              "end": 1321,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1257,
                  "end": 1266,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1257,
                    "end": 1265,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1257,
                      "end": 1261,
                      "name": "init"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1264,
                      "end": 1265,
                      "name": "f"
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "start": 1270,
                  "end": 1305,
                  "test": {
                    "type": "Literal",
                    "start": 1274,
                    "end": 1279,
                    "value": false,
                    "raw": "false"
                  },
                  "consequent": {
                    "type": "EmptyStatement",
                    "start": 1281,
                    "end": 1282
                  },
                  "alternate": {
                    "type": "FunctionDeclaration",
                    "start": 1288,
                    "end": 1305,
                    "id": {
                      "type": "Identifier",
                      "start": 1297,
                      "end": 1298,
                      "name": "f"
                    },
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1301,
                      "end": 1305,
                      "body": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1309,
                  "end": 1319,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1309,
                    "end": 1318,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1309,
                      "end": 1314,
                      "name": "after"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1317,
                      "end": 1318,
                      "name": "f"
                    }
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1327,
      "end": 1400,
      "expression": {
        "type": "CallExpression",
        "start": 1327,
        "end": 1399,
        "callee": {
          "type": "MemberExpression",
          "start": 1327,
          "end": 1343,
          "object": {
            "type": "Identifier",
            "start": 1327,
            "end": 1333,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1334,
            "end": 1343,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1344,
            "end": 1348,
            "name": "init"
          },
          {
            "type": "Literal",
            "start": 1350,
            "end": 1353,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1355,
            "end": 1398,
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1401,
      "end": 1475,
      "expression": {
        "type": "CallExpression",
        "start": 1401,
        "end": 1474,
        "callee": {
          "type": "MemberExpression",
          "start": 1401,
          "end": 1417,
          "object": {
            "type": "Identifier",
            "start": 1401,
            "end": 1407,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1408,
            "end": 1417,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1418,
            "end": 1423,
            "name": "after"
          },
          {
            "type": "Literal",
            "start": 1425,
            "end": 1428,
            "value": 123,
            "raw": "123"
          },
          {
            "type": "Literal",
            "start": 1430,
            "end": 1473,
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}