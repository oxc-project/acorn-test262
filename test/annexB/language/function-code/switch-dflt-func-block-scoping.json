{
  "type": "Program",
  "start": 0,
  "end": 1573,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1075,
      "end": 1112,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1079,
          "end": 1088,
          "id": {
            "type": "Identifier",
            "start": 1079,
            "end": 1088,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1090,
          "end": 1099,
          "id": {
            "type": "Identifier",
            "start": 1090,
            "end": 1099,
            "name": "currentBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1101,
          "end": 1111,
          "id": {
            "type": "Identifier",
            "start": 1101,
            "end": 1111,
            "name": "varBinding"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1114,
      "end": 1272,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1114,
        "end": 1271,
        "expression": {
          "type": "CallExpression",
          "start": 1115,
          "end": 1270,
          "callee": {
            "type": "FunctionExpression",
            "start": 1115,
            "end": 1268,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1126,
              "end": 1268,
              "body": [
                {
                  "type": "SwitchStatement",
                  "start": 1134,
                  "end": 1240,
                  "discriminant": {
                    "type": "Literal",
                    "start": 1142,
                    "end": 1143,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "cases": [
                    {
                      "type": "SwitchCase",
                      "start": 1151,
                      "end": 1236,
                      "consequent": [
                        {
                          "type": "FunctionDeclaration",
                          "start": 1166,
                          "end": 1236,
                          "id": {
                            "type": "Identifier",
                            "start": 1175,
                            "end": 1176,
                            "name": "f"
                          },
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 1179,
                            "end": 1236,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 1181,
                                "end": 1195,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1181,
                                  "end": 1194,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1181,
                                    "end": 1190,
                                    "name": "initialBV"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "start": 1193,
                                    "end": 1194,
                                    "name": "f"
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "start": 1196,
                                "end": 1204,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1196,
                                  "end": 1203,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1196,
                                    "end": 1197,
                                    "name": "f"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 1200,
                                    "end": 1203,
                                    "value": 123,
                                    "raw": "123",
                                    "regex": null,
                                    "bigint": null
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "start": 1205,
                                "end": 1219,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1205,
                                  "end": 1218,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1205,
                                    "end": 1214,
                                    "name": "currentBV"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "start": 1217,
                                    "end": 1218,
                                    "name": "f"
                                  }
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "start": 1220,
                                "end": 1234,
                                "argument": {
                                  "type": "Literal",
                                  "start": 1227,
                                  "end": 1233,
                                  "value": "decl",
                                  "raw": "'decl'",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ]
                          }
                        }
                      ],
                      "test": null
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1244,
                  "end": 1259,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1244,
                    "end": 1258,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1244,
                      "end": 1254,
                      "name": "varBinding"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1257,
                      "end": 1258,
                      "name": "f"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1262,
                  "end": 1266,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1262,
                    "end": 1265,
                    "callee": {
                      "type": "Identifier",
                      "start": 1262,
                      "end": 1263,
                      "name": "f"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1275,
      "end": 1388,
      "expression": {
        "type": "CallExpression",
        "start": 1275,
        "end": 1387,
        "callee": {
          "type": "MemberExpression",
          "start": 1275,
          "end": 1291,
          "object": {
            "type": "Identifier",
            "start": 1275,
            "end": 1281,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1282,
            "end": 1291,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1295,
            "end": 1306,
            "callee": {
              "type": "Identifier",
              "start": 1295,
              "end": 1304,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1310,
            "end": 1316,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1320,
            "end": 1385,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1389,
      "end": 1457,
      "expression": {
        "type": "CallExpression",
        "start": 1389,
        "end": 1456,
        "callee": {
          "type": "MemberExpression",
          "start": 1389,
          "end": 1405,
          "object": {
            "type": "Identifier",
            "start": 1389,
            "end": 1395,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1396,
            "end": 1405,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1406,
            "end": 1415,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1417,
            "end": 1420,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1422,
            "end": 1455,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1458,
      "end": 1572,
      "expression": {
        "type": "CallExpression",
        "start": 1458,
        "end": 1571,
        "callee": {
          "type": "MemberExpression",
          "start": 1458,
          "end": 1474,
          "object": {
            "type": "Identifier",
            "start": 1458,
            "end": 1464,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1465,
            "end": 1474,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1478,
            "end": 1490,
            "callee": {
              "type": "Identifier",
              "start": 1478,
              "end": 1488,
              "name": "varBinding"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1494,
            "end": 1500,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1504,
            "end": 1569,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}