{
  "type": "Program",
  "start": 0,
  "end": 1795,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1549,
      "end": 1559,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1553,
          "end": 1558,
          "id": {
            "type": "Identifier",
            "start": 1553,
            "end": 1558,
            "name": "after"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1561,
      "end": 1697,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1561,
        "end": 1696,
        "expression": {
          "type": "CallExpression",
          "start": 1562,
          "end": 1695,
          "callee": {
            "type": "FunctionExpression",
            "start": 1562,
            "end": 1693,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1573,
              "end": 1693,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1581,
                  "end": 1661,
                  "test": {
                    "type": "Literal",
                    "start": 1585,
                    "end": 1590,
                    "value": false,
                    "raw": "false",
                    "regex": null,
                    "bigint": null
                  },
                  "consequent": {
                    "type": "FunctionDeclaration",
                    "start": 1592,
                    "end": 1608,
                    "id": {
                      "type": "Identifier",
                      "start": 1601,
                      "end": 1603,
                      "name": "_f"
                    },
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1606,
                      "end": 1608,
                      "body": []
                    }
                  },
                  "alternate": {
                    "type": "FunctionDeclaration",
                    "start": 1614,
                    "end": 1661,
                    "id": {
                      "type": "Identifier",
                      "start": 1623,
                      "end": 1624,
                      "name": "f"
                    },
                    "expression": false,
                    "generator": false,
                    "async": false,
                    "params": [],
                    "body": {
                      "type": "BlockStatement",
                      "start": 1627,
                      "end": 1661,
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "start": 1629,
                          "end": 1659,
                          "argument": {
                            "type": "Literal",
                            "start": 1636,
                            "end": 1658,
                            "value": "function declaration",
                            "raw": "'function declaration'",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1665,
                  "end": 1675,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1665,
                    "end": 1674,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1665,
                      "end": 1670,
                      "name": "after"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1673,
                      "end": 1674,
                      "name": "f"
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1679,
                  "end": 1691,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1683,
                      "end": 1690,
                      "id": {
                        "type": "Identifier",
                        "start": 1683,
                        "end": 1684,
                        "name": "f"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 1687,
                        "end": 1690,
                        "value": 123,
                        "raw": "123",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "kind": "var"
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1699,
      "end": 1742,
      "expression": {
        "type": "CallExpression",
        "start": 1699,
        "end": 1741,
        "callee": {
          "type": "MemberExpression",
          "start": 1699,
          "end": 1715,
          "object": {
            "type": "Identifier",
            "start": 1699,
            "end": 1705,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1706,
            "end": 1715,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1716,
            "end": 1728,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1723,
              "end": 1728,
              "name": "after"
            }
          },
          {
            "type": "Literal",
            "start": 1730,
            "end": 1740,
            "value": "function",
            "raw": "'function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1743,
      "end": 1793,
      "expression": {
        "type": "CallExpression",
        "start": 1743,
        "end": 1792,
        "callee": {
          "type": "MemberExpression",
          "start": 1743,
          "end": 1759,
          "object": {
            "type": "Identifier",
            "start": 1743,
            "end": 1749,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1750,
            "end": 1759,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1760,
            "end": 1767,
            "callee": {
              "type": "Identifier",
              "start": 1760,
              "end": 1765,
              "name": "after"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1769,
            "end": 1791,
            "value": "function declaration",
            "raw": "'function declaration'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}