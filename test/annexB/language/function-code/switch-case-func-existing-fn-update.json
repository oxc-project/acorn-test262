{
  "type": "Program",
  "start": 0,
  "end": 1357,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1078,
      "end": 1088,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1082,
          "end": 1087,
          "id": {
            "type": "Identifier",
            "start": 1082,
            "end": 1087,
            "name": "after"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1090,
      "end": 1263,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1090,
        "end": 1262,
        "expression": {
          "type": "CallExpression",
          "start": 1091,
          "end": 1261,
          "callee": {
            "type": "FunctionExpression",
            "start": 1091,
            "end": 1259,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1102,
              "end": 1259,
              "body": [
                {
                  "type": "SwitchStatement",
                  "start": 1110,
                  "end": 1189,
                  "discriminant": {
                    "type": "Literal",
                    "start": 1118,
                    "end": 1119,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  "cases": [
                    {
                      "type": "SwitchCase",
                      "start": 1127,
                      "end": 1185,
                      "consequent": [
                        {
                          "type": "FunctionDeclaration",
                          "start": 1141,
                          "end": 1185,
                          "id": {
                            "type": "Identifier",
                            "start": 1150,
                            "end": 1151,
                            "name": "f"
                          },
                          "expression": false,
                          "generator": false,
                          "async": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "start": 1154,
                            "end": 1185,
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "start": 1156,
                                "end": 1183,
                                "argument": {
                                  "type": "Literal",
                                  "start": 1163,
                                  "end": 1182,
                                  "value": "inner declaration",
                                  "raw": "'inner declaration'",
                                  "regex": null,
                                  "bigint": null
                                }
                              }
                            ]
                          }
                        }
                      ],
                      "test": {
                        "type": "Literal",
                        "start": 1132,
                        "end": 1133,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1193,
                  "end": 1203,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1193,
                    "end": 1202,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1193,
                      "end": 1198,
                      "name": "after"
                    },
                    "right": {
                      "type": "Identifier",
                      "start": 1201,
                      "end": 1202,
                      "name": "f"
                    }
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "start": 1207,
                  "end": 1257,
                  "id": {
                    "type": "Identifier",
                    "start": 1216,
                    "end": 1217,
                    "name": "f"
                  },
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 1220,
                    "end": 1257,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 1226,
                        "end": 1253,
                        "argument": {
                          "type": "Literal",
                          "start": 1233,
                          "end": 1252,
                          "value": "outer declaration",
                          "raw": "'outer declaration'",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1265,
      "end": 1308,
      "expression": {
        "type": "CallExpression",
        "start": 1265,
        "end": 1307,
        "callee": {
          "type": "MemberExpression",
          "start": 1265,
          "end": 1281,
          "object": {
            "type": "Identifier",
            "start": 1265,
            "end": 1271,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1272,
            "end": 1281,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1282,
            "end": 1294,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1289,
              "end": 1294,
              "name": "after"
            }
          },
          {
            "type": "Literal",
            "start": 1296,
            "end": 1306,
            "value": "function",
            "raw": "'function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1309,
      "end": 1356,
      "expression": {
        "type": "CallExpression",
        "start": 1309,
        "end": 1355,
        "callee": {
          "type": "MemberExpression",
          "start": 1309,
          "end": 1325,
          "object": {
            "type": "Identifier",
            "start": 1309,
            "end": 1315,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1316,
            "end": 1325,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1326,
            "end": 1333,
            "callee": {
              "type": "Identifier",
              "start": 1326,
              "end": 1331,
              "name": "after"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1335,
            "end": 1354,
            "value": "inner declaration",
            "raw": "'inner declaration'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}