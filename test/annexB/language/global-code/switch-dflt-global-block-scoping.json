{
  "type": "Program",
  "start": 0,
  "end": 1502,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1078,
      "end": 1103,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1082,
          "end": 1091,
          "id": {
            "type": "Identifier",
            "start": 1082,
            "end": 1091,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1093,
          "end": 1102,
          "id": {
            "type": "Identifier",
            "start": 1093,
            "end": 1102,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "SwitchStatement",
      "start": 1105,
      "end": 1205,
      "discriminant": {
        "type": "Literal",
        "start": 1113,
        "end": 1114,
        "value": 1,
        "raw": "1",
        "regex": null,
        "bigint": null
      },
      "cases": [
        {
          "type": "SwitchCase",
          "start": 1120,
          "end": 1203,
          "consequent": [
            {
              "type": "FunctionDeclaration",
              "start": 1133,
              "end": 1203,
              "id": {
                "type": "Identifier",
                "start": 1142,
                "end": 1143,
                "name": "f"
              },
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1146,
                "end": 1203,
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 1148,
                    "end": 1162,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1148,
                      "end": 1161,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 1148,
                        "end": 1157,
                        "name": "initialBV"
                      },
                      "right": {
                        "type": "Identifier",
                        "start": 1160,
                        "end": 1161,
                        "name": "f"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1163,
                    "end": 1171,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1163,
                      "end": 1170,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 1163,
                        "end": 1164,
                        "name": "f"
                      },
                      "right": {
                        "type": "Literal",
                        "start": 1167,
                        "end": 1170,
                        "value": 123,
                        "raw": "123",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "start": 1172,
                    "end": 1186,
                    "expression": {
                      "type": "AssignmentExpression",
                      "start": 1172,
                      "end": 1185,
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "start": 1172,
                        "end": 1181,
                        "name": "currentBV"
                      },
                      "right": {
                        "type": "Identifier",
                        "start": 1184,
                        "end": 1185,
                        "name": "f"
                      }
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "start": 1187,
                    "end": 1201,
                    "argument": {
                      "type": "Literal",
                      "start": 1194,
                      "end": 1200,
                      "value": "decl",
                      "raw": "'decl'",
                      "regex": null,
                      "bigint": null
                    }
                  }
                ]
              }
            }
          ],
          "test": null
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "start": 1207,
      "end": 1211,
      "expression": {
        "type": "CallExpression",
        "start": 1207,
        "end": 1210,
        "callee": {
          "type": "Identifier",
          "start": 1207,
          "end": 1208,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1213,
      "end": 1326,
      "expression": {
        "type": "CallExpression",
        "start": 1213,
        "end": 1325,
        "callee": {
          "type": "MemberExpression",
          "start": 1213,
          "end": 1229,
          "object": {
            "type": "Identifier",
            "start": 1213,
            "end": 1219,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1220,
            "end": 1229,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1233,
            "end": 1244,
            "callee": {
              "type": "Identifier",
              "start": 1233,
              "end": 1242,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1248,
            "end": 1254,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1258,
            "end": 1323,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1327,
      "end": 1395,
      "expression": {
        "type": "CallExpression",
        "start": 1327,
        "end": 1394,
        "callee": {
          "type": "MemberExpression",
          "start": 1327,
          "end": 1343,
          "object": {
            "type": "Identifier",
            "start": 1327,
            "end": 1333,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1334,
            "end": 1343,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1344,
            "end": 1353,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1355,
            "end": 1358,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1360,
            "end": 1393,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1396,
      "end": 1501,
      "expression": {
        "type": "CallExpression",
        "start": 1396,
        "end": 1500,
        "callee": {
          "type": "MemberExpression",
          "start": 1396,
          "end": 1412,
          "object": {
            "type": "Identifier",
            "start": 1396,
            "end": 1402,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1403,
            "end": 1412,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1416,
            "end": 1419,
            "callee": {
              "type": "Identifier",
              "start": 1416,
              "end": 1417,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1423,
            "end": 1429,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1433,
            "end": 1498,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}