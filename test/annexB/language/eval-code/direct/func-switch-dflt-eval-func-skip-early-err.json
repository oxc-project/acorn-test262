{
  "type": "Program",
  "start": 0,
  "end": 1046,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 724,
      "end": 740,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 728,
          "end": 732,
          "id": {
            "type": "Identifier",
            "start": 728,
            "end": 732,
            "name": "init"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 734,
          "end": 739,
          "id": {
            "type": "Identifier",
            "start": 734,
            "end": 739,
            "name": "after"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 742,
      "end": 895,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 742,
        "end": 894,
        "expression": {
          "type": "CallExpression",
          "start": 743,
          "end": 893,
          "callee": {
            "type": "FunctionExpression",
            "start": 743,
            "end": 891,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 754,
              "end": 891,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 758,
                  "end": 889,
                  "expression": {
                    "type": "CallExpression",
                    "start": 758,
                    "end": 888,
                    "callee": {
                      "type": "Identifier",
                      "start": 758,
                      "end": 762,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 768,
                        "end": 884,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 768,
                          "end": 858,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 768,
                            "end": 828,
                            "left": {
                              "type": "Literal",
                              "start": 768,
                              "end": 809,
                              "value": "let f = 123;    init = f;switch (1) {",
                              "raw": "'let f = 123;\\\n    init = f;switch (1) {'",
                              "regex": null,
                              "bigint": null
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 816,
                              "end": 828,
                              "value": "  default:",
                              "raw": "'  default:'",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 835,
                            "end": 858,
                            "value": "    function f() {  }",
                            "raw": "'    function f() {  }'",
                            "regex": null,
                            "bigint": null
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 865,
                          "end": 884,
                          "value": "}    after = f;",
                          "raw": "'}\\\n    after = f;'",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 897,
      "end": 970,
      "expression": {
        "type": "CallExpression",
        "start": 897,
        "end": 969,
        "callee": {
          "type": "MemberExpression",
          "start": 897,
          "end": 913,
          "object": {
            "type": "Identifier",
            "start": 897,
            "end": 903,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 904,
            "end": 913,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 914,
            "end": 918,
            "name": "init"
          },
          {
            "type": "Literal",
            "start": 920,
            "end": 923,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 925,
            "end": 968,
            "value": "binding is not initialized to `undefined`",
            "raw": "'binding is not initialized to `undefined`'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 971,
      "end": 1045,
      "expression": {
        "type": "CallExpression",
        "start": 971,
        "end": 1044,
        "callee": {
          "type": "MemberExpression",
          "start": 971,
          "end": 987,
          "object": {
            "type": "Identifier",
            "start": 971,
            "end": 977,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 978,
            "end": 987,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 988,
            "end": 993,
            "name": "after"
          },
          {
            "type": "Literal",
            "start": 995,
            "end": 998,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1000,
            "end": 1043,
            "value": "value is not updated following evaluation",
            "raw": "'value is not updated following evaluation'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}