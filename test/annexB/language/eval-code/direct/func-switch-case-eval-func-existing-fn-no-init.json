{
  "type": "Program",
  "start": 0,
  "end": 1343,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1076,
      "end": 1085,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1080,
          "end": 1084,
          "id": {
            "type": "Identifier",
            "start": 1080,
            "end": 1084,
            "name": "init"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1087,
      "end": 1294,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1087,
        "end": 1293,
        "expression": {
          "type": "CallExpression",
          "start": 1088,
          "end": 1292,
          "callee": {
            "type": "FunctionExpression",
            "start": 1088,
            "end": 1290,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1099,
              "end": 1290,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1103,
                  "end": 1288,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1103,
                    "end": 1287,
                    "callee": {
                      "type": "Identifier",
                      "start": 1103,
                      "end": 1107,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1113,
                        "end": 1283,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1113,
                          "end": 1211,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 1113,
                            "end": 1154,
                            "left": {
                              "type": "Literal",
                              "start": 1113,
                              "end": 1136,
                              "value": "init = f;switch (1) {",
                              "raw": "'init = f;switch (1) {'",
                              "regex": null,
                              "bigint": null
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 1143,
                              "end": 1154,
                              "value": "  case 1:",
                              "raw": "'  case 1:'",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 1161,
                            "end": 1211,
                            "value": "    function f() { return \"inner declaration\"; }",
                            "raw": "'    function f() { return \"inner declaration\"; }'",
                            "regex": null,
                            "bigint": null
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1218,
                          "end": 1283,
                          "value": "}    function f() {      return \"outer declaration\";    }",
                          "raw": "'}\\\n    function f() {\\\n      return \"outer declaration\";\\\n    }'",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1296,
      "end": 1342,
      "expression": {
        "type": "CallExpression",
        "start": 1296,
        "end": 1341,
        "callee": {
          "type": "MemberExpression",
          "start": 1296,
          "end": 1312,
          "object": {
            "type": "Identifier",
            "start": 1296,
            "end": 1302,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1303,
            "end": 1312,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1313,
            "end": 1319,
            "callee": {
              "type": "Identifier",
              "start": 1313,
              "end": 1317,
              "name": "init"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1321,
            "end": 1340,
            "value": "outer declaration",
            "raw": "'outer declaration'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}