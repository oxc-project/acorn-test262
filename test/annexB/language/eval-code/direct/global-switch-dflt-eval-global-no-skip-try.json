{
  "type": "Program",
  "start": 0,
  "end": 1532,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1151,
      "end": 1531,
      "expression": {
        "type": "CallExpression",
        "start": 1151,
        "end": 1530,
        "callee": {
          "type": "Identifier",
          "start": 1151,
          "end": 1155,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1159,
            "end": 1528,
            "left": {
              "type": "BinaryExpression",
              "start": 1159,
              "end": 1368,
              "left": {
                "type": "BinaryExpression",
                "start": 1159,
                "end": 1329,
                "left": {
                  "type": "Literal",
                  "start": 1159,
                  "end": 1312,
                  "value": "assert.sameValue(    f, undefined, \"Initialized binding created prior to evaluation\"  );    try {    throw null;  } catch (f) {switch (1) {",
                  "raw": "'assert.sameValue(\\\n    f, undefined, \"Initialized binding created prior to evaluation\"\\\n  );\\\n  \\\n  try {\\\n    throw null;\\\n  } catch (f) {switch (1) {'",
                  "regex": null,
                  "bigint": null
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1317,
                  "end": 1329,
                  "value": "  default:",
                  "raw": "'  default:'",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 1334,
                "end": 1368,
                "value": "    function f() { return 123; }",
                "raw": "'    function f() { return 123; }'",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1373,
              "end": 1528,
              "value": "}  }    assert.sameValue(    typeof f,    \"function\",    \"binding value is updated following evaluation\"  );  assert.sameValue(f(), 123);",
              "raw": "'}\\\n  }\\\n  \\\n  assert.sameValue(\\\n    typeof f,\\\n    \"function\",\\\n    \"binding value is updated following evaluation\"\\\n  );\\\n  assert.sameValue(f(), 123);'",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}