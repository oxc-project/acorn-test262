{
  "type": "Program",
  "start": 0,
  "end": 1418,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1074,
      "end": 1086,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1078,
          "end": 1085,
          "id": {
            "type": "Identifier",
            "start": 1078,
            "end": 1085,
            "name": "updated"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1088,
      "end": 1319,
      "expression": {
        "type": "ParenthesizedExpression",
        "start": 1088,
        "end": 1318,
        "expression": {
          "type": "CallExpression",
          "start": 1089,
          "end": 1317,
          "callee": {
            "type": "FunctionExpression",
            "start": 1089,
            "end": 1315,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1100,
              "end": 1315,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1104,
                  "end": 1313,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1104,
                    "end": 1312,
                    "callee": {
                      "type": "Identifier",
                      "start": 1104,
                      "end": 1108,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1114,
                        "end": 1308,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 1114,
                          "end": 1280,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 1114,
                            "end": 1222,
                            "left": {
                              "type": "Literal",
                              "start": 1114,
                              "end": 1204,
                              "value": "{      function f() {        return \"first declaration\";      }    }switch (1) {",
                              "raw": "'{\\\n      function f() {\\\n        return \"first declaration\";\\\n      }\\\n    }switch (1) {'",
                              "regex": null,
                              "bigint": null
                            },
                            "operator": "+",
                            "right": {
                              "type": "Literal",
                              "start": 1211,
                              "end": 1222,
                              "value": "  case 1:",
                              "raw": "'  case 1:'",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 1229,
                            "end": 1280,
                            "value": "    function f() { return \"second declaration\"; }",
                            "raw": "'    function f() { return \"second declaration\"; }'",
                            "regex": null,
                            "bigint": null
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 1287,
                          "end": 1308,
                          "value": "}    updated = f;",
                          "raw": "'}\\\n    updated = f;'",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          "arguments": [],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1321,
      "end": 1366,
      "expression": {
        "type": "CallExpression",
        "start": 1321,
        "end": 1365,
        "callee": {
          "type": "MemberExpression",
          "start": 1321,
          "end": 1337,
          "object": {
            "type": "Identifier",
            "start": 1321,
            "end": 1327,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1328,
            "end": 1337,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1338,
            "end": 1352,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1345,
              "end": 1352,
              "name": "updated"
            }
          },
          {
            "type": "Literal",
            "start": 1354,
            "end": 1364,
            "value": "function",
            "raw": "'function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1367,
      "end": 1417,
      "expression": {
        "type": "CallExpression",
        "start": 1367,
        "end": 1416,
        "callee": {
          "type": "MemberExpression",
          "start": 1367,
          "end": 1383,
          "object": {
            "type": "Identifier",
            "start": 1367,
            "end": 1373,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1374,
            "end": 1383,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1384,
            "end": 1393,
            "callee": {
              "type": "Identifier",
              "start": 1384,
              "end": 1391,
              "name": "updated"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1395,
            "end": 1415,
            "value": "second declaration",
            "raw": "'second declaration'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}