{
  "type": "Program",
  "start": 0,
  "end": 1572,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1109,
      "end": 1134,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1113,
          "end": 1122,
          "id": {
            "type": "Identifier",
            "start": 1113,
            "end": 1122,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1124,
          "end": 1133,
          "id": {
            "type": "Identifier",
            "start": 1124,
            "end": 1133,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1136,
      "end": 1275,
      "expression": {
        "type": "CallExpression",
        "start": 1136,
        "end": 1274,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1136,
          "end": 1144,
          "expression": {
            "type": "SequenceExpression",
            "start": 1137,
            "end": 1143,
            "expressions": [
              {
                "type": "Literal",
                "start": 1137,
                "end": 1138,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Identifier",
                "start": 1139,
                "end": 1143,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1148,
            "end": 1272,
            "left": {
              "type": "BinaryExpression",
              "start": 1148,
              "end": 1260,
              "left": {
                "type": "BinaryExpression",
                "start": 1148,
                "end": 1179,
                "left": {
                  "type": "Literal",
                  "start": 1148,
                  "end": 1162,
                  "value": "switch (1) {",
                  "raw": "'switch (1) {'",
                  "regex": null,
                  "bigint": null
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1167,
                  "end": 1179,
                  "value": "  default:",
                  "raw": "'  default:'",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 1184,
                "end": 1260,
                "value": "    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
                "raw": "'    function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1265,
              "end": 1272,
              "value": "}  ",
              "raw": "'}\\\n  '",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1277,
      "end": 1281,
      "expression": {
        "type": "CallExpression",
        "start": 1277,
        "end": 1280,
        "callee": {
          "type": "Identifier",
          "start": 1277,
          "end": 1278,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1283,
      "end": 1396,
      "expression": {
        "type": "CallExpression",
        "start": 1283,
        "end": 1395,
        "callee": {
          "type": "MemberExpression",
          "start": 1283,
          "end": 1299,
          "object": {
            "type": "Identifier",
            "start": 1283,
            "end": 1289,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1290,
            "end": 1299,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1303,
            "end": 1314,
            "callee": {
              "type": "Identifier",
              "start": 1303,
              "end": 1312,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1318,
            "end": 1324,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1328,
            "end": 1393,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1397,
      "end": 1465,
      "expression": {
        "type": "CallExpression",
        "start": 1397,
        "end": 1464,
        "callee": {
          "type": "MemberExpression",
          "start": 1397,
          "end": 1413,
          "object": {
            "type": "Identifier",
            "start": 1397,
            "end": 1403,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1404,
            "end": 1413,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1414,
            "end": 1423,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1425,
            "end": 1428,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1430,
            "end": 1463,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1466,
      "end": 1571,
      "expression": {
        "type": "CallExpression",
        "start": 1466,
        "end": 1570,
        "callee": {
          "type": "MemberExpression",
          "start": 1466,
          "end": 1482,
          "object": {
            "type": "Identifier",
            "start": 1466,
            "end": 1472,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1473,
            "end": 1482,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1486,
            "end": 1489,
            "callee": {
              "type": "Identifier",
              "start": 1486,
              "end": 1487,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1493,
            "end": 1499,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1503,
            "end": 1568,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}