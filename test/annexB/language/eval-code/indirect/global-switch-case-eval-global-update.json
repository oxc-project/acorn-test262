{
  "type": "Program",
  "start": 0,
  "end": 1270,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1083,
      "end": 1269,
      "expression": {
        "type": "CallExpression",
        "start": 1083,
        "end": 1268,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1083,
          "end": 1091,
          "expression": {
            "type": "SequenceExpression",
            "start": 1084,
            "end": 1090,
            "expressions": [
              {
                "type": "Literal",
                "start": 1084,
                "end": 1085,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 1086,
                "end": 1090,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 1095,
            "end": 1266,
            "left": {
              "type": "BinaryExpression",
              "start": 1095,
              "end": 1174,
              "left": {
                "type": "BinaryExpression",
                "start": 1095,
                "end": 1125,
                "left": {
                  "type": "Literal",
                  "start": 1095,
                  "end": 1109,
                  "value": "switch (1) {",
                  "raw": "'switch (1) {'"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 1114,
                  "end": 1125,
                  "value": "  case 1:",
                  "raw": "'  case 1:'"
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 1130,
                "end": 1174,
                "value": "    function f() { return \"declaration\"; }",
                "raw": "'    function f() { return \"declaration\"; }'"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1179,
              "end": 1266,
              "value": "}  assert.sameValue(typeof f, \"function\");  assert.sameValue(f(), \"declaration\");",
              "raw": "'}\\\n  assert.sameValue(typeof f, \"function\");\\\n  assert.sameValue(f(), \"declaration\");'"
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}