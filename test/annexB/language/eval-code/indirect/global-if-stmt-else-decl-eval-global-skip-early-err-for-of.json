{
  "type": "Program",
  "start": 0,
  "end": 1739,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1211,
      "end": 1323,
      "expression": {
        "type": "CallExpression",
        "start": 1211,
        "end": 1322,
        "callee": {
          "type": "MemberExpression",
          "start": 1211,
          "end": 1224,
          "object": {
            "type": "Identifier",
            "start": 1211,
            "end": 1217,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1218,
            "end": 1224,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1225,
            "end": 1239,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1241,
            "end": 1260,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1252,
              "end": 1260,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1256,
                  "end": 1258,
                  "expression": {
                    "type": "Identifier",
                    "start": 1256,
                    "end": 1257,
                    "name": "f"
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1262,
            "end": 1321,
            "value": "An initialized binding is not created prior to evaluation",
            "raw": "'An initialized binding is not created prior to evaluation'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1324,
      "end": 1435,
      "expression": {
        "type": "CallExpression",
        "start": 1324,
        "end": 1434,
        "callee": {
          "type": "MemberExpression",
          "start": 1324,
          "end": 1340,
          "object": {
            "type": "Identifier",
            "start": 1324,
            "end": 1330,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1331,
            "end": 1340,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1344,
            "end": 1352,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1351,
              "end": 1352,
              "name": "f"
            }
          },
          {
            "type": "Literal",
            "start": 1356,
            "end": 1367,
            "value": "undefined",
            "raw": "'undefined'"
          },
          {
            "type": "Literal",
            "start": 1371,
            "end": 1432,
            "value": "An uninitialized binding is not created prior to evaluation",
            "raw": "'An uninitialized binding is not created prior to evaluation'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1437,
      "end": 1510,
      "expression": {
        "type": "CallExpression",
        "start": 1437,
        "end": 1509,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1437,
          "end": 1445,
          "expression": {
            "type": "SequenceExpression",
            "start": 1438,
            "end": 1444,
            "expressions": [
              {
                "type": "Literal",
                "start": 1438,
                "end": 1439,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 1440,
                "end": 1444,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1449,
            "end": 1507,
            "value": "for (let f of [0]) {if (false) ; else function f() {  }}",
            "raw": "'for (let f of [0]) {if (false) ; else function f() {  }}'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1512,
      "end": 1625,
      "expression": {
        "type": "CallExpression",
        "start": 1512,
        "end": 1624,
        "callee": {
          "type": "MemberExpression",
          "start": 1512,
          "end": 1525,
          "object": {
            "type": "Identifier",
            "start": 1512,
            "end": 1518,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1519,
            "end": 1525,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1526,
            "end": 1540,
            "name": "ReferenceError"
          },
          {
            "type": "FunctionExpression",
            "start": 1542,
            "end": 1561,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1553,
              "end": 1561,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1557,
                  "end": 1559,
                  "expression": {
                    "type": "Identifier",
                    "start": 1557,
                    "end": 1558,
                    "name": "f"
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1563,
            "end": 1623,
            "value": "An initialized binding is not created following evaluation",
            "raw": "'An initialized binding is not created following evaluation'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1626,
      "end": 1738,
      "expression": {
        "type": "CallExpression",
        "start": 1626,
        "end": 1737,
        "callee": {
          "type": "MemberExpression",
          "start": 1626,
          "end": 1642,
          "object": {
            "type": "Identifier",
            "start": 1626,
            "end": 1632,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1633,
            "end": 1642,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1646,
            "end": 1654,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "Identifier",
              "start": 1653,
              "end": 1654,
              "name": "f"
            }
          },
          {
            "type": "Literal",
            "start": 1658,
            "end": 1669,
            "value": "undefined",
            "raw": "'undefined'"
          },
          {
            "type": "Literal",
            "start": 1673,
            "end": 1735,
            "value": "An uninitialized binding is not created following evaluation",
            "raw": "'An uninitialized binding is not created following evaluation'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}