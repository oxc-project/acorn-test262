{
  "type": "Program",
  "start": 0,
  "end": 1016,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 711,
      "end": 1015,
      "expression": {
        "type": "CallExpression",
        "start": 711,
        "end": 1014,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 711,
          "end": 719,
          "expression": {
            "type": "SequenceExpression",
            "start": 712,
            "end": 718,
            "expressions": [
              {
                "type": "Literal",
                "start": 712,
                "end": 713,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Identifier",
                "start": 714,
                "end": 718,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 723,
            "end": 1012,
            "left": {
              "type": "BinaryExpression",
              "start": 723,
              "end": 1000,
              "left": {
                "type": "BinaryExpression",
                "start": 723,
                "end": 972,
                "left": {
                  "type": "Literal",
                  "start": 723,
                  "end": 955,
                  "value": "var global = fnGlobalObject();  assert.sameValue(f, undefined, \"binding is initialized to `undefined`\");    verifyProperty(global, \"f\", {    enumerable: true,    writable: true,    configurable: true  });switch (1) {",
                  "raw": "'var global = fnGlobalObject();\\\n  assert.sameValue(f, undefined, \"binding is initialized to `undefined`\");\\\n  \\\n  verifyProperty(global, \"f\", {\\\n    enumerable: true,\\\n    writable: true,\\\n    configurable: true\\\n  });switch (1) {'"
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 960,
                  "end": 972,
                  "value": "  default:",
                  "raw": "'  default:'"
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 977,
                "end": 1000,
                "value": "    function f() {  }",
                "raw": "'    function f() {  }'"
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 1005,
              "end": 1012,
              "value": "}  ",
              "raw": "'}\\\n  '"
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}