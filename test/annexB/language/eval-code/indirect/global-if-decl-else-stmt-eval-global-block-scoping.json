{
  "type": "Program",
  "start": 0,
  "end": 1991,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1563,
      "end": 1588,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1567,
          "end": 1576,
          "id": {
            "type": "Identifier",
            "start": 1567,
            "end": 1576,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1578,
          "end": 1587,
          "id": {
            "type": "Identifier",
            "start": 1578,
            "end": 1587,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1590,
      "end": 1694,
      "expression": {
        "type": "CallExpression",
        "start": 1590,
        "end": 1693,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1590,
          "end": 1598,
          "expression": {
            "type": "SequenceExpression",
            "start": 1591,
            "end": 1597,
            "expressions": [
              {
                "type": "Literal",
                "start": 1591,
                "end": 1592,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Identifier",
                "start": 1593,
                "end": 1597,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1602,
            "end": 1691,
            "value": "if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } else ;",
            "raw": "'if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; } else ;'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1696,
      "end": 1700,
      "expression": {
        "type": "CallExpression",
        "start": 1696,
        "end": 1699,
        "callee": {
          "type": "Identifier",
          "start": 1696,
          "end": 1697,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1702,
      "end": 1815,
      "expression": {
        "type": "CallExpression",
        "start": 1702,
        "end": 1814,
        "callee": {
          "type": "MemberExpression",
          "start": 1702,
          "end": 1718,
          "object": {
            "type": "Identifier",
            "start": 1702,
            "end": 1708,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1709,
            "end": 1718,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1722,
            "end": 1733,
            "callee": {
              "type": "Identifier",
              "start": 1722,
              "end": 1731,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1737,
            "end": 1743,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1747,
            "end": 1812,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1816,
      "end": 1884,
      "expression": {
        "type": "CallExpression",
        "start": 1816,
        "end": 1883,
        "callee": {
          "type": "MemberExpression",
          "start": 1816,
          "end": 1832,
          "object": {
            "type": "Identifier",
            "start": 1816,
            "end": 1822,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1823,
            "end": 1832,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1833,
            "end": 1842,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1844,
            "end": 1847,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1849,
            "end": 1882,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1885,
      "end": 1990,
      "expression": {
        "type": "CallExpression",
        "start": 1885,
        "end": 1989,
        "callee": {
          "type": "MemberExpression",
          "start": 1885,
          "end": 1901,
          "object": {
            "type": "Identifier",
            "start": 1885,
            "end": 1891,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1892,
            "end": 1901,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1905,
            "end": 1908,
            "callee": {
              "type": "Identifier",
              "start": 1905,
              "end": 1906,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1912,
            "end": 1918,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1922,
            "end": 1987,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}