{
  "type": "Program",
  "start": 0,
  "end": 974,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 731,
      "end": 973,
      "expression": {
        "type": "CallExpression",
        "start": 731,
        "end": 972,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 731,
          "end": 739,
          "expression": {
            "type": "SequenceExpression",
            "start": 732,
            "end": 738,
            "expressions": [
              {
                "type": "Literal",
                "start": 732,
                "end": 733,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Identifier",
                "start": 734,
                "end": 738,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 743,
            "end": 970,
            "left": {
              "type": "BinaryExpression",
              "start": 743,
              "end": 888,
              "left": {
                "type": "BinaryExpression",
                "start": 743,
                "end": 860,
                "left": {
                  "type": "Literal",
                  "start": 743,
                  "end": 843,
                  "value": "let f = 123;  assert.sameValue(f, 123, \"binding is not initialized to `undefined`\");switch (1) {",
                  "raw": "'let f = 123;\\\n  assert.sameValue(f, 123, \"binding is not initialized to `undefined`\");switch (1) {'",
                  "regex": null,
                  "bigint": null
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 848,
                  "end": 860,
                  "value": "  default:",
                  "raw": "'  default:'",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 865,
                "end": 888,
                "value": "    function f() {  }",
                "raw": "'    function f() {  }'",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 893,
              "end": 970,
              "value": "}  assert.sameValue(f, 123, \"value is not updated following evaluation\");",
              "raw": "'}\\\n  assert.sameValue(f, 123, \"value is not updated following evaluation\");'",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}