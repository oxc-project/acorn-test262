{
  "type": "Program",
  "start": 0,
  "end": 1954,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1533,
      "end": 1558,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1537,
          "end": 1546,
          "id": {
            "type": "Identifier",
            "start": 1537,
            "end": 1546,
            "name": "initialBV"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 1548,
          "end": 1557,
          "id": {
            "type": "Identifier",
            "start": 1548,
            "end": 1557,
            "name": "currentBV"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1560,
      "end": 1657,
      "expression": {
        "type": "CallExpression",
        "start": 1560,
        "end": 1656,
        "callee": {
          "type": "ParenthesizedExpression",
          "start": 1560,
          "end": 1568,
          "expression": {
            "type": "SequenceExpression",
            "start": 1561,
            "end": 1567,
            "expressions": [
              {
                "type": "Literal",
                "start": 1561,
                "end": 1562,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Identifier",
                "start": 1563,
                "end": 1567,
                "name": "eval"
              }
            ]
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1572,
            "end": 1654,
            "value": "if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }",
            "raw": "'if (true) function f() { initialBV = f; f = 123; currentBV = f; return \"decl\"; }'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1659,
      "end": 1663,
      "expression": {
        "type": "CallExpression",
        "start": 1659,
        "end": 1662,
        "callee": {
          "type": "Identifier",
          "start": 1659,
          "end": 1660,
          "name": "f"
        },
        "arguments": [],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1665,
      "end": 1778,
      "expression": {
        "type": "CallExpression",
        "start": 1665,
        "end": 1777,
        "callee": {
          "type": "MemberExpression",
          "start": 1665,
          "end": 1681,
          "object": {
            "type": "Identifier",
            "start": 1665,
            "end": 1671,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1672,
            "end": 1681,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1685,
            "end": 1696,
            "callee": {
              "type": "Identifier",
              "start": 1685,
              "end": 1694,
              "name": "initialBV"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1700,
            "end": 1706,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1710,
            "end": 1775,
            "value": "Block-scoped binding value is function object at execution time",
            "raw": "'Block-scoped binding value is function object at execution time'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1779,
      "end": 1847,
      "expression": {
        "type": "CallExpression",
        "start": 1779,
        "end": 1846,
        "callee": {
          "type": "MemberExpression",
          "start": 1779,
          "end": 1795,
          "object": {
            "type": "Identifier",
            "start": 1779,
            "end": 1785,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1786,
            "end": 1795,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1796,
            "end": 1805,
            "name": "currentBV"
          },
          {
            "type": "Literal",
            "start": 1807,
            "end": 1810,
            "value": 123,
            "raw": "123",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1812,
            "end": 1845,
            "value": "Block-scoped binding is mutable",
            "raw": "'Block-scoped binding is mutable'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1848,
      "end": 1953,
      "expression": {
        "type": "CallExpression",
        "start": 1848,
        "end": 1952,
        "callee": {
          "type": "MemberExpression",
          "start": 1848,
          "end": 1864,
          "object": {
            "type": "Identifier",
            "start": 1848,
            "end": 1854,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1855,
            "end": 1864,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1868,
            "end": 1871,
            "callee": {
              "type": "Identifier",
              "start": 1868,
              "end": 1869,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1875,
            "end": 1881,
            "value": "decl",
            "raw": "'decl'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1885,
            "end": 1950,
            "value": "Block-scoped binding is independent of outer var-scoped binding",
            "raw": "'Block-scoped binding is independent of outer var-scoped binding'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}