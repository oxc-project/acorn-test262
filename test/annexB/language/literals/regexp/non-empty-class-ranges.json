{
  "type": "Program",
  "start": 0,
  "end": 1267,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1079,
      "end": 1089,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1083,
          "end": 1088,
          "id": {
            "type": "Identifier",
            "start": 1083,
            "end": 1088,
            "name": "match"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1091,
      "end": 1132,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1091,
        "end": 1131,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1091,
          "end": 1096,
          "name": "match"
        },
        "right": {
          "type": "CallExpression",
          "start": 1099,
          "end": 1131,
          "callee": {
            "type": "MemberExpression",
            "start": 1099,
            "end": 1113,
            "object": {
              "type": "Literal",
              "start": 1099,
              "end": 1108,
              "value": null,
              "raw": "/[--\\d]+/",
              "regex": {
                "pattern": "[--\\d]+",
                "flags": ""
              }
            },
            "property": {
              "type": "Identifier",
              "start": 1109,
              "end": 1113,
              "name": "exec"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1114,
              "end": 1130,
              "value": ".-0123456789-.",
              "raw": "'.-0123456789-.'"
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1133,
      "end": 1176,
      "expression": {
        "type": "CallExpression",
        "start": 1133,
        "end": 1175,
        "callee": {
          "type": "MemberExpression",
          "start": 1133,
          "end": 1149,
          "object": {
            "type": "Identifier",
            "start": 1133,
            "end": 1139,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1140,
            "end": 1149,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1150,
            "end": 1158,
            "object": {
              "type": "Identifier",
              "start": 1150,
              "end": 1155,
              "name": "match"
            },
            "property": {
              "type": "Literal",
              "start": 1156,
              "end": 1157,
              "value": 0,
              "raw": "0"
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1160,
            "end": 1174,
            "value": "-0123456789-",
            "raw": "'-0123456789-'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1178,
      "end": 1221,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1178,
        "end": 1220,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1178,
          "end": 1183,
          "name": "match"
        },
        "right": {
          "type": "CallExpression",
          "start": 1186,
          "end": 1220,
          "callee": {
            "type": "MemberExpression",
            "start": 1186,
            "end": 1201,
            "object": {
              "type": "Literal",
              "start": 1186,
              "end": 1196,
              "value": null,
              "raw": "/[--\\dz]+/",
              "regex": {
                "pattern": "[--\\dz]+",
                "flags": ""
              }
            },
            "property": {
              "type": "Identifier",
              "start": 1197,
              "end": 1201,
              "name": "exec"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1202,
              "end": 1219,
              "value": ".-0123456789z-.",
              "raw": "'.-0123456789z-.'"
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1222,
      "end": 1266,
      "expression": {
        "type": "CallExpression",
        "start": 1222,
        "end": 1265,
        "callee": {
          "type": "MemberExpression",
          "start": 1222,
          "end": 1238,
          "object": {
            "type": "Identifier",
            "start": 1222,
            "end": 1228,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1229,
            "end": 1238,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1239,
            "end": 1247,
            "object": {
              "type": "Identifier",
              "start": 1239,
              "end": 1244,
              "name": "match"
            },
            "property": {
              "type": "Literal",
              "start": 1245,
              "end": 1246,
              "value": 0,
              "raw": "0"
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1249,
            "end": 1264,
            "value": "-0123456789z-",
            "raw": "'-0123456789z-'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}