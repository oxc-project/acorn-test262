{
  "type": "Program",
  "start": 0,
  "end": 1053,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 891,
      "end": 1051,
      "expression": {
        "type": "CallExpression",
        "start": 891,
        "end": 1050,
        "callee": {
          "type": "MemberExpression",
          "start": 891,
          "end": 904,
          "object": {
            "type": "Identifier",
            "start": 891,
            "end": 897,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 898,
            "end": 904,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 905,
            "end": 916,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 918,
            "end": 962,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 929,
              "end": 962,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 933,
                  "end": 944,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 937,
                      "end": 943,
                      "id": {
                        "type": "Identifier",
                        "start": 937,
                        "end": 938,
                        "name": "o"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "start": 941,
                        "end": 943,
                        "properties": []
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 947,
                  "end": 960,
                  "expression": {
                    "type": "CallExpression",
                    "start": 947,
                    "end": 959,
                    "callee": {
                      "type": "Identifier",
                      "start": 947,
                      "end": 951,
                      "name": "eval"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 952,
                        "end": 958,
                        "value": "o.#f",
                        "raw": "\"o.#f\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 964,
            "end": 1049,
            "value": "It should be a SyntaxError if AllPrivateIdentifiersValid returns false to eval body",
            "raw": "'It should be a SyntaxError if AllPrivateIdentifiersValid returns false to eval body'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}