{
  "type": "Program",
  "start": 0,
  "end": 615,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 245,
      "end": 369,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 249,
          "end": 258,
          "id": {
            "type": "Identifier",
            "start": 249,
            "end": 258,
            "name": "resolveP1"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 262,
          "end": 328,
          "id": {
            "type": "Identifier",
            "start": 262,
            "end": 264,
            "name": "p1"
          },
          "init": {
            "type": "NewExpression",
            "start": 267,
            "end": 328,
            "callee": {
              "type": "Identifier",
              "start": 271,
              "end": 278,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 279,
                "end": 327,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 288,
                    "end": 295,
                    "name": "resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 297,
                  "end": 327,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 303,
                      "end": 323,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 303,
                        "end": 322,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 303,
                          "end": 312,
                          "name": "resolveP1"
                        },
                        "right": {
                          "type": "Identifier",
                          "start": 315,
                          "end": 322,
                          "name": "resolve"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "start": 332,
          "end": 356,
          "id": {
            "type": "Identifier",
            "start": 332,
            "end": 334,
            "name": "p2"
          },
          "init": {
            "type": "CallExpression",
            "start": 337,
            "end": 356,
            "callee": {
              "type": "MemberExpression",
              "start": 337,
              "end": 352,
              "object": {
                "type": "Identifier",
                "start": 337,
                "end": 344,
                "name": "Promise"
              },
              "property": {
                "type": "Identifier",
                "start": 345,
                "end": 352,
                "name": "resolve"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 353,
                "end": 355,
                "name": "p1"
              }
            ],
            "optional": false
          }
        },
        {
          "type": "VariableDeclarator",
          "start": 360,
          "end": 368,
          "id": {
            "type": "Identifier",
            "start": 360,
            "end": 363,
            "name": "arg"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 366,
            "end": 368,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 371,
      "end": 452,
      "expression": {
        "type": "CallExpression",
        "start": 371,
        "end": 451,
        "callee": {
          "type": "MemberExpression",
          "start": 371,
          "end": 387,
          "object": {
            "type": "Identifier",
            "start": 371,
            "end": 377,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 378,
            "end": 387,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 388,
            "end": 390,
            "name": "p1"
          },
          {
            "type": "Identifier",
            "start": 392,
            "end": 394,
            "name": "p2"
          },
          {
            "type": "Literal",
            "start": 396,
            "end": 450,
            "value": "The value of p1 is expected to equal the value of p2",
            "raw": "'The value of p1 is expected to equal the value of p2'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 454,
      "end": 597,
      "expression": {
        "type": "CallExpression",
        "start": 454,
        "end": 596,
        "callee": {
          "type": "MemberExpression",
          "start": 454,
          "end": 582,
          "object": {
            "type": "CallExpression",
            "start": 454,
            "end": 577,
            "callee": {
              "type": "MemberExpression",
              "start": 454,
              "end": 461,
              "object": {
                "type": "Identifier",
                "start": 454,
                "end": 456,
                "name": "p2"
              },
              "property": {
                "type": "Identifier",
                "start": 457,
                "end": 461,
                "name": "then"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 462,
                "end": 576,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 471,
                    "end": 477,
                    "name": "result"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 479,
                  "end": 576,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 483,
                      "end": 574,
                      "expression": {
                        "type": "CallExpression",
                        "start": 483,
                        "end": 573,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 483,
                          "end": 499,
                          "object": {
                            "type": "Identifier",
                            "start": 483,
                            "end": 489,
                            "name": "assert"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 490,
                            "end": 499,
                            "name": "sameValue"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 500,
                            "end": 506,
                            "name": "result"
                          },
                          {
                            "type": "Identifier",
                            "start": 508,
                            "end": 511,
                            "name": "arg"
                          },
                          {
                            "type": "Literal",
                            "start": 513,
                            "end": 572,
                            "value": "The value of result is expected to equal the value of arg",
                            "raw": "'The value of result is expected to equal the value of arg'"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                }
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 578,
            "end": 582,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 583,
            "end": 588,
            "name": "$DONE"
          },
          {
            "type": "Identifier",
            "start": 590,
            "end": 595,
            "name": "$DONE"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 599,
      "end": 614,
      "expression": {
        "type": "CallExpression",
        "start": 599,
        "end": 613,
        "callee": {
          "type": "Identifier",
          "start": 599,
          "end": 608,
          "name": "resolveP1"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 609,
            "end": 612,
            "name": "arg"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}