{
  "type": "Program",
  "start": 0,
  "end": 1476,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 866,
      "end": 884,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 870,
          "end": 874,
          "id": {
            "type": "Identifier",
            "start": 870,
            "end": 874,
            "name": "self"
          },
          "init": null
        },
        {
          "type": "VariableDeclarator",
          "start": 876,
          "end": 883,
          "id": {
            "type": "Identifier",
            "start": 876,
            "end": 883,
            "name": "resolve"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 885,
      "end": 922,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 889,
          "end": 921,
          "id": {
            "type": "Identifier",
            "start": 889,
            "end": 903,
            "name": "builtinResolve"
          },
          "init": {
            "type": "MemberExpression",
            "start": 906,
            "end": 921,
            "object": {
              "type": "Identifier",
              "start": 906,
              "end": 913,
              "name": "Promise"
            },
            "property": {
              "type": "Identifier",
              "start": 914,
              "end": 921,
              "name": "resolve"
            },
            "computed": false,
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 923,
      "end": 985,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 927,
          "end": 984,
          "id": {
            "type": "Identifier",
            "start": 927,
            "end": 935,
            "name": "thenable"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 938,
            "end": 984,
            "properties": [
              {
                "type": "Property",
                "start": 942,
                "end": 982,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 942,
                  "end": 946,
                  "name": "then"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 948,
                  "end": 982,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "start": 957,
                      "end": 958,
                      "name": "r"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "start": 960,
                    "end": 982,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 966,
                        "end": 978,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 966,
                          "end": 977,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 966,
                            "end": 973,
                            "name": "resolve"
                          },
                          "right": {
                            "type": "Identifier",
                            "start": 976,
                            "end": 977,
                            "name": "r"
                          }
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 987,
      "end": 1130,
      "block": {
        "type": "BlockStatement",
        "start": 991,
        "end": 1082,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 995,
            "end": 1045,
            "expression": {
              "type": "AssignmentExpression",
              "start": 995,
              "end": 1044,
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "start": 995,
                "end": 1010,
                "object": {
                  "type": "Identifier",
                  "start": 995,
                  "end": 1002,
                  "name": "Promise"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1003,
                  "end": 1010,
                  "name": "resolve"
                },
                "computed": false,
                "optional": false
              },
              "right": {
                "type": "FunctionExpression",
                "start": 1013,
                "end": 1044,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1022,
                    "end": 1023,
                    "name": "v"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1025,
                  "end": 1044,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1031,
                      "end": 1040,
                      "argument": {
                        "type": "Identifier",
                        "start": 1038,
                        "end": 1039,
                        "name": "v"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1048,
            "end": 1080,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1048,
              "end": 1079,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 1048,
                "end": 1052,
                "name": "self"
              },
              "right": {
                "type": "CallExpression",
                "start": 1055,
                "end": 1079,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1055,
                  "end": 1067,
                  "object": {
                    "type": "Identifier",
                    "start": 1055,
                    "end": 1062,
                    "name": "Promise"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1063,
                    "end": 1067,
                    "name": "race"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "ArrayExpression",
                    "start": 1068,
                    "end": 1078,
                    "elements": [
                      {
                        "type": "Identifier",
                        "start": 1069,
                        "end": 1077,
                        "name": "thenable"
                      }
                    ]
                  }
                ],
                "optional": false
              }
            }
          }
        ]
      },
      "handler": null,
      "finalizer": {
        "type": "BlockStatement",
        "start": 1091,
        "end": 1130,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1095,
            "end": 1128,
            "expression": {
              "type": "AssignmentExpression",
              "start": 1095,
              "end": 1127,
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "start": 1095,
                "end": 1110,
                "object": {
                  "type": "Identifier",
                  "start": 1095,
                  "end": 1102,
                  "name": "Promise"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1103,
                  "end": 1110,
                  "name": "resolve"
                },
                "computed": false,
                "optional": false
              },
              "right": {
                "type": "Identifier",
                "start": 1113,
                "end": 1127,
                "name": "builtinResolve"
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1132,
      "end": 1146,
      "expression": {
        "type": "CallExpression",
        "start": 1132,
        "end": 1145,
        "callee": {
          "type": "Identifier",
          "start": 1132,
          "end": 1139,
          "name": "resolve"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1140,
            "end": 1144,
            "name": "self"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1148,
      "end": 1475,
      "expression": {
        "type": "CallExpression",
        "start": 1148,
        "end": 1474,
        "callee": {
          "type": "MemberExpression",
          "start": 1148,
          "end": 1157,
          "object": {
            "type": "Identifier",
            "start": 1148,
            "end": 1152,
            "name": "self"
          },
          "property": {
            "type": "Identifier",
            "start": 1153,
            "end": 1157,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1158,
            "end": 1221,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1169,
              "end": 1221,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1173,
                  "end": 1219,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1173,
                    "end": 1218,
                    "callee": {
                      "type": "Identifier",
                      "start": 1173,
                      "end": 1178,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1179,
                        "end": 1217,
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 1223,
            "end": 1473,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1232,
                "end": 1237,
                "name": "value"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1239,
              "end": 1473,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1243,
                  "end": 1331,
                  "test": {
                    "type": "UnaryExpression",
                    "start": 1247,
                    "end": 1253,
                    "operator": "!",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "start": 1248,
                      "end": 1253,
                      "name": "value"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1255,
                    "end": 1331,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1261,
                        "end": 1315,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1261,
                          "end": 1314,
                          "callee": {
                            "type": "Identifier",
                            "start": 1261,
                            "end": 1266,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1267,
                              "end": 1313,
                              "value": "The promise should be rejected with a value.",
                              "raw": "'The promise should be rejected with a value.'",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1320,
                        "end": 1327,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "start": 1334,
                  "end": 1460,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1338,
                    "end": 1369,
                    "left": {
                      "type": "MemberExpression",
                      "start": 1338,
                      "end": 1355,
                      "object": {
                        "type": "Identifier",
                        "start": 1338,
                        "end": 1343,
                        "name": "value"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1344,
                        "end": 1355,
                        "name": "constructor"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 1360,
                      "end": 1369,
                      "name": "TypeError"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1371,
                    "end": 1460,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1377,
                        "end": 1444,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1377,
                          "end": 1443,
                          "callee": {
                            "type": "Identifier",
                            "start": 1377,
                            "end": 1382,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1383,
                              "end": 1442,
                              "value": "The promise should be rejected with a TypeError instance.",
                              "raw": "'The promise should be rejected with a TypeError instance.'",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1449,
                        "end": 1456,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1463,
                  "end": 1471,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1463,
                    "end": 1470,
                    "callee": {
                      "type": "Identifier",
                      "start": 1463,
                      "end": 1468,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}