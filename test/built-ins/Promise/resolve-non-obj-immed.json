{
  "type": "Program",
  "start": 0,
  "end": 1009,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 616,
      "end": 639,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 620,
          "end": 638,
          "id": {
            "type": "Identifier",
            "start": 620,
            "end": 631,
            "name": "returnValue"
          },
          "init": {
            "type": "Literal",
            "start": 634,
            "end": 638,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 640,
      "end": 718,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 644,
          "end": 717,
          "id": {
            "type": "Identifier",
            "start": 644,
            "end": 651,
            "name": "promise"
          },
          "init": {
            "type": "NewExpression",
            "start": 654,
            "end": 717,
            "callee": {
              "type": "Identifier",
              "start": 658,
              "end": 665,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 666,
                "end": 716,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 675,
                    "end": 682,
                    "name": "resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 684,
                  "end": 716,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 688,
                      "end": 714,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 688,
                        "end": 713,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 688,
                          "end": 699,
                          "name": "returnValue"
                        },
                        "right": {
                          "type": "CallExpression",
                          "start": 702,
                          "end": 713,
                          "callee": {
                            "type": "Identifier",
                            "start": 702,
                            "end": 709,
                            "name": "resolve"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 710,
                              "end": 712,
                              "value": 45,
                              "raw": "45",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 720,
      "end": 787,
      "expression": {
        "type": "CallExpression",
        "start": 720,
        "end": 786,
        "callee": {
          "type": "MemberExpression",
          "start": 720,
          "end": 736,
          "object": {
            "type": "Identifier",
            "start": 720,
            "end": 726,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 727,
            "end": 736,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 737,
            "end": 748,
            "name": "returnValue"
          },
          {
            "type": "Identifier",
            "start": 750,
            "end": 759,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 761,
            "end": 785,
            "value": "\"resolve\" return value",
            "raw": "'\"resolve\" return value'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 789,
      "end": 1008,
      "expression": {
        "type": "CallExpression",
        "start": 789,
        "end": 1007,
        "callee": {
          "type": "MemberExpression",
          "start": 789,
          "end": 801,
          "object": {
            "type": "Identifier",
            "start": 789,
            "end": 796,
            "name": "promise"
          },
          "property": {
            "type": "Identifier",
            "start": 797,
            "end": 801,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 802,
            "end": 942,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 811,
                "end": 816,
                "name": "value"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 818,
              "end": 942,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 822,
                  "end": 928,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 826,
                    "end": 838,
                    "left": {
                      "type": "Identifier",
                      "start": 826,
                      "end": 831,
                      "name": "value"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Literal",
                      "start": 836,
                      "end": 838,
                      "value": 45,
                      "raw": "45",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 840,
                    "end": 928,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 846,
                        "end": 912,
                        "expression": {
                          "type": "CallExpression",
                          "start": 846,
                          "end": 911,
                          "callee": {
                            "type": "Identifier",
                            "start": 846,
                            "end": 851,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 852,
                              "end": 910,
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 917,
                        "end": 924,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 932,
                  "end": 940,
                  "expression": {
                    "type": "CallExpression",
                    "start": 932,
                    "end": 939,
                    "callee": {
                      "type": "Identifier",
                      "start": 932,
                      "end": 937,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 944,
            "end": 1006,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 955,
              "end": 1006,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 959,
                  "end": 1004,
                  "expression": {
                    "type": "CallExpression",
                    "start": 959,
                    "end": 1003,
                    "callee": {
                      "type": "Identifier",
                      "start": 959,
                      "end": 964,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 965,
                        "end": 1002,
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}