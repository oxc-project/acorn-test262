{
  "type": "Program",
  "start": 0,
  "end": 1384,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 965,
      "end": 1028,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 969,
          "end": 1027,
          "id": {
            "type": "Identifier",
            "start": 969,
            "end": 977,
            "name": "thenable"
          },
          "init": {
            "type": "NewExpression",
            "start": 980,
            "end": 1027,
            "callee": {
              "type": "Identifier",
              "start": 984,
              "end": 991,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 992,
                "end": 1026,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1001,
                    "end": 1008,
                    "name": "resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1010,
                  "end": 1026,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1014,
                      "end": 1024,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1014,
                        "end": 1023,
                        "callee": {
                          "type": "Identifier",
                          "start": 1014,
                          "end": 1021,
                          "name": "resolve"
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1029,
      "end": 1086,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1033,
          "end": 1085,
          "id": {
            "type": "Identifier",
            "start": 1033,
            "end": 1035,
            "name": "p1"
          },
          "init": {
            "type": "NewExpression",
            "start": 1038,
            "end": 1085,
            "callee": {
              "type": "Identifier",
              "start": 1042,
              "end": 1049,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 1050,
                "end": 1084,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1059,
                    "end": 1066,
                    "name": "resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1068,
                  "end": 1084,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 1072,
                      "end": 1082,
                      "expression": {
                        "type": "CallExpression",
                        "start": 1072,
                        "end": 1081,
                        "callee": {
                          "type": "Identifier",
                          "start": 1072,
                          "end": 1079,
                          "name": "resolve"
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1087,
      "end": 1094,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1091,
          "end": 1093,
          "id": {
            "type": "Identifier",
            "start": 1091,
            "end": 1093,
            "name": "p2"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1096,
      "end": 1143,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1096,
        "end": 1142,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1096,
          "end": 1098,
          "name": "p2"
        },
        "right": {
          "type": "CallExpression",
          "start": 1101,
          "end": 1142,
          "callee": {
            "type": "MemberExpression",
            "start": 1101,
            "end": 1108,
            "object": {
              "type": "Identifier",
              "start": 1101,
              "end": 1103,
              "name": "p1"
            },
            "property": {
              "type": "Identifier",
              "start": 1104,
              "end": 1108,
              "name": "then"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "FunctionExpression",
              "start": 1109,
              "end": 1141,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1120,
                "end": 1141,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 1124,
                    "end": 1139,
                    "argument": {
                      "type": "Identifier",
                      "start": 1130,
                      "end": 1138,
                      "name": "thenable"
                    }
                  }
                ]
              }
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1145,
      "end": 1383,
      "expression": {
        "type": "CallExpression",
        "start": 1145,
        "end": 1382,
        "callee": {
          "type": "MemberExpression",
          "start": 1145,
          "end": 1152,
          "object": {
            "type": "Identifier",
            "start": 1145,
            "end": 1147,
            "name": "p2"
          },
          "property": {
            "type": "Identifier",
            "start": 1148,
            "end": 1152,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1153,
            "end": 1216,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1164,
              "end": 1216,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1168,
                  "end": 1214,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1168,
                    "end": 1213,
                    "callee": {
                      "type": "Identifier",
                      "start": 1168,
                      "end": 1173,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1174,
                        "end": 1212,
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 1218,
            "end": 1381,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1227,
                "end": 1228,
                "name": "x"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1230,
              "end": 1381,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1234,
                  "end": 1367,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1238,
                    "end": 1252,
                    "left": {
                      "type": "Identifier",
                      "start": 1238,
                      "end": 1239,
                      "name": "x"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 1244,
                      "end": 1252,
                      "name": "thenable"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1254,
                    "end": 1367,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1260,
                        "end": 1351,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1260,
                          "end": 1350,
                          "callee": {
                            "type": "Identifier",
                            "start": 1260,
                            "end": 1265,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1266,
                              "end": 1349,
                              "value": "The promise should be rejected with the resolution value of the provided promise.",
                              "raw": "'The promise should be rejected with the resolution value of the provided promise.'",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1356,
                        "end": 1363,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1371,
                  "end": 1379,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1371,
                    "end": 1378,
                    "callee": {
                      "type": "Identifier",
                      "start": 1371,
                      "end": 1376,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}