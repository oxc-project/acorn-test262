{
  "type": "Program",
  "start": 0,
  "end": 1278,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 796,
      "end": 819,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 800,
          "end": 818,
          "id": {
            "type": "Identifier",
            "start": 800,
            "end": 811,
            "name": "returnValue"
          },
          "init": {
            "type": "Literal",
            "start": 814,
            "end": 818,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 820,
      "end": 855,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 824,
          "end": 854,
          "id": {
            "type": "Identifier",
            "start": 824,
            "end": 835,
            "name": "nonThenable"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 838,
            "end": 854,
            "properties": [
              {
                "type": "Property",
                "start": 842,
                "end": 852,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 842,
                  "end": 846,
                  "name": "then"
                },
                "value": {
                  "type": "Literal",
                  "start": 848,
                  "end": 852,
                  "value": null,
                  "raw": "null",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 856,
      "end": 868,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 860,
          "end": 867,
          "id": {
            "type": "Identifier",
            "start": 860,
            "end": 867,
            "name": "resolve"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 869,
      "end": 941,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 873,
          "end": 940,
          "id": {
            "type": "Identifier",
            "start": 873,
            "end": 880,
            "name": "promise"
          },
          "init": {
            "type": "NewExpression",
            "start": 883,
            "end": 940,
            "callee": {
              "type": "Identifier",
              "start": 887,
              "end": 894,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 895,
                "end": 939,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 904,
                    "end": 912,
                    "name": "_resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 914,
                  "end": 939,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 918,
                      "end": 937,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 918,
                        "end": 936,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 918,
                          "end": 925,
                          "name": "resolve"
                        },
                        "right": {
                          "type": "Identifier",
                          "start": 928,
                          "end": 936,
                          "name": "_resolve"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 943,
      "end": 1171,
      "expression": {
        "type": "CallExpression",
        "start": 943,
        "end": 1170,
        "callee": {
          "type": "MemberExpression",
          "start": 943,
          "end": 955,
          "object": {
            "type": "Identifier",
            "start": 943,
            "end": 950,
            "name": "promise"
          },
          "property": {
            "type": "Identifier",
            "start": 951,
            "end": 955,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 956,
            "end": 1105,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 965,
                "end": 970,
                "name": "value"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 972,
              "end": 1105,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 976,
                  "end": 1091,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 980,
                    "end": 1001,
                    "left": {
                      "type": "Identifier",
                      "start": 980,
                      "end": 985,
                      "name": "value"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 990,
                      "end": 1001,
                      "name": "nonThenable"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1003,
                    "end": 1091,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1009,
                        "end": 1075,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1009,
                          "end": 1074,
                          "callee": {
                            "type": "Identifier",
                            "start": 1009,
                            "end": 1014,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1015,
                              "end": 1073,
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1080,
                        "end": 1087,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1095,
                  "end": 1103,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1095,
                    "end": 1102,
                    "callee": {
                      "type": "Identifier",
                      "start": 1095,
                      "end": 1100,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 1107,
            "end": 1169,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1118,
              "end": 1169,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1122,
                  "end": 1167,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1122,
                    "end": 1166,
                    "callee": {
                      "type": "Identifier",
                      "start": 1122,
                      "end": 1127,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 1128,
                        "end": 1165,
                        "value": "The promise should not be rejected.",
                        "raw": "'The promise should not be rejected.'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1173,
      "end": 1208,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1173,
        "end": 1207,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1173,
          "end": 1184,
          "name": "returnValue"
        },
        "right": {
          "type": "CallExpression",
          "start": 1187,
          "end": 1207,
          "callee": {
            "type": "Identifier",
            "start": 1187,
            "end": 1194,
            "name": "resolve"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 1195,
              "end": 1206,
              "name": "nonThenable"
            }
          ],
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1210,
      "end": 1277,
      "expression": {
        "type": "CallExpression",
        "start": 1210,
        "end": 1276,
        "callee": {
          "type": "MemberExpression",
          "start": 1210,
          "end": 1226,
          "object": {
            "type": "Identifier",
            "start": 1210,
            "end": 1216,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1217,
            "end": 1226,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1227,
            "end": 1238,
            "name": "returnValue"
          },
          {
            "type": "Identifier",
            "start": 1240,
            "end": 1249,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 1251,
            "end": 1275,
            "value": "\"resolve\" return value",
            "raw": "'\"resolve\" return value'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}