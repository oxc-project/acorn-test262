{
  "type": "Program",
  "start": 0,
  "end": 1170,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 651,
      "end": 674,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 655,
          "end": 673,
          "id": {
            "type": "Identifier",
            "start": 655,
            "end": 666,
            "name": "returnValue"
          },
          "init": {
            "type": "Literal",
            "start": 669,
            "end": 673,
            "value": null,
            "raw": "null",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 675,
      "end": 690,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 679,
          "end": 689,
          "id": {
            "type": "Identifier",
            "start": 679,
            "end": 684,
            "name": "value"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 687,
            "end": 689,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 691,
      "end": 790,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 695,
          "end": 789,
          "id": {
            "type": "Identifier",
            "start": 695,
            "end": 707,
            "name": "poisonedThen"
          },
          "init": {
            "type": "CallExpression",
            "start": 710,
            "end": 789,
            "callee": {
              "type": "MemberExpression",
              "start": 710,
              "end": 731,
              "object": {
                "type": "Identifier",
                "start": 710,
                "end": 716,
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "start": 717,
                "end": 731,
                "name": "defineProperty"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 732,
                "end": 734,
                "properties": []
              },
              {
                "type": "Literal",
                "start": 736,
                "end": 742,
                "value": "then",
                "raw": "'then'",
                "regex": null,
                "bigint": null
              },
              {
                "type": "ObjectExpression",
                "start": 744,
                "end": 788,
                "properties": [
                  {
                    "type": "Property",
                    "start": 748,
                    "end": 786,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 748,
                      "end": 751,
                      "name": "get"
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "start": 753,
                      "end": 786,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 764,
                        "end": 786,
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "start": 770,
                            "end": 782,
                            "argument": {
                              "type": "Identifier",
                              "start": 776,
                              "end": 781,
                              "name": "value"
                            }
                          }
                        ]
                      }
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 791,
      "end": 879,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 795,
          "end": 878,
          "id": {
            "type": "Identifier",
            "start": 795,
            "end": 802,
            "name": "promise"
          },
          "init": {
            "type": "NewExpression",
            "start": 805,
            "end": 878,
            "callee": {
              "type": "Identifier",
              "start": 809,
              "end": 816,
              "name": "Promise"
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 817,
                "end": 877,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 826,
                    "end": 833,
                    "name": "resolve"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 835,
                  "end": 877,
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 839,
                      "end": 875,
                      "expression": {
                        "type": "AssignmentExpression",
                        "start": 839,
                        "end": 874,
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "start": 839,
                          "end": 850,
                          "name": "returnValue"
                        },
                        "right": {
                          "type": "CallExpression",
                          "start": 853,
                          "end": 874,
                          "callee": {
                            "type": "Identifier",
                            "start": 853,
                            "end": 860,
                            "name": "resolve"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 861,
                              "end": 873,
                              "name": "poisonedThen"
                            }
                          ],
                          "optional": false
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 881,
      "end": 948,
      "expression": {
        "type": "CallExpression",
        "start": 881,
        "end": 947,
        "callee": {
          "type": "MemberExpression",
          "start": 881,
          "end": 897,
          "object": {
            "type": "Identifier",
            "start": 881,
            "end": 887,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 888,
            "end": 897,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 898,
            "end": 909,
            "name": "returnValue"
          },
          {
            "type": "Identifier",
            "start": 911,
            "end": 920,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 922,
            "end": 946,
            "value": "\"resolve\" return value",
            "raw": "'\"resolve\" return value'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 950,
      "end": 1169,
      "expression": {
        "type": "CallExpression",
        "start": 950,
        "end": 1168,
        "callee": {
          "type": "MemberExpression",
          "start": 950,
          "end": 962,
          "object": {
            "type": "Identifier",
            "start": 950,
            "end": 957,
            "name": "promise"
          },
          "property": {
            "type": "Identifier",
            "start": 958,
            "end": 962,
            "name": "then"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 963,
            "end": 1026,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 974,
              "end": 1026,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 978,
                  "end": 1024,
                  "expression": {
                    "type": "CallExpression",
                    "start": 978,
                    "end": 1023,
                    "callee": {
                      "type": "Identifier",
                      "start": 978,
                      "end": 983,
                      "name": "$DONE"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 984,
                        "end": 1022,
                        "value": "The promise should not be fulfilled.",
                        "raw": "'The promise should not be fulfilled.'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "FunctionExpression",
            "start": 1028,
            "end": 1167,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1037,
                "end": 1040,
                "name": "val"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1042,
              "end": 1167,
              "body": [
                {
                  "type": "IfStatement",
                  "start": 1046,
                  "end": 1153,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 1050,
                    "end": 1063,
                    "left": {
                      "type": "Identifier",
                      "start": 1050,
                      "end": 1053,
                      "name": "val"
                    },
                    "operator": "!==",
                    "right": {
                      "type": "Identifier",
                      "start": 1058,
                      "end": 1063,
                      "name": "value"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 1065,
                    "end": 1153,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 1071,
                        "end": 1137,
                        "expression": {
                          "type": "CallExpression",
                          "start": 1071,
                          "end": 1136,
                          "callee": {
                            "type": "Identifier",
                            "start": 1071,
                            "end": 1076,
                            "name": "$DONE"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1077,
                              "end": 1135,
                              "value": "The promise should be fulfilled with the provided value.",
                              "raw": "'The promise should be fulfilled with the provided value.'",
                              "regex": null,
                              "bigint": null
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "start": 1142,
                        "end": 1149,
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1157,
                  "end": 1165,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1157,
                    "end": 1164,
                    "callee": {
                      "type": "Identifier",
                      "start": 1157,
                      "end": 1162,
                      "name": "$DONE"
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}