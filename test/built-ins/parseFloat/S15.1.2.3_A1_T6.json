{
  "type": "Program",
  "start": 0,
  "end": 1297,
  "body": [
    {
      "type": "IfStatement",
      "start": 252,
      "end": 446,
      "test": {
        "type": "BinaryExpression",
        "start": 256,
        "end": 309,
        "left": {
          "type": "CallExpression",
          "start": 256,
          "end": 286,
          "callee": {
            "type": "Identifier",
            "start": 256,
            "end": 266,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "NewExpression",
              "start": 267,
              "end": 285,
              "callee": {
                "type": "Identifier",
                "start": 271,
                "end": 277,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 278,
                  "end": 284,
                  "value": "-1.1",
                  "raw": "\"-1.1\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 291,
          "end": 309,
          "callee": {
            "type": "Identifier",
            "start": 291,
            "end": 301,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 302,
              "end": 308,
              "value": "-1.1",
              "raw": "\"-1.1\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 311,
        "end": 446,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 315,
            "end": 444,
            "argument": {
              "type": "NewExpression",
              "start": 321,
              "end": 443,
              "callee": {
                "type": "Identifier",
                "start": 325,
                "end": 337,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 338,
                  "end": 442,
                  "left": {
                    "type": "Literal",
                    "start": 338,
                    "end": 407,
                    "value": "#1: parseFloat(new String(\"-1.1\")) === parseFloat(\"-1.1\"). Actual: ",
                    "raw": "'#1: parseFloat(new String(\"-1.1\")) === parseFloat(\"-1.1\"). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 410,
                    "end": 442,
                    "expression": {
                      "type": "CallExpression",
                      "start": 411,
                      "end": 441,
                      "callee": {
                        "type": "Identifier",
                        "start": 411,
                        "end": 421,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "start": 422,
                          "end": 440,
                          "callee": {
                            "type": "Identifier",
                            "start": 426,
                            "end": 432,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 433,
                              "end": 439,
                              "value": "-1.1",
                              "raw": "\"-1.1\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 458,
      "end": 672,
      "test": {
        "type": "BinaryExpression",
        "start": 462,
        "end": 523,
        "left": {
          "type": "CallExpression",
          "start": 462,
          "end": 496,
          "callee": {
            "type": "Identifier",
            "start": 462,
            "end": 472,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "NewExpression",
              "start": 473,
              "end": 495,
              "callee": {
                "type": "Identifier",
                "start": 477,
                "end": 483,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 484,
                  "end": 494,
                  "value": "Infinity",
                  "raw": "\"Infinity\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 501,
          "end": 523,
          "callee": {
            "type": "Identifier",
            "start": 501,
            "end": 511,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 512,
              "end": 522,
              "value": "Infinity",
              "raw": "\"Infinity\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 525,
        "end": 672,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 529,
            "end": 670,
            "argument": {
              "type": "NewExpression",
              "start": 535,
              "end": 669,
              "callee": {
                "type": "Identifier",
                "start": 539,
                "end": 551,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 552,
                  "end": 668,
                  "left": {
                    "type": "Literal",
                    "start": 552,
                    "end": 629,
                    "value": "#2: parseFloat(new String(\"Infinity\")) === parseFloat(\"Infinity\"). Actual: ",
                    "raw": "'#2: parseFloat(new String(\"Infinity\")) === parseFloat(\"Infinity\"). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 632,
                    "end": 668,
                    "expression": {
                      "type": "CallExpression",
                      "start": 633,
                      "end": 667,
                      "callee": {
                        "type": "Identifier",
                        "start": 633,
                        "end": 643,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "start": 644,
                          "end": 666,
                          "callee": {
                            "type": "Identifier",
                            "start": 648,
                            "end": 654,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 655,
                              "end": 665,
                              "value": "Infinity",
                              "raw": "\"Infinity\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 684,
      "end": 873,
      "test": {
        "type": "BinaryExpression",
        "start": 688,
        "end": 735,
        "left": {
          "type": "CallExpression",
          "start": 688,
          "end": 725,
          "callee": {
            "type": "Identifier",
            "start": 688,
            "end": 694,
            "name": "String"
          },
          "arguments": [
            {
              "type": "CallExpression",
              "start": 695,
              "end": 724,
              "callee": {
                "type": "Identifier",
                "start": 695,
                "end": 705,
                "name": "parseFloat"
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "start": 706,
                  "end": 723,
                  "callee": {
                    "type": "Identifier",
                    "start": 710,
                    "end": 716,
                    "name": "String"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "start": 717,
                      "end": 722,
                      "value": "NaN",
                      "raw": "\"NaN\"",
                      "regex": null,
                      "bigint": null
                    }
                  ]
                }
              ],
              "optional": false
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 730,
          "end": 735,
          "value": "NaN",
          "raw": "\"NaN\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 737,
        "end": 873,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 741,
            "end": 871,
            "argument": {
              "type": "NewExpression",
              "start": 747,
              "end": 870,
              "callee": {
                "type": "Identifier",
                "start": 751,
                "end": 763,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 764,
                  "end": 869,
                  "left": {
                    "type": "Literal",
                    "start": 764,
                    "end": 827,
                    "value": "#3: String(parseFloat(new String(\"NaN\"))) === \"NaN\". Actual: ",
                    "raw": "'#3: String(parseFloat(new String(\"NaN\"))) === \"NaN\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 830,
                    "end": 869,
                    "expression": {
                      "type": "CallExpression",
                      "start": 831,
                      "end": 868,
                      "callee": {
                        "type": "Identifier",
                        "start": 831,
                        "end": 837,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "start": 838,
                          "end": 867,
                          "callee": {
                            "type": "Identifier",
                            "start": 838,
                            "end": 848,
                            "name": "parseFloat"
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "start": 849,
                              "end": 866,
                              "callee": {
                                "type": "Identifier",
                                "start": 853,
                                "end": 859,
                                "name": "String"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "start": 860,
                                  "end": 865,
                                  "value": "NaN",
                                  "raw": "\"NaN\"",
                                  "regex": null,
                                  "bigint": null
                                }
                              ]
                            }
                          ],
                          "optional": false
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 885,
      "end": 1089,
      "test": {
        "type": "BinaryExpression",
        "start": 889,
        "end": 946,
        "left": {
          "type": "CallExpression",
          "start": 889,
          "end": 921,
          "callee": {
            "type": "Identifier",
            "start": 889,
            "end": 899,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "NewExpression",
              "start": 900,
              "end": 920,
              "callee": {
                "type": "Identifier",
                "start": 904,
                "end": 910,
                "name": "String"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 911,
                  "end": 919,
                  "value": ".01e+2",
                  "raw": "\".01e+2\"",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 926,
          "end": 946,
          "callee": {
            "type": "Identifier",
            "start": 926,
            "end": 936,
            "name": "parseFloat"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 937,
              "end": 945,
              "value": ".01e+2",
              "raw": "\".01e+2\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 948,
        "end": 1089,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 952,
            "end": 1087,
            "argument": {
              "type": "NewExpression",
              "start": 958,
              "end": 1086,
              "callee": {
                "type": "Identifier",
                "start": 962,
                "end": 974,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 975,
                  "end": 1085,
                  "left": {
                    "type": "Literal",
                    "start": 975,
                    "end": 1048,
                    "value": "#4: parseFloat(new String(\".01e+2\")) === parseFloat(\".01e+2\"). Actual: ",
                    "raw": "'#4: parseFloat(new String(\".01e+2\")) === parseFloat(\".01e+2\"). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1051,
                    "end": 1085,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1052,
                      "end": 1084,
                      "callee": {
                        "type": "Identifier",
                        "start": 1052,
                        "end": 1062,
                        "name": "parseFloat"
                      },
                      "arguments": [
                        {
                          "type": "NewExpression",
                          "start": 1063,
                          "end": 1083,
                          "callee": {
                            "type": "Identifier",
                            "start": 1067,
                            "end": 1073,
                            "name": "String"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 1074,
                              "end": 1082,
                              "value": ".01e+2",
                              "raw": "\".01e+2\"",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1101,
      "end": 1296,
      "test": {
        "type": "BinaryExpression",
        "start": 1105,
        "end": 1154,
        "left": {
          "type": "CallExpression",
          "start": 1105,
          "end": 1144,
          "callee": {
            "type": "Identifier",
            "start": 1105,
            "end": 1111,
            "name": "String"
          },
          "arguments": [
            {
              "type": "CallExpression",
              "start": 1112,
              "end": 1143,
              "callee": {
                "type": "Identifier",
                "start": 1112,
                "end": 1122,
                "name": "parseFloat"
              },
              "arguments": [
                {
                  "type": "NewExpression",
                  "start": 1123,
                  "end": 1142,
                  "callee": {
                    "type": "Identifier",
                    "start": 1127,
                    "end": 1133,
                    "name": "String"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "start": 1134,
                      "end": 1141,
                      "value": "false",
                      "raw": "\"false\"",
                      "regex": null,
                      "bigint": null
                    }
                  ]
                }
              ],
              "optional": false
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1149,
          "end": 1154,
          "value": "NaN",
          "raw": "\"NaN\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1156,
        "end": 1296,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1160,
            "end": 1294,
            "argument": {
              "type": "NewExpression",
              "start": 1166,
              "end": 1293,
              "callee": {
                "type": "Identifier",
                "start": 1170,
                "end": 1182,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1183,
                  "end": 1292,
                  "left": {
                    "type": "Literal",
                    "start": 1183,
                    "end": 1248,
                    "value": "#5: String(parseFloat(new String(\"false\"))) === \"NaN\". Actual: ",
                    "raw": "'#5: String(parseFloat(new String(\"false\"))) === \"NaN\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1251,
                    "end": 1292,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1252,
                      "end": 1291,
                      "callee": {
                        "type": "Identifier",
                        "start": 1252,
                        "end": 1258,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "start": 1259,
                          "end": 1290,
                          "callee": {
                            "type": "Identifier",
                            "start": 1259,
                            "end": 1269,
                            "name": "parseFloat"
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "start": 1270,
                              "end": 1289,
                              "callee": {
                                "type": "Identifier",
                                "start": 1274,
                                "end": 1280,
                                "name": "String"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "start": 1281,
                                  "end": 1288,
                                  "value": "false",
                                  "raw": "\"false\"",
                                  "regex": null,
                                  "bigint": null
                                }
                              ]
                            }
                          ],
                          "optional": false
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}