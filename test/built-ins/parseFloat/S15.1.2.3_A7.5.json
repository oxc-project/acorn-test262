{
  "type": "Program",
  "start": 0,
  "end": 751,
  "body": [
    {
      "type": "IfStatement",
      "start": 296,
      "end": 492,
      "test": {
        "type": "BinaryExpression",
        "start": 300,
        "end": 349,
        "left": {
          "type": "CallExpression",
          "start": 300,
          "end": 339,
          "callee": {
            "type": "MemberExpression",
            "start": 300,
            "end": 325,
            "object": {
              "type": "ThisExpression",
              "start": 300,
              "end": 304
            },
            "property": {
              "type": "Identifier",
              "start": 305,
              "end": 325,
              "name": "propertyIsEnumerable"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 326,
              "end": 338,
              "value": "parseFloat",
              "raw": "'parseFloat'",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 344,
          "end": 349,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 351,
        "end": 492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 355,
            "end": 490,
            "argument": {
              "type": "NewExpression",
              "start": 361,
              "end": 489,
              "callee": {
                "type": "Identifier",
                "start": 365,
                "end": 377,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 378,
                  "end": 488,
                  "left": {
                    "type": "Literal",
                    "start": 378,
                    "end": 444,
                    "value": "#1:this.propertyIsEnumerable('parseFloat') === false. Actual: ",
                    "raw": "'#1:this.propertyIsEnumerable(\\'parseFloat\\') === false. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 447,
                    "end": 488,
                    "expression": {
                      "type": "CallExpression",
                      "start": 448,
                      "end": 487,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 448,
                        "end": 473,
                        "object": {
                          "type": "ThisExpression",
                          "start": 448,
                          "end": 452
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 453,
                          "end": 473,
                          "name": "propertyIsEnumerable"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 474,
                          "end": 486,
                          "value": "parseFloat",
                          "raw": "'parseFloat'",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 504,
      "end": 522,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 508,
          "end": 521,
          "id": {
            "type": "Identifier",
            "start": 508,
            "end": 514,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 517,
            "end": 521,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForInStatement",
      "start": 523,
      "end": 598,
      "left": {
        "type": "VariableDeclaration",
        "start": 528,
        "end": 533,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 532,
            "end": 533,
            "id": {
              "type": "Identifier",
              "start": 532,
              "end": 533,
              "name": "p"
            },
            "init": null
          }
        ],
        "kind": "var"
      },
      "right": {
        "type": "ThisExpression",
        "start": 537,
        "end": 541
      },
      "body": {
        "type": "BlockStatement",
        "start": 543,
        "end": 598,
        "body": [
          {
            "type": "IfStatement",
            "start": 547,
            "end": 596,
            "test": {
              "type": "BinaryExpression",
              "start": 551,
              "end": 569,
              "left": {
                "type": "Identifier",
                "start": 551,
                "end": 552,
                "name": "p"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 557,
                "end": 569,
                "value": "parseFloat",
                "raw": "\"parseFloat\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 571,
              "end": 596,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 577,
                  "end": 592,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 577,
                    "end": 591,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 577,
                      "end": 583,
                      "name": "result"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 586,
                      "end": 591,
                      "value": false,
                      "raw": "false",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 600,
      "end": 750,
      "test": {
        "type": "BinaryExpression",
        "start": 604,
        "end": 619,
        "left": {
          "type": "Identifier",
          "start": 604,
          "end": 610,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 615,
          "end": 619,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 621,
        "end": 750,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 625,
            "end": 748,
            "argument": {
              "type": "NewExpression",
              "start": 631,
              "end": 747,
              "callee": {
                "type": "Identifier",
                "start": 635,
                "end": 647,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 648,
                  "end": 746,
                  "value": "#2: result = true; for (p in this) { if (p === \"parseFloat\") result = false; }  result === true;",
                  "raw": "'#2: result = true; for (p in this) { if (p === \"parseFloat\") result = false; }  result === true;'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}