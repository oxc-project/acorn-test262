{
  "type": "Program",
  "start": 0,
  "end": 447,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 247,
      "end": 345,
      "expression": {
        "type": "CallExpression",
        "start": 247,
        "end": 344,
        "callee": {
          "type": "MemberExpression",
          "start": 247,
          "end": 263,
          "object": {
            "type": "Identifier",
            "start": 247,
            "end": 253,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 254,
            "end": 263,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 264,
            "end": 291,
            "callee": {
              "type": "Identifier",
              "start": 264,
              "end": 272,
              "name": "parseInt"
            },
            "arguments": [
              {
                "type": "NewExpression",
                "start": 273,
                "end": 290,
                "callee": {
                  "type": "Identifier",
                  "start": 277,
                  "end": 284,
                  "name": "Boolean"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 285,
                    "end": 289,
                    "value": true,
                    "raw": "true"
                  }
                ]
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 293,
            "end": 296,
            "name": "NaN"
          },
          {
            "type": "Literal",
            "start": 298,
            "end": 343,
            "value": "parseInt(new Boolean(true)) must return NaN",
            "raw": "'parseInt(new Boolean(true)) must return NaN'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 346,
      "end": 446,
      "expression": {
        "type": "CallExpression",
        "start": 346,
        "end": 445,
        "callee": {
          "type": "MemberExpression",
          "start": 346,
          "end": 362,
          "object": {
            "type": "Identifier",
            "start": 346,
            "end": 352,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 353,
            "end": 362,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 363,
            "end": 391,
            "callee": {
              "type": "Identifier",
              "start": 363,
              "end": 371,
              "name": "parseInt"
            },
            "arguments": [
              {
                "type": "NewExpression",
                "start": 372,
                "end": 390,
                "callee": {
                  "type": "Identifier",
                  "start": 376,
                  "end": 383,
                  "name": "Boolean"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 384,
                    "end": 389,
                    "value": false,
                    "raw": "false"
                  }
                ]
              }
            ],
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 393,
            "end": 396,
            "name": "NaN"
          },
          {
            "type": "Literal",
            "start": 398,
            "end": 444,
            "value": "parseInt(new Boolean(false)) must return NaN",
            "raw": "'parseInt(new Boolean(false)) must return NaN'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}