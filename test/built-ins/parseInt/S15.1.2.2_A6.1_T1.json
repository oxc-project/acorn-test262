{
  "type": "Program",
  "start": 0,
  "end": 549,
  "body": [
    {
      "type": "ForStatement",
      "start": 421,
      "end": 548,
      "init": {
        "type": "VariableDeclaration",
        "start": 426,
        "end": 435,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 430,
            "end": 435,
            "id": {
              "type": "Identifier",
              "start": 430,
              "end": 431,
              "name": "i"
            },
            "init": {
              "type": "Literal",
              "start": 434,
              "end": 435,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 437,
        "end": 444,
        "left": {
          "type": "Identifier",
          "start": 437,
          "end": 438,
          "name": "i"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 442,
          "end": 444,
          "value": 36,
          "raw": "36",
          "regex": null,
          "bigint": null
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 446,
        "end": 449,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 446,
          "end": 447,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 451,
        "end": 548,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 455,
            "end": 546,
            "expression": {
              "type": "CallExpression",
              "start": 455,
              "end": 545,
              "callee": {
                "type": "MemberExpression",
                "start": 455,
                "end": 471,
                "object": {
                  "type": "Identifier",
                  "start": 455,
                  "end": 461,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 462,
                  "end": 471,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 472,
                  "end": 491,
                  "callee": {
                    "type": "Identifier",
                    "start": 472,
                    "end": 480,
                    "name": "parseInt"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "start": 481,
                      "end": 487,
                      "value": "10$1",
                      "raw": "\"10$1\"",
                      "regex": null,
                      "bigint": null
                    },
                    {
                      "type": "Identifier",
                      "start": 489,
                      "end": 490,
                      "name": "i"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Identifier",
                  "start": 493,
                  "end": 494,
                  "name": "i"
                },
                {
                  "type": "Literal",
                  "start": 496,
                  "end": 544,
                  "value": "parseInt(\"10$1\", i) must return the value of i",
                  "raw": "'parseInt(\"10$1\", i) must return the value of i'",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}