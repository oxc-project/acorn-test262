{
  "type": "Program",
  "start": 0,
  "end": 633,
  "body": [
    {
      "type": "TryStatement",
      "start": 363,
      "end": 632,
      "block": {
        "type": "BlockStatement",
        "start": 367,
        "end": 486,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 371,
            "end": 387,
            "expression": {
              "type": "NewExpression",
              "start": 371,
              "end": 386,
              "callee": {
                "type": "Identifier",
                "start": 375,
                "end": 384,
                "name": "decodeURI"
              },
              "arguments": []
            }
          },
          {
            "type": "ThrowStatement",
            "start": 390,
            "end": 484,
            "argument": {
              "type": "NewExpression",
              "start": 396,
              "end": 483,
              "callee": {
                "type": "Identifier",
                "start": 400,
                "end": 412,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 413,
                  "end": 482,
                  "left": {
                    "type": "Literal",
                    "start": 413,
                    "end": 462,
                    "value": "#1.1: new decodeURI() throw TypeError. Actual: ",
                    "raw": "'#1.1: new decodeURI() throw TypeError. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 465,
                    "end": 482,
                    "expression": {
                      "type": "NewExpression",
                      "start": 466,
                      "end": 481,
                      "callee": {
                        "type": "Identifier",
                        "start": 470,
                        "end": 479,
                        "name": "decodeURI"
                      },
                      "arguments": []
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 487,
        "end": 632,
        "param": {
          "type": "Identifier",
          "start": 494,
          "end": 495,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 497,
          "end": 632,
          "body": [
            {
              "type": "IfStatement",
              "start": 501,
              "end": 630,
              "test": {
                "type": "BinaryExpression",
                "start": 505,
                "end": 538,
                "left": {
                  "type": "ParenthesizedExpression",
                  "start": 505,
                  "end": 529,
                  "expression": {
                    "type": "BinaryExpression",
                    "start": 506,
                    "end": 528,
                    "left": {
                      "type": "Identifier",
                      "start": 506,
                      "end": 507,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 519,
                      "end": 528,
                      "name": "TypeError"
                    }
                  }
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 534,
                  "end": 538,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 540,
                "end": 630,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 546,
                    "end": 626,
                    "argument": {
                      "type": "NewExpression",
                      "start": 552,
                      "end": 625,
                      "callee": {
                        "type": "Identifier",
                        "start": 556,
                        "end": 568,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 569,
                          "end": 624,
                          "left": {
                            "type": "Literal",
                            "start": 569,
                            "end": 618,
                            "value": "#1.2: new decodeURI() throw TypeError. Actual: ",
                            "raw": "'#1.2: new decodeURI() throw TypeError. Actual: '",
                            "regex": null,
                            "bigint": null
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 621,
                            "end": 624,
                            "expression": {
                              "type": "Identifier",
                              "start": 622,
                              "end": 623,
                              "name": "e"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}