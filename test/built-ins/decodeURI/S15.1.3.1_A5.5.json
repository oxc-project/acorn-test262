{
  "type": "Program",
  "start": 0,
  "end": 749,
  "body": [
    {
      "type": "IfStatement",
      "start": 298,
      "end": 492,
      "test": {
        "type": "BinaryExpression",
        "start": 302,
        "end": 350,
        "left": {
          "type": "CallExpression",
          "start": 302,
          "end": 340,
          "callee": {
            "type": "MemberExpression",
            "start": 302,
            "end": 327,
            "object": {
              "type": "ThisExpression",
              "start": 302,
              "end": 306
            },
            "property": {
              "type": "Identifier",
              "start": 307,
              "end": 327,
              "name": "propertyIsEnumerable"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 328,
              "end": 339,
              "value": "decodeURI",
              "raw": "'decodeURI'",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 345,
          "end": 350,
          "value": false,
          "raw": "false",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 352,
        "end": 492,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 356,
            "end": 490,
            "argument": {
              "type": "NewExpression",
              "start": 362,
              "end": 489,
              "callee": {
                "type": "Identifier",
                "start": 366,
                "end": 378,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 379,
                  "end": 488,
                  "left": {
                    "type": "Literal",
                    "start": 379,
                    "end": 445,
                    "value": "#1: this.propertyIsEnumerable('decodeURI') === false. Actual: ",
                    "raw": "'#1: this.propertyIsEnumerable(\\'decodeURI\\') === false. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 448,
                    "end": 488,
                    "expression": {
                      "type": "CallExpression",
                      "start": 449,
                      "end": 487,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 449,
                        "end": 474,
                        "object": {
                          "type": "ThisExpression",
                          "start": 449,
                          "end": 453
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 454,
                          "end": 474,
                          "name": "propertyIsEnumerable"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 475,
                          "end": 486,
                          "value": "decodeURI",
                          "raw": "'decodeURI'",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 504,
      "end": 522,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 508,
          "end": 521,
          "id": {
            "type": "Identifier",
            "start": 508,
            "end": 514,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 517,
            "end": 521,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForInStatement",
      "start": 523,
      "end": 597,
      "left": {
        "type": "VariableDeclaration",
        "start": 528,
        "end": 533,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 532,
            "end": 533,
            "id": {
              "type": "Identifier",
              "start": 532,
              "end": 533,
              "name": "p"
            },
            "init": null
          }
        ],
        "kind": "var"
      },
      "right": {
        "type": "ThisExpression",
        "start": 537,
        "end": 541
      },
      "body": {
        "type": "BlockStatement",
        "start": 543,
        "end": 597,
        "body": [
          {
            "type": "IfStatement",
            "start": 547,
            "end": 595,
            "test": {
              "type": "BinaryExpression",
              "start": 551,
              "end": 568,
              "left": {
                "type": "Identifier",
                "start": 551,
                "end": 552,
                "name": "p"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 557,
                "end": 568,
                "value": "decodeURI",
                "raw": "\"decodeURI\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 570,
              "end": 595,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 576,
                  "end": 591,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 576,
                    "end": 590,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 576,
                      "end": 582,
                      "name": "result"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 585,
                      "end": 590,
                      "value": false,
                      "raw": "false",
                      "regex": null,
                      "bigint": null
                    }
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 599,
      "end": 748,
      "test": {
        "type": "BinaryExpression",
        "start": 603,
        "end": 618,
        "left": {
          "type": "Identifier",
          "start": 603,
          "end": 609,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 614,
          "end": 618,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 620,
        "end": 748,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 624,
            "end": 746,
            "argument": {
              "type": "NewExpression",
              "start": 630,
              "end": 745,
              "callee": {
                "type": "Identifier",
                "start": 634,
                "end": 646,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 647,
                  "end": 744,
                  "value": "#2: result = true; for (p in this) { if (p === \"decodeURI\") result = false; }  result === true;",
                  "raw": "'#2: result = true; for (p in this) { if (p === \"decodeURI\") result = false; }  result === true;'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}