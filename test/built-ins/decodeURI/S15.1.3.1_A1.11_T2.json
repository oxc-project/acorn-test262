{
  "type": "Program",
  "start": 0,
  "end": 1151,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 505,
      "end": 523,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 509,
          "end": 522,
          "id": {
            "type": "Identifier",
            "start": 509,
            "end": 515,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 518,
            "end": 522,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 524,
      "end": 608,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 528,
          "end": 607,
          "id": {
            "type": "Identifier",
            "start": 528,
            "end": 536,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 539,
            "end": 607,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 543,
                "end": 555,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 544,
                    "end": 548,
                    "value": 0,
                    "raw": "0x00",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 550,
                    "end": 554,
                    "value": 47,
                    "raw": "0x2F",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 559,
                "end": 571,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 560,
                    "end": 564,
                    "value": 58,
                    "raw": "0x3A",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 566,
                    "end": 570,
                    "value": 64,
                    "raw": "0x40",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 575,
                "end": 587,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 576,
                    "end": 580,
                    "value": 71,
                    "raw": "0x47",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 582,
                    "end": 586,
                    "value": 96,
                    "raw": "0x60",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 591,
                "end": 605,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 592,
                    "end": 596,
                    "value": 103,
                    "raw": "0x67",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 598,
                    "end": 604,
                    "value": 65535,
                    "raw": "0xFFFF",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 609,
      "end": 962,
      "init": {
        "type": "VariableDeclaration",
        "start": 614,
        "end": 628,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 618,
            "end": 628,
            "id": {
              "type": "Identifier",
              "start": 618,
              "end": 624,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 627,
              "end": 628,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 630,
        "end": 654,
        "left": {
          "type": "Identifier",
          "start": 630,
          "end": 636,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 639,
          "end": 654,
          "object": {
            "type": "Identifier",
            "start": 639,
            "end": 647,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 648,
            "end": 654,
            "name": "length"
          },
          "computed": false,
          "optional": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 656,
        "end": 664,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 656,
          "end": 662,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 666,
        "end": 962,
        "body": [
          {
            "type": "ForStatement",
            "start": 670,
            "end": 960,
            "init": {
              "type": "VariableDeclaration",
              "start": 675,
              "end": 707,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 679,
                  "end": 707,
                  "id": {
                    "type": "Identifier",
                    "start": 679,
                    "end": 685,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 688,
                    "end": 707,
                    "object": {
                      "type": "MemberExpression",
                      "start": 688,
                      "end": 704,
                      "object": {
                        "type": "Identifier",
                        "start": 688,
                        "end": 696,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 697,
                        "end": 703,
                        "name": "indexI"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "property": {
                      "type": "Literal",
                      "start": 705,
                      "end": 706,
                      "value": 0,
                      "raw": "0",
                      "regex": null,
                      "bigint": null
                    },
                    "computed": true,
                    "optional": false
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "start": 709,
              "end": 738,
              "left": {
                "type": "Identifier",
                "start": 709,
                "end": 715,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 719,
                "end": 738,
                "object": {
                  "type": "MemberExpression",
                  "start": 719,
                  "end": 735,
                  "object": {
                    "type": "Identifier",
                    "start": 719,
                    "end": 727,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 728,
                    "end": 734,
                    "name": "indexI"
                  },
                  "computed": true,
                  "optional": false
                },
                "property": {
                  "type": "Literal",
                  "start": 736,
                  "end": 737,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "computed": true,
                "optional": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 740,
              "end": 748,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 740,
                "end": 746,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 750,
              "end": 960,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 756,
                  "end": 956,
                  "block": {
                    "type": "BlockStatement",
                    "start": 760,
                    "end": 860,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 768,
                        "end": 832,
                        "expression": {
                          "type": "CallExpression",
                          "start": 768,
                          "end": 831,
                          "callee": {
                            "type": "Identifier",
                            "start": 768,
                            "end": 777,
                            "name": "decodeURI"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 778,
                              "end": 830,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 778,
                                "end": 792,
                                "left": {
                                  "type": "Literal",
                                  "start": 778,
                                  "end": 783,
                                  "value": "%E0",
                                  "raw": "\"%E0\"",
                                  "regex": null,
                                  "bigint": null
                                },
                                "operator": "+",
                                "right": {
                                  "type": "Literal",
                                  "start": 786,
                                  "end": 792,
                                  "value": "%A0%",
                                  "raw": "\"%A0%\"",
                                  "regex": null,
                                  "bigint": null
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "start": 795,
                                "end": 830,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 795,
                                  "end": 814,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 795,
                                    "end": 801,
                                    "name": "String"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 802,
                                    "end": 814,
                                    "name": "fromCharCode"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "start": 815,
                                    "end": 821,
                                    "name": "indexJ"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 823,
                                    "end": 829,
                                    "name": "indexJ"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 839,
                        "end": 854,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 839,
                          "end": 853,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 839,
                            "end": 845,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 848,
                            "end": 853,
                            "value": false,
                            "raw": "false",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 861,
                    "end": 956,
                    "param": {
                      "type": "Identifier",
                      "start": 868,
                      "end": 869,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 871,
                      "end": 956,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 879,
                          "end": 950,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 883,
                            "end": 915,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 883,
                              "end": 906,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 884,
                                "end": 905,
                                "left": {
                                  "type": "Identifier",
                                  "start": 884,
                                  "end": 885,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 897,
                                  "end": 905,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 911,
                              "end": 915,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 917,
                            "end": 950,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 927,
                                "end": 942,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 927,
                                  "end": 941,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 927,
                                    "end": 933,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 936,
                                    "end": 941,
                                    "value": false,
                                    "raw": "false",
                                    "regex": null,
                                    "bigint": null
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 964,
      "end": 1150,
      "test": {
        "type": "BinaryExpression",
        "start": 968,
        "end": 983,
        "left": {
          "type": "Identifier",
          "start": 968,
          "end": 974,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 979,
          "end": 983,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 985,
        "end": 1150,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 989,
            "end": 1148,
            "argument": {
              "type": "NewExpression",
              "start": 995,
              "end": 1147,
              "callee": {
                "type": "Identifier",
                "start": 999,
                "end": 1011,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1012,
                  "end": 1146,
                  "value": "#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 1110xxxx (n = 3) and (string.charAt(k + 7) and  string.charAt(k + 8)) do not represent hexadecimal digits, throw URIError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}