{
  "type": "Program",
  "start": 0,
  "end": 907,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 327,
      "end": 345,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 331,
          "end": 344,
          "id": {
            "type": "Identifier",
            "start": 331,
            "end": 337,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 340,
            "end": 344,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 346,
      "end": 430,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 350,
          "end": 429,
          "id": {
            "type": "Identifier",
            "start": 350,
            "end": 358,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 361,
            "end": 429,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 365,
                "end": 377,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 366,
                    "end": 370,
                    "value": 0,
                    "raw": "0x00",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 372,
                    "end": 376,
                    "value": 47,
                    "raw": "0x2F",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 381,
                "end": 393,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 382,
                    "end": 386,
                    "value": 58,
                    "raw": "0x3A",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 388,
                    "end": 392,
                    "value": 64,
                    "raw": "0x40",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 397,
                "end": 409,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 398,
                    "end": 402,
                    "value": 71,
                    "raw": "0x47",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 404,
                    "end": 408,
                    "value": 96,
                    "raw": "0x60",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 413,
                "end": 427,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 414,
                    "end": 418,
                    "value": 103,
                    "raw": "0x67",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 420,
                    "end": 426,
                    "value": 65535,
                    "raw": "0xFFFF",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 431,
      "end": 771,
      "init": {
        "type": "VariableDeclaration",
        "start": 436,
        "end": 450,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 440,
            "end": 450,
            "id": {
              "type": "Identifier",
              "start": 440,
              "end": 446,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 449,
              "end": 450,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 452,
        "end": 476,
        "left": {
          "type": "Identifier",
          "start": 452,
          "end": 458,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 461,
          "end": 476,
          "object": {
            "type": "Identifier",
            "start": 461,
            "end": 469,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 470,
            "end": 476,
            "name": "length"
          },
          "computed": false,
          "optional": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 478,
        "end": 486,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 478,
          "end": 484,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 488,
        "end": 771,
        "body": [
          {
            "type": "ForStatement",
            "start": 492,
            "end": 769,
            "init": {
              "type": "VariableDeclaration",
              "start": 497,
              "end": 529,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 501,
                  "end": 529,
                  "id": {
                    "type": "Identifier",
                    "start": 501,
                    "end": 507,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 510,
                    "end": 529,
                    "object": {
                      "type": "MemberExpression",
                      "start": 510,
                      "end": 526,
                      "object": {
                        "type": "Identifier",
                        "start": 510,
                        "end": 518,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 519,
                        "end": 525,
                        "name": "indexI"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "property": {
                      "type": "Literal",
                      "start": 527,
                      "end": 528,
                      "value": 0,
                      "raw": "0",
                      "regex": null,
                      "bigint": null
                    },
                    "computed": true,
                    "optional": false
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "start": 531,
              "end": 560,
              "left": {
                "type": "Identifier",
                "start": 531,
                "end": 537,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 541,
                "end": 560,
                "object": {
                  "type": "MemberExpression",
                  "start": 541,
                  "end": 557,
                  "object": {
                    "type": "Identifier",
                    "start": 541,
                    "end": 549,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 550,
                    "end": 556,
                    "name": "indexI"
                  },
                  "computed": true,
                  "optional": false
                },
                "property": {
                  "type": "Literal",
                  "start": 558,
                  "end": 559,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "computed": true,
                "optional": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 562,
              "end": 570,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 562,
                "end": 568,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 572,
              "end": 769,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 578,
                  "end": 765,
                  "block": {
                    "type": "BlockStatement",
                    "start": 582,
                    "end": 669,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 590,
                        "end": 641,
                        "expression": {
                          "type": "CallExpression",
                          "start": 590,
                          "end": 640,
                          "callee": {
                            "type": "Identifier",
                            "start": 590,
                            "end": 599,
                            "name": "decodeURI"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 600,
                              "end": 639,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 600,
                                "end": 633,
                                "left": {
                                  "type": "Literal",
                                  "start": 600,
                                  "end": 603,
                                  "value": "%",
                                  "raw": "\"%\"",
                                  "regex": null,
                                  "bigint": null
                                },
                                "operator": "+",
                                "right": {
                                  "type": "CallExpression",
                                  "start": 606,
                                  "end": 633,
                                  "callee": {
                                    "type": "MemberExpression",
                                    "start": 606,
                                    "end": 625,
                                    "object": {
                                      "type": "Identifier",
                                      "start": 606,
                                      "end": 612,
                                      "name": "String"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 613,
                                      "end": 625,
                                      "name": "fromCharCode"
                                    },
                                    "computed": false,
                                    "optional": false
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "start": 626,
                                      "end": 632,
                                      "name": "indexJ"
                                    }
                                  ],
                                  "optional": false
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 636,
                                "end": 639,
                                "value": "1",
                                "raw": "\"1\"",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 648,
                        "end": 663,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 648,
                          "end": 662,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 648,
                            "end": 654,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 657,
                            "end": 662,
                            "value": false,
                            "raw": "false",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 670,
                    "end": 765,
                    "param": {
                      "type": "Identifier",
                      "start": 677,
                      "end": 678,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 680,
                      "end": 765,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 688,
                          "end": 759,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 692,
                            "end": 724,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 692,
                              "end": 715,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 693,
                                "end": 714,
                                "left": {
                                  "type": "Identifier",
                                  "start": 693,
                                  "end": 694,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 706,
                                  "end": 714,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 720,
                              "end": 724,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 726,
                            "end": 759,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 736,
                                "end": 751,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 736,
                                  "end": 750,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 736,
                                    "end": 742,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 745,
                                    "end": 750,
                                    "value": false,
                                    "raw": "false",
                                    "regex": null,
                                    "bigint": null
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 773,
      "end": 906,
      "test": {
        "type": "BinaryExpression",
        "start": 777,
        "end": 792,
        "left": {
          "type": "Identifier",
          "start": 777,
          "end": 783,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 788,
          "end": 792,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 794,
        "end": 906,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 798,
            "end": 904,
            "argument": {
              "type": "NewExpression",
              "start": 804,
              "end": 903,
              "callee": {
                "type": "Identifier",
                "start": 808,
                "end": 820,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 821,
                  "end": 902,
                  "value": "#1: If string.charAt(k+1) does not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If string.charAt(k+1) does not represent hexadecimal digits, throw URIError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}