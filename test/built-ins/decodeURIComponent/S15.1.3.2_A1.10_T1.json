{
  "type": "Program",
  "start": 0,
  "end": 1019,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 372,
      "end": 390,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 376,
          "end": 389,
          "id": {
            "type": "Identifier",
            "start": 376,
            "end": 382,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 385,
            "end": 389,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 391,
      "end": 475,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 395,
          "end": 474,
          "id": {
            "type": "Identifier",
            "start": 395,
            "end": 403,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 406,
            "end": 474,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 410,
                "end": 422,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 411,
                    "end": 415,
                    "value": 0,
                    "raw": "0x00",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 417,
                    "end": 421,
                    "value": 47,
                    "raw": "0x2F",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 426,
                "end": 438,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 427,
                    "end": 431,
                    "value": 58,
                    "raw": "0x3A",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 433,
                    "end": 437,
                    "value": 64,
                    "raw": "0x40",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 442,
                "end": 454,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 443,
                    "end": 447,
                    "value": 71,
                    "raw": "0x47",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 449,
                    "end": 453,
                    "value": 96,
                    "raw": "0x60",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 458,
                "end": 472,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 459,
                    "end": 463,
                    "value": 103,
                    "raw": "0x67",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 465,
                    "end": 471,
                    "value": 65535,
                    "raw": "0xFFFF",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 476,
      "end": 830,
      "init": {
        "type": "VariableDeclaration",
        "start": 481,
        "end": 495,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 485,
            "end": 495,
            "id": {
              "type": "Identifier",
              "start": 485,
              "end": 491,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 494,
              "end": 495,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 497,
        "end": 521,
        "left": {
          "type": "Identifier",
          "start": 497,
          "end": 503,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 506,
          "end": 521,
          "object": {
            "type": "Identifier",
            "start": 506,
            "end": 514,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 515,
            "end": 521,
            "name": "length"
          },
          "computed": false,
          "optional": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 523,
        "end": 531,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 523,
          "end": 529,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 533,
        "end": 830,
        "body": [
          {
            "type": "ForStatement",
            "start": 537,
            "end": 828,
            "init": {
              "type": "VariableDeclaration",
              "start": 542,
              "end": 574,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 546,
                  "end": 574,
                  "id": {
                    "type": "Identifier",
                    "start": 546,
                    "end": 552,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 555,
                    "end": 574,
                    "object": {
                      "type": "MemberExpression",
                      "start": 555,
                      "end": 571,
                      "object": {
                        "type": "Identifier",
                        "start": 555,
                        "end": 563,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 564,
                        "end": 570,
                        "name": "indexI"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "property": {
                      "type": "Literal",
                      "start": 572,
                      "end": 573,
                      "value": 0,
                      "raw": "0",
                      "regex": null,
                      "bigint": null
                    },
                    "computed": true,
                    "optional": false
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "start": 576,
              "end": 605,
              "left": {
                "type": "Identifier",
                "start": 576,
                "end": 582,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 586,
                "end": 605,
                "object": {
                  "type": "MemberExpression",
                  "start": 586,
                  "end": 602,
                  "object": {
                    "type": "Identifier",
                    "start": 586,
                    "end": 594,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 595,
                    "end": 601,
                    "name": "indexI"
                  },
                  "computed": true,
                  "optional": false
                },
                "property": {
                  "type": "Literal",
                  "start": 603,
                  "end": 604,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "computed": true,
                "optional": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 607,
              "end": 615,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 607,
                "end": 613,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 617,
              "end": 828,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 623,
                  "end": 824,
                  "block": {
                    "type": "BlockStatement",
                    "start": 627,
                    "end": 728,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 635,
                        "end": 700,
                        "expression": {
                          "type": "CallExpression",
                          "start": 635,
                          "end": 699,
                          "callee": {
                            "type": "Identifier",
                            "start": 635,
                            "end": 653,
                            "name": "decodeURIComponent"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 654,
                              "end": 698,
                              "left": {
                                "type": "Literal",
                                "start": 654,
                                "end": 660,
                                "value": "%C0%",
                                "raw": "\"%C0%\"",
                                "regex": null,
                                "bigint": null
                              },
                              "operator": "+",
                              "right": {
                                "type": "CallExpression",
                                "start": 663,
                                "end": 698,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 663,
                                  "end": 682,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 663,
                                    "end": 669,
                                    "name": "String"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 670,
                                    "end": 682,
                                    "name": "fromCharCode"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "start": 683,
                                    "end": 689,
                                    "name": "indexJ"
                                  },
                                  {
                                    "type": "Identifier",
                                    "start": 691,
                                    "end": 697,
                                    "name": "indexJ"
                                  }
                                ],
                                "optional": false
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 707,
                        "end": 722,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 707,
                          "end": 721,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 707,
                            "end": 713,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 716,
                            "end": 721,
                            "value": false,
                            "raw": "false",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 729,
                    "end": 824,
                    "param": {
                      "type": "Identifier",
                      "start": 736,
                      "end": 737,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 739,
                      "end": 824,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 747,
                          "end": 818,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 751,
                            "end": 783,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 751,
                              "end": 774,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 752,
                                "end": 773,
                                "left": {
                                  "type": "Identifier",
                                  "start": 752,
                                  "end": 753,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 765,
                                  "end": 773,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 779,
                              "end": 783,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 785,
                            "end": 818,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 795,
                                "end": 810,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 795,
                                  "end": 809,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 795,
                                    "end": 801,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 804,
                                    "end": 809,
                                    "value": false,
                                    "raw": "false",
                                    "regex": null,
                                    "bigint": null
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 832,
      "end": 1018,
      "test": {
        "type": "BinaryExpression",
        "start": 836,
        "end": 851,
        "left": {
          "type": "Identifier",
          "start": 836,
          "end": 842,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 847,
          "end": 851,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 853,
        "end": 1018,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 857,
            "end": 1016,
            "argument": {
              "type": "NewExpression",
              "start": 863,
              "end": 1015,
              "callee": {
                "type": "Identifier",
                "start": 867,
                "end": 879,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 880,
                  "end": 1014,
                  "value": "#1: If B = 110xxxxx (n = 2) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 110xxxxx (n = 2) and (string.charAt(k + 4) and  string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}