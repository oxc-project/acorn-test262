{
  "type": "Program",
  "start": 0,
  "end": 1036,
  "body": [
    {
      "type": "IfStatement",
      "start": 248,
      "end": 322,
      "test": {
        "type": "BinaryExpression",
        "start": 252,
        "end": 281,
        "left": {
          "type": "CallExpression",
          "start": 252,
          "end": 274,
          "callee": {
            "type": "Identifier",
            "start": 252,
            "end": 270,
            "name": "decodeURIComponent"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 271,
              "end": 273,
              "value": "",
              "raw": "\"\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 279,
          "end": 281,
          "value": "",
          "raw": "\"\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 283,
        "end": 322,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 287,
            "end": 320,
            "argument": {
              "type": "NewExpression",
              "start": 293,
              "end": 319,
              "callee": {
                "type": "Identifier",
                "start": 297,
                "end": 309,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 310,
                  "end": 318,
                  "value": "#1: \"\"",
                  "raw": "'#1: \"\"'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 334,
      "end": 454,
      "test": {
        "type": "BinaryExpression",
        "start": 338,
        "end": 399,
        "left": {
          "type": "CallExpression",
          "start": 338,
          "end": 376,
          "callee": {
            "type": "Identifier",
            "start": 338,
            "end": 356,
            "name": "decodeURIComponent"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 357,
              "end": 375,
              "value": "http://unipro.ru",
              "raw": "\"http://unipro.ru\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 381,
          "end": 399,
          "value": "http://unipro.ru",
          "raw": "\"http://unipro.ru\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 401,
        "end": 454,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 405,
            "end": 452,
            "argument": {
              "type": "NewExpression",
              "start": 411,
              "end": 451,
              "callee": {
                "type": "Identifier",
                "start": 415,
                "end": 427,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 428,
                  "end": 450,
                  "value": "#2: http://unipro.ru",
                  "raw": "'#2: http://unipro.ru'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 466,
      "end": 801,
      "test": {
        "type": "BinaryExpression",
        "start": 470,
        "end": 671,
        "left": {
          "type": "CallExpression",
          "start": 470,
          "end": 584,
          "callee": {
            "type": "Identifier",
            "start": 470,
            "end": 488,
            "name": "decodeURIComponent"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 489,
              "end": 583,
              "value": "http:%2f%2Fwww.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork",
              "raw": "\"http:%2f%2Fwww.google.ru/support/jobs/bin/static.py%3Fpage%3dwhy-ru.html%26sid%3Dliveandwork\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 589,
          "end": 671,
          "value": "http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork",
          "raw": "\"http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 673,
        "end": 801,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 677,
            "end": 799,
            "argument": {
              "type": "NewExpression",
              "start": 683,
              "end": 798,
              "callee": {
                "type": "Identifier",
                "start": 687,
                "end": 699,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 700,
                  "end": 797,
                  "value": "#3: http:%2f%2Fwww.google.ru/support/jobs/bin/static.py%3Fpage3dwhy-ru.html%26sid3Dliveandwork\"",
                  "raw": "'#3: http:%2f%2Fwww.google.ru/support/jobs/bin/static.py%3Fpage3dwhy-ru.html%26sid3Dliveandwork\"'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 813,
      "end": 1035,
      "test": {
        "type": "BinaryExpression",
        "start": 817,
        "end": 944,
        "left": {
          "type": "CallExpression",
          "start": 817,
          "end": 891,
          "callee": {
            "type": "Identifier",
            "start": 817,
            "end": 835,
            "name": "decodeURIComponent"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 836,
              "end": 890,
              "value": "http:%2F%2Fen.wikipedia.org/wiki/UTF-8%23Description",
              "raw": "\"http:%2F%2Fen.wikipedia.org/wiki/UTF-8%23Description\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 896,
          "end": 944,
          "value": "http://en.wikipedia.org/wiki/UTF-8#Description",
          "raw": "\"http://en.wikipedia.org/wiki/UTF-8#Description\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 946,
        "end": 1035,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 950,
            "end": 1033,
            "argument": {
              "type": "NewExpression",
              "start": 956,
              "end": 1032,
              "callee": {
                "type": "Identifier",
                "start": 960,
                "end": 972,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 973,
                  "end": 1031,
                  "value": "#4: http:%2F%2Fen.wikipedia.org/wiki/UTF-8%23Description",
                  "raw": "'#4: http:%2F%2Fen.wikipedia.org/wiki/UTF-8%23Description'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}