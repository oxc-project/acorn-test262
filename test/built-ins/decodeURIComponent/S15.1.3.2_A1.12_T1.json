{
  "type": "Program",
  "start": 0,
  "end": 1237,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 580,
      "end": 598,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 584,
          "end": 597,
          "id": {
            "type": "Identifier",
            "start": 584,
            "end": 590,
            "name": "result"
          },
          "init": {
            "type": "Literal",
            "start": 593,
            "end": 597,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 599,
      "end": 683,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 603,
          "end": 682,
          "id": {
            "type": "Identifier",
            "start": 603,
            "end": 611,
            "name": "interval"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 614,
            "end": 682,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 618,
                "end": 630,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 619,
                    "end": 623,
                    "value": 0,
                    "raw": "0x00",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 625,
                    "end": 629,
                    "value": 47,
                    "raw": "0x2F",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 634,
                "end": 646,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 635,
                    "end": 639,
                    "value": 58,
                    "raw": "0x3A",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 641,
                    "end": 645,
                    "value": 64,
                    "raw": "0x40",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 650,
                "end": 662,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 651,
                    "end": 655,
                    "value": 71,
                    "raw": "0x47",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 657,
                    "end": 661,
                    "value": 96,
                    "raw": "0x60",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 666,
                "end": 680,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 667,
                    "end": 671,
                    "value": 103,
                    "raw": "0x67",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 673,
                    "end": 679,
                    "value": 65535,
                    "raw": "0xFFFF",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ForStatement",
      "start": 684,
      "end": 1049,
      "init": {
        "type": "VariableDeclaration",
        "start": 689,
        "end": 703,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 693,
            "end": 703,
            "id": {
              "type": "Identifier",
              "start": 693,
              "end": 699,
              "name": "indexI"
            },
            "init": {
              "type": "Literal",
              "start": 702,
              "end": 703,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 705,
        "end": 729,
        "left": {
          "type": "Identifier",
          "start": 705,
          "end": 711,
          "name": "indexI"
        },
        "operator": "<",
        "right": {
          "type": "MemberExpression",
          "start": 714,
          "end": 729,
          "object": {
            "type": "Identifier",
            "start": 714,
            "end": 722,
            "name": "interval"
          },
          "property": {
            "type": "Identifier",
            "start": 723,
            "end": 729,
            "name": "length"
          },
          "computed": false,
          "optional": false
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 731,
        "end": 739,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 731,
          "end": 737,
          "name": "indexI"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 741,
        "end": 1049,
        "body": [
          {
            "type": "ForStatement",
            "start": 745,
            "end": 1047,
            "init": {
              "type": "VariableDeclaration",
              "start": 750,
              "end": 782,
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "start": 754,
                  "end": 782,
                  "id": {
                    "type": "Identifier",
                    "start": 754,
                    "end": 760,
                    "name": "indexJ"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "start": 763,
                    "end": 782,
                    "object": {
                      "type": "MemberExpression",
                      "start": 763,
                      "end": 779,
                      "object": {
                        "type": "Identifier",
                        "start": 763,
                        "end": 771,
                        "name": "interval"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 772,
                        "end": 778,
                        "name": "indexI"
                      },
                      "computed": true,
                      "optional": false
                    },
                    "property": {
                      "type": "Literal",
                      "start": 780,
                      "end": 781,
                      "value": 0,
                      "raw": "0",
                      "regex": null,
                      "bigint": null
                    },
                    "computed": true,
                    "optional": false
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "start": 784,
              "end": 813,
              "left": {
                "type": "Identifier",
                "start": 784,
                "end": 790,
                "name": "indexJ"
              },
              "operator": "<=",
              "right": {
                "type": "MemberExpression",
                "start": 794,
                "end": 813,
                "object": {
                  "type": "MemberExpression",
                  "start": 794,
                  "end": 810,
                  "object": {
                    "type": "Identifier",
                    "start": 794,
                    "end": 802,
                    "name": "interval"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 803,
                    "end": 809,
                    "name": "indexI"
                  },
                  "computed": true,
                  "optional": false
                },
                "property": {
                  "type": "Literal",
                  "start": 811,
                  "end": 812,
                  "value": 1,
                  "raw": "1",
                  "regex": null,
                  "bigint": null
                },
                "computed": true,
                "optional": false
              }
            },
            "update": {
              "type": "UpdateExpression",
              "start": 815,
              "end": 823,
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "start": 815,
                "end": 821,
                "name": "indexJ"
              }
            },
            "body": {
              "type": "BlockStatement",
              "start": 825,
              "end": 1047,
              "body": [
                {
                  "type": "TryStatement",
                  "start": 831,
                  "end": 1043,
                  "block": {
                    "type": "BlockStatement",
                    "start": 835,
                    "end": 947,
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 843,
                        "end": 919,
                        "expression": {
                          "type": "CallExpression",
                          "start": 843,
                          "end": 918,
                          "callee": {
                            "type": "Identifier",
                            "start": 843,
                            "end": 861,
                            "name": "decodeURIComponent"
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "start": 862,
                              "end": 917,
                              "left": {
                                "type": "BinaryExpression",
                                "start": 862,
                                "end": 906,
                                "left": {
                                  "type": "Literal",
                                  "start": 862,
                                  "end": 868,
                                  "value": "%F0%",
                                  "raw": "\"%F0%\"",
                                  "regex": null,
                                  "bigint": null
                                },
                                "operator": "+",
                                "right": {
                                  "type": "CallExpression",
                                  "start": 871,
                                  "end": 906,
                                  "callee": {
                                    "type": "MemberExpression",
                                    "start": 871,
                                    "end": 890,
                                    "object": {
                                      "type": "Identifier",
                                      "start": 871,
                                      "end": 877,
                                      "name": "String"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "start": 878,
                                      "end": 890,
                                      "name": "fromCharCode"
                                    },
                                    "computed": false,
                                    "optional": false
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "start": 891,
                                      "end": 897,
                                      "name": "indexJ"
                                    },
                                    {
                                      "type": "Identifier",
                                      "start": 899,
                                      "end": 905,
                                      "name": "indexJ"
                                    }
                                  ],
                                  "optional": false
                                }
                              },
                              "operator": "+",
                              "right": {
                                "type": "Literal",
                                "start": 909,
                                "end": 917,
                                "value": "%A0%A0",
                                "raw": "\"%A0%A0\"",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "start": 926,
                        "end": 941,
                        "expression": {
                          "type": "AssignmentExpression",
                          "start": 926,
                          "end": 940,
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "start": 926,
                            "end": 932,
                            "name": "result"
                          },
                          "right": {
                            "type": "Literal",
                            "start": 935,
                            "end": 940,
                            "value": false,
                            "raw": "false",
                            "regex": null,
                            "bigint": null
                          }
                        }
                      }
                    ]
                  },
                  "handler": {
                    "type": "CatchClause",
                    "start": 948,
                    "end": 1043,
                    "param": {
                      "type": "Identifier",
                      "start": 955,
                      "end": 956,
                      "name": "e"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "start": 958,
                      "end": 1043,
                      "body": [
                        {
                          "type": "IfStatement",
                          "start": 966,
                          "end": 1037,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 970,
                            "end": 1002,
                            "left": {
                              "type": "ParenthesizedExpression",
                              "start": 970,
                              "end": 993,
                              "expression": {
                                "type": "BinaryExpression",
                                "start": 971,
                                "end": 992,
                                "left": {
                                  "type": "Identifier",
                                  "start": 971,
                                  "end": 972,
                                  "name": "e"
                                },
                                "operator": "instanceof",
                                "right": {
                                  "type": "Identifier",
                                  "start": 984,
                                  "end": 992,
                                  "name": "URIError"
                                }
                              }
                            },
                            "operator": "!==",
                            "right": {
                              "type": "Literal",
                              "start": 998,
                              "end": 1002,
                              "value": true,
                              "raw": "true",
                              "regex": null,
                              "bigint": null
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 1004,
                            "end": 1037,
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "start": 1014,
                                "end": 1029,
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "start": 1014,
                                  "end": 1028,
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "start": 1014,
                                    "end": 1020,
                                    "name": "result"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "start": 1023,
                                    "end": 1028,
                                    "value": false,
                                    "raw": "false",
                                    "regex": null,
                                    "bigint": null
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  "finalizer": null
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "IfStatement",
      "start": 1051,
      "end": 1236,
      "test": {
        "type": "BinaryExpression",
        "start": 1055,
        "end": 1070,
        "left": {
          "type": "Identifier",
          "start": 1055,
          "end": 1061,
          "name": "result"
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1066,
          "end": 1070,
          "value": true,
          "raw": "true",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1072,
        "end": 1236,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1076,
            "end": 1234,
            "argument": {
              "type": "NewExpression",
              "start": 1082,
              "end": 1233,
              "callee": {
                "type": "Identifier",
                "start": 1086,
                "end": 1098,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1099,
                  "end": 1232,
                  "value": "#1: If B = 11110xxx (n = 4) and (string.charAt(k + 4) and string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError",
                  "raw": "'#1: If B = 11110xxx (n = 4) and (string.charAt(k + 4) and string.charAt(k + 5)) do not represent hexadecimal digits, throw URIError'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}