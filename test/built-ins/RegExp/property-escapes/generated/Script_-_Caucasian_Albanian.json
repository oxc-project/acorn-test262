{
  "type": "Program",
  "start": 0,
  "end": 1571,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 463,
      "end": 580,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 469,
          "end": 579,
          "id": {
            "type": "Identifier",
            "start": 469,
            "end": 481,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 484,
            "end": 579,
            "callee": {
              "type": "Identifier",
              "start": 484,
              "end": 495,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 496,
                "end": 578,
                "properties": [
                  {
                    "type": "Property",
                    "start": 500,
                    "end": 534,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 500,
                      "end": 514,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 516,
                      "end": 534,
                      "elements": [
                        {
                          "type": "Literal",
                          "start": 522,
                          "end": 530,
                          "value": 66927,
                          "raw": "0x01056F",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 538,
                    "end": 576,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 538,
                      "end": 544,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 546,
                      "end": 576,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 552,
                          "end": 572,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 553,
                              "end": 561,
                              "value": 66864,
                              "raw": "0x010530",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 563,
                              "end": 571,
                              "value": 66915,
                              "raw": "0x010563",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 581,
      "end": 694,
      "expression": {
        "type": "CallExpression",
        "start": 581,
        "end": 693,
        "callee": {
          "type": "Identifier",
          "start": 581,
          "end": 600,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 604,
            "end": 639,
            "value": null,
            "raw": "/^\\p{Script=Caucasian_Albanian}+$/u",
            "regex": {
              "pattern": "^\\p{Script=Caucasian_Albanian}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 643,
            "end": 655,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 659,
            "end": 691,
            "value": "\\p{Script=Caucasian_Albanian}",
            "raw": "\"\\\\p{Script=Caucasian_Albanian}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 695,
      "end": 780,
      "expression": {
        "type": "CallExpression",
        "start": 695,
        "end": 779,
        "callee": {
          "type": "Identifier",
          "start": 695,
          "end": 714,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 718,
            "end": 739,
            "value": null,
            "raw": "/^\\p{Script=Aghb}+$/u",
            "regex": {
              "pattern": "^\\p{Script=Aghb}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 743,
            "end": 755,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 759,
            "end": 777,
            "value": "\\p{Script=Aghb}",
            "raw": "\"\\\\p{Script=Aghb}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 781,
      "end": 886,
      "expression": {
        "type": "CallExpression",
        "start": 781,
        "end": 885,
        "callee": {
          "type": "Identifier",
          "start": 781,
          "end": 800,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 804,
            "end": 835,
            "value": null,
            "raw": "/^\\p{sc=Caucasian_Albanian}+$/u",
            "regex": {
              "pattern": "^\\p{sc=Caucasian_Albanian}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 839,
            "end": 851,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 855,
            "end": 883,
            "value": "\\p{sc=Caucasian_Albanian}",
            "raw": "\"\\\\p{sc=Caucasian_Albanian}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 887,
      "end": 964,
      "expression": {
        "type": "CallExpression",
        "start": 887,
        "end": 963,
        "callee": {
          "type": "Identifier",
          "start": 887,
          "end": 906,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 910,
            "end": 927,
            "value": null,
            "raw": "/^\\p{sc=Aghb}+$/u",
            "regex": {
              "pattern": "^\\p{sc=Aghb}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 931,
            "end": 943,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 947,
            "end": 961,
            "value": "\\p{sc=Aghb}",
            "raw": "\"\\\\p{sc=Aghb}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 966,
      "end": 1174,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 972,
          "end": 1173,
          "id": {
            "type": "Identifier",
            "start": 972,
            "end": 987,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 990,
            "end": 1173,
            "callee": {
              "type": "Identifier",
              "start": 990,
              "end": 1001,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 1002,
                "end": 1172,
                "properties": [
                  {
                    "type": "Property",
                    "start": 1006,
                    "end": 1024,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1006,
                      "end": 1020,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1022,
                      "end": 1024,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 1028,
                    "end": 1170,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1028,
                      "end": 1034,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1036,
                      "end": 1170,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 1042,
                          "end": 1062,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1043,
                              "end": 1051,
                              "value": 56320,
                              "raw": "0x00DC00",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1053,
                              "end": 1061,
                              "value": 57343,
                              "raw": "0x00DFFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1068,
                          "end": 1088,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1069,
                              "end": 1077,
                              "value": 0,
                              "raw": "0x000000",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1079,
                              "end": 1087,
                              "value": 56319,
                              "raw": "0x00DBFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1094,
                          "end": 1114,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1095,
                              "end": 1103,
                              "value": 57344,
                              "raw": "0x00E000",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1105,
                              "end": 1113,
                              "value": 66863,
                              "raw": "0x01052F",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1120,
                          "end": 1140,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1121,
                              "end": 1129,
                              "value": 66916,
                              "raw": "0x010564",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1131,
                              "end": 1139,
                              "value": 66926,
                              "raw": "0x01056E",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1146,
                          "end": 1166,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1147,
                              "end": 1155,
                              "value": 66928,
                              "raw": "0x010570",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1157,
                              "end": 1165,
                              "value": 1114111,
                              "raw": "0x10FFFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1175,
      "end": 1291,
      "expression": {
        "type": "CallExpression",
        "start": 1175,
        "end": 1290,
        "callee": {
          "type": "Identifier",
          "start": 1175,
          "end": 1194,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1198,
            "end": 1233,
            "value": null,
            "raw": "/^\\P{Script=Caucasian_Albanian}+$/u",
            "regex": {
              "pattern": "^\\P{Script=Caucasian_Albanian}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1237,
            "end": 1252,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1256,
            "end": 1288,
            "value": "\\P{Script=Caucasian_Albanian}",
            "raw": "\"\\\\P{Script=Caucasian_Albanian}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1292,
      "end": 1380,
      "expression": {
        "type": "CallExpression",
        "start": 1292,
        "end": 1379,
        "callee": {
          "type": "Identifier",
          "start": 1292,
          "end": 1311,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1315,
            "end": 1336,
            "value": null,
            "raw": "/^\\P{Script=Aghb}+$/u",
            "regex": {
              "pattern": "^\\P{Script=Aghb}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1340,
            "end": 1355,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1359,
            "end": 1377,
            "value": "\\P{Script=Aghb}",
            "raw": "\"\\\\P{Script=Aghb}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1381,
      "end": 1489,
      "expression": {
        "type": "CallExpression",
        "start": 1381,
        "end": 1488,
        "callee": {
          "type": "Identifier",
          "start": 1381,
          "end": 1400,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1404,
            "end": 1435,
            "value": null,
            "raw": "/^\\P{sc=Caucasian_Albanian}+$/u",
            "regex": {
              "pattern": "^\\P{sc=Caucasian_Albanian}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1439,
            "end": 1454,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1458,
            "end": 1486,
            "value": "\\P{sc=Caucasian_Albanian}",
            "raw": "\"\\\\P{sc=Caucasian_Albanian}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1490,
      "end": 1570,
      "expression": {
        "type": "CallExpression",
        "start": 1490,
        "end": 1569,
        "callee": {
          "type": "Identifier",
          "start": 1490,
          "end": 1509,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1513,
            "end": 1530,
            "value": null,
            "raw": "/^\\P{sc=Aghb}+$/u",
            "regex": {
              "pattern": "^\\P{sc=Aghb}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1534,
            "end": 1549,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1553,
            "end": 1567,
            "value": "\\P{sc=Aghb}",
            "raw": "\"\\\\P{sc=Aghb}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}