{
  "type": "Program",
  "start": 0,
  "end": 1571,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 461,
      "end": 588,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 467,
          "end": 587,
          "id": {
            "type": "Identifier",
            "start": 467,
            "end": 479,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 482,
            "end": 587,
            "callee": {
              "type": "Identifier",
              "start": 482,
              "end": 493,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 494,
                "end": 586,
                "properties": [
                  {
                    "type": "Property",
                    "start": 498,
                    "end": 516,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 498,
                      "end": 512,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 514,
                      "end": 516,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 520,
                    "end": 584,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 520,
                      "end": 526,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 528,
                      "end": 584,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 534,
                          "end": 554,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 535,
                              "end": 543,
                              "value": 7104,
                              "raw": "0x001BC0",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 545,
                              "end": 553,
                              "value": 7155,
                              "raw": "0x001BF3",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 560,
                          "end": 580,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 561,
                              "end": 569,
                              "value": 7164,
                              "raw": "0x001BFC",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 571,
                              "end": 579,
                              "value": 7167,
                              "raw": "0x001BFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 589,
      "end": 698,
      "expression": {
        "type": "CallExpression",
        "start": 589,
        "end": 697,
        "callee": {
          "type": "Identifier",
          "start": 589,
          "end": 608,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 612,
            "end": 645,
            "value": null,
            "raw": "/^\\p{Script_Extensions=Batak}+$/u",
            "regex": {
              "pattern": "^\\p{Script_Extensions=Batak}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 649,
            "end": 661,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 665,
            "end": 695,
            "value": "\\p{Script_Extensions=Batak}",
            "raw": "\"\\\\p{Script_Extensions=Batak}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 699,
      "end": 806,
      "expression": {
        "type": "CallExpression",
        "start": 699,
        "end": 805,
        "callee": {
          "type": "Identifier",
          "start": 699,
          "end": 718,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 722,
            "end": 754,
            "value": null,
            "raw": "/^\\p{Script_Extensions=Batk}+$/u",
            "regex": {
              "pattern": "^\\p{Script_Extensions=Batk}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 758,
            "end": 770,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 774,
            "end": 803,
            "value": "\\p{Script_Extensions=Batk}",
            "raw": "\"\\\\p{Script_Extensions=Batk}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 807,
      "end": 888,
      "expression": {
        "type": "CallExpression",
        "start": 807,
        "end": 887,
        "callee": {
          "type": "Identifier",
          "start": 807,
          "end": 826,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 830,
            "end": 849,
            "value": null,
            "raw": "/^\\p{scx=Batak}+$/u",
            "regex": {
              "pattern": "^\\p{scx=Batak}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 853,
            "end": 865,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 869,
            "end": 885,
            "value": "\\p{scx=Batak}",
            "raw": "\"\\\\p{scx=Batak}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 889,
      "end": 968,
      "expression": {
        "type": "CallExpression",
        "start": 889,
        "end": 967,
        "callee": {
          "type": "Identifier",
          "start": 889,
          "end": 908,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 912,
            "end": 930,
            "value": null,
            "raw": "/^\\p{scx=Batk}+$/u",
            "regex": {
              "pattern": "^\\p{scx=Batk}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 934,
            "end": 946,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 950,
            "end": 965,
            "value": "\\p{scx=Batk}",
            "raw": "\"\\\\p{scx=Batk}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 970,
      "end": 1178,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 976,
          "end": 1177,
          "id": {
            "type": "Identifier",
            "start": 976,
            "end": 991,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 994,
            "end": 1177,
            "callee": {
              "type": "Identifier",
              "start": 994,
              "end": 1005,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 1006,
                "end": 1176,
                "properties": [
                  {
                    "type": "Property",
                    "start": 1010,
                    "end": 1028,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1010,
                      "end": 1024,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1026,
                      "end": 1028,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 1032,
                    "end": 1174,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1032,
                      "end": 1038,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1040,
                      "end": 1174,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 1046,
                          "end": 1066,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1047,
                              "end": 1055,
                              "value": 56320,
                              "raw": "0x00DC00",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1057,
                              "end": 1065,
                              "value": 57343,
                              "raw": "0x00DFFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1072,
                          "end": 1092,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1073,
                              "end": 1081,
                              "value": 0,
                              "raw": "0x000000",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1083,
                              "end": 1091,
                              "value": 7103,
                              "raw": "0x001BBF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1098,
                          "end": 1118,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1099,
                              "end": 1107,
                              "value": 7156,
                              "raw": "0x001BF4",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1109,
                              "end": 1117,
                              "value": 7163,
                              "raw": "0x001BFB",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1124,
                          "end": 1144,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1125,
                              "end": 1133,
                              "value": 7168,
                              "raw": "0x001C00",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1135,
                              "end": 1143,
                              "value": 56319,
                              "raw": "0x00DBFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1150,
                          "end": 1170,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1151,
                              "end": 1159,
                              "value": 57344,
                              "raw": "0x00E000",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1161,
                              "end": 1169,
                              "value": 1114111,
                              "raw": "0x10FFFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1179,
      "end": 1291,
      "expression": {
        "type": "CallExpression",
        "start": 1179,
        "end": 1290,
        "callee": {
          "type": "Identifier",
          "start": 1179,
          "end": 1198,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1202,
            "end": 1235,
            "value": null,
            "raw": "/^\\P{Script_Extensions=Batak}+$/u",
            "regex": {
              "pattern": "^\\P{Script_Extensions=Batak}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1239,
            "end": 1254,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1258,
            "end": 1288,
            "value": "\\P{Script_Extensions=Batak}",
            "raw": "\"\\\\P{Script_Extensions=Batak}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1292,
      "end": 1402,
      "expression": {
        "type": "CallExpression",
        "start": 1292,
        "end": 1401,
        "callee": {
          "type": "Identifier",
          "start": 1292,
          "end": 1311,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1315,
            "end": 1347,
            "value": null,
            "raw": "/^\\P{Script_Extensions=Batk}+$/u",
            "regex": {
              "pattern": "^\\P{Script_Extensions=Batk}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1351,
            "end": 1366,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1370,
            "end": 1399,
            "value": "\\P{Script_Extensions=Batk}",
            "raw": "\"\\\\P{Script_Extensions=Batk}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1403,
      "end": 1487,
      "expression": {
        "type": "CallExpression",
        "start": 1403,
        "end": 1486,
        "callee": {
          "type": "Identifier",
          "start": 1403,
          "end": 1422,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1426,
            "end": 1445,
            "value": null,
            "raw": "/^\\P{scx=Batak}+$/u",
            "regex": {
              "pattern": "^\\P{scx=Batak}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1449,
            "end": 1464,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1468,
            "end": 1484,
            "value": "\\P{scx=Batak}",
            "raw": "\"\\\\P{scx=Batak}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1488,
      "end": 1570,
      "expression": {
        "type": "CallExpression",
        "start": 1488,
        "end": 1569,
        "callee": {
          "type": "Identifier",
          "start": 1488,
          "end": 1507,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1511,
            "end": 1529,
            "value": null,
            "raw": "/^\\P{scx=Batk}+$/u",
            "regex": {
              "pattern": "^\\P{scx=Batk}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1533,
            "end": 1548,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1552,
            "end": 1567,
            "value": "\\P{scx=Batk}",
            "raw": "\"\\\\P{scx=Batk}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}