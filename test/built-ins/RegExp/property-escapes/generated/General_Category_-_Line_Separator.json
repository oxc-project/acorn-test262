{
  "type": "Program",
  "start": 0,
  "end": 1881,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 469,
      "end": 558,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 475,
          "end": 557,
          "id": {
            "type": "Identifier",
            "start": 475,
            "end": 487,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 490,
            "end": 557,
            "callee": {
              "type": "Identifier",
              "start": 490,
              "end": 501,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 502,
                "end": 556,
                "properties": [
                  {
                    "type": "Property",
                    "start": 506,
                    "end": 540,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 506,
                      "end": 520,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 522,
                      "end": 540,
                      "elements": [
                        {
                          "type": "Literal",
                          "start": 528,
                          "end": 536,
                          "value": 8232,
                          "raw": "0x002028"
                        }
                      ]
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 544,
                    "end": 554,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 544,
                      "end": 550,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 552,
                      "end": 554,
                      "elements": []
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 559,
      "end": 684,
      "expression": {
        "type": "CallExpression",
        "start": 559,
        "end": 683,
        "callee": {
          "type": "Identifier",
          "start": 559,
          "end": 578,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 582,
            "end": 623,
            "value": null,
            "raw": "/^\\p{General_Category=Line_Separator}+$/u",
            "regex": {
              "pattern": "^\\p{General_Category=Line_Separator}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 627,
            "end": 639,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 643,
            "end": 681,
            "value": "\\p{General_Category=Line_Separator}",
            "raw": "\"\\\\p{General_Category=Line_Separator}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 685,
      "end": 786,
      "expression": {
        "type": "CallExpression",
        "start": 685,
        "end": 785,
        "callee": {
          "type": "Identifier",
          "start": 685,
          "end": 704,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 708,
            "end": 737,
            "value": null,
            "raw": "/^\\p{General_Category=Zl}+$/u",
            "regex": {
              "pattern": "^\\p{General_Category=Zl}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 741,
            "end": 753,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 757,
            "end": 783,
            "value": "\\p{General_Category=Zl}",
            "raw": "\"\\\\p{General_Category=Zl}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 787,
      "end": 884,
      "expression": {
        "type": "CallExpression",
        "start": 787,
        "end": 883,
        "callee": {
          "type": "Identifier",
          "start": 787,
          "end": 806,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 810,
            "end": 837,
            "value": null,
            "raw": "/^\\p{gc=Line_Separator}+$/u",
            "regex": {
              "pattern": "^\\p{gc=Line_Separator}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 841,
            "end": 853,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 857,
            "end": 881,
            "value": "\\p{gc=Line_Separator}",
            "raw": "\"\\\\p{gc=Line_Separator}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 885,
      "end": 958,
      "expression": {
        "type": "CallExpression",
        "start": 885,
        "end": 957,
        "callee": {
          "type": "Identifier",
          "start": 885,
          "end": 904,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 908,
            "end": 923,
            "value": null,
            "raw": "/^\\p{gc=Zl}+$/u",
            "regex": {
              "pattern": "^\\p{gc=Zl}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 927,
            "end": 939,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 943,
            "end": 955,
            "value": "\\p{gc=Zl}",
            "raw": "\"\\\\p{gc=Zl}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 959,
      "end": 1050,
      "expression": {
        "type": "CallExpression",
        "start": 959,
        "end": 1049,
        "callee": {
          "type": "Identifier",
          "start": 959,
          "end": 978,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 982,
            "end": 1006,
            "value": null,
            "raw": "/^\\p{Line_Separator}+$/u",
            "regex": {
              "pattern": "^\\p{Line_Separator}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1010,
            "end": 1022,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 1026,
            "end": 1047,
            "value": "\\p{Line_Separator}",
            "raw": "\"\\\\p{Line_Separator}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1051,
      "end": 1118,
      "expression": {
        "type": "CallExpression",
        "start": 1051,
        "end": 1117,
        "callee": {
          "type": "Identifier",
          "start": 1051,
          "end": 1070,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1074,
            "end": 1086,
            "value": null,
            "raw": "/^\\p{Zl}+$/u",
            "regex": {
              "pattern": "^\\p{Zl}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1090,
            "end": 1102,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 1106,
            "end": 1115,
            "value": "\\p{Zl}",
            "raw": "\"\\\\p{Zl}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1120,
      "end": 1302,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1126,
          "end": 1301,
          "id": {
            "type": "Identifier",
            "start": 1126,
            "end": 1141,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 1144,
            "end": 1301,
            "callee": {
              "type": "Identifier",
              "start": 1144,
              "end": 1155,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 1156,
                "end": 1300,
                "properties": [
                  {
                    "type": "Property",
                    "start": 1160,
                    "end": 1178,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1160,
                      "end": 1174,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1176,
                      "end": 1178,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 1182,
                    "end": 1298,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1182,
                      "end": 1188,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1190,
                      "end": 1298,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 1196,
                          "end": 1216,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1197,
                              "end": 1205,
                              "value": 56320,
                              "raw": "0x00DC00"
                            },
                            {
                              "type": "Literal",
                              "start": 1207,
                              "end": 1215,
                              "value": 57343,
                              "raw": "0x00DFFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1222,
                          "end": 1242,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1223,
                              "end": 1231,
                              "value": 0,
                              "raw": "0x000000"
                            },
                            {
                              "type": "Literal",
                              "start": 1233,
                              "end": 1241,
                              "value": 8231,
                              "raw": "0x002027"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1248,
                          "end": 1268,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1249,
                              "end": 1257,
                              "value": 8233,
                              "raw": "0x002029"
                            },
                            {
                              "type": "Literal",
                              "start": 1259,
                              "end": 1267,
                              "value": 56319,
                              "raw": "0x00DBFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1274,
                          "end": 1294,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1275,
                              "end": 1283,
                              "value": 57344,
                              "raw": "0x00E000"
                            },
                            {
                              "type": "Literal",
                              "start": 1285,
                              "end": 1293,
                              "value": 1114111,
                              "raw": "0x10FFFF"
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1303,
      "end": 1431,
      "expression": {
        "type": "CallExpression",
        "start": 1303,
        "end": 1430,
        "callee": {
          "type": "Identifier",
          "start": 1303,
          "end": 1322,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1326,
            "end": 1367,
            "value": null,
            "raw": "/^\\P{General_Category=Line_Separator}+$/u",
            "regex": {
              "pattern": "^\\P{General_Category=Line_Separator}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1371,
            "end": 1386,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1390,
            "end": 1428,
            "value": "\\P{General_Category=Line_Separator}",
            "raw": "\"\\\\P{General_Category=Line_Separator}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1432,
      "end": 1536,
      "expression": {
        "type": "CallExpression",
        "start": 1432,
        "end": 1535,
        "callee": {
          "type": "Identifier",
          "start": 1432,
          "end": 1451,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1455,
            "end": 1484,
            "value": null,
            "raw": "/^\\P{General_Category=Zl}+$/u",
            "regex": {
              "pattern": "^\\P{General_Category=Zl}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1488,
            "end": 1503,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1507,
            "end": 1533,
            "value": "\\P{General_Category=Zl}",
            "raw": "\"\\\\P{General_Category=Zl}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1537,
      "end": 1637,
      "expression": {
        "type": "CallExpression",
        "start": 1537,
        "end": 1636,
        "callee": {
          "type": "Identifier",
          "start": 1537,
          "end": 1556,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1560,
            "end": 1587,
            "value": null,
            "raw": "/^\\P{gc=Line_Separator}+$/u",
            "regex": {
              "pattern": "^\\P{gc=Line_Separator}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1591,
            "end": 1606,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1610,
            "end": 1634,
            "value": "\\P{gc=Line_Separator}",
            "raw": "\"\\\\P{gc=Line_Separator}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1638,
      "end": 1714,
      "expression": {
        "type": "CallExpression",
        "start": 1638,
        "end": 1713,
        "callee": {
          "type": "Identifier",
          "start": 1638,
          "end": 1657,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1661,
            "end": 1676,
            "value": null,
            "raw": "/^\\P{gc=Zl}+$/u",
            "regex": {
              "pattern": "^\\P{gc=Zl}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1680,
            "end": 1695,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1699,
            "end": 1711,
            "value": "\\P{gc=Zl}",
            "raw": "\"\\\\P{gc=Zl}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1715,
      "end": 1809,
      "expression": {
        "type": "CallExpression",
        "start": 1715,
        "end": 1808,
        "callee": {
          "type": "Identifier",
          "start": 1715,
          "end": 1734,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1738,
            "end": 1762,
            "value": null,
            "raw": "/^\\P{Line_Separator}+$/u",
            "regex": {
              "pattern": "^\\P{Line_Separator}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1766,
            "end": 1781,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1785,
            "end": 1806,
            "value": "\\P{Line_Separator}",
            "raw": "\"\\\\P{Line_Separator}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1810,
      "end": 1880,
      "expression": {
        "type": "CallExpression",
        "start": 1810,
        "end": 1879,
        "callee": {
          "type": "Identifier",
          "start": 1810,
          "end": 1829,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1833,
            "end": 1845,
            "value": null,
            "raw": "/^\\P{Zl}+$/u",
            "regex": {
              "pattern": "^\\P{Zl}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1849,
            "end": 1864,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1868,
            "end": 1877,
            "value": "\\P{Zl}",
            "raw": "\"\\\\P{Zl}\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}