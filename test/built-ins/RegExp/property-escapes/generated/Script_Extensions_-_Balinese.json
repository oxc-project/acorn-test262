{
  "type": "Program",
  "start": 0,
  "end": 1588,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 464,
      "end": 591,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 470,
          "end": 590,
          "id": {
            "type": "Identifier",
            "start": 470,
            "end": 482,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 485,
            "end": 590,
            "callee": {
              "type": "Identifier",
              "start": 485,
              "end": 496,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 497,
                "end": 589,
                "properties": [
                  {
                    "type": "Property",
                    "start": 501,
                    "end": 519,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 501,
                      "end": 515,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 517,
                      "end": 519,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 523,
                    "end": 587,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 523,
                      "end": 529,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 531,
                      "end": 587,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 537,
                          "end": 557,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 538,
                              "end": 546,
                              "value": 6912,
                              "raw": "0x001B00",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 548,
                              "end": 556,
                              "value": 6988,
                              "raw": "0x001B4C",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 563,
                          "end": 583,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 564,
                              "end": 572,
                              "value": 6990,
                              "raw": "0x001B4E",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 574,
                              "end": 582,
                              "value": 7039,
                              "raw": "0x001B7F",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 592,
      "end": 707,
      "expression": {
        "type": "CallExpression",
        "start": 592,
        "end": 706,
        "callee": {
          "type": "Identifier",
          "start": 592,
          "end": 611,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 615,
            "end": 651,
            "value": null,
            "raw": "/^\\p{Script_Extensions=Balinese}+$/u",
            "regex": {
              "pattern": "^\\p{Script_Extensions=Balinese}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 655,
            "end": 667,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 671,
            "end": 704,
            "value": "\\p{Script_Extensions=Balinese}",
            "raw": "\"\\\\p{Script_Extensions=Balinese}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 708,
      "end": 815,
      "expression": {
        "type": "CallExpression",
        "start": 708,
        "end": 814,
        "callee": {
          "type": "Identifier",
          "start": 708,
          "end": 727,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 731,
            "end": 763,
            "value": null,
            "raw": "/^\\p{Script_Extensions=Bali}+$/u",
            "regex": {
              "pattern": "^\\p{Script_Extensions=Bali}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 767,
            "end": 779,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 783,
            "end": 812,
            "value": "\\p{Script_Extensions=Bali}",
            "raw": "\"\\\\p{Script_Extensions=Bali}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 816,
      "end": 903,
      "expression": {
        "type": "CallExpression",
        "start": 816,
        "end": 902,
        "callee": {
          "type": "Identifier",
          "start": 816,
          "end": 835,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 839,
            "end": 861,
            "value": null,
            "raw": "/^\\p{scx=Balinese}+$/u",
            "regex": {
              "pattern": "^\\p{scx=Balinese}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 865,
            "end": 877,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 881,
            "end": 900,
            "value": "\\p{scx=Balinese}",
            "raw": "\"\\\\p{scx=Balinese}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 904,
      "end": 983,
      "expression": {
        "type": "CallExpression",
        "start": 904,
        "end": 982,
        "callee": {
          "type": "Identifier",
          "start": 904,
          "end": 923,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 927,
            "end": 945,
            "value": null,
            "raw": "/^\\p{scx=Bali}+$/u",
            "regex": {
              "pattern": "^\\p{scx=Bali}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 949,
            "end": 961,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 965,
            "end": 980,
            "value": "\\p{scx=Bali}",
            "raw": "\"\\\\p{scx=Bali}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 985,
      "end": 1183,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 991,
          "end": 1182,
          "id": {
            "type": "Identifier",
            "start": 991,
            "end": 1006,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 1009,
            "end": 1182,
            "callee": {
              "type": "Identifier",
              "start": 1009,
              "end": 1020,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 1021,
                "end": 1181,
                "properties": [
                  {
                    "type": "Property",
                    "start": 1025,
                    "end": 1059,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1025,
                      "end": 1039,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1041,
                      "end": 1059,
                      "elements": [
                        {
                          "type": "Literal",
                          "start": 1047,
                          "end": 1055,
                          "value": 6989,
                          "raw": "0x001B4D",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 1063,
                    "end": 1179,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 1063,
                      "end": 1069,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 1071,
                      "end": 1179,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 1077,
                          "end": 1097,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1078,
                              "end": 1086,
                              "value": 56320,
                              "raw": "0x00DC00",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1088,
                              "end": 1096,
                              "value": 57343,
                              "raw": "0x00DFFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1103,
                          "end": 1123,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1104,
                              "end": 1112,
                              "value": 0,
                              "raw": "0x000000",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1114,
                              "end": 1122,
                              "value": 6911,
                              "raw": "0x001AFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1129,
                          "end": 1149,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1130,
                              "end": 1138,
                              "value": 7040,
                              "raw": "0x001B80",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1140,
                              "end": 1148,
                              "value": 56319,
                              "raw": "0x00DBFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1155,
                          "end": 1175,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1156,
                              "end": 1164,
                              "value": 57344,
                              "raw": "0x00E000",
                              "regex": null,
                              "bigint": null
                            },
                            {
                              "type": "Literal",
                              "start": 1166,
                              "end": 1174,
                              "value": 1114111,
                              "raw": "0x10FFFF",
                              "regex": null,
                              "bigint": null
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1184,
      "end": 1302,
      "expression": {
        "type": "CallExpression",
        "start": 1184,
        "end": 1301,
        "callee": {
          "type": "Identifier",
          "start": 1184,
          "end": 1203,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1207,
            "end": 1243,
            "value": null,
            "raw": "/^\\P{Script_Extensions=Balinese}+$/u",
            "regex": {
              "pattern": "^\\P{Script_Extensions=Balinese}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1247,
            "end": 1262,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1266,
            "end": 1299,
            "value": "\\P{Script_Extensions=Balinese}",
            "raw": "\"\\\\P{Script_Extensions=Balinese}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1303,
      "end": 1413,
      "expression": {
        "type": "CallExpression",
        "start": 1303,
        "end": 1412,
        "callee": {
          "type": "Identifier",
          "start": 1303,
          "end": 1322,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1326,
            "end": 1358,
            "value": null,
            "raw": "/^\\P{Script_Extensions=Bali}+$/u",
            "regex": {
              "pattern": "^\\P{Script_Extensions=Bali}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1362,
            "end": 1377,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1381,
            "end": 1410,
            "value": "\\P{Script_Extensions=Bali}",
            "raw": "\"\\\\P{Script_Extensions=Bali}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1414,
      "end": 1504,
      "expression": {
        "type": "CallExpression",
        "start": 1414,
        "end": 1503,
        "callee": {
          "type": "Identifier",
          "start": 1414,
          "end": 1433,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1437,
            "end": 1459,
            "value": null,
            "raw": "/^\\P{scx=Balinese}+$/u",
            "regex": {
              "pattern": "^\\P{scx=Balinese}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1463,
            "end": 1478,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1482,
            "end": 1501,
            "value": "\\P{scx=Balinese}",
            "raw": "\"\\\\P{scx=Balinese}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1505,
      "end": 1587,
      "expression": {
        "type": "CallExpression",
        "start": 1505,
        "end": 1586,
        "callee": {
          "type": "Identifier",
          "start": 1505,
          "end": 1524,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1528,
            "end": 1546,
            "value": null,
            "raw": "/^\\P{scx=Bali}+$/u",
            "regex": {
              "pattern": "^\\P{scx=Bali}+$",
              "flags": "u"
            },
            "bigint": null
          },
          {
            "type": "Identifier",
            "start": 1550,
            "end": 1565,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1569,
            "end": 1584,
            "value": "\\P{scx=Bali}",
            "raw": "\"\\\\P{scx=Bali}\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}