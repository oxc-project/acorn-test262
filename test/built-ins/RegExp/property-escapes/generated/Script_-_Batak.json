{
  "type": "Program",
  "start": 0,
  "end": 1464,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 450,
      "end": 577,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 456,
          "end": 576,
          "id": {
            "type": "Identifier",
            "start": 456,
            "end": 468,
            "name": "matchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 471,
            "end": 576,
            "callee": {
              "type": "Identifier",
              "start": 471,
              "end": 482,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 483,
                "end": 575,
                "properties": [
                  {
                    "type": "Property",
                    "start": 487,
                    "end": 505,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 487,
                      "end": 501,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 503,
                      "end": 505,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 509,
                    "end": 573,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 509,
                      "end": 515,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 517,
                      "end": 573,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 523,
                          "end": 543,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 524,
                              "end": 532,
                              "value": 7104,
                              "raw": "0x001BC0"
                            },
                            {
                              "type": "Literal",
                              "start": 534,
                              "end": 542,
                              "value": 7155,
                              "raw": "0x001BF3"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 549,
                          "end": 569,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 550,
                              "end": 558,
                              "value": 7164,
                              "raw": "0x001BFC"
                            },
                            {
                              "type": "Literal",
                              "start": 560,
                              "end": 568,
                              "value": 7167,
                              "raw": "0x001BFF"
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 578,
      "end": 665,
      "expression": {
        "type": "CallExpression",
        "start": 578,
        "end": 664,
        "callee": {
          "type": "Identifier",
          "start": 578,
          "end": 597,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 601,
            "end": 623,
            "value": null,
            "raw": "/^\\p{Script=Batak}+$/u",
            "regex": {
              "pattern": "^\\p{Script=Batak}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 627,
            "end": 639,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 643,
            "end": 662,
            "value": "\\p{Script=Batak}",
            "raw": "\"\\\\p{Script=Batak}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 666,
      "end": 751,
      "expression": {
        "type": "CallExpression",
        "start": 666,
        "end": 750,
        "callee": {
          "type": "Identifier",
          "start": 666,
          "end": 685,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 689,
            "end": 710,
            "value": null,
            "raw": "/^\\p{Script=Batk}+$/u",
            "regex": {
              "pattern": "^\\p{Script=Batk}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 714,
            "end": 726,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 730,
            "end": 748,
            "value": "\\p{Script=Batk}",
            "raw": "\"\\\\p{Script=Batk}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 752,
      "end": 831,
      "expression": {
        "type": "CallExpression",
        "start": 752,
        "end": 830,
        "callee": {
          "type": "Identifier",
          "start": 752,
          "end": 771,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 775,
            "end": 793,
            "value": null,
            "raw": "/^\\p{sc=Batak}+$/u",
            "regex": {
              "pattern": "^\\p{sc=Batak}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 797,
            "end": 809,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 813,
            "end": 828,
            "value": "\\p{sc=Batak}",
            "raw": "\"\\\\p{sc=Batak}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 832,
      "end": 909,
      "expression": {
        "type": "CallExpression",
        "start": 832,
        "end": 908,
        "callee": {
          "type": "Identifier",
          "start": 832,
          "end": 851,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 855,
            "end": 872,
            "value": null,
            "raw": "/^\\p{sc=Batk}+$/u",
            "regex": {
              "pattern": "^\\p{sc=Batk}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 876,
            "end": 888,
            "name": "matchSymbols"
          },
          {
            "type": "Literal",
            "start": 892,
            "end": 906,
            "value": "\\p{sc=Batk}",
            "raw": "\"\\\\p{sc=Batk}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 911,
      "end": 1119,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 917,
          "end": 1118,
          "id": {
            "type": "Identifier",
            "start": 917,
            "end": 932,
            "name": "nonMatchSymbols"
          },
          "init": {
            "type": "CallExpression",
            "start": 935,
            "end": 1118,
            "callee": {
              "type": "Identifier",
              "start": 935,
              "end": 946,
              "name": "buildString"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 947,
                "end": 1117,
                "properties": [
                  {
                    "type": "Property",
                    "start": 951,
                    "end": 969,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 951,
                      "end": 965,
                      "name": "loneCodePoints"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 967,
                      "end": 969,
                      "elements": []
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 973,
                    "end": 1115,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 973,
                      "end": 979,
                      "name": "ranges"
                    },
                    "value": {
                      "type": "ArrayExpression",
                      "start": 981,
                      "end": 1115,
                      "elements": [
                        {
                          "type": "ArrayExpression",
                          "start": 987,
                          "end": 1007,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 988,
                              "end": 996,
                              "value": 56320,
                              "raw": "0x00DC00"
                            },
                            {
                              "type": "Literal",
                              "start": 998,
                              "end": 1006,
                              "value": 57343,
                              "raw": "0x00DFFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1013,
                          "end": 1033,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1014,
                              "end": 1022,
                              "value": 0,
                              "raw": "0x000000"
                            },
                            {
                              "type": "Literal",
                              "start": 1024,
                              "end": 1032,
                              "value": 7103,
                              "raw": "0x001BBF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1039,
                          "end": 1059,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1040,
                              "end": 1048,
                              "value": 7156,
                              "raw": "0x001BF4"
                            },
                            {
                              "type": "Literal",
                              "start": 1050,
                              "end": 1058,
                              "value": 7163,
                              "raw": "0x001BFB"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1065,
                          "end": 1085,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1066,
                              "end": 1074,
                              "value": 7168,
                              "raw": "0x001C00"
                            },
                            {
                              "type": "Literal",
                              "start": 1076,
                              "end": 1084,
                              "value": 56319,
                              "raw": "0x00DBFF"
                            }
                          ]
                        },
                        {
                          "type": "ArrayExpression",
                          "start": 1091,
                          "end": 1111,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1092,
                              "end": 1100,
                              "value": 57344,
                              "raw": "0x00E000"
                            },
                            {
                              "type": "Literal",
                              "start": 1102,
                              "end": 1110,
                              "value": 1114111,
                              "raw": "0x10FFFF"
                            }
                          ]
                        }
                      ]
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1120,
      "end": 1210,
      "expression": {
        "type": "CallExpression",
        "start": 1120,
        "end": 1209,
        "callee": {
          "type": "Identifier",
          "start": 1120,
          "end": 1139,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1143,
            "end": 1165,
            "value": null,
            "raw": "/^\\P{Script=Batak}+$/u",
            "regex": {
              "pattern": "^\\P{Script=Batak}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1169,
            "end": 1184,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1188,
            "end": 1207,
            "value": "\\P{Script=Batak}",
            "raw": "\"\\\\P{Script=Batak}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1211,
      "end": 1299,
      "expression": {
        "type": "CallExpression",
        "start": 1211,
        "end": 1298,
        "callee": {
          "type": "Identifier",
          "start": 1211,
          "end": 1230,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1234,
            "end": 1255,
            "value": null,
            "raw": "/^\\P{Script=Batk}+$/u",
            "regex": {
              "pattern": "^\\P{Script=Batk}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1259,
            "end": 1274,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1278,
            "end": 1296,
            "value": "\\P{Script=Batk}",
            "raw": "\"\\\\P{Script=Batk}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1300,
      "end": 1382,
      "expression": {
        "type": "CallExpression",
        "start": 1300,
        "end": 1381,
        "callee": {
          "type": "Identifier",
          "start": 1300,
          "end": 1319,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1323,
            "end": 1341,
            "value": null,
            "raw": "/^\\P{sc=Batak}+$/u",
            "regex": {
              "pattern": "^\\P{sc=Batak}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1345,
            "end": 1360,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1364,
            "end": 1379,
            "value": "\\P{sc=Batak}",
            "raw": "\"\\\\P{sc=Batak}\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1383,
      "end": 1463,
      "expression": {
        "type": "CallExpression",
        "start": 1383,
        "end": 1462,
        "callee": {
          "type": "Identifier",
          "start": 1383,
          "end": 1402,
          "name": "testPropertyEscapes"
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 1406,
            "end": 1423,
            "value": null,
            "raw": "/^\\P{sc=Batk}+$/u",
            "regex": {
              "pattern": "^\\P{sc=Batk}+$",
              "flags": "u"
            }
          },
          {
            "type": "Identifier",
            "start": 1427,
            "end": 1442,
            "name": "nonMatchSymbols"
          },
          {
            "type": "Literal",
            "start": 1446,
            "end": 1460,
            "value": "\\P{sc=Batk}",
            "raw": "\"\\\\P{sc=Batk}\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}