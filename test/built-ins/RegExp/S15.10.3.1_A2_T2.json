{
  "type": "Program",
  "start": 0,
  "end": 873,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 528,
      "end": 538,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 532,
          "end": 537,
          "id": {
            "type": "Identifier",
            "start": 532,
            "end": 533,
            "name": "x"
          },
          "init": {
            "type": "Literal",
            "start": 536,
            "end": 537,
            "value": 1,
            "raw": "1"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 540,
      "end": 827,
      "block": {
        "type": "BlockStatement",
        "start": 544,
        "end": 667,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 550,
            "end": 665,
            "argument": {
              "type": "NewExpression",
              "start": 556,
              "end": 664,
              "callee": {
                "type": "Identifier",
                "start": 560,
                "end": 572,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 573,
                  "end": 663,
                  "left": {
                    "type": "Literal",
                    "start": 573,
                    "end": 639,
                    "value": "#1.1: var x = 1; RegExp(/[a-b]?/, x) throw SyntaxError. Actual: ",
                    "raw": "'#1.1: var x = 1; RegExp(/[a-b]?/, x) throw SyntaxError. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 642,
                    "end": 663,
                    "expression": {
                      "type": "CallExpression",
                      "start": 643,
                      "end": 662,
                      "callee": {
                        "type": "Identifier",
                        "start": 643,
                        "end": 649,
                        "name": "RegExp"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 650,
                          "end": 658,
                          "value": null,
                          "raw": "/[a-b]?/",
                          "regex": {
                            "pattern": "[a-b]?",
                            "flags": ""
                          }
                        },
                        {
                          "type": "Identifier",
                          "start": 660,
                          "end": 661,
                          "name": "x"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 668,
        "end": 827,
        "param": {
          "type": "Identifier",
          "start": 675,
          "end": 676,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 678,
          "end": 827,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 682,
              "end": 825,
              "expression": {
                "type": "CallExpression",
                "start": 682,
                "end": 824,
                "callee": {
                  "type": "MemberExpression",
                  "start": 682,
                  "end": 698,
                  "object": {
                    "type": "Identifier",
                    "start": 682,
                    "end": 688,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 689,
                    "end": 698,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 704,
                    "end": 728,
                    "left": {
                      "type": "Identifier",
                      "start": 704,
                      "end": 705,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 717,
                      "end": 728,
                      "name": "SyntaxError"
                    }
                  },
                  {
                    "type": "Literal",
                    "start": 734,
                    "end": 738,
                    "value": true,
                    "raw": "true"
                  },
                  {
                    "type": "Literal",
                    "start": 744,
                    "end": 820,
                    "value": "The result of evaluating (e instanceof SyntaxError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof SyntaxError) is expected to be true'"
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}