{
  "type": "Program",
  "start": 0,
  "end": 865,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 369,
      "end": 402,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 373,
          "end": 401,
          "id": {
            "type": "Identifier",
            "start": 373,
            "end": 383,
            "name": "__instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 386,
            "end": 401,
            "callee": {
              "type": "Identifier",
              "start": 390,
              "end": 396,
              "name": "Number"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 397,
                "end": 400,
                "value": 1,
                "raw": "1.0",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 404,
      "end": 444,
      "expression": {
        "type": "AssignmentExpression",
        "start": 404,
        "end": 443,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 404,
          "end": 419,
          "object": {
            "type": "Identifier",
            "start": 404,
            "end": 414,
            "name": "__instance"
          },
          "property": {
            "type": "Identifier",
            "start": 415,
            "end": 419,
            "name": "test"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 422,
          "end": 443,
          "object": {
            "type": "MemberExpression",
            "start": 422,
            "end": 438,
            "object": {
              "type": "Identifier",
              "start": 422,
              "end": 428,
              "name": "RegExp"
            },
            "property": {
              "type": "Identifier",
              "start": 429,
              "end": 438,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 439,
            "end": 443,
            "name": "test"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "TryStatement",
      "start": 446,
      "end": 819,
      "block": {
        "type": "BlockStatement",
        "start": 450,
        "end": 663,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 454,
            "end": 661,
            "argument": {
              "type": "NewExpression",
              "start": 460,
              "end": 660,
              "callee": {
                "type": "Identifier",
                "start": 464,
                "end": 476,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 477,
                  "end": 659,
                  "left": {
                    "type": "Literal",
                    "start": 477,
                    "end": 610,
                    "value": "#1.1: __instance = new Number(1.0); __instance.test = RegExp.prototype.test; __instance[\"test\"](\"message to investigate\"). Actual: ",
                    "raw": "'#1.1: __instance = new Number(1.0); __instance.test = RegExp.prototype.test; __instance[\"test\"](\"message to investigate\"). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 613,
                    "end": 659,
                    "expression": {
                      "type": "CallExpression",
                      "start": 614,
                      "end": 658,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 614,
                        "end": 632,
                        "object": {
                          "type": "Identifier",
                          "start": 614,
                          "end": 624,
                          "name": "__instance"
                        },
                        "property": {
                          "type": "Literal",
                          "start": 625,
                          "end": 631,
                          "value": "test",
                          "raw": "\"test\"",
                          "regex": null,
                          "bigint": null
                        },
                        "computed": true,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 633,
                          "end": 657,
                          "value": "message to investigate",
                          "raw": "\"message to investigate\"",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 664,
        "end": 819,
        "param": {
          "type": "Identifier",
          "start": 671,
          "end": 672,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 674,
          "end": 819,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 678,
              "end": 817,
              "expression": {
                "type": "CallExpression",
                "start": 678,
                "end": 816,
                "callee": {
                  "type": "MemberExpression",
                  "start": 678,
                  "end": 694,
                  "object": {
                    "type": "Identifier",
                    "start": 678,
                    "end": 684,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 685,
                    "end": 694,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 700,
                    "end": 722,
                    "left": {
                      "type": "Identifier",
                      "start": 700,
                      "end": 701,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 713,
                      "end": 722,
                      "name": "TypeError"
                    }
                  },
                  {
                    "type": "Literal",
                    "start": 728,
                    "end": 732,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 738,
                    "end": 812,
                    "value": "The result of evaluating (e instanceof TypeError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof TypeError) is expected to be true'",
                    "regex": null,
                    "bigint": null
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}