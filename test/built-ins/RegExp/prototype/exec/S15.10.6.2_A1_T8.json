{
  "type": "Program",
  "start": 0,
  "end": 864,
  "body": [
    {
      "type": "TryStatement",
      "start": 514,
      "end": 818,
      "block": {
        "type": "BlockStatement",
        "start": 518,
        "end": 724,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 522,
            "end": 722,
            "argument": {
              "type": "NewExpression",
              "start": 528,
              "end": 721,
              "callee": {
                "type": "Identifier",
                "start": 532,
                "end": 544,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 545,
                  "end": 720,
                  "left": {
                    "type": "Literal",
                    "start": 545,
                    "end": 647,
                    "value": "#1.1: /[a-z]/.exec({toString:void 0, valueOf:function(){throw \"invalof\"}}) throw \"invalof\". Actual: ",
                    "raw": "'#1.1: /[a-z]/.exec({toString:void 0, valueOf:function(){throw \"invalof\"}}) throw \"invalof\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 650,
                    "end": 720,
                    "expression": {
                      "type": "CallExpression",
                      "start": 651,
                      "end": 719,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 651,
                        "end": 663,
                        "object": {
                          "type": "Literal",
                          "start": 651,
                          "end": 658,
                          "value": null,
                          "raw": "/[a-z]/",
                          "regex": {
                            "pattern": "[a-z]",
                            "flags": ""
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 659,
                          "end": 663,
                          "name": "exec"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "start": 664,
                          "end": 718,
                          "properties": [
                            {
                              "type": "Property",
                              "start": 665,
                              "end": 680,
                              "method": false,
                              "shorthand": false,
                              "computed": false,
                              "key": {
                                "type": "Identifier",
                                "start": 665,
                                "end": 673,
                                "name": "toString"
                              },
                              "value": {
                                "type": "UnaryExpression",
                                "start": 674,
                                "end": 680,
                                "operator": "void",
                                "prefix": true,
                                "argument": {
                                  "type": "Literal",
                                  "start": 679,
                                  "end": 680,
                                  "value": 0,
                                  "raw": "0"
                                }
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "start": 682,
                              "end": 717,
                              "method": false,
                              "shorthand": false,
                              "computed": false,
                              "key": {
                                "type": "Identifier",
                                "start": 682,
                                "end": 689,
                                "name": "valueOf"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "start": 690,
                                "end": 717,
                                "id": null,
                                "expression": false,
                                "generator": false,
                                "async": false,
                                "params": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "start": 700,
                                  "end": 717,
                                  "body": [
                                    {
                                      "type": "ThrowStatement",
                                      "start": 701,
                                      "end": 716,
                                      "argument": {
                                        "type": "Literal",
                                        "start": 707,
                                        "end": 716,
                                        "value": "invalof",
                                        "raw": "\"invalof\""
                                      }
                                    }
                                  ]
                                }
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 725,
        "end": 818,
        "param": {
          "type": "Identifier",
          "start": 732,
          "end": 733,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 735,
          "end": 818,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 739,
              "end": 816,
              "expression": {
                "type": "CallExpression",
                "start": 739,
                "end": 815,
                "callee": {
                  "type": "MemberExpression",
                  "start": 739,
                  "end": 755,
                  "object": {
                    "type": "Identifier",
                    "start": 739,
                    "end": 745,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 746,
                    "end": 755,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 756,
                    "end": 757,
                    "name": "e"
                  },
                  {
                    "type": "Literal",
                    "start": 759,
                    "end": 768,
                    "value": "invalof",
                    "raw": "\"invalof\""
                  },
                  {
                    "type": "Literal",
                    "start": 770,
                    "end": 814,
                    "value": "The value of e is expected to be \"invalof\"",
                    "raw": "'The value of e is expected to be \"invalof\"'"
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script"
}