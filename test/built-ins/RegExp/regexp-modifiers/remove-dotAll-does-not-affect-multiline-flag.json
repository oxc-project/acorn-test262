{
  "type": "Program",
  "start": 0,
  "end": 2410,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1777,
      "end": 1801,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1781,
          "end": 1800,
          "id": {
            "type": "Identifier",
            "start": 1781,
            "end": 1784,
            "name": "re1"
          },
          "init": {
            "type": "Literal",
            "start": 1787,
            "end": 1800,
            "value": null,
            "raw": "/(?-s:.es$)/s",
            "regex": {
              "pattern": "(?-s:.es$)",
              "flags": "s"
            },
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1802,
      "end": 1864,
      "expression": {
        "type": "CallExpression",
        "start": 1802,
        "end": 1863,
        "callee": {
          "type": "Identifier",
          "start": 1802,
          "end": 1808,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1809,
            "end": 1824,
            "callee": {
              "type": "MemberExpression",
              "start": 1809,
              "end": 1817,
              "object": {
                "type": "Identifier",
                "start": 1809,
                "end": 1812,
                "name": "re1"
              },
              "property": {
                "type": "Identifier",
                "start": 1813,
                "end": 1817,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1818,
                "end": 1823,
                "value": "aes",
                "raw": "\"aes\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1826,
            "end": 1862,
            "value": ". should match a in modified group",
            "raw": "\". should match a in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1865,
      "end": 1941,
      "expression": {
        "type": "CallExpression",
        "start": 1865,
        "end": 1940,
        "callee": {
          "type": "Identifier",
          "start": 1865,
          "end": 1871,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1872,
            "end": 1891,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 1873,
              "end": 1891,
              "callee": {
                "type": "MemberExpression",
                "start": 1873,
                "end": 1881,
                "object": {
                  "type": "Identifier",
                  "start": 1873,
                  "end": 1876,
                  "name": "re1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1877,
                  "end": 1881,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1882,
                  "end": 1890,
                  "value": "aes\nz",
                  "raw": "\"aes\\nz\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1893,
            "end": 1939,
            "value": "$ should not match newline in modified group",
            "raw": "\"$ should not match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1942,
      "end": 2016,
      "expression": {
        "type": "CallExpression",
        "start": 1942,
        "end": 2015,
        "callee": {
          "type": "Identifier",
          "start": 1942,
          "end": 1948,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1949,
            "end": 1966,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 1950,
              "end": 1966,
              "callee": {
                "type": "MemberExpression",
                "start": 1950,
                "end": 1958,
                "object": {
                  "type": "Identifier",
                  "start": 1950,
                  "end": 1953,
                  "name": "re1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1954,
                  "end": 1958,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1959,
                  "end": 1965,
                  "value": "\nes",
                  "raw": "\"\\nes\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1968,
            "end": 2014,
            "value": ". should not match newline in modified group",
            "raw": "\". should not match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2017,
      "end": 2094,
      "expression": {
        "type": "CallExpression",
        "start": 2017,
        "end": 2093,
        "callee": {
          "type": "Identifier",
          "start": 2017,
          "end": 2023,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 2024,
            "end": 2044,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 2025,
              "end": 2044,
              "callee": {
                "type": "MemberExpression",
                "start": 2025,
                "end": 2033,
                "object": {
                  "type": "Identifier",
                  "start": 2025,
                  "end": 2028,
                  "name": "re1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2029,
                  "end": 2033,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2034,
                  "end": 2043,
                  "value": "\nes\nz",
                  "raw": "\"\\nes\\nz\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2046,
            "end": 2092,
            "value": "$ should not match newline in modified group",
            "raw": "\"$ should not match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 2096,
      "end": 2121,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2100,
          "end": 2120,
          "id": {
            "type": "Identifier",
            "start": 2100,
            "end": 2103,
            "name": "re2"
          },
          "init": {
            "type": "Literal",
            "start": 2106,
            "end": 2120,
            "value": null,
            "raw": "/(?-s:.es$)/sm",
            "regex": {
              "pattern": "(?-s:.es$)",
              "flags": "ms"
            },
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 2122,
      "end": 2184,
      "expression": {
        "type": "CallExpression",
        "start": 2122,
        "end": 2183,
        "callee": {
          "type": "Identifier",
          "start": 2122,
          "end": 2128,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2129,
            "end": 2144,
            "callee": {
              "type": "MemberExpression",
              "start": 2129,
              "end": 2137,
              "object": {
                "type": "Identifier",
                "start": 2129,
                "end": 2132,
                "name": "re2"
              },
              "property": {
                "type": "Identifier",
                "start": 2133,
                "end": 2137,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2138,
                "end": 2143,
                "value": "aes",
                "raw": "\"aes\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2146,
            "end": 2182,
            "value": ". should match a in modified group",
            "raw": "\". should match a in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2185,
      "end": 2256,
      "expression": {
        "type": "CallExpression",
        "start": 2185,
        "end": 2255,
        "callee": {
          "type": "Identifier",
          "start": 2185,
          "end": 2191,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2192,
            "end": 2210,
            "callee": {
              "type": "MemberExpression",
              "start": 2192,
              "end": 2200,
              "object": {
                "type": "Identifier",
                "start": 2192,
                "end": 2195,
                "name": "re2"
              },
              "property": {
                "type": "Identifier",
                "start": 2196,
                "end": 2200,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2201,
                "end": 2209,
                "value": "aes\nz",
                "raw": "\"aes\\nz\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2212,
            "end": 2254,
            "value": "$ should match newline in modified group",
            "raw": "\"$ should match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2257,
      "end": 2331,
      "expression": {
        "type": "CallExpression",
        "start": 2257,
        "end": 2330,
        "callee": {
          "type": "Identifier",
          "start": 2257,
          "end": 2263,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 2264,
            "end": 2281,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 2265,
              "end": 2281,
              "callee": {
                "type": "MemberExpression",
                "start": 2265,
                "end": 2273,
                "object": {
                  "type": "Identifier",
                  "start": 2265,
                  "end": 2268,
                  "name": "re2"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2269,
                  "end": 2273,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2274,
                  "end": 2280,
                  "value": "\nes",
                  "raw": "\"\\nes\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2283,
            "end": 2329,
            "value": ". should not match newline in modified group",
            "raw": "\". should not match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2332,
      "end": 2409,
      "expression": {
        "type": "CallExpression",
        "start": 2332,
        "end": 2408,
        "callee": {
          "type": "Identifier",
          "start": 2332,
          "end": 2338,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 2339,
            "end": 2359,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 2340,
              "end": 2359,
              "callee": {
                "type": "MemberExpression",
                "start": 2340,
                "end": 2348,
                "object": {
                  "type": "Identifier",
                  "start": 2340,
                  "end": 2343,
                  "name": "re2"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2344,
                  "end": 2348,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2349,
                  "end": 2358,
                  "value": "\nes\nz",
                  "raw": "\"\\nes\\nz\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2361,
            "end": 2407,
            "value": ". should not match newline in modified group",
            "raw": "\". should not match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}