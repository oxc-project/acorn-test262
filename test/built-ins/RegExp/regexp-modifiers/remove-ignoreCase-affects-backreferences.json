{
  "type": "Program",
  "start": 0,
  "end": 2118,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1774,
      "end": 1799,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1778,
          "end": 1798,
          "id": {
            "type": "Identifier",
            "start": 1778,
            "end": 1781,
            "name": "re1"
          },
          "init": {
            "type": "Literal",
            "start": 1784,
            "end": 1798,
            "value": null,
            "raw": "/(a)(?-i:\\1)/i",
            "regex": {
              "pattern": "(a)(?-i:\\1)",
              "flags": "i"
            },
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1800,
      "end": 1874,
      "expression": {
        "type": "CallExpression",
        "start": 1800,
        "end": 1873,
        "callee": {
          "type": "Identifier",
          "start": 1800,
          "end": 1806,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1807,
            "end": 1821,
            "callee": {
              "type": "MemberExpression",
              "start": 1807,
              "end": 1815,
              "object": {
                "type": "Identifier",
                "start": 1807,
                "end": 1810,
                "name": "re1"
              },
              "property": {
                "type": "Identifier",
                "start": 1811,
                "end": 1815,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1816,
                "end": 1820,
                "value": "AA",
                "raw": "\"AA\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1823,
            "end": 1872,
            "value": "a matches first A, so \\1 should match second A",
            "raw": "\"a matches first A, so \\\\1 should match second A\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1875,
      "end": 1958,
      "expression": {
        "type": "CallExpression",
        "start": 1875,
        "end": 1957,
        "callee": {
          "type": "Identifier",
          "start": 1875,
          "end": 1881,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1882,
            "end": 1897,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 1883,
              "end": 1897,
              "callee": {
                "type": "MemberExpression",
                "start": 1883,
                "end": 1891,
                "object": {
                  "type": "Identifier",
                  "start": 1883,
                  "end": 1886,
                  "name": "re1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1887,
                  "end": 1891,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1892,
                  "end": 1896,
                  "value": "aA",
                  "raw": "\"aA\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1899,
            "end": 1956,
            "value": "a matches a, so \\1 should not match A (preserves case)",
            "raw": "\"a matches a, so \\\\1 should not match A (preserves case)\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1959,
      "end": 2042,
      "expression": {
        "type": "CallExpression",
        "start": 1959,
        "end": 2041,
        "callee": {
          "type": "Identifier",
          "start": 1959,
          "end": 1965,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1966,
            "end": 1981,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 1967,
              "end": 1981,
              "callee": {
                "type": "MemberExpression",
                "start": 1967,
                "end": 1975,
                "object": {
                  "type": "Identifier",
                  "start": 1967,
                  "end": 1970,
                  "name": "re1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1971,
                  "end": 1975,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1976,
                  "end": 1980,
                  "value": "Aa",
                  "raw": "\"Aa\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1983,
            "end": 2040,
            "value": "a matches A, so \\1 should not match a (preserves case)",
            "raw": "\"a matches A, so \\\\1 should not match a (preserves case)\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2043,
      "end": 2117,
      "expression": {
        "type": "CallExpression",
        "start": 2043,
        "end": 2116,
        "callee": {
          "type": "Identifier",
          "start": 2043,
          "end": 2049,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2050,
            "end": 2064,
            "callee": {
              "type": "MemberExpression",
              "start": 2050,
              "end": 2058,
              "object": {
                "type": "Identifier",
                "start": 2050,
                "end": 2053,
                "name": "re1"
              },
              "property": {
                "type": "Identifier",
                "start": 2054,
                "end": 2058,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2059,
                "end": 2063,
                "value": "aa",
                "raw": "\"aa\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2066,
            "end": 2115,
            "value": "a matches first a, so \\1 should match second a",
            "raw": "\"a matches first a, so \\\\1 should match second a\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}