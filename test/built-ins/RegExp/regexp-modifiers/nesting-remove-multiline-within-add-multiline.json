{
  "type": "Program",
  "start": 0,
  "end": 2268,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1694,
      "end": 1725,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1698,
          "end": 1724,
          "id": {
            "type": "Identifier",
            "start": 1698,
            "end": 1701,
            "name": "re1"
          },
          "init": {
            "type": "Literal",
            "start": 1704,
            "end": 1724,
            "value": null,
            "raw": "/(?m:es$|(?-m:js$))/",
            "regex": {
              "pattern": "(?m:es$|(?-m:js$))",
              "flags": ""
            },
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1726,
      "end": 1802,
      "expression": {
        "type": "CallExpression",
        "start": 1726,
        "end": 1801,
        "callee": {
          "type": "Identifier",
          "start": 1726,
          "end": 1732,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1733,
            "end": 1750,
            "callee": {
              "type": "MemberExpression",
              "start": 1733,
              "end": 1741,
              "object": {
                "type": "Identifier",
                "start": 1733,
                "end": 1736,
                "name": "re1"
              },
              "property": {
                "type": "Identifier",
                "start": 1737,
                "end": 1741,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1742,
                "end": 1749,
                "value": "es\ns",
                "raw": "\"es\\ns\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1752,
            "end": 1800,
            "value": "first $ should match newline in modified group",
            "raw": "\"first $ should match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1803,
      "end": 1889,
      "expression": {
        "type": "CallExpression",
        "start": 1803,
        "end": 1888,
        "callee": {
          "type": "Identifier",
          "start": 1803,
          "end": 1809,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1810,
            "end": 1824,
            "callee": {
              "type": "MemberExpression",
              "start": 1810,
              "end": 1818,
              "object": {
                "type": "Identifier",
                "start": 1810,
                "end": 1813,
                "name": "re1"
              },
              "property": {
                "type": "Identifier",
                "start": 1814,
                "end": 1818,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1819,
                "end": 1823,
                "value": "js",
                "raw": "\"js\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1826,
            "end": 1887,
            "value": "second $ should match end of input in nested modified group",
            "raw": "\"second $ should match end of input in nested modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1890,
      "end": 1979,
      "expression": {
        "type": "CallExpression",
        "start": 1890,
        "end": 1978,
        "callee": {
          "type": "Identifier",
          "start": 1890,
          "end": 1896,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 1897,
            "end": 1915,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 1898,
              "end": 1915,
              "callee": {
                "type": "MemberExpression",
                "start": 1898,
                "end": 1906,
                "object": {
                  "type": "Identifier",
                  "start": 1898,
                  "end": 1901,
                  "name": "re1"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1902,
                  "end": 1906,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 1907,
                  "end": 1914,
                  "value": "js\ns",
                  "raw": "\"js\\ns\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 1917,
            "end": 1977,
            "value": "second $ should not match newline in nested modified group",
            "raw": "\"second $ should not match newline in nested modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1981,
      "end": 2013,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1985,
          "end": 2012,
          "id": {
            "type": "Identifier",
            "start": 1985,
            "end": 1988,
            "name": "re2"
          },
          "init": {
            "type": "Literal",
            "start": 1991,
            "end": 2012,
            "value": null,
            "raw": "/(?m-:es$|(?-m:js$))/",
            "regex": {
              "pattern": "(?m-:es$|(?-m:js$))",
              "flags": ""
            },
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 2014,
      "end": 2090,
      "expression": {
        "type": "CallExpression",
        "start": 2014,
        "end": 2089,
        "callee": {
          "type": "Identifier",
          "start": 2014,
          "end": 2020,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2021,
            "end": 2038,
            "callee": {
              "type": "MemberExpression",
              "start": 2021,
              "end": 2029,
              "object": {
                "type": "Identifier",
                "start": 2021,
                "end": 2024,
                "name": "re2"
              },
              "property": {
                "type": "Identifier",
                "start": 2025,
                "end": 2029,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2030,
                "end": 2037,
                "value": "es\ns",
                "raw": "\"es\\ns\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2040,
            "end": 2088,
            "value": "first $ should match newline in modified group",
            "raw": "\"first $ should match newline in modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2091,
      "end": 2177,
      "expression": {
        "type": "CallExpression",
        "start": 2091,
        "end": 2176,
        "callee": {
          "type": "Identifier",
          "start": 2091,
          "end": 2097,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 2098,
            "end": 2112,
            "callee": {
              "type": "MemberExpression",
              "start": 2098,
              "end": 2106,
              "object": {
                "type": "Identifier",
                "start": 2098,
                "end": 2101,
                "name": "re2"
              },
              "property": {
                "type": "Identifier",
                "start": 2102,
                "end": 2106,
                "name": "test"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 2107,
                "end": 2111,
                "value": "js",
                "raw": "\"js\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 2114,
            "end": 2175,
            "value": "second $ should match end of input in nested modified group",
            "raw": "\"second $ should match end of input in nested modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 2178,
      "end": 2267,
      "expression": {
        "type": "CallExpression",
        "start": 2178,
        "end": 2266,
        "callee": {
          "type": "Identifier",
          "start": 2178,
          "end": 2184,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 2185,
            "end": 2203,
            "operator": "!",
            "prefix": true,
            "argument": {
              "type": "CallExpression",
              "start": 2186,
              "end": 2203,
              "callee": {
                "type": "MemberExpression",
                "start": 2186,
                "end": 2194,
                "object": {
                  "type": "Identifier",
                  "start": 2186,
                  "end": 2189,
                  "name": "re2"
                },
                "property": {
                  "type": "Identifier",
                  "start": 2190,
                  "end": 2194,
                  "name": "test"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 2195,
                  "end": 2202,
                  "value": "js\ns",
                  "raw": "\"js\\ns\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 2205,
            "end": 2265,
            "value": "second $ should not match newline in nested modified group",
            "raw": "\"second $ should not match newline in nested modified group\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}