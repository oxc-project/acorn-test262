{
  "type": "Program",
  "start": 0,
  "end": 383,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 300,
      "end": 382,
      "expression": {
        "type": "CallExpression",
        "start": 300,
        "end": 381,
        "callee": {
          "type": "MemberExpression",
          "start": 300,
          "end": 316,
          "object": {
            "type": "Identifier",
            "start": 300,
            "end": 306,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 307,
            "end": 316,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 317,
            "end": 337,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "MemberExpression",
              "start": 324,
              "end": 337,
              "object": {
                "type": "Identifier",
                "start": 324,
                "end": 330,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 331,
                "end": 337,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 339,
            "end": 349,
            "value": "function",
            "raw": "'function'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 351,
            "end": 380,
            "value": "RegExp.escape is a function",
            "raw": "'RegExp.escape is a function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}