{
  "type": "Program",
  "start": 0,
  "end": 1637,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 498,
      "end": 586,
      "expression": {
        "type": "CallExpression",
        "start": 498,
        "end": 585,
        "callee": {
          "type": "MemberExpression",
          "start": 498,
          "end": 514,
          "object": {
            "type": "Identifier",
            "start": 498,
            "end": 504,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 505,
            "end": 514,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 515,
            "end": 533,
            "callee": {
              "type": "MemberExpression",
              "start": 515,
              "end": 528,
              "object": {
                "type": "Identifier",
                "start": 515,
                "end": 521,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 522,
                "end": 528,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 529,
                "end": 532,
                "value": "_",
                "raw": "'_'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 535,
            "end": 538,
            "value": "_",
            "raw": "'_'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 540,
            "end": 584,
            "value": "Single underscore character is not escaped",
            "raw": "'Single underscore character is not escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 587,
      "end": 672,
      "expression": {
        "type": "CallExpression",
        "start": 587,
        "end": 671,
        "callee": {
          "type": "MemberExpression",
          "start": 587,
          "end": 603,
          "object": {
            "type": "Identifier",
            "start": 587,
            "end": 593,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 594,
            "end": 603,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 604,
            "end": 623,
            "callee": {
              "type": "MemberExpression",
              "start": 604,
              "end": 617,
              "object": {
                "type": "Identifier",
                "start": 604,
                "end": 610,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 611,
                "end": 617,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 618,
                "end": 622,
                "value": "__",
                "raw": "'__'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 625,
            "end": 629,
            "value": "__",
            "raw": "'__'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 631,
            "end": 670,
            "value": "Thunderscore character is not escaped",
            "raw": "'Thunderscore character is not escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 673,
      "end": 823,
      "expression": {
        "type": "CallExpression",
        "start": 673,
        "end": 822,
        "callee": {
          "type": "MemberExpression",
          "start": 673,
          "end": 689,
          "object": {
            "type": "Identifier",
            "start": 673,
            "end": 679,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 680,
            "end": 689,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 690,
            "end": 718,
            "callee": {
              "type": "MemberExpression",
              "start": 690,
              "end": 703,
              "object": {
                "type": "Identifier",
                "start": 690,
                "end": 696,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 697,
                "end": 703,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 704,
                "end": 717,
                "value": "hello_world",
                "raw": "'hello_world'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 720,
            "end": 737,
            "value": "\\x68ello_world",
            "raw": "'\\\\x68ello_world'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 739,
            "end": 821,
            "value": "String starting with ASCII letter and containing underscore is correctly escaped",
            "raw": "'String starting with ASCII letter and containing underscore is correctly escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 824,
      "end": 971,
      "expression": {
        "type": "CallExpression",
        "start": 824,
        "end": 970,
        "callee": {
          "type": "MemberExpression",
          "start": 824,
          "end": 840,
          "object": {
            "type": "Identifier",
            "start": 824,
            "end": 830,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 831,
            "end": 840,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 841,
            "end": 871,
            "callee": {
              "type": "MemberExpression",
              "start": 841,
              "end": 854,
              "object": {
                "type": "Identifier",
                "start": 841,
                "end": 847,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 848,
                "end": 854,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 855,
                "end": 870,
                "value": "1_hello_world",
                "raw": "'1_hello_world'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 873,
            "end": 892,
            "value": "\\x31_hello_world",
            "raw": "'\\\\x31_hello_world'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 894,
            "end": 969,
            "value": "String starting with digit and containing underscore is correctly escaped",
            "raw": "'String starting with digit and containing underscore is correctly escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 972,
      "end": 1120,
      "expression": {
        "type": "CallExpression",
        "start": 972,
        "end": 1119,
        "callee": {
          "type": "MemberExpression",
          "start": 972,
          "end": 988,
          "object": {
            "type": "Identifier",
            "start": 972,
            "end": 978,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 979,
            "end": 988,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 989,
            "end": 1011,
            "callee": {
              "type": "MemberExpression",
              "start": 989,
              "end": 1002,
              "object": {
                "type": "Identifier",
                "start": 989,
                "end": 995,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 996,
                "end": 1002,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1003,
                "end": 1010,
                "value": "a_b_c",
                "raw": "'a_b_c'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1013,
            "end": 1024,
            "value": "\\x61_b_c",
            "raw": "'\\\\x61_b_c'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1026,
            "end": 1118,
            "value": "String starting with ASCII letter and containing multiple underscores is correctly escaped",
            "raw": "'String starting with ASCII letter and containing multiple underscores is correctly escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1121,
      "end": 1262,
      "expression": {
        "type": "CallExpression",
        "start": 1121,
        "end": 1261,
        "callee": {
          "type": "MemberExpression",
          "start": 1121,
          "end": 1137,
          "object": {
            "type": "Identifier",
            "start": 1121,
            "end": 1127,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1128,
            "end": 1137,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1138,
            "end": 1160,
            "callee": {
              "type": "MemberExpression",
              "start": 1138,
              "end": 1151,
              "object": {
                "type": "Identifier",
                "start": 1138,
                "end": 1144,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 1145,
                "end": 1151,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1152,
                "end": 1159,
                "value": "3_b_4",
                "raw": "'3_b_4'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1162,
            "end": 1173,
            "value": "\\x33_b_4",
            "raw": "'\\\\x33_b_4'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1175,
            "end": 1260,
            "value": "String starting with digit and containing multiple underscores is correctly escaped",
            "raw": "'String starting with digit and containing multiple underscores is correctly escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1263,
      "end": 1397,
      "expression": {
        "type": "CallExpression",
        "start": 1263,
        "end": 1396,
        "callee": {
          "type": "MemberExpression",
          "start": 1263,
          "end": 1279,
          "object": {
            "type": "Identifier",
            "start": 1263,
            "end": 1269,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1270,
            "end": 1279,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1280,
            "end": 1303,
            "callee": {
              "type": "MemberExpression",
              "start": 1280,
              "end": 1293,
              "object": {
                "type": "Identifier",
                "start": 1280,
                "end": 1286,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 1287,
                "end": 1293,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1294,
                "end": 1302,
                "value": "_hello",
                "raw": "'_hello'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1305,
            "end": 1313,
            "value": "_hello",
            "raw": "'_hello'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1315,
            "end": 1395,
            "value": "String starting with underscore and containing other characters is not escaped",
            "raw": "'String starting with underscore and containing other characters is not escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1398,
      "end": 1512,
      "expression": {
        "type": "CallExpression",
        "start": 1398,
        "end": 1511,
        "callee": {
          "type": "MemberExpression",
          "start": 1398,
          "end": 1414,
          "object": {
            "type": "Identifier",
            "start": 1398,
            "end": 1404,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1405,
            "end": 1414,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1415,
            "end": 1439,
            "callee": {
              "type": "MemberExpression",
              "start": 1415,
              "end": 1428,
              "object": {
                "type": "Identifier",
                "start": 1415,
                "end": 1421,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 1422,
                "end": 1428,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1429,
                "end": 1438,
                "value": "_1hello",
                "raw": "'_1hello'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1441,
            "end": 1450,
            "value": "_1hello",
            "raw": "'_1hello'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1452,
            "end": 1510,
            "value": "String starting with underscore and digit is not escaped",
            "raw": "'String starting with underscore and digit is not escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1513,
      "end": 1636,
      "expression": {
        "type": "CallExpression",
        "start": 1513,
        "end": 1635,
        "callee": {
          "type": "MemberExpression",
          "start": 1513,
          "end": 1529,
          "object": {
            "type": "Identifier",
            "start": 1513,
            "end": 1519,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1520,
            "end": 1529,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1530,
            "end": 1553,
            "callee": {
              "type": "MemberExpression",
              "start": 1530,
              "end": 1543,
              "object": {
                "type": "Identifier",
                "start": 1530,
                "end": 1536,
                "name": "RegExp"
              },
              "property": {
                "type": "Identifier",
                "start": 1537,
                "end": 1543,
                "name": "escape"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1544,
                "end": 1552,
                "value": "_a_1_2",
                "raw": "'_a_1_2'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1555,
            "end": 1563,
            "value": "_a_1_2",
            "raw": "'_a_1_2'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1565,
            "end": 1634,
            "value": "String starting with underscore and mixed characters is not escaped",
            "raw": "'String starting with underscore and mixed characters is not escaped'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}