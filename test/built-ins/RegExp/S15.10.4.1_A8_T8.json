{
  "type": "Program",
  "start": 0,
  "end": 663,
  "body": [
    {
      "type": "TryStatement",
      "start": 327,
      "end": 617,
      "block": {
        "type": "BlockStatement",
        "start": 331,
        "end": 523,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 337,
            "end": 521,
            "argument": {
              "type": "NewExpression",
              "start": 343,
              "end": 520,
              "callee": {
                "type": "Identifier",
                "start": 347,
                "end": 359,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 360,
                  "end": 519,
                  "left": {
                    "type": "Literal",
                    "start": 360,
                    "end": 454,
                    "value": "#1.1: new RegExp({toString:function(){throw \"intostr\";}}, \"error\") throw \"intostr\". Actual: ",
                    "raw": "'#1.1: new RegExp({toString:function(){throw \"intostr\";}}, \"error\") throw \"intostr\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 457,
                    "end": 519,
                    "expression": {
                      "type": "NewExpression",
                      "start": 458,
                      "end": 518,
                      "callee": {
                        "type": "Identifier",
                        "start": 462,
                        "end": 468,
                        "name": "RegExp"
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "start": 469,
                          "end": 508,
                          "properties": [
                            {
                              "type": "Property",
                              "start": 470,
                              "end": 507,
                              "method": false,
                              "shorthand": false,
                              "computed": false,
                              "key": {
                                "type": "Identifier",
                                "start": 470,
                                "end": 478,
                                "name": "toString"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "start": 479,
                                "end": 507,
                                "id": null,
                                "expression": false,
                                "generator": false,
                                "async": false,
                                "params": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "start": 489,
                                  "end": 507,
                                  "body": [
                                    {
                                      "type": "ThrowStatement",
                                      "start": 490,
                                      "end": 506,
                                      "argument": {
                                        "type": "Literal",
                                        "start": 496,
                                        "end": 505,
                                        "value": "intostr",
                                        "raw": "\"intostr\""
                                      }
                                    }
                                  ]
                                }
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        {
                          "type": "Literal",
                          "start": 510,
                          "end": 517,
                          "value": "error",
                          "raw": "\"error\""
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 524,
        "end": 617,
        "param": {
          "type": "Identifier",
          "start": 531,
          "end": 532,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 534,
          "end": 617,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 538,
              "end": 615,
              "expression": {
                "type": "CallExpression",
                "start": 538,
                "end": 614,
                "callee": {
                  "type": "MemberExpression",
                  "start": 538,
                  "end": 554,
                  "object": {
                    "type": "Identifier",
                    "start": 538,
                    "end": 544,
                    "name": "assert"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 545,
                    "end": 554,
                    "name": "sameValue"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 555,
                    "end": 556,
                    "name": "e"
                  },
                  {
                    "type": "Literal",
                    "start": 558,
                    "end": 567,
                    "value": "intostr",
                    "raw": "\"intostr\""
                  },
                  {
                    "type": "Literal",
                    "start": 569,
                    "end": 613,
                    "value": "The value of e is expected to be \"intostr\"",
                    "raw": "'The value of e is expected to be \"intostr\"'"
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}