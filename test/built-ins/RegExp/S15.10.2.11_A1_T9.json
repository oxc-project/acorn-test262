{
  "type": "Program",
  "start": 0,
  "end": 853,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 293,
      "end": 368,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 297,
          "end": 367,
          "id": {
            "type": "Identifier",
            "start": 297,
            "end": 300,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 303,
            "end": 367,
            "callee": {
              "type": "MemberExpression",
              "start": 303,
              "end": 352,
              "object": {
                "type": "Literal",
                "start": 303,
                "end": 347,
                "value": null,
                "raw": "/((((((((((A))))))))))\\10\\9\\8\\7\\6\\5\\4\\3\\2\\1/",
                "regex": {
                  "pattern": "((((((((((A))))))))))\\10\\9\\8\\7\\6\\5\\4\\3\\2\\1",
                  "flags": ""
                },
                "bigint": null
              },
              "property": {
                "type": "Identifier",
                "start": 348,
                "end": 352,
                "name": "exec"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 353,
                "end": 366,
                "value": "AAAAAAAAAAA",
                "raw": "\"AAAAAAAAAAA\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 370,
      "end": 595,
      "test": {
        "type": "LogicalExpression",
        "start": 374,
        "end": 418,
        "left": {
          "type": "ParenthesizedExpression",
          "start": 374,
          "end": 388,
          "expression": {
            "type": "BinaryExpression",
            "start": 375,
            "end": 387,
            "left": {
              "type": "Identifier",
              "start": 375,
              "end": 378,
              "name": "arr"
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 383,
              "end": 387,
              "value": null,
              "raw": "null",
              "regex": null,
              "bigint": null
            }
          }
        },
        "operator": "||",
        "right": {
          "type": "ParenthesizedExpression",
          "start": 392,
          "end": 418,
          "expression": {
            "type": "BinaryExpression",
            "start": 393,
            "end": 417,
            "left": {
              "type": "MemberExpression",
              "start": 393,
              "end": 399,
              "object": {
                "type": "Identifier",
                "start": 393,
                "end": 396,
                "name": "arr"
              },
              "property": {
                "type": "Literal",
                "start": 397,
                "end": 398,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              "computed": true,
              "optional": false
            },
            "operator": "!==",
            "right": {
              "type": "Literal",
              "start": 404,
              "end": 417,
              "value": "AAAAAAAAAAA",
              "raw": "\"AAAAAAAAAAA\"",
              "regex": null,
              "bigint": null
            }
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 420,
        "end": 595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 424,
            "end": 593,
            "argument": {
              "type": "NewExpression",
              "start": 430,
              "end": 592,
              "callee": {
                "type": "Identifier",
                "start": 434,
                "end": 446,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 447,
                  "end": 591,
                  "left": {
                    "type": "Literal",
                    "start": 447,
                    "end": 573,
                    "value": "#1: var arr = /((((((((((A))))))))))\\10\\9\\8\\7\\6\\5\\4\\3\\2\\1/.exec(\"AAAAAAAAAAA\"); arr[0] === \"AAAAAAAAAAA\". Actual. ",
                    "raw": "'#1: var arr = /((((((((((A))))))))))\\\\10\\\\9\\\\8\\\\7\\\\6\\\\5\\\\4\\\\3\\\\2\\\\1/.exec(\"AAAAAAAAAAA\"); arr[0] === \"AAAAAAAAAAA\". Actual. '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 576,
                    "end": 591,
                    "expression": {
                      "type": "LogicalExpression",
                      "start": 577,
                      "end": 590,
                      "left": {
                        "type": "Identifier",
                        "start": 577,
                        "end": 580,
                        "name": "arr"
                      },
                      "operator": "&&",
                      "right": {
                        "type": "MemberExpression",
                        "start": 584,
                        "end": 590,
                        "object": {
                          "type": "Identifier",
                          "start": 584,
                          "end": 587,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Literal",
                          "start": 588,
                          "end": 589,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        },
                        "computed": true,
                        "optional": false
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ForStatement",
      "start": 597,
      "end": 852,
      "init": {
        "type": "VariableDeclaration",
        "start": 602,
        "end": 611,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 606,
            "end": 611,
            "id": {
              "type": "Identifier",
              "start": 606,
              "end": 607,
              "name": "i"
            },
            "init": {
              "type": "Literal",
              "start": 610,
              "end": 611,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 613,
        "end": 620,
        "left": {
          "type": "Identifier",
          "start": 613,
          "end": 614,
          "name": "i"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 618,
          "end": 620,
          "value": 10,
          "raw": "10",
          "regex": null,
          "bigint": null
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 622,
        "end": 625,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 622,
          "end": 623,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 627,
        "end": 852,
        "body": [
          {
            "type": "IfStatement",
            "start": 633,
            "end": 850,
            "test": {
              "type": "LogicalExpression",
              "start": 637,
              "end": 671,
              "left": {
                "type": "ParenthesizedExpression",
                "start": 637,
                "end": 651,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 638,
                  "end": 650,
                  "left": {
                    "type": "Identifier",
                    "start": 638,
                    "end": 641,
                    "name": "arr"
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 646,
                    "end": 650,
                    "value": null,
                    "raw": "null",
                    "regex": null,
                    "bigint": null
                  }
                }
              },
              "operator": "||",
              "right": {
                "type": "ParenthesizedExpression",
                "start": 655,
                "end": 671,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 656,
                  "end": 670,
                  "left": {
                    "type": "MemberExpression",
                    "start": 656,
                    "end": 662,
                    "object": {
                      "type": "Identifier",
                      "start": 656,
                      "end": 659,
                      "name": "arr"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 660,
                      "end": 661,
                      "name": "i"
                    },
                    "computed": true,
                    "optional": false
                  },
                  "operator": "!==",
                  "right": {
                    "type": "Literal",
                    "start": 667,
                    "end": 670,
                    "value": "A",
                    "raw": "\"A\"",
                    "regex": null,
                    "bigint": null
                  }
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 673,
              "end": 850,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 679,
                  "end": 846,
                  "argument": {
                    "type": "NewExpression",
                    "start": 685,
                    "end": 845,
                    "callee": {
                      "type": "Identifier",
                      "start": 689,
                      "end": 701,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 702,
                        "end": 844,
                        "left": {
                          "type": "BinaryExpression",
                          "start": 702,
                          "end": 826,
                          "left": {
                            "type": "BinaryExpression",
                            "start": 702,
                            "end": 802,
                            "left": {
                              "type": "Literal",
                              "start": 702,
                              "end": 798,
                              "value": "#2: var arr = /((((((((((A))))))))))\\10\\9\\8\\7\\6\\5\\4\\3\\2\\1/.exec(\"AAAAAAAAAAA\"); arr[",
                              "raw": "'#2: var arr = /((((((((((A))))))))))\\\\10\\\\9\\\\8\\\\7\\\\6\\\\5\\\\4\\\\3\\\\2\\\\1/.exec(\"AAAAAAAAAAA\"); arr['",
                              "regex": null,
                              "bigint": null
                            },
                            "operator": "+",
                            "right": {
                              "type": "Identifier",
                              "start": 801,
                              "end": 802,
                              "name": "i"
                            }
                          },
                          "operator": "+",
                          "right": {
                            "type": "Literal",
                            "start": 805,
                            "end": 826,
                            "value": "] === \"A\". Actual. ",
                            "raw": "'] === \"A\". Actual. '",
                            "regex": null,
                            "bigint": null
                          }
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 829,
                          "end": 844,
                          "expression": {
                            "type": "LogicalExpression",
                            "start": 830,
                            "end": 843,
                            "left": {
                              "type": "Identifier",
                              "start": 830,
                              "end": 833,
                              "name": "arr"
                            },
                            "operator": "&&",
                            "right": {
                              "type": "MemberExpression",
                              "start": 837,
                              "end": 843,
                              "object": {
                                "type": "Identifier",
                                "start": 837,
                                "end": 840,
                                "name": "arr"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 841,
                                "end": 842,
                                "name": "i"
                              },
                              "computed": true,
                              "optional": false
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}