{
  "type": "Program",
  "start": 0,
  "end": 1280,
  "body": [
    {
      "type": "ForInStatement",
      "start": 298,
      "end": 1279,
      "left": {
        "type": "VariableDeclaration",
        "start": 303,
        "end": 308,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 307,
            "end": 308,
            "id": {
              "type": "Identifier",
              "start": 307,
              "end": 308,
              "name": "x"
            },
            "init": null
          }
        ],
        "kind": "var"
      },
      "right": {
        "type": "ThisExpression",
        "start": 312,
        "end": 316
      },
      "body": {
        "type": "BlockStatement",
        "start": 318,
        "end": 1279,
        "body": [
          {
            "type": "IfStatement",
            "start": 322,
            "end": 1277,
            "test": {
              "type": "BinaryExpression",
              "start": 326,
              "end": 338,
              "left": {
                "type": "Identifier",
                "start": 326,
                "end": 327,
                "name": "x"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 332,
                "end": 338,
                "value": "eval",
                "raw": "'eval'"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 340,
              "end": 411,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 346,
                  "end": 407,
                  "argument": {
                    "type": "NewExpression",
                    "start": 352,
                    "end": 406,
                    "callee": {
                      "type": "Identifier",
                      "start": 356,
                      "end": 368,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 369,
                        "end": 405,
                        "value": "#1: 'eval' have attribute DontEnum",
                        "raw": "\"#1: 'eval' have attribute DontEnum\""
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "IfStatement",
              "start": 417,
              "end": 1277,
              "test": {
                "type": "BinaryExpression",
                "start": 421,
                "end": 437,
                "left": {
                  "type": "Identifier",
                  "start": 421,
                  "end": 422,
                  "name": "x"
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "start": 427,
                  "end": 437,
                  "value": "parseInt",
                  "raw": "'parseInt'"
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 439,
                "end": 514,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 445,
                    "end": 510,
                    "argument": {
                      "type": "NewExpression",
                      "start": 451,
                      "end": 509,
                      "callee": {
                        "type": "Identifier",
                        "start": 455,
                        "end": 467,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 468,
                          "end": 508,
                          "value": "#1: 'parseInt' have attribute DontEnum",
                          "raw": "\"#1: 'parseInt' have attribute DontEnum\""
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": {
                "type": "IfStatement",
                "start": 520,
                "end": 1277,
                "test": {
                  "type": "BinaryExpression",
                  "start": 524,
                  "end": 542,
                  "left": {
                    "type": "Identifier",
                    "start": 524,
                    "end": 525,
                    "name": "x"
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 530,
                    "end": 542,
                    "value": "parseFloat",
                    "raw": "'parseFloat'"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 544,
                  "end": 621,
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 550,
                      "end": 617,
                      "argument": {
                        "type": "NewExpression",
                        "start": 556,
                        "end": 616,
                        "callee": {
                          "type": "Identifier",
                          "start": 560,
                          "end": 572,
                          "name": "Test262Error"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 573,
                            "end": 615,
                            "value": "#1: 'parseFloat' have attribute DontEnum",
                            "raw": "\"#1: 'parseFloat' have attribute DontEnum\""
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "IfStatement",
                  "start": 627,
                  "end": 1277,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 631,
                    "end": 644,
                    "left": {
                      "type": "Identifier",
                      "start": 631,
                      "end": 632,
                      "name": "x"
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 637,
                      "end": 644,
                      "value": "isNaN",
                      "raw": "'isNaN'"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "start": 646,
                    "end": 718,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 652,
                        "end": 714,
                        "argument": {
                          "type": "NewExpression",
                          "start": 658,
                          "end": 713,
                          "callee": {
                            "type": "Identifier",
                            "start": 662,
                            "end": 674,
                            "name": "Test262Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "start": 675,
                              "end": 712,
                              "value": "#1: 'isNaN' have attribute DontEnum",
                              "raw": "\"#1: 'isNaN' have attribute DontEnum\""
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "IfStatement",
                    "start": 724,
                    "end": 1277,
                    "test": {
                      "type": "BinaryExpression",
                      "start": 728,
                      "end": 744,
                      "left": {
                        "type": "Identifier",
                        "start": 728,
                        "end": 729,
                        "name": "x"
                      },
                      "operator": "===",
                      "right": {
                        "type": "Literal",
                        "start": 734,
                        "end": 744,
                        "value": "isFinite",
                        "raw": "'isFinite'"
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "start": 746,
                      "end": 821,
                      "body": [
                        {
                          "type": "ThrowStatement",
                          "start": 752,
                          "end": 817,
                          "argument": {
                            "type": "NewExpression",
                            "start": 758,
                            "end": 816,
                            "callee": {
                              "type": "Identifier",
                              "start": 762,
                              "end": 774,
                              "name": "Test262Error"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "start": 775,
                                "end": 815,
                                "value": "#1: 'isFinite' have attribute DontEnum",
                                "raw": "\"#1: 'isFinite' have attribute DontEnum\""
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "alternate": {
                      "type": "IfStatement",
                      "start": 827,
                      "end": 1277,
                      "test": {
                        "type": "BinaryExpression",
                        "start": 831,
                        "end": 848,
                        "left": {
                          "type": "Identifier",
                          "start": 831,
                          "end": 832,
                          "name": "x"
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "start": 837,
                          "end": 848,
                          "value": "decodeURI",
                          "raw": "'decodeURI'"
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "start": 850,
                        "end": 926,
                        "body": [
                          {
                            "type": "ThrowStatement",
                            "start": 856,
                            "end": 922,
                            "argument": {
                              "type": "NewExpression",
                              "start": 862,
                              "end": 921,
                              "callee": {
                                "type": "Identifier",
                                "start": 866,
                                "end": 878,
                                "name": "Test262Error"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "start": 879,
                                  "end": 920,
                                  "value": "#1: 'decodeURI' have attribute DontEnum",
                                  "raw": "\"#1: 'decodeURI' have attribute DontEnum\""
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "IfStatement",
                        "start": 932,
                        "end": 1277,
                        "test": {
                          "type": "BinaryExpression",
                          "start": 936,
                          "end": 962,
                          "left": {
                            "type": "Identifier",
                            "start": 936,
                            "end": 937,
                            "name": "x"
                          },
                          "operator": "===",
                          "right": {
                            "type": "Literal",
                            "start": 942,
                            "end": 962,
                            "value": "decodeURIComponent",
                            "raw": "'decodeURIComponent'"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "start": 964,
                          "end": 1049,
                          "body": [
                            {
                              "type": "ThrowStatement",
                              "start": 970,
                              "end": 1045,
                              "argument": {
                                "type": "NewExpression",
                                "start": 976,
                                "end": 1044,
                                "callee": {
                                  "type": "Identifier",
                                  "start": 980,
                                  "end": 992,
                                  "name": "Test262Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "start": 993,
                                    "end": 1043,
                                    "value": "#1: 'decodeURIComponent' have attribute DontEnum",
                                    "raw": "\"#1: 'decodeURIComponent' have attribute DontEnum\""
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "IfStatement",
                          "start": 1055,
                          "end": 1277,
                          "test": {
                            "type": "BinaryExpression",
                            "start": 1059,
                            "end": 1076,
                            "left": {
                              "type": "Identifier",
                              "start": 1059,
                              "end": 1060,
                              "name": "x"
                            },
                            "operator": "===",
                            "right": {
                              "type": "Literal",
                              "start": 1065,
                              "end": 1076,
                              "value": "encodeURI",
                              "raw": "'encodeURI'"
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "start": 1078,
                            "end": 1154,
                            "body": [
                              {
                                "type": "ThrowStatement",
                                "start": 1084,
                                "end": 1150,
                                "argument": {
                                  "type": "NewExpression",
                                  "start": 1090,
                                  "end": 1149,
                                  "callee": {
                                    "type": "Identifier",
                                    "start": 1094,
                                    "end": 1106,
                                    "name": "Test262Error"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "start": 1107,
                                      "end": 1148,
                                      "value": "#1: 'encodeURI' have attribute DontEnum",
                                      "raw": "\"#1: 'encodeURI' have attribute DontEnum\""
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "alternate": {
                            "type": "IfStatement",
                            "start": 1160,
                            "end": 1277,
                            "test": {
                              "type": "BinaryExpression",
                              "start": 1164,
                              "end": 1190,
                              "left": {
                                "type": "Identifier",
                                "start": 1164,
                                "end": 1165,
                                "name": "x"
                              },
                              "operator": "===",
                              "right": {
                                "type": "Literal",
                                "start": 1170,
                                "end": 1190,
                                "value": "encodeURIComponent",
                                "raw": "'encodeURIComponent'"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "start": 1192,
                              "end": 1277,
                              "body": [
                                {
                                  "type": "ThrowStatement",
                                  "start": 1198,
                                  "end": 1273,
                                  "argument": {
                                    "type": "NewExpression",
                                    "start": 1204,
                                    "end": 1272,
                                    "callee": {
                                      "type": "Identifier",
                                      "start": 1208,
                                      "end": 1220,
                                      "name": "Test262Error"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "start": 1221,
                                        "end": 1271,
                                        "value": "#1: 'encodeURIComponent' have attribute DontEnum",
                                        "raw": "\"#1: 'encodeURIComponent' have attribute DontEnum\""
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}