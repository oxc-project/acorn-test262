{
  "type": "Program",
  "start": 0,
  "end": 595,
  "body": [
    {
      "type": "IfStatement",
      "start": 347,
      "end": 414,
      "test": {
        "type": "BinaryExpression",
        "start": 351,
        "end": 363,
        "left": {
          "type": "Identifier",
          "start": 351,
          "end": 354,
          "name": "NaN"
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 359,
          "end": 363,
          "value": null,
          "raw": "null"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 365,
        "end": 414,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 369,
            "end": 412,
            "argument": {
              "type": "NewExpression",
              "start": 375,
              "end": 411,
              "callee": {
                "type": "Identifier",
                "start": 379,
                "end": 391,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 392,
                  "end": 410,
                  "value": "#1: NaN === null",
                  "raw": "\"#1: NaN === null\""
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 426,
      "end": 503,
      "test": {
        "type": "BinaryExpression",
        "start": 430,
        "end": 447,
        "left": {
          "type": "Identifier",
          "start": 430,
          "end": 438,
          "name": "Infinity"
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 443,
          "end": 447,
          "value": null,
          "raw": "null"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 449,
        "end": 503,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 453,
            "end": 501,
            "argument": {
              "type": "NewExpression",
              "start": 459,
              "end": 500,
              "callee": {
                "type": "Identifier",
                "start": 463,
                "end": 475,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 476,
                  "end": 499,
                  "value": "#2: Infinity === null",
                  "raw": "\"#2: Infinity === null\""
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 515,
      "end": 594,
      "test": {
        "type": "BinaryExpression",
        "start": 519,
        "end": 537,
        "left": {
          "type": "Identifier",
          "start": 519,
          "end": 528,
          "name": "undefined"
        },
        "operator": "===",
        "right": {
          "type": "Literal",
          "start": 533,
          "end": 537,
          "value": null,
          "raw": "null"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 539,
        "end": 594,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 543,
            "end": 592,
            "argument": {
              "type": "NewExpression",
              "start": 549,
              "end": 591,
              "callee": {
                "type": "Identifier",
                "start": 553,
                "end": 565,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 566,
                  "end": 590,
                  "value": "#3: undefined === null",
                  "raw": "\"#3: undefined === null\""
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}