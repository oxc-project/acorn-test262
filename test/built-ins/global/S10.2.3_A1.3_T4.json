{
  "type": "Program",
  "start": 0,
  "end": 476,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 335,
      "end": 459,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 339,
          "end": 458,
          "id": {
            "type": "Identifier",
            "start": 339,
            "end": 346,
            "name": "evalStr"
          },
          "init": {
            "type": "BinaryExpression",
            "start": 349,
            "end": 458,
            "left": {
              "type": "BinaryExpression",
              "start": 349,
              "end": 451,
              "left": {
                "type": "BinaryExpression",
                "start": 349,
                "end": 444,
                "left": {
                  "type": "BinaryExpression",
                  "start": 349,
                  "end": 391,
                  "left": {
                    "type": "Literal",
                    "start": 349,
                    "end": 363,
                    "value": "//CHECK#27\n",
                    "raw": "'//CHECK#27\\n'",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 365,
                    "end": 391,
                    "value": "if ( Math === null ) {\n",
                    "raw": "'if ( Math === null ) {\\n'",
                    "regex": null,
                    "bigint": null
                  }
                },
                "operator": "+",
                "right": {
                  "type": "Literal",
                  "start": 393,
                  "end": 444,
                  "value": "  throw new Test262Error(\"#27: Math === null\");\n",
                  "raw": "'  throw new Test262Error(\"#27: Math === null\");\\n'",
                  "regex": null,
                  "bigint": null
                }
              },
              "operator": "+",
              "right": {
                "type": "Literal",
                "start": 446,
                "end": 451,
                "value": "}\n",
                "raw": "'}\\n'",
                "regex": null,
                "bigint": null
              }
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 453,
              "end": 458,
              "value": ";\n",
              "raw": "';\\n'",
              "regex": null,
              "bigint": null
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 461,
      "end": 475,
      "expression": {
        "type": "CallExpression",
        "start": 461,
        "end": 474,
        "callee": {
          "type": "Identifier",
          "start": 461,
          "end": 465,
          "name": "eval"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 466,
            "end": 473,
            "name": "evalStr"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}