{
  "type": "Program",
  "start": 0,
  "end": 617,
  "body": [
    {
      "type": "ForInStatement",
      "start": 295,
      "end": 616,
      "left": {
        "type": "VariableDeclaration",
        "start": 300,
        "end": 305,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 304,
            "end": 305,
            "id": {
              "type": "Identifier",
              "start": 304,
              "end": 305,
              "name": "x"
            },
            "init": null
          }
        ],
        "kind": "var"
      },
      "right": {
        "type": "ThisExpression",
        "start": 309,
        "end": 313
      },
      "body": {
        "type": "BlockStatement",
        "start": 315,
        "end": 616,
        "body": [
          {
            "type": "IfStatement",
            "start": 319,
            "end": 614,
            "test": {
              "type": "BinaryExpression",
              "start": 323,
              "end": 334,
              "left": {
                "type": "Identifier",
                "start": 323,
                "end": 324,
                "name": "x"
              },
              "operator": "===",
              "right": {
                "type": "Literal",
                "start": 329,
                "end": 334,
                "value": "NaN",
                "raw": "'NaN'",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 336,
              "end": 406,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 342,
                  "end": 402,
                  "argument": {
                    "type": "NewExpression",
                    "start": 348,
                    "end": 401,
                    "callee": {
                      "type": "Identifier",
                      "start": 352,
                      "end": 364,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 365,
                        "end": 400,
                        "value": "#1: 'NaN' have attribute DontEnum",
                        "raw": "\"#1: 'NaN' have attribute DontEnum\"",
                        "regex": null,
                        "bigint": null
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "IfStatement",
              "start": 412,
              "end": 614,
              "test": {
                "type": "BinaryExpression",
                "start": 416,
                "end": 432,
                "left": {
                  "type": "Identifier",
                  "start": 416,
                  "end": 417,
                  "name": "x"
                },
                "operator": "===",
                "right": {
                  "type": "Literal",
                  "start": 422,
                  "end": 432,
                  "value": "Infinity",
                  "raw": "'Infinity'",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 434,
                "end": 509,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 440,
                    "end": 505,
                    "argument": {
                      "type": "NewExpression",
                      "start": 446,
                      "end": 504,
                      "callee": {
                        "type": "Identifier",
                        "start": 450,
                        "end": 462,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 463,
                          "end": 503,
                          "value": "#1: 'Infinity' have attribute DontEnum",
                          "raw": "\"#1: 'Infinity' have attribute DontEnum\"",
                          "regex": null,
                          "bigint": null
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": {
                "type": "IfStatement",
                "start": 515,
                "end": 614,
                "test": {
                  "type": "BinaryExpression",
                  "start": 519,
                  "end": 536,
                  "left": {
                    "type": "Identifier",
                    "start": 519,
                    "end": 520,
                    "name": "x"
                  },
                  "operator": "===",
                  "right": {
                    "type": "Literal",
                    "start": 525,
                    "end": 536,
                    "value": "undefined",
                    "raw": "'undefined'",
                    "regex": null,
                    "bigint": null
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 538,
                  "end": 614,
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 544,
                      "end": 610,
                      "argument": {
                        "type": "NewExpression",
                        "start": 550,
                        "end": 609,
                        "callee": {
                          "type": "Identifier",
                          "start": 554,
                          "end": 566,
                          "name": "Test262Error"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 567,
                            "end": 608,
                            "value": "#1: 'undefined' have attribute DontEnum",
                            "raw": "\"#1: 'undefined' have attribute DontEnum\"",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              }
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}