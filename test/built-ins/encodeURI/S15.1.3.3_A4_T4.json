{
  "type": "Program",
  "start": 0,
  "end": 941,
  "body": [
    {
      "type": "IfStatement",
      "start": 223,
      "end": 288,
      "test": {
        "type": "BinaryExpression",
        "start": 227,
        "end": 247,
        "left": {
          "type": "CallExpression",
          "start": 227,
          "end": 240,
          "callee": {
            "type": "Identifier",
            "start": 227,
            "end": 236,
            "name": "encodeURI"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 237,
              "end": 239,
              "value": "",
              "raw": "\"\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 245,
          "end": 247,
          "value": "",
          "raw": "\"\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 249,
        "end": 288,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 253,
            "end": 286,
            "argument": {
              "type": "NewExpression",
              "start": 259,
              "end": 285,
              "callee": {
                "type": "Identifier",
                "start": 263,
                "end": 275,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 276,
                  "end": 284,
                  "value": "#1: \"\"",
                  "raw": "'#1: \"\"'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 300,
      "end": 411,
      "test": {
        "type": "BinaryExpression",
        "start": 304,
        "end": 356,
        "left": {
          "type": "CallExpression",
          "start": 304,
          "end": 333,
          "callee": {
            "type": "Identifier",
            "start": 304,
            "end": 313,
            "name": "encodeURI"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 314,
              "end": 332,
              "value": "http://unipro.ru",
              "raw": "\"http://unipro.ru\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 338,
          "end": 356,
          "value": "http://unipro.ru",
          "raw": "\"http://unipro.ru\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 358,
        "end": 411,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 362,
            "end": 409,
            "argument": {
              "type": "NewExpression",
              "start": 368,
              "end": 408,
              "callee": {
                "type": "Identifier",
                "start": 372,
                "end": 384,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 385,
                  "end": 407,
                  "value": "#2: http://unipro.ru",
                  "raw": "'#2: http://unipro.ru'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 423,
      "end": 727,
      "test": {
        "type": "BinaryExpression",
        "start": 427,
        "end": 607,
        "left": {
          "type": "CallExpression",
          "start": 427,
          "end": 520,
          "callee": {
            "type": "Identifier",
            "start": 427,
            "end": 436,
            "name": "encodeURI"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 437,
              "end": 519,
              "value": "http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork",
              "raw": "\"http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 525,
          "end": 607,
          "value": "http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork",
          "raw": "\"http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 609,
        "end": 727,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 613,
            "end": 725,
            "argument": {
              "type": "NewExpression",
              "start": 619,
              "end": 724,
              "callee": {
                "type": "Identifier",
                "start": 623,
                "end": 635,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 636,
                  "end": 723,
                  "value": "#3: http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork\"",
                  "raw": "'#3: http://www.google.ru/support/jobs/bin/static.py?page=why-ru.html&sid=liveandwork\"'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 739,
      "end": 940,
      "test": {
        "type": "BinaryExpression",
        "start": 743,
        "end": 855,
        "left": {
          "type": "CallExpression",
          "start": 743,
          "end": 802,
          "callee": {
            "type": "Identifier",
            "start": 743,
            "end": 752,
            "name": "encodeURI"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 753,
              "end": 801,
              "value": "http://en.wikipedia.org/wiki/UTF-8#Description",
              "raw": "\"http://en.wikipedia.org/wiki/UTF-8#Description\"",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 807,
          "end": 855,
          "value": "http://en.wikipedia.org/wiki/UTF-8#Description",
          "raw": "\"http://en.wikipedia.org/wiki/UTF-8#Description\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 857,
        "end": 940,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 861,
            "end": 938,
            "argument": {
              "type": "NewExpression",
              "start": 867,
              "end": 937,
              "callee": {
                "type": "Identifier",
                "start": 871,
                "end": 883,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 884,
                  "end": 936,
                  "value": "#4: http://en.wikipedia.org/wiki/UTF-8#Description",
                  "raw": "'#4: http://en.wikipedia.org/wiki/UTF-8#Description'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}