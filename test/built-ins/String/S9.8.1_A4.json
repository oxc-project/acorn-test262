{
  "type": "Program",
  "start": 0,
  "end": 983,
  "body": [
    {
      "type": "IfStatement",
      "start": 296,
      "end": 432,
      "test": {
        "type": "BinaryExpression",
        "start": 300,
        "end": 331,
        "left": {
          "type": "CallExpression",
          "start": 300,
          "end": 316,
          "callee": {
            "type": "Identifier",
            "start": 300,
            "end": 306,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Identifier",
              "start": 307,
              "end": 315,
              "name": "Infinity"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 321,
          "end": 331,
          "value": "Infinity",
          "raw": "\"Infinity\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 333,
        "end": 432,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 337,
            "end": 430,
            "argument": {
              "type": "NewExpression",
              "start": 343,
              "end": 429,
              "callee": {
                "type": "Identifier",
                "start": 347,
                "end": 359,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 360,
                  "end": 428,
                  "left": {
                    "type": "Literal",
                    "start": 360,
                    "end": 407,
                    "value": "#1: String(Infinity) === \"Infinity\". Actual: ",
                    "raw": "'#1: String(Infinity) === \"Infinity\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 410,
                    "end": 428,
                    "expression": {
                      "type": "CallExpression",
                      "start": 411,
                      "end": 427,
                      "callee": {
                        "type": "Identifier",
                        "start": 411,
                        "end": 417,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 418,
                          "end": 426,
                          "name": "Infinity"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 445,
      "end": 629,
      "test": {
        "type": "BinaryExpression",
        "start": 449,
        "end": 496,
        "left": {
          "type": "CallExpression",
          "start": 449,
          "end": 481,
          "callee": {
            "type": "Identifier",
            "start": 449,
            "end": 455,
            "name": "String"
          },
          "arguments": [
            {
              "type": "MemberExpression",
              "start": 456,
              "end": 480,
              "object": {
                "type": "Identifier",
                "start": 456,
                "end": 462,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 463,
                "end": 480,
                "name": "POSITIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 486,
          "end": 496,
          "value": "Infinity",
          "raw": "\"Infinity\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 498,
        "end": 629,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 502,
            "end": 627,
            "argument": {
              "type": "NewExpression",
              "start": 508,
              "end": 626,
              "callee": {
                "type": "Identifier",
                "start": 512,
                "end": 524,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 525,
                  "end": 625,
                  "left": {
                    "type": "Literal",
                    "start": 525,
                    "end": 588,
                    "value": "#2: String(Number.POSITIVE_INFINITY) === \"Infinity\". Actual: ",
                    "raw": "'#2: String(Number.POSITIVE_INFINITY) === \"Infinity\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 591,
                    "end": 625,
                    "expression": {
                      "type": "CallExpression",
                      "start": 592,
                      "end": 624,
                      "callee": {
                        "type": "Identifier",
                        "start": 592,
                        "end": 598,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "start": 599,
                          "end": 623,
                          "object": {
                            "type": "Identifier",
                            "start": 599,
                            "end": 605,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 606,
                            "end": 623,
                            "name": "POSITIVE_INFINITY"
                          },
                          "computed": false,
                          "optional": false
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 642,
      "end": 783,
      "test": {
        "type": "BinaryExpression",
        "start": 646,
        "end": 679,
        "left": {
          "type": "CallExpression",
          "start": 646,
          "end": 663,
          "callee": {
            "type": "Identifier",
            "start": 646,
            "end": 652,
            "name": "String"
          },
          "arguments": [
            {
              "type": "UnaryExpression",
              "start": 653,
              "end": 662,
              "operator": "-",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "start": 654,
                "end": 662,
                "name": "Infinity"
              }
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 668,
          "end": 679,
          "value": "-Infinity",
          "raw": "\"-Infinity\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 681,
        "end": 783,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 685,
            "end": 781,
            "argument": {
              "type": "NewExpression",
              "start": 691,
              "end": 780,
              "callee": {
                "type": "Identifier",
                "start": 695,
                "end": 707,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 708,
                  "end": 779,
                  "left": {
                    "type": "Literal",
                    "start": 708,
                    "end": 757,
                    "value": "#3: String(-Infinity) === \"-Infinity\". Actual: ",
                    "raw": "'#3: String(-Infinity) === \"-Infinity\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 760,
                    "end": 779,
                    "expression": {
                      "type": "CallExpression",
                      "start": 761,
                      "end": 778,
                      "callee": {
                        "type": "Identifier",
                        "start": 761,
                        "end": 767,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "UnaryExpression",
                          "start": 768,
                          "end": 777,
                          "operator": "-",
                          "prefix": true,
                          "argument": {
                            "type": "Identifier",
                            "start": 769,
                            "end": 777,
                            "name": "Infinity"
                          }
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 796,
      "end": 982,
      "test": {
        "type": "BinaryExpression",
        "start": 800,
        "end": 848,
        "left": {
          "type": "CallExpression",
          "start": 800,
          "end": 832,
          "callee": {
            "type": "Identifier",
            "start": 800,
            "end": 806,
            "name": "String"
          },
          "arguments": [
            {
              "type": "MemberExpression",
              "start": 807,
              "end": 831,
              "object": {
                "type": "Identifier",
                "start": 807,
                "end": 813,
                "name": "Number"
              },
              "property": {
                "type": "Identifier",
                "start": 814,
                "end": 831,
                "name": "NEGATIVE_INFINITY"
              },
              "computed": false,
              "optional": false
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 837,
          "end": 848,
          "value": "-Infinity",
          "raw": "\"-Infinity\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 850,
        "end": 982,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 854,
            "end": 980,
            "argument": {
              "type": "NewExpression",
              "start": 860,
              "end": 979,
              "callee": {
                "type": "Identifier",
                "start": 864,
                "end": 876,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 877,
                  "end": 978,
                  "left": {
                    "type": "Literal",
                    "start": 877,
                    "end": 941,
                    "value": "#4: String(Number.NEGATIVE_INFINITY) === \"-Infinity\". Actual: ",
                    "raw": "'#4: String(Number.NEGATIVE_INFINITY) === \"-Infinity\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 944,
                    "end": 978,
                    "expression": {
                      "type": "CallExpression",
                      "start": 945,
                      "end": 977,
                      "callee": {
                        "type": "Identifier",
                        "start": 945,
                        "end": 951,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "start": 952,
                          "end": 976,
                          "object": {
                            "type": "Identifier",
                            "start": 952,
                            "end": 958,
                            "name": "Number"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 959,
                            "end": 976,
                            "name": "NEGATIVE_INFINITY"
                          },
                          "computed": false,
                          "optional": false
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}