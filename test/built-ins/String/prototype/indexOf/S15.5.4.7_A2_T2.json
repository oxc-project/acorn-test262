{
  "type": "Program",
  "start": 0,
  "end": 632,
  "body": [
    {
      "type": "IfStatement",
      "start": 399,
      "end": 549,
      "test": {
        "type": "BinaryExpression",
        "start": 403,
        "end": 437,
        "left": {
          "type": "CallExpression",
          "start": 403,
          "end": 430,
          "callee": {
            "type": "MemberExpression",
            "start": 403,
            "end": 417,
            "object": {
              "type": "Literal",
              "start": 403,
              "end": 409,
              "value": "abcd",
              "raw": "\"abcd\"",
              "regex": null,
              "bigint": null
            },
            "property": {
              "type": "Identifier",
              "start": 410,
              "end": 417,
              "name": "indexOf"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 418,
              "end": 426,
              "value": "abcdab",
              "raw": "\"abcdab\"",
              "regex": null,
              "bigint": null
            },
            {
              "type": "Literal",
              "start": 428,
              "end": 429,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "UnaryExpression",
          "start": 435,
          "end": 437,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 436,
            "end": 437,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 439,
        "end": 549,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 443,
            "end": 547,
            "argument": {
              "type": "NewExpression",
              "start": 449,
              "end": 546,
              "callee": {
                "type": "Identifier",
                "start": 453,
                "end": 465,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 466,
                  "end": 545,
                  "left": {
                    "type": "Literal",
                    "start": 466,
                    "end": 513,
                    "value": "#1: \"abcd\".indexOf(\"abcdab\",0)===-1. Actual: ",
                    "raw": "'#1: \"abcd\".indexOf(\"abcdab\",0)===-1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 516,
                    "end": 545,
                    "expression": {
                      "type": "CallExpression",
                      "start": 517,
                      "end": 544,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 517,
                        "end": 531,
                        "object": {
                          "type": "Literal",
                          "start": 517,
                          "end": 523,
                          "value": "abcd",
                          "raw": "\"abcd\"",
                          "regex": null,
                          "bigint": null
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 524,
                          "end": 531,
                          "name": "indexOf"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 532,
                          "end": 540,
                          "value": "abcdab",
                          "raw": "\"abcdab\"",
                          "regex": null,
                          "bigint": null
                        },
                        {
                          "type": "Literal",
                          "start": 542,
                          "end": 543,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}