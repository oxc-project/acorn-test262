{
  "type": "Program",
  "start": 0,
  "end": 624,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 289,
      "end": 341,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 293,
          "end": 340,
          "id": {
            "type": "Identifier",
            "start": 293,
            "end": 311,
            "name": "lineTerminatorsStr"
          },
          "init": {
            "type": "Literal",
            "start": 314,
            "end": 340,
            "value": "\n\r  ",
            "raw": "\"\\u000A\\u000D\\u2028\\u2029\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 342,
      "end": 516,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 346,
          "end": 515,
          "id": {
            "type": "Identifier",
            "start": 346,
            "end": 360,
            "name": "whiteSpacesStr"
          },
          "init": {
            "type": "Literal",
            "start": 363,
            "end": 515,
            "value": "\t\n\u000b\f\r                  　﻿",
            "raw": "\"\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 517,
      "end": 571,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 521,
          "end": 570,
          "id": {
            "type": "Identifier",
            "start": 521,
            "end": 524,
            "name": "str"
          },
          "init": {
            "type": "BinaryExpression",
            "start": 527,
            "end": 570,
            "left": {
              "type": "BinaryExpression",
              "start": 527,
              "end": 549,
              "left": {
                "type": "Literal",
                "start": 527,
                "end": 532,
                "value": "abc",
                "raw": "\"abc\"",
                "regex": null,
                "bigint": null
              },
              "operator": "+",
              "right": {
                "type": "Identifier",
                "start": 535,
                "end": 549,
                "name": "whiteSpacesStr"
              }
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "start": 552,
              "end": 570,
              "name": "lineTerminatorsStr"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 573,
      "end": 623,
      "expression": {
        "type": "CallExpression",
        "start": 573,
        "end": 622,
        "callee": {
          "type": "MemberExpression",
          "start": 573,
          "end": 589,
          "object": {
            "type": "Identifier",
            "start": 573,
            "end": 579,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 580,
            "end": 589,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 590,
            "end": 600,
            "callee": {
              "type": "MemberExpression",
              "start": 590,
              "end": 598,
              "object": {
                "type": "Identifier",
                "start": 590,
                "end": 593,
                "name": "str"
              },
              "property": {
                "type": "Identifier",
                "start": 594,
                "end": 598,
                "name": "trim"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 602,
            "end": 607,
            "value": "abc",
            "raw": "\"abc\"",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 609,
            "end": 621,
            "value": "str.trim()",
            "raw": "'str.trim()'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}