{
  "type": "Program",
  "start": 0,
  "end": 852,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 339,
      "end": 404,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 343,
          "end": 404,
          "id": {
            "type": "Identifier",
            "start": 343,
            "end": 348,
            "name": "__obj"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 351,
            "end": 404,
            "properties": [
              {
                "type": "Property",
                "start": 355,
                "end": 402,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 355,
                  "end": 363,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 365,
                  "end": 402,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 376,
                    "end": 402,
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "start": 382,
                        "end": 398,
                        "argument": {
                          "type": "Literal",
                          "start": 388,
                          "end": 397,
                          "value": "intostr",
                          "raw": "\"intostr\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 405,
      "end": 434,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 409,
          "end": 433,
          "id": {
            "type": "Identifier",
            "start": 409,
            "end": 414,
            "name": "__str"
          },
          "init": {
            "type": "Literal",
            "start": 417,
            "end": 433,
            "value": "ABBABABAB",
            "raw": "\"ABB\\u0041BABAB\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 525,
      "end": 769,
      "block": {
        "type": "BlockStatement",
        "start": 529,
        "end": 651,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 533,
            "end": 561,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 537,
                "end": 560,
                "id": {
                  "type": "Identifier",
                  "start": 537,
                  "end": 538,
                  "name": "x"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 541,
                  "end": 560,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 541,
                    "end": 553,
                    "object": {
                      "type": "Identifier",
                      "start": 541,
                      "end": 546,
                      "name": "__str"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 547,
                      "end": 553,
                      "name": "search"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 554,
                      "end": 559,
                      "name": "__obj"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ThrowStatement",
            "start": 564,
            "end": 649,
            "argument": {
              "type": "NewExpression",
              "start": 570,
              "end": 648,
              "callee": {
                "type": "Identifier",
                "start": 574,
                "end": 586,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 587,
                  "end": 647,
                  "value": "#1: var x = __str.search(__obj) lead to throwing exception",
                  "raw": "'#1: var x = __str.search(__obj) lead to throwing exception'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 652,
        "end": 769,
        "param": {
          "type": "Identifier",
          "start": 659,
          "end": 660,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 662,
          "end": 769,
          "body": [
            {
              "type": "IfStatement",
              "start": 666,
              "end": 767,
              "test": {
                "type": "BinaryExpression",
                "start": 670,
                "end": 685,
                "left": {
                  "type": "Identifier",
                  "start": 670,
                  "end": 671,
                  "name": "e"
                },
                "operator": "!==",
                "right": {
                  "type": "Literal",
                  "start": 676,
                  "end": 685,
                  "value": "intostr",
                  "raw": "\"intostr\"",
                  "regex": null,
                  "bigint": null
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "start": 687,
                "end": 767,
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 693,
                    "end": 763,
                    "argument": {
                      "type": "NewExpression",
                      "start": 699,
                      "end": 762,
                      "callee": {
                        "type": "Identifier",
                        "start": 703,
                        "end": 715,
                        "name": "Test262Error"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "start": 716,
                          "end": 761,
                          "left": {
                            "type": "Literal",
                            "start": 716,
                            "end": 757,
                            "value": "#1.1: Exception === \"intostr\". Actual: ",
                            "raw": "'#1.1: Exception === \"intostr\". Actual: '",
                            "regex": null,
                            "bigint": null
                          },
                          "operator": "+",
                          "right": {
                            "type": "Identifier",
                            "start": 760,
                            "end": 761,
                            "name": "e"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}