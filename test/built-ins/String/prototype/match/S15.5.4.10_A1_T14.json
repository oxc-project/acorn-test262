{
  "type": "Program",
  "start": 0,
  "end": 759,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 303,
      "end": 332,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 307,
          "end": 331,
          "id": {
            "type": "Identifier",
            "start": 307,
            "end": 312,
            "name": "__reg"
          },
          "init": {
            "type": "NewExpression",
            "start": 315,
            "end": 331,
            "callee": {
              "type": "Identifier",
              "start": 319,
              "end": 325,
              "name": "RegExp"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 326,
                "end": 330,
                "value": "77",
                "raw": "\"77\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 423,
      "end": 676,
      "test": {
        "type": "BinaryExpression",
        "start": 427,
        "end": 484,
        "left": {
          "type": "MemberExpression",
          "start": 427,
          "end": 475,
          "object": {
            "type": "CallExpression",
            "start": 427,
            "end": 472,
            "callee": {
              "type": "MemberExpression",
              "start": 427,
              "end": 465,
              "object": {
                "type": "Literal",
                "start": 427,
                "end": 459,
                "value": "ABBABABAB77BBAA",
                "raw": "\"ABB\\u0041BABAB\\u0037\\u0037BBAA\"",
                "regex": null,
                "bigint": null
              },
              "property": {
                "type": "Identifier",
                "start": 460,
                "end": 465,
                "name": "match"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 466,
                "end": 471,
                "name": "__reg"
              }
            ],
            "optional": false
          },
          "property": {
            "type": "Literal",
            "start": 473,
            "end": 474,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 480,
          "end": 484,
          "value": "77",
          "raw": "\"77\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 486,
        "end": 676,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 490,
            "end": 674,
            "argument": {
              "type": "NewExpression",
              "start": 496,
              "end": 673,
              "callee": {
                "type": "Identifier",
                "start": 500,
                "end": 512,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 513,
                  "end": 672,
                  "left": {
                    "type": "Literal",
                    "start": 513,
                    "end": 619,
                    "value": "#1: var __reg = new RegExp(\"77\"); \"ABB\\u0041BABAB\\u0037\\u0037BBAA\".match(__reg)[0] === \"77\". Actual: ",
                    "raw": "'#1: var __reg = new RegExp(\"77\"); \"ABB\\\\u0041BABAB\\\\u0037\\\\u0037BBAA\".match(__reg)[0] === \"77\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 622,
                    "end": 672,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 623,
                      "end": 671,
                      "object": {
                        "type": "CallExpression",
                        "start": 623,
                        "end": 668,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 623,
                          "end": 661,
                          "object": {
                            "type": "Literal",
                            "start": 623,
                            "end": 655,
                            "value": "ABBABABAB77BBAA",
                            "raw": "\"ABB\\u0041BABAB\\u0037\\u0037BBAA\"",
                            "regex": null,
                            "bigint": null
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 656,
                            "end": 661,
                            "name": "match"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 662,
                            "end": 667,
                            "name": "__reg"
                          }
                        ],
                        "optional": false
                      },
                      "property": {
                        "type": "Literal",
                        "start": 669,
                        "end": 670,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}