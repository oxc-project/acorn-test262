{
  "type": "Program",
  "start": 0,
  "end": 913,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 335,
      "end": 402,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 339,
          "end": 401,
          "id": {
            "type": "Identifier",
            "start": 339,
            "end": 349,
            "name": "__instance"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 352,
            "end": 401,
            "properties": [
              {
                "type": "Property",
                "start": 356,
                "end": 399,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 356,
                  "end": 364,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 366,
                  "end": 399,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 377,
                    "end": 399,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 383,
                        "end": 395,
                        "argument": {
                          "type": "Literal",
                          "start": 390,
                          "end": 395,
                          "value": "one",
                          "raw": "\"one\""
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 404,
      "end": 448,
      "expression": {
        "type": "AssignmentExpression",
        "start": 404,
        "end": 447,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 404,
          "end": 421,
          "object": {
            "type": "Identifier",
            "start": 404,
            "end": 414,
            "name": "__instance"
          },
          "property": {
            "type": "Identifier",
            "start": 415,
            "end": 421,
            "name": "concat"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 424,
          "end": 447,
          "object": {
            "type": "MemberExpression",
            "start": 424,
            "end": 440,
            "object": {
              "type": "Identifier",
              "start": 424,
              "end": 430,
              "name": "String"
            },
            "property": {
              "type": "Identifier",
              "start": 431,
              "end": 440,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 441,
            "end": 447,
            "name": "concat"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 539,
      "end": 822,
      "test": {
        "type": "BinaryExpression",
        "start": 543,
        "end": 592,
        "left": {
          "type": "CallExpression",
          "start": 543,
          "end": 570,
          "callee": {
            "type": "MemberExpression",
            "start": 543,
            "end": 560,
            "object": {
              "type": "Identifier",
              "start": 543,
              "end": 553,
              "name": "__instance"
            },
            "property": {
              "type": "Identifier",
              "start": 554,
              "end": 560,
              "name": "concat"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 561,
              "end": 566,
              "value": "two",
              "raw": "\"two\""
            },
            {
              "type": "Identifier",
              "start": 568,
              "end": 569,
              "name": "x"
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 575,
          "end": 592,
          "value": "onetwoundefined",
          "raw": "\"onetwoundefined\""
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 594,
        "end": 822,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 598,
            "end": 820,
            "argument": {
              "type": "NewExpression",
              "start": 604,
              "end": 819,
              "callee": {
                "type": "Identifier",
                "start": 608,
                "end": 620,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 621,
                  "end": 818,
                  "left": {
                    "type": "Literal",
                    "start": 621,
                    "end": 788,
                    "value": "#1: var x; __instance = {toString:function(){return \"one\"}}; __instance.concat = String.prototype.concat;  __instance.concat(\"two\",x) === \"onetwoundefined\". Actual: ",
                    "raw": "'#1: var x; __instance = {toString:function(){return \"one\"}}; __instance.concat = String.prototype.concat;  __instance.concat(\"two\",x) === \"onetwoundefined\". Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "CallExpression",
                    "start": 791,
                    "end": 818,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 791,
                      "end": 808,
                      "object": {
                        "type": "Identifier",
                        "start": 791,
                        "end": 801,
                        "name": "__instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 802,
                        "end": 808,
                        "name": "concat"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 809,
                        "end": 814,
                        "value": "two",
                        "raw": "\"two\""
                      },
                      {
                        "type": "Identifier",
                        "start": 816,
                        "end": 817,
                        "name": "x"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "start": 906,
      "end": 912,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 910,
          "end": 911,
          "id": {
            "type": "Identifier",
            "start": 910,
            "end": 911,
            "name": "x"
          },
          "init": null
        }
      ],
      "kind": "var"
    }
  ],
  "sourceType": "script",
  "hashbang": null
}