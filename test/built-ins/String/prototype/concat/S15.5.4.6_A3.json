{
  "type": "Program",
  "start": 0,
  "end": 770,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 313,
      "end": 348,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 317,
          "end": 347,
          "id": {
            "type": "Identifier",
            "start": 317,
            "end": 327,
            "name": "__instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 330,
            "end": 347,
            "callee": {
              "type": "Identifier",
              "start": 334,
              "end": 340,
              "name": "String"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 341,
                "end": 346,
                "value": "one",
                "raw": "\"one\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 350,
      "end": 375,
      "expression": {
        "type": "CallExpression",
        "start": 350,
        "end": 374,
        "callee": {
          "type": "MemberExpression",
          "start": 350,
          "end": 367,
          "object": {
            "type": "Identifier",
            "start": 350,
            "end": 360,
            "name": "__instance"
          },
          "property": {
            "type": "Identifier",
            "start": 361,
            "end": 367,
            "name": "concat"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Literal",
            "start": 368,
            "end": 373,
            "value": "two",
            "raw": "\"two\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "IfStatement",
      "start": 466,
      "end": 687,
      "test": {
        "type": "BinaryExpression",
        "start": 470,
        "end": 489,
        "left": {
          "type": "Identifier",
          "start": 470,
          "end": 480,
          "name": "__instance"
        },
        "operator": "!=",
        "right": {
          "type": "Literal",
          "start": 484,
          "end": 489,
          "value": "one",
          "raw": "\"one\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 491,
        "end": 687,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 495,
            "end": 685,
            "argument": {
              "type": "NewExpression",
              "start": 501,
              "end": 684,
              "callee": {
                "type": "Identifier",
                "start": 505,
                "end": 517,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 518,
                  "end": 683,
                  "left": {
                    "type": "Literal",
                    "start": 518,
                    "end": 670,
                    "value": "#1: __instance = new String(\"one\"); __instance.concat(\"two\");  __instance = new String(\"one\"); __instance.concat(\"two\"); __instance == \"one\". Actual: ",
                    "raw": "'#1: __instance = new String(\"one\"); __instance.concat(\"two\");  __instance = new String(\"one\"); __instance.concat(\"two\"); __instance == \"one\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "Identifier",
                    "start": 673,
                    "end": 683,
                    "name": "__instance"
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}