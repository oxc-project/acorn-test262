{
  "type": "Program",
  "start": 0,
  "end": 1838,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 446,
      "end": 513,
      "expression": {
        "type": "CallExpression",
        "start": 446,
        "end": 512,
        "callee": {
          "type": "MemberExpression",
          "start": 446,
          "end": 462,
          "object": {
            "type": "Identifier",
            "start": 446,
            "end": 452,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 453,
            "end": 462,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 463,
            "end": 499,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "MemberExpression",
              "start": 470,
              "end": 499,
              "object": {
                "type": "MemberExpression",
                "start": 470,
                "end": 486,
                "object": {
                  "type": "Identifier",
                  "start": 470,
                  "end": 476,
                  "name": "String"
                },
                "property": {
                  "type": "Identifier",
                  "start": 477,
                  "end": 486,
                  "name": "prototype"
                },
                "computed": false,
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 487,
                "end": 499,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 501,
            "end": 511,
            "value": "function",
            "raw": "'function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 515,
      "end": 541,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 519,
          "end": 540,
          "id": {
            "type": "Identifier",
            "start": 519,
            "end": 529,
            "name": "leadingPoo"
          },
          "init": {
            "type": "Literal",
            "start": 532,
            "end": 540,
            "value": "\ud83d",
            "raw": "'\\uD83D'",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 542,
      "end": 569,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 546,
          "end": 568,
          "id": {
            "type": "Identifier",
            "start": 546,
            "end": 557,
            "name": "trailingPoo"
          },
          "init": {
            "type": "Literal",
            "start": 560,
            "end": 568,
            "value": "\udca9",
            "raw": "'\\uDCA9'",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 570,
      "end": 610,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 574,
          "end": 609,
          "id": {
            "type": "Identifier",
            "start": 574,
            "end": 582,
            "name": "wholePoo"
          },
          "init": {
            "type": "BinaryExpression",
            "start": 585,
            "end": 609,
            "left": {
              "type": "Identifier",
              "start": 585,
              "end": 595,
              "name": "leadingPoo"
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "start": 598,
              "end": 609,
              "name": "trailingPoo"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 612,
      "end": 751,
      "expression": {
        "type": "CallExpression",
        "start": 612,
        "end": 750,
        "callee": {
          "type": "MemberExpression",
          "start": 612,
          "end": 628,
          "object": {
            "type": "Identifier",
            "start": 612,
            "end": 618,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 619,
            "end": 628,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 632,
            "end": 690,
            "callee": {
              "type": "MemberExpression",
              "start": 632,
              "end": 688,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 632,
                "end": 675,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 633,
                  "end": 674,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 633,
                    "end": 668,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 633,
                      "end": 655,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 633,
                        "end": 649,
                        "left": {
                          "type": "Literal",
                          "start": 633,
                          "end": 636,
                          "value": "a",
                          "raw": "'a'",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 639,
                          "end": 649,
                          "name": "leadingPoo"
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 652,
                        "end": 655,
                        "value": "c",
                        "raw": "'c'",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 658,
                      "end": 668,
                      "name": "leadingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 671,
                    "end": 674,
                    "value": "e",
                    "raw": "'e'",
                    "regex": null,
                    "bigint": null
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 676,
                "end": 688,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 694,
            "end": 699,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 703,
            "end": 748,
            "value": "lone leading surrogates are not well-formed",
            "raw": "'lone leading surrogates are not well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 752,
      "end": 894,
      "expression": {
        "type": "CallExpression",
        "start": 752,
        "end": 893,
        "callee": {
          "type": "MemberExpression",
          "start": 752,
          "end": 768,
          "object": {
            "type": "Identifier",
            "start": 752,
            "end": 758,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 759,
            "end": 768,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 772,
            "end": 832,
            "callee": {
              "type": "MemberExpression",
              "start": 772,
              "end": 830,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 772,
                "end": 817,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 773,
                  "end": 816,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 773,
                    "end": 810,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 773,
                      "end": 796,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 773,
                        "end": 790,
                        "left": {
                          "type": "Literal",
                          "start": 773,
                          "end": 776,
                          "value": "a",
                          "raw": "'a'",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 779,
                          "end": 790,
                          "name": "trailingPoo"
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 793,
                        "end": 796,
                        "value": "c",
                        "raw": "'c'",
                        "regex": null,
                        "bigint": null
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 799,
                      "end": 810,
                      "name": "trailingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 813,
                    "end": 816,
                    "value": "e",
                    "raw": "'e'",
                    "regex": null,
                    "bigint": null
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 818,
                "end": 830,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 836,
            "end": 841,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 845,
            "end": 891,
            "value": "lone trailing surrogates are not well-formed",
            "raw": "'lone trailing surrogates are not well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 895,
      "end": 1034,
      "expression": {
        "type": "CallExpression",
        "start": 895,
        "end": 1034,
        "callee": {
          "type": "MemberExpression",
          "start": 895,
          "end": 911,
          "object": {
            "type": "Identifier",
            "start": 895,
            "end": 901,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 902,
            "end": 911,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 915,
            "end": 968,
            "callee": {
              "type": "MemberExpression",
              "start": 915,
              "end": 966,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 915,
                "end": 953,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 916,
                  "end": 952,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 916,
                    "end": 946,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 916,
                      "end": 933,
                      "left": {
                        "type": "Literal",
                        "start": 916,
                        "end": 919,
                        "value": "a",
                        "raw": "'a'",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 922,
                        "end": 933,
                        "name": "trailingPoo"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 936,
                      "end": 946,
                      "name": "leadingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 949,
                    "end": 952,
                    "value": "d",
                    "raw": "'d'",
                    "regex": null,
                    "bigint": null
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 954,
                "end": 966,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 972,
            "end": 977,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 981,
            "end": 1032,
            "value": "a wrong-ordered surrogate pair is not well-formed",
            "raw": "'a wrong-ordered surrogate pair is not well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1036,
      "end": 1144,
      "expression": {
        "type": "CallExpression",
        "start": 1036,
        "end": 1143,
        "callee": {
          "type": "MemberExpression",
          "start": 1036,
          "end": 1052,
          "object": {
            "type": "Identifier",
            "start": 1036,
            "end": 1042,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1043,
            "end": 1052,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1053,
            "end": 1074,
            "callee": {
              "type": "MemberExpression",
              "start": 1053,
              "end": 1072,
              "object": {
                "type": "Literal",
                "start": 1053,
                "end": 1059,
                "value": "a💩c",
                "raw": "'a💩c'",
                "regex": null,
                "bigint": null
              },
              "property": {
                "type": "Identifier",
                "start": 1060,
                "end": 1072,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1076,
            "end": 1080,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1082,
            "end": 1142,
            "value": "a surrogate pair using a literal code point is well-formed",
            "raw": "'a surrogate pair using a literal code point is well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1145,
      "end": 1263,
      "expression": {
        "type": "CallExpression",
        "start": 1145,
        "end": 1262,
        "callee": {
          "type": "MemberExpression",
          "start": 1145,
          "end": 1161,
          "object": {
            "type": "Identifier",
            "start": 1145,
            "end": 1151,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1152,
            "end": 1161,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1162,
            "end": 1193,
            "callee": {
              "type": "MemberExpression",
              "start": 1162,
              "end": 1191,
              "object": {
                "type": "Literal",
                "start": 1162,
                "end": 1178,
                "value": "a💩c",
                "raw": "'a\\uD83D\\uDCA9c'",
                "regex": null,
                "bigint": null
              },
              "property": {
                "type": "Identifier",
                "start": 1179,
                "end": 1191,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1195,
            "end": 1199,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1201,
            "end": 1261,
            "value": "a surrogate pair formed by escape sequences is well-formed",
            "raw": "'a surrogate pair formed by escape sequences is well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1264,
      "end": 1401,
      "expression": {
        "type": "CallExpression",
        "start": 1264,
        "end": 1400,
        "callee": {
          "type": "MemberExpression",
          "start": 1264,
          "end": 1280,
          "object": {
            "type": "Identifier",
            "start": 1264,
            "end": 1270,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1271,
            "end": 1280,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1281,
            "end": 1334,
            "callee": {
              "type": "MemberExpression",
              "start": 1281,
              "end": 1332,
              "object": {
                "type": "ParenthesizedExpression",
                "start": 1281,
                "end": 1319,
                "expression": {
                  "type": "BinaryExpression",
                  "start": 1282,
                  "end": 1318,
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1282,
                    "end": 1312,
                    "left": {
                      "type": "BinaryExpression",
                      "start": 1282,
                      "end": 1298,
                      "left": {
                        "type": "Literal",
                        "start": 1282,
                        "end": 1285,
                        "value": "a",
                        "raw": "'a'",
                        "regex": null,
                        "bigint": null
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 1288,
                        "end": 1298,
                        "name": "leadingPoo"
                      }
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1301,
                      "end": 1312,
                      "name": "trailingPoo"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "Literal",
                    "start": 1315,
                    "end": 1318,
                    "value": "d",
                    "raw": "'d'",
                    "regex": null,
                    "bigint": null
                  }
                }
              },
              "property": {
                "type": "Identifier",
                "start": 1320,
                "end": 1332,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1336,
            "end": 1340,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1342,
            "end": 1399,
            "value": "a surrogate pair formed by concatenation is well-formed",
            "raw": "'a surrogate pair formed by concatenation is well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1402,
      "end": 1534,
      "expression": {
        "type": "CallExpression",
        "start": 1402,
        "end": 1533,
        "callee": {
          "type": "MemberExpression",
          "start": 1402,
          "end": 1418,
          "object": {
            "type": "Identifier",
            "start": 1402,
            "end": 1408,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1409,
            "end": 1418,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1419,
            "end": 1454,
            "callee": {
              "type": "MemberExpression",
              "start": 1419,
              "end": 1452,
              "object": {
                "type": "CallExpression",
                "start": 1419,
                "end": 1439,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1419,
                  "end": 1433,
                  "object": {
                    "type": "Identifier",
                    "start": 1419,
                    "end": 1427,
                    "name": "wholePoo"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1428,
                    "end": 1433,
                    "name": "slice"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 1434,
                    "end": 1435,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 1437,
                    "end": 1438,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                ],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 1440,
                "end": 1452,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1456,
            "end": 1461,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1463,
            "end": 1532,
            "value": "a surrogate pair sliced to the leading surrogate is not well-formed",
            "raw": "'a surrogate pair sliced to the leading surrogate is not well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1535,
      "end": 1665,
      "expression": {
        "type": "CallExpression",
        "start": 1535,
        "end": 1664,
        "callee": {
          "type": "MemberExpression",
          "start": 1535,
          "end": 1551,
          "object": {
            "type": "Identifier",
            "start": 1535,
            "end": 1541,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1542,
            "end": 1551,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1552,
            "end": 1584,
            "callee": {
              "type": "MemberExpression",
              "start": 1552,
              "end": 1582,
              "object": {
                "type": "CallExpression",
                "start": 1552,
                "end": 1569,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1552,
                  "end": 1566,
                  "object": {
                    "type": "Identifier",
                    "start": 1552,
                    "end": 1560,
                    "name": "wholePoo"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1561,
                    "end": 1566,
                    "name": "slice"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 1567,
                    "end": 1568,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                ],
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 1570,
                "end": 1582,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1586,
            "end": 1591,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1593,
            "end": 1663,
            "value": "a surrogate pair sliced to the trailing surrogate is not well-formed",
            "raw": "'a surrogate pair sliced to the trailing surrogate is not well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1666,
      "end": 1746,
      "expression": {
        "type": "CallExpression",
        "start": 1666,
        "end": 1745,
        "callee": {
          "type": "MemberExpression",
          "start": 1666,
          "end": 1682,
          "object": {
            "type": "Identifier",
            "start": 1666,
            "end": 1672,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1673,
            "end": 1682,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1683,
            "end": 1703,
            "callee": {
              "type": "MemberExpression",
              "start": 1683,
              "end": 1701,
              "object": {
                "type": "Literal",
                "start": 1683,
                "end": 1688,
                "value": "abc",
                "raw": "'abc'",
                "regex": null,
                "bigint": null
              },
              "property": {
                "type": "Identifier",
                "start": 1689,
                "end": 1701,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1705,
            "end": 1709,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1711,
            "end": 1744,
            "value": "a latin-1 string is well-formed",
            "raw": "'a latin-1 string is well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1747,
      "end": 1837,
      "expression": {
        "type": "CallExpression",
        "start": 1747,
        "end": 1836,
        "callee": {
          "type": "MemberExpression",
          "start": 1747,
          "end": 1763,
          "object": {
            "type": "Identifier",
            "start": 1747,
            "end": 1753,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1754,
            "end": 1763,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1764,
            "end": 1789,
            "callee": {
              "type": "MemberExpression",
              "start": 1764,
              "end": 1787,
              "object": {
                "type": "Literal",
                "start": 1764,
                "end": 1774,
                "value": "a▨c",
                "raw": "'a\\u25A8c'",
                "regex": null,
                "bigint": null
              },
              "property": {
                "type": "Identifier",
                "start": 1775,
                "end": 1787,
                "name": "isWellFormed"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1791,
            "end": 1795,
            "value": true,
            "raw": "true",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1797,
            "end": 1835,
            "value": "a non-ASCII character is well-formed",
            "raw": "'a non-ASCII character is well-formed'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}