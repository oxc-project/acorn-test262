{
  "type": "Program",
  "start": 0,
  "end": 2087,
  "body": [
    {
      "type": "IfStatement",
      "start": 711,
      "end": 837,
      "test": {
        "type": "BinaryExpression",
        "start": 715,
        "end": 742,
        "left": {
          "type": "CallExpression",
          "start": 715,
          "end": 729,
          "callee": {
            "type": "Identifier",
            "start": 715,
            "end": 721,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 722,
              "end": 728,
              "value": 1.2345,
              "raw": "1.2345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 734,
          "end": 742,
          "value": "1.2345",
          "raw": "\"1.2345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 744,
        "end": 837,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 748,
            "end": 835,
            "argument": {
              "type": "NewExpression",
              "start": 754,
              "end": 834,
              "callee": {
                "type": "Identifier",
                "start": 758,
                "end": 770,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 771,
                  "end": 833,
                  "left": {
                    "type": "Literal",
                    "start": 771,
                    "end": 814,
                    "value": "#1: String(1.2345) === \"1.2345\". Actual: ",
                    "raw": "'#1: String(1.2345) === \"1.2345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 817,
                    "end": 833,
                    "expression": {
                      "type": "CallExpression",
                      "start": 818,
                      "end": 832,
                      "callee": {
                        "type": "Identifier",
                        "start": 818,
                        "end": 824,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 825,
                          "end": 831,
                          "value": 1.2345,
                          "raw": "1.2345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 850,
      "end": 999,
      "test": {
        "type": "BinaryExpression",
        "start": 854,
        "end": 890,
        "left": {
          "type": "CallExpression",
          "start": 854,
          "end": 873,
          "callee": {
            "type": "Identifier",
            "start": 854,
            "end": 860,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 861,
              "end": 872,
              "value": 1.23456789,
              "raw": "1.234567890",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 878,
          "end": 890,
          "value": "1.23456789",
          "raw": "\"1.23456789\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 892,
        "end": 999,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 896,
            "end": 997,
            "argument": {
              "type": "NewExpression",
              "start": 902,
              "end": 996,
              "callee": {
                "type": "Identifier",
                "start": 906,
                "end": 918,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 919,
                  "end": 995,
                  "left": {
                    "type": "Literal",
                    "start": 919,
                    "end": 971,
                    "value": "#2: String(1.234567890) === \"1.23456789\". Actual: ",
                    "raw": "'#2: String(1.234567890) === \"1.23456789\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 974,
                    "end": 995,
                    "expression": {
                      "type": "CallExpression",
                      "start": 975,
                      "end": 994,
                      "callee": {
                        "type": "Identifier",
                        "start": 975,
                        "end": 981,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 982,
                          "end": 993,
                          "value": 1.23456789,
                          "raw": "1.234567890",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1012,
      "end": 1143,
      "test": {
        "type": "BinaryExpression",
        "start": 1016,
        "end": 1045,
        "left": {
          "type": "CallExpression",
          "start": 1016,
          "end": 1031,
          "callee": {
            "type": "Identifier",
            "start": 1016,
            "end": 1022,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1023,
              "end": 1030,
              "value": 0.12345,
              "raw": "0.12345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1036,
          "end": 1045,
          "value": "0.12345",
          "raw": "\"0.12345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1047,
        "end": 1143,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1051,
            "end": 1141,
            "argument": {
              "type": "NewExpression",
              "start": 1057,
              "end": 1140,
              "callee": {
                "type": "Identifier",
                "start": 1061,
                "end": 1073,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1074,
                  "end": 1139,
                  "left": {
                    "type": "Literal",
                    "start": 1074,
                    "end": 1119,
                    "value": "#3: String(0.12345) === \"0.12345\". Actual: ",
                    "raw": "'#3: String(0.12345) === \"0.12345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1122,
                    "end": 1139,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1123,
                      "end": 1138,
                      "callee": {
                        "type": "Identifier",
                        "start": 1123,
                        "end": 1129,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1130,
                          "end": 1137,
                          "value": 0.12345,
                          "raw": "0.12345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1156,
      "end": 1289,
      "test": {
        "type": "BinaryExpression",
        "start": 1160,
        "end": 1190,
        "left": {
          "type": "CallExpression",
          "start": 1160,
          "end": 1175,
          "callee": {
            "type": "Identifier",
            "start": 1160,
            "end": 1166,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1167,
              "end": 1174,
              "value": 0.012345,
              "raw": ".012345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1180,
          "end": 1190,
          "value": "0.012345",
          "raw": "\"0.012345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1192,
        "end": 1289,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1196,
            "end": 1287,
            "argument": {
              "type": "NewExpression",
              "start": 1202,
              "end": 1286,
              "callee": {
                "type": "Identifier",
                "start": 1206,
                "end": 1218,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1219,
                  "end": 1285,
                  "left": {
                    "type": "Literal",
                    "start": 1219,
                    "end": 1265,
                    "value": "#4: String(.012345) === \"0.012345\". Actual: ",
                    "raw": "'#4: String(.012345) === \"0.012345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1268,
                    "end": 1285,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1269,
                      "end": 1284,
                      "callee": {
                        "type": "Identifier",
                        "start": 1269,
                        "end": 1275,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1276,
                          "end": 1283,
                          "value": 0.012345,
                          "raw": ".012345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1302,
      "end": 1440,
      "test": {
        "type": "BinaryExpression",
        "start": 1306,
        "end": 1338,
        "left": {
          "type": "CallExpression",
          "start": 1306,
          "end": 1322,
          "callee": {
            "type": "Identifier",
            "start": 1306,
            "end": 1312,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1313,
              "end": 1321,
              "value": 0.0012345,
              "raw": ".0012345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1327,
          "end": 1338,
          "value": "0.0012345",
          "raw": "\"0.0012345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1340,
        "end": 1440,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1344,
            "end": 1438,
            "argument": {
              "type": "NewExpression",
              "start": 1350,
              "end": 1437,
              "callee": {
                "type": "Identifier",
                "start": 1354,
                "end": 1366,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1367,
                  "end": 1436,
                  "left": {
                    "type": "Literal",
                    "start": 1367,
                    "end": 1415,
                    "value": "#5: String(.0012345) === \"0.0012345\". Actual: ",
                    "raw": "'#5: String(.0012345) === \"0.0012345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1418,
                    "end": 1436,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1419,
                      "end": 1435,
                      "callee": {
                        "type": "Identifier",
                        "start": 1419,
                        "end": 1425,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1426,
                          "end": 1434,
                          "value": 0.0012345,
                          "raw": ".0012345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1453,
      "end": 1596,
      "test": {
        "type": "BinaryExpression",
        "start": 1457,
        "end": 1491,
        "left": {
          "type": "CallExpression",
          "start": 1457,
          "end": 1474,
          "callee": {
            "type": "Identifier",
            "start": 1457,
            "end": 1463,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1464,
              "end": 1473,
              "value": 0.00012345,
              "raw": ".00012345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1479,
          "end": 1491,
          "value": "0.00012345",
          "raw": "\"0.00012345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1493,
        "end": 1596,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1497,
            "end": 1594,
            "argument": {
              "type": "NewExpression",
              "start": 1503,
              "end": 1593,
              "callee": {
                "type": "Identifier",
                "start": 1507,
                "end": 1519,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1520,
                  "end": 1592,
                  "left": {
                    "type": "Literal",
                    "start": 1520,
                    "end": 1570,
                    "value": "#6: String(.00012345) === \"0.00012345\". Actual: ",
                    "raw": "'#6: String(.00012345) === \"0.00012345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1573,
                    "end": 1592,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1574,
                      "end": 1591,
                      "callee": {
                        "type": "Identifier",
                        "start": 1574,
                        "end": 1580,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1581,
                          "end": 1590,
                          "value": 0.00012345,
                          "raw": ".00012345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1609,
      "end": 1757,
      "test": {
        "type": "BinaryExpression",
        "start": 1613,
        "end": 1649,
        "left": {
          "type": "CallExpression",
          "start": 1613,
          "end": 1631,
          "callee": {
            "type": "Identifier",
            "start": 1613,
            "end": 1619,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1620,
              "end": 1630,
              "value": 0.000012345,
              "raw": ".000012345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1636,
          "end": 1649,
          "value": "0.000012345",
          "raw": "\"0.000012345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1651,
        "end": 1757,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1655,
            "end": 1755,
            "argument": {
              "type": "NewExpression",
              "start": 1661,
              "end": 1754,
              "callee": {
                "type": "Identifier",
                "start": 1665,
                "end": 1677,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1678,
                  "end": 1753,
                  "left": {
                    "type": "Literal",
                    "start": 1678,
                    "end": 1730,
                    "value": "#7: String(.000012345) === \"0.000012345\". Actual: ",
                    "raw": "'#7: String(.000012345) === \"0.000012345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1733,
                    "end": 1753,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1734,
                      "end": 1752,
                      "callee": {
                        "type": "Identifier",
                        "start": 1734,
                        "end": 1740,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1741,
                          "end": 1751,
                          "value": 0.000012345,
                          "raw": ".000012345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1770,
      "end": 1923,
      "test": {
        "type": "BinaryExpression",
        "start": 1774,
        "end": 1812,
        "left": {
          "type": "CallExpression",
          "start": 1774,
          "end": 1793,
          "callee": {
            "type": "Identifier",
            "start": 1774,
            "end": 1780,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1781,
              "end": 1792,
              "value": 0.0000012345,
              "raw": ".0000012345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1798,
          "end": 1812,
          "value": "0.0000012345",
          "raw": "\"0.0000012345\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1814,
        "end": 1923,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1818,
            "end": 1921,
            "argument": {
              "type": "NewExpression",
              "start": 1824,
              "end": 1920,
              "callee": {
                "type": "Identifier",
                "start": 1828,
                "end": 1840,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1841,
                  "end": 1919,
                  "left": {
                    "type": "Literal",
                    "start": 1841,
                    "end": 1895,
                    "value": "#8: String(.0000012345) === \"0.0000012345\". Actual: ",
                    "raw": "'#8: String(.0000012345) === \"0.0000012345\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1898,
                    "end": 1919,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1899,
                      "end": 1918,
                      "callee": {
                        "type": "Identifier",
                        "start": 1899,
                        "end": 1905,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1906,
                          "end": 1917,
                          "value": 0.0000012345,
                          "raw": ".0000012345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1936,
      "end": 2086,
      "test": {
        "type": "BinaryExpression",
        "start": 1940,
        "end": 1976,
        "left": {
          "type": "CallExpression",
          "start": 1940,
          "end": 1960,
          "callee": {
            "type": "Identifier",
            "start": 1940,
            "end": 1946,
            "name": "String"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 1947,
              "end": 1959,
              "value": 1.2345e-7,
              "raw": ".00000012345",
              "regex": null,
              "bigint": null
            }
          ],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1965,
          "end": 1976,
          "value": "1.2345e-7",
          "raw": "\"1.2345e-7\"",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1978,
        "end": 2086,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1982,
            "end": 2084,
            "argument": {
              "type": "NewExpression",
              "start": 1988,
              "end": 2083,
              "callee": {
                "type": "Identifier",
                "start": 1992,
                "end": 2004,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2005,
                  "end": 2082,
                  "left": {
                    "type": "Literal",
                    "start": 2005,
                    "end": 2057,
                    "value": "#9: String(.00000012345) === \"1.2345e-7\". Actual: ",
                    "raw": "'#9: String(.00000012345) === \"1.2345e-7\". Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2060,
                    "end": 2082,
                    "expression": {
                      "type": "CallExpression",
                      "start": 2061,
                      "end": 2081,
                      "callee": {
                        "type": "Identifier",
                        "start": 2061,
                        "end": 2067,
                        "name": "String"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 2068,
                          "end": 2080,
                          "value": 1.2345e-7,
                          "raw": ".00000012345",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}