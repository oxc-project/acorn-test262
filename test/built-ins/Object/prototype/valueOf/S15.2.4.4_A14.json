{
  "type": "Program",
  "start": 0,
  "end": 482,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 341,
      "end": 481,
      "expression": {
        "type": "CallExpression",
        "start": 341,
        "end": 480,
        "callee": {
          "type": "MemberExpression",
          "start": 341,
          "end": 354,
          "object": {
            "type": "Identifier",
            "start": 341,
            "end": 347,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 348,
            "end": 354,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 355,
            "end": 364,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 366,
            "end": 415,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 377,
              "end": 415,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 381,
                  "end": 413,
                  "expression": {
                    "type": "CallExpression",
                    "start": 381,
                    "end": 412,
                    "callee": {
                      "type": "ParenthesizedExpression",
                      "start": 381,
                      "end": 410,
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 382,
                        "end": 409,
                        "expressions": [
                          {
                            "type": "Literal",
                            "start": 382,
                            "end": 383,
                            "value": 1,
                            "raw": "1"
                          },
                          {
                            "type": "MemberExpression",
                            "start": 385,
                            "end": 409,
                            "object": {
                              "type": "MemberExpression",
                              "start": 385,
                              "end": 401,
                              "object": {
                                "type": "Identifier",
                                "start": 385,
                                "end": 391,
                                "name": "Object"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 392,
                                "end": 401,
                                "name": "prototype"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 402,
                              "end": 409,
                              "name": "valueOf"
                            },
                            "computed": false,
                            "optional": false
                          }
                        ]
                      }
                    },
                    "arguments": [],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 417,
            "end": 479,
            "value": "(1, Object.prototype.valueOf)() throws a TypeError exception",
            "raw": "'(1, Object.prototype.valueOf)() throws a TypeError exception'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}