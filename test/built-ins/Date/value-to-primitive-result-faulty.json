{
  "type": "Program",
  "start": 0,
  "end": 1500,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 996,
      "end": 1023,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1000,
          "end": 1022,
          "id": {
            "type": "Identifier",
            "start": 1000,
            "end": 1017,
            "name": "faultyToPrimitive"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 1020,
            "end": 1022,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1024,
      "end": 1040,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1028,
          "end": 1039,
          "id": {
            "type": "Identifier",
            "start": 1028,
            "end": 1039,
            "name": "returnValue"
          },
          "init": null
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1041,
      "end": 1118,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1041,
        "end": 1117,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 1041,
          "end": 1078,
          "object": {
            "type": "Identifier",
            "start": 1041,
            "end": 1058,
            "name": "faultyToPrimitive"
          },
          "property": {
            "type": "MemberExpression",
            "start": 1059,
            "end": 1077,
            "object": {
              "type": "Identifier",
              "start": 1059,
              "end": 1065,
              "name": "Symbol"
            },
            "property": {
              "type": "Identifier",
              "start": 1066,
              "end": 1077,
              "name": "toPrimitive"
            },
            "computed": false,
            "optional": false
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "FunctionExpression",
          "start": 1081,
          "end": 1117,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 1092,
            "end": 1117,
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1096,
                "end": 1115,
                "argument": {
                  "type": "Identifier",
                  "start": 1103,
                  "end": 1114,
                  "name": "returnValue"
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1120,
      "end": 1137,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1120,
        "end": 1136,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1120,
          "end": 1131,
          "name": "returnValue"
        },
        "right": {
          "type": "ObjectExpression",
          "start": 1134,
          "end": 1136,
          "properties": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1138,
      "end": 1229,
      "expression": {
        "type": "CallExpression",
        "start": 1138,
        "end": 1228,
        "callee": {
          "type": "MemberExpression",
          "start": 1138,
          "end": 1151,
          "object": {
            "type": "Identifier",
            "start": 1138,
            "end": 1144,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1145,
            "end": 1151,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1152,
            "end": 1161,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1163,
            "end": 1208,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1174,
              "end": 1208,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1178,
                  "end": 1206,
                  "expression": {
                    "type": "NewExpression",
                    "start": 1178,
                    "end": 1205,
                    "callee": {
                      "type": "Identifier",
                      "start": 1182,
                      "end": 1186,
                      "name": "Date"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1187,
                        "end": 1204,
                        "name": "faultyToPrimitive"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1210,
            "end": 1227,
            "value": "ordinary object",
            "raw": "'ordinary object'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1231,
      "end": 1248,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1231,
        "end": 1247,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1231,
          "end": 1242,
          "name": "returnValue"
        },
        "right": {
          "type": "ArrayExpression",
          "start": 1245,
          "end": 1247,
          "elements": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1249,
      "end": 1344,
      "expression": {
        "type": "CallExpression",
        "start": 1249,
        "end": 1343,
        "callee": {
          "type": "MemberExpression",
          "start": 1249,
          "end": 1262,
          "object": {
            "type": "Identifier",
            "start": 1249,
            "end": 1255,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1256,
            "end": 1262,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1263,
            "end": 1272,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1274,
            "end": 1319,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1285,
              "end": 1319,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1289,
                  "end": 1317,
                  "expression": {
                    "type": "NewExpression",
                    "start": 1289,
                    "end": 1316,
                    "callee": {
                      "type": "Identifier",
                      "start": 1293,
                      "end": 1297,
                      "name": "Date"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1298,
                        "end": 1315,
                        "name": "faultyToPrimitive"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1321,
            "end": 1342,
            "value": "Array exotic object",
            "raw": "'Array exotic object'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1346,
      "end": 1399,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1346,
        "end": 1398,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 1346,
          "end": 1357,
          "name": "returnValue"
        },
        "right": {
          "type": "ParenthesizedExpression",
          "start": 1360,
          "end": 1398,
          "expression": {
            "type": "CallExpression",
            "start": 1361,
            "end": 1397,
            "callee": {
              "type": "FunctionExpression",
              "start": 1361,
              "end": 1395,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 1372,
                "end": 1395,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1376,
                    "end": 1393,
                    "argument": {
                      "type": "Identifier",
                      "start": 1383,
                      "end": 1392,
                      "name": "arguments"
                    }
                  }
                ]
              }
            },
            "arguments": [],
            "optional": false
          }
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1400,
      "end": 1499,
      "expression": {
        "type": "CallExpression",
        "start": 1400,
        "end": 1498,
        "callee": {
          "type": "MemberExpression",
          "start": 1400,
          "end": 1413,
          "object": {
            "type": "Identifier",
            "start": 1400,
            "end": 1406,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1407,
            "end": 1413,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 1414,
            "end": 1423,
            "name": "TypeError"
          },
          {
            "type": "FunctionExpression",
            "start": 1425,
            "end": 1470,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 1436,
              "end": 1470,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1440,
                  "end": 1468,
                  "expression": {
                    "type": "NewExpression",
                    "start": 1440,
                    "end": 1467,
                    "callee": {
                      "type": "Identifier",
                      "start": 1444,
                      "end": 1448,
                      "name": "Date"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1449,
                        "end": 1466,
                        "name": "faultyToPrimitive"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 1472,
            "end": 1497,
            "value": "arguments exotic object",
            "raw": "'arguments exotic object'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}