{
  "type": "Program",
  "start": 0,
  "end": 1380,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1105,
      "end": 1135,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1109,
          "end": 1134,
          "id": {
            "type": "Identifier",
            "start": 1109,
            "end": 1113,
            "name": "json"
          },
          "init": {
            "type": "Literal",
            "start": 1116,
            "end": 1134,
            "value": "{\"a\": 1, \"b\": 2}",
            "raw": "'{\"a\": 1, \"b\": 2}'",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 1136,
      "end": 1322,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1140,
          "end": 1321,
          "id": {
            "type": "Identifier",
            "start": 1140,
            "end": 1143,
            "name": "obj"
          },
          "init": {
            "type": "CallExpression",
            "start": 1146,
            "end": 1321,
            "callee": {
              "type": "MemberExpression",
              "start": 1146,
              "end": 1156,
              "object": {
                "type": "Identifier",
                "start": 1146,
                "end": 1150,
                "name": "JSON"
              },
              "property": {
                "type": "Identifier",
                "start": 1151,
                "end": 1156,
                "name": "parse"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 1157,
                "end": 1161,
                "name": "json"
              },
              {
                "type": "FunctionExpression",
                "start": 1163,
                "end": 1320,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1172,
                    "end": 1175,
                    "name": "key"
                  },
                  {
                    "type": "Identifier",
                    "start": 1177,
                    "end": 1182,
                    "name": "value"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1184,
                  "end": 1320,
                  "body": [
                    {
                      "type": "IfStatement",
                      "start": 1188,
                      "end": 1271,
                      "test": {
                        "type": "BinaryExpression",
                        "start": 1192,
                        "end": 1203,
                        "left": {
                          "type": "Identifier",
                          "start": 1192,
                          "end": 1195,
                          "name": "key"
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "start": 1200,
                          "end": 1203,
                          "value": "a",
                          "raw": "'a'",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "start": 1205,
                        "end": 1271,
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "start": 1211,
                            "end": 1267,
                            "expression": {
                              "type": "CallExpression",
                              "start": 1211,
                              "end": 1266,
                              "callee": {
                                "type": "MemberExpression",
                                "start": 1211,
                                "end": 1232,
                                "object": {
                                  "type": "Identifier",
                                  "start": 1211,
                                  "end": 1217,
                                  "name": "Object"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "start": 1218,
                                  "end": 1232,
                                  "name": "defineProperty"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                {
                                  "type": "ThisExpression",
                                  "start": 1233,
                                  "end": 1237
                                },
                                {
                                  "type": "Literal",
                                  "start": 1239,
                                  "end": 1242,
                                  "value": "b",
                                  "raw": "'b'",
                                  "regex": null,
                                  "bigint": null
                                },
                                {
                                  "type": "ObjectExpression",
                                  "start": 1244,
                                  "end": 1265,
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "start": 1245,
                                      "end": 1264,
                                      "method": false,
                                      "shorthand": false,
                                      "computed": false,
                                      "key": {
                                        "type": "Identifier",
                                        "start": 1245,
                                        "end": 1257,
                                        "name": "configurable"
                                      },
                                      "value": {
                                        "type": "Literal",
                                        "start": 1259,
                                        "end": 1264,
                                        "value": false,
                                        "raw": "false",
                                        "regex": null,
                                        "bigint": null
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              ],
                              "optional": false
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "start": 1274,
                      "end": 1301,
                      "test": {
                        "type": "BinaryExpression",
                        "start": 1278,
                        "end": 1289,
                        "left": {
                          "type": "Identifier",
                          "start": 1278,
                          "end": 1281,
                          "name": "key"
                        },
                        "operator": "===",
                        "right": {
                          "type": "Literal",
                          "start": 1286,
                          "end": 1289,
                          "value": "b",
                          "raw": "'b'",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "consequent": {
                        "type": "ReturnStatement",
                        "start": 1291,
                        "end": 1301,
                        "argument": {
                          "type": "Literal",
                          "start": 1298,
                          "end": 1300,
                          "value": 22,
                          "raw": "22",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "ReturnStatement",
                      "start": 1305,
                      "end": 1318,
                      "argument": {
                        "type": "Identifier",
                        "start": 1312,
                        "end": 1317,
                        "name": "value"
                      }
                    }
                  ]
                }
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1324,
      "end": 1351,
      "expression": {
        "type": "CallExpression",
        "start": 1324,
        "end": 1350,
        "callee": {
          "type": "MemberExpression",
          "start": 1324,
          "end": 1340,
          "object": {
            "type": "Identifier",
            "start": 1324,
            "end": 1330,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1331,
            "end": 1340,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1341,
            "end": 1346,
            "object": {
              "type": "Identifier",
              "start": 1341,
              "end": 1344,
              "name": "obj"
            },
            "property": {
              "type": "Identifier",
              "start": 1345,
              "end": 1346,
              "name": "a"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1348,
            "end": 1349,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1352,
      "end": 1379,
      "expression": {
        "type": "CallExpression",
        "start": 1352,
        "end": 1378,
        "callee": {
          "type": "MemberExpression",
          "start": 1352,
          "end": 1368,
          "object": {
            "type": "Identifier",
            "start": 1352,
            "end": 1358,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1359,
            "end": 1368,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1369,
            "end": 1374,
            "object": {
              "type": "Identifier",
              "start": 1369,
              "end": 1372,
              "name": "obj"
            },
            "property": {
              "type": "Identifier",
              "start": 1373,
              "end": 1374,
              "name": "b"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1376,
            "end": 1377,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}