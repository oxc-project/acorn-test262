{
  "type": "Program",
  "start": 0,
  "end": 467,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 248,
      "end": 320,
      "expression": {
        "type": "CallExpression",
        "start": 248,
        "end": 319,
        "callee": {
          "type": "MemberExpression",
          "start": 248,
          "end": 264,
          "object": {
            "type": "Identifier",
            "start": 248,
            "end": 254,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 255,
            "end": 264,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 265,
            "end": 285,
            "callee": {
              "type": "MemberExpression",
              "start": 265,
              "end": 275,
              "object": {
                "type": "Identifier",
                "start": 265,
                "end": 269,
                "name": "JSON"
              },
              "property": {
                "type": "Identifier",
                "start": 270,
                "end": 275,
                "name": "parse"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 276,
                "end": 284,
                "value": "\t1234",
                "raw": "'\\t1234'",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 287,
            "end": 291,
            "value": 1234,
            "raw": "1234",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 293,
            "end": 318,
            "value": "<TAB> should be ignored",
            "raw": "'<TAB> should be ignored'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 322,
      "end": 466,
      "expression": {
        "type": "CallExpression",
        "start": 322,
        "end": 465,
        "callee": {
          "type": "MemberExpression",
          "start": 322,
          "end": 335,
          "object": {
            "type": "Identifier",
            "start": 322,
            "end": 328,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 329,
            "end": 335,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 336,
            "end": 347,
            "name": "SyntaxError"
          },
          {
            "type": "FunctionExpression",
            "start": 349,
            "end": 389,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 360,
              "end": 389,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 366,
                  "end": 387,
                  "expression": {
                    "type": "CallExpression",
                    "start": 366,
                    "end": 386,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 366,
                      "end": 376,
                      "object": {
                        "type": "Identifier",
                        "start": 366,
                        "end": 370,
                        "name": "JSON"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 371,
                        "end": 376,
                        "name": "parse"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 377,
                        "end": 385,
                        "value": "12\t34",
                        "raw": "'12\\t34'",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          },
          {
            "type": "Literal",
            "start": 391,
            "end": 464,
            "value": "<TAB> should produce a syntax error as whitespace results in two tokens",
            "raw": "'<TAB> should produce a syntax error as whitespace results in two tokens'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}