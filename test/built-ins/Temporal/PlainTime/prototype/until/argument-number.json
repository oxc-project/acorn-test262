{
  "type": "Program",
  "start": 0,
  "end": 601,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 289,
      "end": 356,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 295,
          "end": 355,
          "id": {
            "type": "Identifier",
            "start": 295,
            "end": 303,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 306,
            "end": 355,
            "callee": {
              "type": "MemberExpression",
              "start": 310,
              "end": 328,
              "object": {
                "type": "Identifier",
                "start": 310,
                "end": 318,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 319,
                "end": 328,
                "name": "PlainTime"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 329,
                "end": 331,
                "value": 12,
                "raw": "12"
              },
              {
                "type": "Literal",
                "start": 333,
                "end": 335,
                "value": 34,
                "raw": "34"
              },
              {
                "type": "Literal",
                "start": 337,
                "end": 339,
                "value": 56,
                "raw": "56"
              },
              {
                "type": "Literal",
                "start": 341,
                "end": 344,
                "value": 987,
                "raw": "987"
              },
              {
                "type": "Literal",
                "start": 346,
                "end": 349,
                "value": 654,
                "raw": "654"
              },
              {
                "type": "Literal",
                "start": 351,
                "end": 354,
                "value": 321,
                "raw": "321"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 358,
      "end": 436,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 364,
          "end": 435,
          "id": {
            "type": "Identifier",
            "start": 364,
            "end": 371,
            "name": "numbers"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 374,
            "end": 435,
            "elements": [
              {
                "type": "Literal",
                "start": 378,
                "end": 379,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "UnaryExpression",
                "start": 383,
                "end": 400,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 384,
                  "end": 400,
                  "value": 123456.987654321,
                  "raw": "123456.987654321"
                }
              },
              {
                "type": "Literal",
                "start": 404,
                "end": 411,
                "value": 1234567,
                "raw": "1234567"
              },
              {
                "type": "Literal",
                "start": 415,
                "end": 432,
                "value": 123456.9876543219,
                "raw": "123456.9876543219"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 438,
      "end": 600,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 443,
        "end": 452,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 449,
            "end": 452,
            "id": {
              "type": "Identifier",
              "start": 449,
              "end": 452,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 456,
        "end": 463,
        "name": "numbers"
      },
      "body": {
        "type": "BlockStatement",
        "start": 465,
        "end": 600,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 469,
            "end": 598,
            "expression": {
              "type": "CallExpression",
              "start": 469,
              "end": 597,
              "callee": {
                "type": "MemberExpression",
                "start": 469,
                "end": 482,
                "object": {
                  "type": "Identifier",
                  "start": 469,
                  "end": 475,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 476,
                  "end": 482,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 488,
                  "end": 497,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 503,
                  "end": 528,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 509,
                    "end": 528,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 509,
                      "end": 523,
                      "object": {
                        "type": "Identifier",
                        "start": 509,
                        "end": 517,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 518,
                        "end": 523,
                        "name": "until"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 524,
                        "end": 527,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 534,
                  "end": 593,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 547,
                      "end": 550,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 535,
                      "end": 545,
                      "value": {
                        "raw": "A number (",
                        "cooked": "A number ("
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 551,
                      "end": 592,
                      "value": {
                        "raw": ") is not a valid ISO string for PlainTime",
                        "cooked": ") is not a valid ISO string for PlainTime"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}