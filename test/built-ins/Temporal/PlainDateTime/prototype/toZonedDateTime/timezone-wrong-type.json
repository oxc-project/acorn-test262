{
  "type": "Program",
  "start": 0,
  "end": 1226,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 347,
      "end": 403,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 353,
          "end": 402,
          "id": {
            "type": "Identifier",
            "start": 353,
            "end": 361,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 364,
            "end": 402,
            "callee": {
              "type": "MemberExpression",
              "start": 368,
              "end": 390,
              "object": {
                "type": "Identifier",
                "start": 368,
                "end": 376,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 377,
                "end": 390,
                "name": "PlainDateTime"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 391,
                "end": 395,
                "value": 2000,
                "raw": "2000"
              },
              {
                "type": "Literal",
                "start": 397,
                "end": 398,
                "value": 5,
                "raw": "5"
              },
              {
                "type": "Literal",
                "start": 400,
                "end": 401,
                "value": 2,
                "raw": "2"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 405,
      "end": 656,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 411,
          "end": 655,
          "id": {
            "type": "Identifier",
            "start": 411,
            "end": 425,
            "name": "primitiveTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 428,
            "end": 655,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 432,
                "end": 446,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 433,
                    "end": 437,
                    "value": null,
                    "raw": "null"
                  },
                  {
                    "type": "Literal",
                    "start": 439,
                    "end": 445,
                    "value": "null",
                    "raw": "\"null\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 450,
                "end": 467,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 451,
                    "end": 455,
                    "value": true,
                    "raw": "true"
                  },
                  {
                    "type": "Literal",
                    "start": 457,
                    "end": 466,
                    "value": "boolean",
                    "raw": "\"boolean\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 471,
                "end": 491,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 472,
                    "end": 474,
                    "value": "",
                    "raw": "\"\""
                  },
                  {
                    "type": "Literal",
                    "start": 476,
                    "end": 490,
                    "value": "empty string",
                    "raw": "\"empty string\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 495,
                "end": 551,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 496,
                    "end": 497,
                    "value": 1,
                    "raw": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 499,
                    "end": 550,
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 555,
                "end": 634,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 556,
                    "end": 564,
                    "value": 19761118,
                    "raw": "19761118"
                  },
                  {
                    "type": "Literal",
                    "start": 566,
                    "end": 633,
                    "value": "number that would convert to a valid ISO string in other contexts",
                    "raw": "\"number that would convert to a valid ISO string in other contexts\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 638,
                "end": 652,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 639,
                    "end": 641,
                    "value": "1n",
                    "raw": "1n",
                    "bigint": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 643,
                    "end": 651,
                    "value": "bigint",
                    "raw": "\"bigint\""
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 658,
      "end": 902,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 663,
        "end": 692,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 669,
            "end": 692,
            "id": {
              "type": "ArrayPattern",
              "start": 669,
              "end": 692,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 670,
                  "end": 678,
                  "name": "timeZone"
                },
                {
                  "type": "Identifier",
                  "start": 680,
                  "end": 691,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 696,
        "end": 710,
        "name": "primitiveTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 712,
        "end": 902,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 716,
            "end": 900,
            "expression": {
              "type": "CallExpression",
              "start": 716,
              "end": 899,
              "callee": {
                "type": "MemberExpression",
                "start": 716,
                "end": 729,
                "object": {
                  "type": "Identifier",
                  "start": 716,
                  "end": 722,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 723,
                  "end": 729,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 735,
                  "end": 788,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 735,
                    "end": 763,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 735,
                      "end": 750,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 742,
                        "end": 750,
                        "name": "timeZone"
                      }
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 755,
                      "end": 763,
                      "value": "string",
                      "raw": "'string'"
                    }
                  },
                  "consequent": {
                    "type": "Identifier",
                    "start": 766,
                    "end": 776,
                    "name": "RangeError"
                  },
                  "alternate": {
                    "type": "Identifier",
                    "start": 779,
                    "end": 788,
                    "name": "TypeError"
                  }
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 794,
                  "end": 834,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 800,
                    "end": 834,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 800,
                      "end": 824,
                      "object": {
                        "type": "Identifier",
                        "start": 800,
                        "end": 808,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 809,
                        "end": 824,
                        "name": "toZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 825,
                        "end": 833,
                        "name": "timeZone"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 840,
                  "end": 895,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 843,
                      "end": 854,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 841,
                      "end": 841,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 855,
                      "end": 894,
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 904,
      "end": 1023,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 910,
          "end": 1022,
          "id": {
            "type": "Identifier",
            "start": 910,
            "end": 924,
            "name": "typeErrorTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 927,
            "end": 1022,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 931,
                "end": 951,
                "elements": [
                  {
                    "type": "CallExpression",
                    "start": 932,
                    "end": 940,
                    "callee": {
                      "type": "Identifier",
                      "start": 932,
                      "end": 938,
                      "name": "Symbol"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 942,
                    "end": 950,
                    "value": "symbol",
                    "raw": "\"symbol\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 955,
                "end": 969,
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "start": 956,
                    "end": 958,
                    "properties": []
                  },
                  {
                    "type": "Literal",
                    "start": 960,
                    "end": 968,
                    "value": "object",
                    "raw": "\"object\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 973,
                "end": 1019,
                "elements": [
                  {
                    "type": "NewExpression",
                    "start": 974,
                    "end": 997,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 978,
                      "end": 995,
                      "object": {
                        "type": "Identifier",
                        "start": 978,
                        "end": 986,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 987,
                        "end": 995,
                        "name": "Duration"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": []
                  },
                  {
                    "type": "Literal",
                    "start": 999,
                    "end": 1018,
                    "value": "duration instance",
                    "raw": "\"duration instance\""
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1025,
      "end": 1225,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1030,
        "end": 1059,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1036,
            "end": 1059,
            "id": {
              "type": "ArrayPattern",
              "start": 1036,
              "end": 1059,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 1037,
                  "end": 1045,
                  "name": "timeZone"
                },
                {
                  "type": "Identifier",
                  "start": 1047,
                  "end": 1058,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1063,
        "end": 1077,
        "name": "typeErrorTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1079,
        "end": 1225,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1083,
            "end": 1223,
            "expression": {
              "type": "CallExpression",
              "start": 1083,
              "end": 1222,
              "callee": {
                "type": "MemberExpression",
                "start": 1083,
                "end": 1096,
                "object": {
                  "type": "Identifier",
                  "start": 1083,
                  "end": 1089,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1090,
                  "end": 1096,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1097,
                  "end": 1106,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1108,
                  "end": 1148,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1114,
                    "end": 1148,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1114,
                      "end": 1138,
                      "object": {
                        "type": "Identifier",
                        "start": 1114,
                        "end": 1122,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1123,
                        "end": 1138,
                        "name": "toZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1139,
                        "end": 1147,
                        "name": "timeZone"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1150,
                  "end": 1221,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1153,
                      "end": 1164,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1151,
                      "end": 1151,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1165,
                      "end": 1220,
                      "value": {
                        "raw": " is not a valid object and does not convert to a string",
                        "cooked": " is not a valid object and does not convert to a string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}