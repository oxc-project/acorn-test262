{
  "type": "Program",
  "start": 0,
  "end": 885,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 302,
      "end": 380,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 308,
          "end": 379,
          "id": {
            "type": "Identifier",
            "start": 308,
            "end": 316,
            "name": "duration"
          },
          "init": {
            "type": "NewExpression",
            "start": 319,
            "end": 379,
            "callee": {
              "type": "MemberExpression",
              "start": 323,
              "end": 340,
              "object": {
                "type": "Identifier",
                "start": 323,
                "end": 331,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 332,
                "end": 340,
                "name": "Duration"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 341,
                "end": 342,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 344,
                "end": 345,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 347,
                "end": 348,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 350,
                "end": 351,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 353,
                "end": 355,
                "value": 12,
                "raw": "12",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 357,
                "end": 359,
                "value": 34,
                "raw": "34",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 361,
                "end": 363,
                "value": 56,
                "raw": "56",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 365,
                "end": 368,
                "value": 123,
                "raw": "123",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 370,
                "end": 373,
                "value": 987,
                "raw": "987",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 375,
                "end": 378,
                "value": 500,
                "raw": "500",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 381,
      "end": 706,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 387,
          "end": 705,
          "id": {
            "type": "Identifier",
            "start": 387,
            "end": 396,
            "name": "badValues"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 399,
            "end": 705,
            "elements": [
              {
                "type": "Literal",
                "start": 403,
                "end": 408,
                "value": "era",
                "raw": "\"era\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 412,
                "end": 421,
                "value": "eraYear",
                "raw": "\"eraYear\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 425,
                "end": 431,
                "value": "year",
                "raw": "\"year\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 435,
                "end": 442,
                "value": "month",
                "raw": "\"month\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 446,
                "end": 452,
                "value": "week",
                "raw": "\"week\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 456,
                "end": 461,
                "value": "day",
                "raw": "\"day\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 465,
                "end": 471,
                "value": "hour",
                "raw": "\"hour\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 475,
                "end": 483,
                "value": "minute",
                "raw": "\"minute\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 487,
                "end": 502,
                "value": "millisecond\u0000",
                "raw": "\"millisecond\\0\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 506,
                "end": 524,
                "value": "millısecond",
                "raw": "\"mill\\u0131second\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 528,
                "end": 536,
                "value": "SECOND",
                "raw": "\"SECOND\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 540,
                "end": 546,
                "value": "eras",
                "raw": "\"eras\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 550,
                "end": 560,
                "value": "eraYears",
                "raw": "\"eraYears\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 564,
                "end": 571,
                "value": "years",
                "raw": "\"years\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 575,
                "end": 583,
                "value": "months",
                "raw": "\"months\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 587,
                "end": 594,
                "value": "weeks",
                "raw": "\"weeks\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 598,
                "end": 604,
                "value": "days",
                "raw": "\"days\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 608,
                "end": 615,
                "value": "hours",
                "raw": "\"hours\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 619,
                "end": 628,
                "value": "minutes",
                "raw": "\"minutes\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 632,
                "end": 648,
                "value": "milliseconds\u0000",
                "raw": "\"milliseconds\\0\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 652,
                "end": 671,
                "value": "millıseconds",
                "raw": "\"mill\\u0131seconds\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 675,
                "end": 684,
                "value": "SECONDS",
                "raw": "\"SECONDS\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 688,
                "end": 702,
                "value": "other string",
                "raw": "\"other string\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 707,
      "end": 884,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 712,
        "end": 730,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 718,
            "end": 730,
            "id": {
              "type": "Identifier",
              "start": 718,
              "end": 730,
              "name": "smallestUnit"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 734,
        "end": 743,
        "name": "badValues"
      },
      "body": {
        "type": "BlockStatement",
        "start": 745,
        "end": 884,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 749,
            "end": 882,
            "expression": {
              "type": "CallExpression",
              "start": 749,
              "end": 881,
              "callee": {
                "type": "MemberExpression",
                "start": 749,
                "end": 762,
                "object": {
                  "type": "Identifier",
                  "start": 749,
                  "end": 755,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 756,
                  "end": 762,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 763,
                  "end": 773,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 775,
                  "end": 816,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 781,
                    "end": 816,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 781,
                      "end": 798,
                      "object": {
                        "type": "Identifier",
                        "start": 781,
                        "end": 789,
                        "name": "duration"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 790,
                        "end": 798,
                        "name": "toString"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "start": 799,
                        "end": 815,
                        "properties": [
                          {
                            "type": "Property",
                            "start": 801,
                            "end": 813,
                            "method": false,
                            "shorthand": true,
                            "computed": false,
                            "key": {
                              "type": "Identifier",
                              "start": 801,
                              "end": 813,
                              "name": "smallestUnit"
                            },
                            "value": {
                              "type": "Identifier",
                              "start": 801,
                              "end": 813,
                              "name": "smallestUnit"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 822,
                  "end": 880,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 826,
                      "end": 838,
                      "name": "smallestUnit"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 823,
                      "end": 824,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 839,
                      "end": 879,
                      "value": {
                        "raw": "\" is not a valid value for smallest unit",
                        "cooked": "\" is not a valid value for smallest unit"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}