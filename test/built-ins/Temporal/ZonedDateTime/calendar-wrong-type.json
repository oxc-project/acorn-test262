{
  "type": "Program",
  "start": 0,
  "end": 1059,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 320,
      "end": 488,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 326,
          "end": 487,
          "id": {
            "type": "Identifier",
            "start": 326,
            "end": 340,
            "name": "primitiveTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 343,
            "end": 487,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 347,
                "end": 361,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 348,
                    "end": 352,
                    "value": null,
                    "raw": "null",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 354,
                    "end": 360,
                    "value": "null",
                    "raw": "\"null\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 365,
                "end": 382,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 366,
                    "end": 370,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 372,
                    "end": 381,
                    "value": "boolean",
                    "raw": "\"boolean\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 386,
                "end": 406,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 387,
                    "end": 389,
                    "value": "",
                    "raw": "\"\"",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 391,
                    "end": 405,
                    "value": "empty string",
                    "raw": "\"empty string\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 410,
                "end": 466,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 411,
                    "end": 412,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 414,
                    "end": 465,
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 470,
                "end": 484,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 471,
                    "end": 473,
                    "value": null,
                    "raw": "1n",
                    "regex": null,
                    "bigint": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 475,
                    "end": 483,
                    "value": "bigint",
                    "raw": "\"bigint\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 490,
      "end": 732,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 495,
        "end": 519,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 501,
            "end": 519,
            "id": {
              "type": "ArrayPattern",
              "start": 501,
              "end": 519,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 502,
                  "end": 505,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 507,
                  "end": 518,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 523,
        "end": 537,
        "name": "primitiveTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 539,
        "end": 732,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 543,
            "end": 730,
            "expression": {
              "type": "CallExpression",
              "start": 543,
              "end": 729,
              "callee": {
                "type": "MemberExpression",
                "start": 543,
                "end": 556,
                "object": {
                  "type": "Identifier",
                  "start": 543,
                  "end": 549,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 550,
                  "end": 556,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 562,
                  "end": 610,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 562,
                    "end": 585,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 562,
                      "end": 572,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 569,
                        "end": 572,
                        "name": "arg"
                      }
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 577,
                      "end": 585,
                      "value": "string",
                      "raw": "'string'",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "consequent": {
                    "type": "Identifier",
                    "start": 588,
                    "end": 598,
                    "name": "RangeError"
                  },
                  "alternate": {
                    "type": "Identifier",
                    "start": 601,
                    "end": 610,
                    "name": "TypeError"
                  }
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 616,
                  "end": 664,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "NewExpression",
                    "start": 622,
                    "end": 664,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 626,
                      "end": 648,
                      "object": {
                        "type": "Identifier",
                        "start": 626,
                        "end": 634,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 635,
                        "end": 648,
                        "name": "ZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 649,
                        "end": 651,
                        "value": null,
                        "raw": "0n",
                        "regex": null,
                        "bigint": "0"
                      },
                      {
                        "type": "Literal",
                        "start": 653,
                        "end": 658,
                        "value": "UTC",
                        "raw": "\"UTC\"",
                        "regex": null,
                        "bigint": null
                      },
                      {
                        "type": "Identifier",
                        "start": 660,
                        "end": 663,
                        "name": "arg"
                      }
                    ]
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 670,
                  "end": 725,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 673,
                      "end": 684,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 671,
                      "end": 671,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 685,
                      "end": 724,
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 734,
      "end": 853,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 740,
          "end": 852,
          "id": {
            "type": "Identifier",
            "start": 740,
            "end": 754,
            "name": "typeErrorTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 757,
            "end": 852,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 761,
                "end": 781,
                "elements": [
                  {
                    "type": "CallExpression",
                    "start": 762,
                    "end": 770,
                    "callee": {
                      "type": "Identifier",
                      "start": 762,
                      "end": 768,
                      "name": "Symbol"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 772,
                    "end": 780,
                    "value": "symbol",
                    "raw": "\"symbol\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 785,
                "end": 799,
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "start": 786,
                    "end": 788,
                    "properties": []
                  },
                  {
                    "type": "Literal",
                    "start": 790,
                    "end": 798,
                    "value": "object",
                    "raw": "\"object\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 803,
                "end": 849,
                "elements": [
                  {
                    "type": "NewExpression",
                    "start": 804,
                    "end": 827,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 808,
                      "end": 825,
                      "object": {
                        "type": "Identifier",
                        "start": 808,
                        "end": 816,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 817,
                        "end": 825,
                        "name": "Duration"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": []
                  },
                  {
                    "type": "Literal",
                    "start": 829,
                    "end": 848,
                    "value": "duration instance",
                    "raw": "\"duration instance\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 855,
      "end": 1058,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 860,
        "end": 884,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 866,
            "end": 884,
            "id": {
              "type": "ArrayPattern",
              "start": 866,
              "end": 884,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 867,
                  "end": 870,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 872,
                  "end": 883,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 888,
        "end": 902,
        "name": "typeErrorTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 904,
        "end": 1058,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 908,
            "end": 1056,
            "expression": {
              "type": "CallExpression",
              "start": 908,
              "end": 1055,
              "callee": {
                "type": "MemberExpression",
                "start": 908,
                "end": 921,
                "object": {
                  "type": "Identifier",
                  "start": 908,
                  "end": 914,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 915,
                  "end": 921,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 922,
                  "end": 931,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 933,
                  "end": 981,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "NewExpression",
                    "start": 939,
                    "end": 981,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 943,
                      "end": 965,
                      "object": {
                        "type": "Identifier",
                        "start": 943,
                        "end": 951,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 952,
                        "end": 965,
                        "name": "ZonedDateTime"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "start": 966,
                        "end": 968,
                        "value": null,
                        "raw": "0n",
                        "regex": null,
                        "bigint": "0"
                      },
                      {
                        "type": "Literal",
                        "start": 970,
                        "end": 975,
                        "value": "UTC",
                        "raw": "\"UTC\"",
                        "regex": null,
                        "bigint": null
                      },
                      {
                        "type": "Identifier",
                        "start": 977,
                        "end": 980,
                        "name": "arg"
                      }
                    ]
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 983,
                  "end": 1054,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 986,
                      "end": 997,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 984,
                      "end": 984,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 998,
                      "end": 1053,
                      "value": {
                        "raw": " is not a valid object and does not convert to a string",
                        "cooked": " is not a valid object and does not convert to a string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}