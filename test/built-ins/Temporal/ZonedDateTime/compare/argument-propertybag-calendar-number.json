{
  "type": "Program",
  "start": 0,
  "end": 864,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 271,
      "end": 294,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 277,
          "end": 293,
          "id": {
            "type": "Identifier",
            "start": 277,
            "end": 285,
            "name": "timeZone"
          },
          "init": {
            "type": "Literal",
            "start": 288,
            "end": 293,
            "value": "UTC",
            "raw": "\"UTC\""
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 295,
      "end": 353,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 301,
          "end": 352,
          "id": {
            "type": "Identifier",
            "start": 301,
            "end": 309,
            "name": "datetime"
          },
          "init": {
            "type": "NewExpression",
            "start": 312,
            "end": 352,
            "callee": {
              "type": "MemberExpression",
              "start": 316,
              "end": 338,
              "object": {
                "type": "Identifier",
                "start": 316,
                "end": 324,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 325,
                "end": 338,
                "name": "ZonedDateTime"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 339,
                "end": 341,
                "value": null,
                "raw": "0n",
                "bigint": "0"
              },
              {
                "type": "Identifier",
                "start": 343,
                "end": 351,
                "name": "timeZone"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 355,
      "end": 419,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 361,
          "end": 418,
          "id": {
            "type": "Identifier",
            "start": 361,
            "end": 368,
            "name": "numbers"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 371,
            "end": 418,
            "elements": [
              {
                "type": "Literal",
                "start": 375,
                "end": 376,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 380,
                "end": 388,
                "value": 19970327,
                "raw": "19970327"
              },
              {
                "type": "UnaryExpression",
                "start": 392,
                "end": 401,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 393,
                  "end": 401,
                  "value": 19970327,
                  "raw": "19970327"
                }
              },
              {
                "type": "Literal",
                "start": 405,
                "end": 415,
                "value": 1234567890,
                "raw": "1234567890"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 421,
      "end": 863,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 426,
        "end": 440,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 432,
            "end": 440,
            "id": {
              "type": "Identifier",
              "start": 432,
              "end": 440,
              "name": "calendar"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 444,
        "end": 451,
        "name": "numbers"
      },
      "body": {
        "type": "BlockStatement",
        "start": 453,
        "end": 863,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 457,
            "end": 530,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 463,
                "end": 529,
                "id": {
                  "type": "Identifier",
                  "start": 463,
                  "end": 466,
                  "name": "arg"
                },
                "init": {
                  "type": "ObjectExpression",
                  "start": 469,
                  "end": 529,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 471,
                      "end": 481,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 471,
                        "end": 475,
                        "name": "year"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 477,
                        "end": 481,
                        "value": 1970,
                        "raw": "1970"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "start": 483,
                      "end": 499,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 483,
                        "end": 492,
                        "name": "monthCode"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 494,
                        "end": 499,
                        "value": "M01",
                        "raw": "\"M01\""
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "start": 501,
                      "end": 507,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 501,
                        "end": 504,
                        "name": "day"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 506,
                        "end": 507,
                        "value": 1,
                        "raw": "1"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "start": 509,
                      "end": 517,
                      "method": false,
                      "shorthand": true,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 509,
                        "end": 517,
                        "name": "calendar"
                      },
                      "value": {
                        "type": "Identifier",
                        "start": 509,
                        "end": 517,
                        "name": "calendar"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "start": 519,
                      "end": 527,
                      "method": false,
                      "shorthand": true,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 519,
                        "end": 527,
                        "name": "timeZone"
                      },
                      "value": {
                        "type": "Identifier",
                        "start": 519,
                        "end": 527,
                        "name": "timeZone"
                      },
                      "kind": "init"
                    }
                  ]
                }
              }
            ],
            "kind": "const"
          },
          {
            "type": "ExpressionStatement",
            "start": 533,
            "end": 695,
            "expression": {
              "type": "CallExpression",
              "start": 533,
              "end": 694,
              "callee": {
                "type": "MemberExpression",
                "start": 533,
                "end": 546,
                "object": {
                  "type": "Identifier",
                  "start": 533,
                  "end": 539,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 540,
                  "end": 546,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 552,
                  "end": 561,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 567,
                  "end": 618,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 573,
                    "end": 618,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 573,
                      "end": 603,
                      "object": {
                        "type": "MemberExpression",
                        "start": 573,
                        "end": 595,
                        "object": {
                          "type": "Identifier",
                          "start": 573,
                          "end": 581,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 582,
                          "end": 595,
                          "name": "ZonedDateTime"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 596,
                        "end": 603,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 604,
                        "end": 607,
                        "name": "arg"
                      },
                      {
                        "type": "Identifier",
                        "start": 609,
                        "end": 617,
                        "name": "datetime"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "Literal",
                  "start": 624,
                  "end": 690,
                  "value": "A number is not a valid ISO string for calendar (first argument)",
                  "raw": "\"A number is not a valid ISO string for calendar (first argument)\""
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 698,
            "end": 861,
            "expression": {
              "type": "CallExpression",
              "start": 698,
              "end": 860,
              "callee": {
                "type": "MemberExpression",
                "start": 698,
                "end": 711,
                "object": {
                  "type": "Identifier",
                  "start": 698,
                  "end": 704,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 705,
                  "end": 711,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 717,
                  "end": 726,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 732,
                  "end": 783,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 738,
                    "end": 783,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 738,
                      "end": 768,
                      "object": {
                        "type": "MemberExpression",
                        "start": 738,
                        "end": 760,
                        "object": {
                          "type": "Identifier",
                          "start": 738,
                          "end": 746,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 747,
                          "end": 760,
                          "name": "ZonedDateTime"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 761,
                        "end": 768,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 769,
                        "end": 777,
                        "name": "datetime"
                      },
                      {
                        "type": "Identifier",
                        "start": 779,
                        "end": 782,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "Literal",
                  "start": 789,
                  "end": 856,
                  "value": "A number is not a valid ISO string for calendar (second argument)",
                  "raw": "\"A number is not a valid ISO string for calendar (second argument)\""
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}