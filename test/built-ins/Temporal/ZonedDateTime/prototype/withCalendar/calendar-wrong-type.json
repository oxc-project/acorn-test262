{
  "type": "Program",
  "start": 0,
  "end": 967,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 338,
      "end": 428,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 344,
          "end": 427,
          "id": {
            "type": "Identifier",
            "start": 344,
            "end": 352,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 355,
            "end": 427,
            "callee": {
              "type": "MemberExpression",
              "start": 359,
              "end": 381,
              "object": {
                "type": "Identifier",
                "start": 359,
                "end": 367,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 368,
                "end": 381,
                "name": "ZonedDateTime"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 382,
                "end": 408,
                "value": null,
                "raw": "1_000_000_000_000_000_000n",
                "bigint": "1000000000000000000"
              },
              {
                "type": "Literal",
                "start": 410,
                "end": 415,
                "value": "UTC",
                "raw": "\"UTC\""
              },
              {
                "type": "Literal",
                "start": 417,
                "end": 426,
                "value": "iso8601",
                "raw": "\"iso8601\""
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 430,
      "end": 777,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 436,
          "end": 776,
          "id": {
            "type": "Identifier",
            "start": 436,
            "end": 450,
            "name": "wrongTypeTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 453,
            "end": 776,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 457,
                "end": 471,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 458,
                    "end": 462,
                    "value": null,
                    "raw": "null"
                  },
                  {
                    "type": "Literal",
                    "start": 464,
                    "end": 470,
                    "value": "null",
                    "raw": "\"null\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 475,
                "end": 492,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 476,
                    "end": 480,
                    "value": true,
                    "raw": "true"
                  },
                  {
                    "type": "Literal",
                    "start": 482,
                    "end": 491,
                    "value": "boolean",
                    "raw": "\"boolean\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 496,
                "end": 552,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 497,
                    "end": 498,
                    "value": 1,
                    "raw": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 500,
                    "end": 551,
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 556,
                "end": 570,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 557,
                    "end": 559,
                    "value": null,
                    "raw": "1n",
                    "bigint": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 561,
                    "end": 569,
                    "value": "bigint",
                    "raw": "\"bigint\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 574,
                "end": 604,
                "elements": [
                  {
                    "type": "UnaryExpression",
                    "start": 575,
                    "end": 584,
                    "operator": "-",
                    "prefix": true,
                    "argument": {
                      "type": "Literal",
                      "start": 576,
                      "end": 584,
                      "value": 19761118,
                      "raw": "19761118"
                    }
                  },
                  {
                    "type": "Literal",
                    "start": 586,
                    "end": 603,
                    "value": "negative number",
                    "raw": "\"negative number\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 608,
                "end": 643,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 609,
                    "end": 617,
                    "value": 19761118,
                    "raw": "19761118"
                  },
                  {
                    "type": "Literal",
                    "start": 619,
                    "end": 642,
                    "value": "large positive number",
                    "raw": "\"large positive number\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 647,
                "end": 681,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 648,
                    "end": 658,
                    "value": 1234567890,
                    "raw": "1234567890"
                  },
                  {
                    "type": "Literal",
                    "start": 660,
                    "end": 680,
                    "value": "very large integer",
                    "raw": "\"very large integer\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 685,
                "end": 705,
                "elements": [
                  {
                    "type": "CallExpression",
                    "start": 686,
                    "end": 694,
                    "callee": {
                      "type": "Identifier",
                      "start": 686,
                      "end": 692,
                      "name": "Symbol"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 696,
                    "end": 704,
                    "value": "symbol",
                    "raw": "\"symbol\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 709,
                "end": 723,
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "start": 710,
                    "end": 712,
                    "properties": []
                  },
                  {
                    "type": "Literal",
                    "start": 714,
                    "end": 722,
                    "value": "object",
                    "raw": "\"object\""
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 727,
                "end": 773,
                "elements": [
                  {
                    "type": "NewExpression",
                    "start": 728,
                    "end": 751,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 732,
                      "end": 749,
                      "object": {
                        "type": "Identifier",
                        "start": 732,
                        "end": 740,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 741,
                        "end": 749,
                        "name": "Duration"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": []
                  },
                  {
                    "type": "Literal",
                    "start": 753,
                    "end": 772,
                    "value": "duration instance",
                    "raw": "\"duration instance\""
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 779,
      "end": 966,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 784,
        "end": 808,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 790,
            "end": 808,
            "id": {
              "type": "ArrayPattern",
              "start": 790,
              "end": 808,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 791,
                  "end": 794,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 796,
                  "end": 807,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 812,
        "end": 826,
        "name": "wrongTypeTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 828,
        "end": 966,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 832,
            "end": 964,
            "expression": {
              "type": "CallExpression",
              "start": 832,
              "end": 963,
              "callee": {
                "type": "MemberExpression",
                "start": 832,
                "end": 845,
                "object": {
                  "type": "Identifier",
                  "start": 832,
                  "end": 838,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 839,
                  "end": 845,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 851,
                  "end": 860,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 866,
                  "end": 898,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 872,
                    "end": 898,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 872,
                      "end": 893,
                      "object": {
                        "type": "Identifier",
                        "start": 872,
                        "end": 880,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 881,
                        "end": 893,
                        "name": "withCalendar"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 894,
                        "end": 897,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 904,
                  "end": 959,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 907,
                      "end": 918,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 905,
                      "end": 905,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 919,
                      "end": 958,
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}