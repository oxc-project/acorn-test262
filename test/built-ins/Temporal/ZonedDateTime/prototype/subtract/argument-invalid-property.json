{
  "type": "Program",
  "start": 0,
  "end": 743,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 308,
      "end": 387,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 314,
          "end": 386,
          "id": {
            "type": "Identifier",
            "start": 314,
            "end": 322,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 325,
            "end": 386,
            "callee": {
              "type": "MemberExpression",
              "start": 329,
              "end": 351,
              "object": {
                "type": "Identifier",
                "start": 329,
                "end": 337,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 338,
                "end": 351,
                "name": "ZonedDateTime"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 352,
                "end": 378,
                "value": null,
                "raw": "1_000_000_000_000_000_000n",
                "regex": null,
                "bigint": "1000000000000000000"
              },
              {
                "type": "Literal",
                "start": 380,
                "end": 385,
                "value": "UTC",
                "raw": "\"UTC\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 389,
      "end": 497,
      "expression": {
        "type": "CallExpression",
        "start": 389,
        "end": 496,
        "callee": {
          "type": "MemberExpression",
          "start": 389,
          "end": 402,
          "object": {
            "type": "Identifier",
            "start": 389,
            "end": 395,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 396,
            "end": 402,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 406,
            "end": 415,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 419,
            "end": 446,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 425,
              "end": 446,
              "callee": {
                "type": "MemberExpression",
                "start": 425,
                "end": 442,
                "object": {
                  "type": "Identifier",
                  "start": 425,
                  "end": 433,
                  "name": "instance"
                },
                "property": {
                  "type": "Identifier",
                  "start": 434,
                  "end": 442,
                  "name": "subtract"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ObjectExpression",
                  "start": 443,
                  "end": 445,
                  "properties": []
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 450,
            "end": 494,
            "value": "Throws TypeError if no property is present",
            "raw": "\"Throws TypeError if no property is present\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 499,
      "end": 634,
      "expression": {
        "type": "CallExpression",
        "start": 499,
        "end": 633,
        "callee": {
          "type": "MemberExpression",
          "start": 499,
          "end": 512,
          "object": {
            "type": "Identifier",
            "start": 499,
            "end": 505,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 506,
            "end": 512,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 516,
            "end": 525,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 529,
            "end": 572,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 535,
              "end": 572,
              "callee": {
                "type": "MemberExpression",
                "start": 535,
                "end": 552,
                "object": {
                  "type": "Identifier",
                  "start": 535,
                  "end": 543,
                  "name": "instance"
                },
                "property": {
                  "type": "Identifier",
                  "start": 544,
                  "end": 552,
                  "name": "subtract"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ObjectExpression",
                  "start": 553,
                  "end": 571,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 555,
                      "end": 569,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 555,
                        "end": 563,
                        "name": "nonsense"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 565,
                        "end": 569,
                        "value": true,
                        "raw": "true",
                        "regex": null,
                        "bigint": null
                      },
                      "kind": "init"
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 576,
            "end": 631,
            "value": "Throws TypeError if no recognized property is present",
            "raw": "\"Throws TypeError if no recognized property is present\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 636,
      "end": 742,
      "expression": {
        "type": "CallExpression",
        "start": 636,
        "end": 741,
        "callee": {
          "type": "MemberExpression",
          "start": 636,
          "end": 649,
          "object": {
            "type": "Identifier",
            "start": 636,
            "end": 642,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 643,
            "end": 649,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 653,
            "end": 662,
            "name": "TypeError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 666,
            "end": 702,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 672,
              "end": 702,
              "callee": {
                "type": "MemberExpression",
                "start": 672,
                "end": 689,
                "object": {
                  "type": "Identifier",
                  "start": 672,
                  "end": 680,
                  "name": "instance"
                },
                "property": {
                  "type": "Identifier",
                  "start": 681,
                  "end": 689,
                  "name": "subtract"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ObjectExpression",
                  "start": 690,
                  "end": 701,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 692,
                      "end": 699,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 692,
                        "end": 696,
                        "name": "sign"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 698,
                        "end": 699,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "kind": "init"
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 706,
            "end": 739,
            "value": "Sign property is not recognized",
            "raw": "\"Sign property is not recognized\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}