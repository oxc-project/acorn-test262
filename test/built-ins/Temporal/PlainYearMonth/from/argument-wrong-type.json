{
  "type": "Program",
  "start": 0,
  "end": 1207,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 348,
      "end": 544,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 354,
          "end": 543,
          "id": {
            "type": "Identifier",
            "start": 354,
            "end": 368,
            "name": "primitiveTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 371,
            "end": 543,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 375,
                "end": 399,
                "elements": [
                  {
                    "type": "Identifier",
                    "start": 376,
                    "end": 385,
                    "name": "undefined"
                  },
                  {
                    "type": "Literal",
                    "start": 387,
                    "end": 398,
                    "value": "undefined",
                    "raw": "\"undefined\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 403,
                "end": 417,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 404,
                    "end": 408,
                    "value": null,
                    "raw": "null",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 410,
                    "end": 416,
                    "value": "null",
                    "raw": "\"null\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 421,
                "end": 438,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 422,
                    "end": 426,
                    "value": true,
                    "raw": "true",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 428,
                    "end": 437,
                    "value": "boolean",
                    "raw": "\"boolean\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 442,
                "end": 462,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 443,
                    "end": 445,
                    "value": "",
                    "raw": "\"\"",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 447,
                    "end": 461,
                    "value": "empty string",
                    "raw": "\"empty string\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 466,
                "end": 522,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 467,
                    "end": 468,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 470,
                    "end": 521,
                    "value": "number that doesn't convert to a valid ISO string",
                    "raw": "\"number that doesn't convert to a valid ISO string\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 526,
                "end": 540,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 527,
                    "end": 529,
                    "value": null,
                    "raw": "1n",
                    "regex": null,
                    "bigint": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 531,
                    "end": 539,
                    "value": "bigint",
                    "raw": "\"bigint\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 546,
      "end": 779,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 551,
        "end": 575,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 557,
            "end": 575,
            "id": {
              "type": "ArrayPattern",
              "start": 557,
              "end": 575,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 558,
                  "end": 561,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 563,
                  "end": 574,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 579,
        "end": 593,
        "name": "primitiveTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 595,
        "end": 779,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 599,
            "end": 777,
            "expression": {
              "type": "CallExpression",
              "start": 599,
              "end": 776,
              "callee": {
                "type": "MemberExpression",
                "start": 599,
                "end": 612,
                "object": {
                  "type": "Identifier",
                  "start": 599,
                  "end": 605,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 606,
                  "end": 612,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "ConditionalExpression",
                  "start": 618,
                  "end": 666,
                  "test": {
                    "type": "BinaryExpression",
                    "start": 618,
                    "end": 641,
                    "left": {
                      "type": "UnaryExpression",
                      "start": 618,
                      "end": 628,
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "start": 625,
                        "end": 628,
                        "name": "arg"
                      }
                    },
                    "operator": "===",
                    "right": {
                      "type": "Literal",
                      "start": 633,
                      "end": 641,
                      "value": "string",
                      "raw": "'string'",
                      "regex": null,
                      "bigint": null
                    }
                  },
                  "consequent": {
                    "type": "Identifier",
                    "start": 644,
                    "end": 654,
                    "name": "RangeError"
                  },
                  "alternate": {
                    "type": "Identifier",
                    "start": 657,
                    "end": 666,
                    "name": "TypeError"
                  }
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 672,
                  "end": 711,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 678,
                    "end": 711,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 678,
                      "end": 706,
                      "object": {
                        "type": "MemberExpression",
                        "start": 678,
                        "end": 701,
                        "object": {
                          "type": "Identifier",
                          "start": 678,
                          "end": 686,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 687,
                          "end": 701,
                          "name": "PlainYearMonth"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 702,
                        "end": 706,
                        "name": "from"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 707,
                        "end": 710,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 717,
                  "end": 772,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 720,
                      "end": 731,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 718,
                      "end": 718,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 732,
                      "end": 771,
                      "value": {
                        "raw": " does not convert to a valid ISO string",
                        "cooked": " does not convert to a valid ISO string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 781,
      "end": 1004,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 787,
          "end": 1003,
          "id": {
            "type": "Identifier",
            "start": 787,
            "end": 801,
            "name": "typeErrorTests"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 804,
            "end": 1003,
            "elements": [
              {
                "type": "ArrayExpression",
                "start": 808,
                "end": 828,
                "elements": [
                  {
                    "type": "CallExpression",
                    "start": 809,
                    "end": 817,
                    "callee": {
                      "type": "Identifier",
                      "start": 809,
                      "end": 815,
                      "name": "Symbol"
                    },
                    "arguments": [],
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 819,
                    "end": 827,
                    "value": "symbol",
                    "raw": "\"symbol\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 832,
                "end": 852,
                "elements": [
                  {
                    "type": "ObjectExpression",
                    "start": 833,
                    "end": 835,
                    "properties": []
                  },
                  {
                    "type": "Literal",
                    "start": 837,
                    "end": 851,
                    "value": "plain object",
                    "raw": "\"plain object\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 856,
                "end": 916,
                "elements": [
                  {
                    "type": "MemberExpression",
                    "start": 857,
                    "end": 880,
                    "object": {
                      "type": "Identifier",
                      "start": 857,
                      "end": 865,
                      "name": "Temporal"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 866,
                      "end": 880,
                      "name": "PlainYearMonth"
                    },
                    "computed": false,
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 882,
                    "end": 915,
                    "value": "Temporal.PlainYearMonth, object",
                    "raw": "\"Temporal.PlainYearMonth, object\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              {
                "type": "ArrayExpression",
                "start": 920,
                "end": 1000,
                "elements": [
                  {
                    "type": "MemberExpression",
                    "start": 921,
                    "end": 954,
                    "object": {
                      "type": "MemberExpression",
                      "start": 921,
                      "end": 944,
                      "object": {
                        "type": "Identifier",
                        "start": 921,
                        "end": 929,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 930,
                        "end": 944,
                        "name": "PlainYearMonth"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 945,
                      "end": 954,
                      "name": "prototype"
                    },
                    "computed": false,
                    "optional": false
                  },
                  {
                    "type": "Literal",
                    "start": 956,
                    "end": 999,
                    "value": "Temporal.PlainYearMonth.prototype, object",
                    "raw": "\"Temporal.PlainYearMonth.prototype, object\"",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 1006,
      "end": 1206,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 1011,
        "end": 1035,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1017,
            "end": 1035,
            "id": {
              "type": "ArrayPattern",
              "start": 1017,
              "end": 1035,
              "elements": [
                {
                  "type": "Identifier",
                  "start": 1018,
                  "end": 1021,
                  "name": "arg"
                },
                {
                  "type": "Identifier",
                  "start": 1023,
                  "end": 1034,
                  "name": "description"
                }
              ]
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 1039,
        "end": 1053,
        "name": "typeErrorTests"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1055,
        "end": 1206,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1059,
            "end": 1204,
            "expression": {
              "type": "CallExpression",
              "start": 1059,
              "end": 1203,
              "callee": {
                "type": "MemberExpression",
                "start": 1059,
                "end": 1072,
                "object": {
                  "type": "Identifier",
                  "start": 1059,
                  "end": 1065,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1066,
                  "end": 1072,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1073,
                  "end": 1082,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1084,
                  "end": 1123,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1090,
                    "end": 1123,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1090,
                      "end": 1118,
                      "object": {
                        "type": "MemberExpression",
                        "start": 1090,
                        "end": 1113,
                        "object": {
                          "type": "Identifier",
                          "start": 1090,
                          "end": 1098,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1099,
                          "end": 1113,
                          "name": "PlainYearMonth"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1114,
                        "end": 1118,
                        "name": "from"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1119,
                        "end": 1122,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1125,
                  "end": 1202,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1128,
                      "end": 1139,
                      "name": "description"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1126,
                      "end": 1126,
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1140,
                      "end": 1201,
                      "value": {
                        "raw": " is not a valid property bag and does not convert to a string",
                        "cooked": " is not a valid property bag and does not convert to a string"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}