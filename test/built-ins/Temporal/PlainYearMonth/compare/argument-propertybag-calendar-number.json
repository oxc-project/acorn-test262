{
  "type": "Program",
  "start": 0,
  "end": 821,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 272,
      "end": 336,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 278,
          "end": 335,
          "id": {
            "type": "Identifier",
            "start": 278,
            "end": 285,
            "name": "numbers"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 288,
            "end": 335,
            "elements": [
              {
                "type": "Literal",
                "start": 292,
                "end": 293,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 297,
                "end": 305,
                "value": 19970327,
                "raw": "19970327",
                "regex": null,
                "bigint": null
              },
              {
                "type": "UnaryExpression",
                "start": 309,
                "end": 318,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 310,
                  "end": 318,
                  "value": 19970327,
                  "raw": "19970327",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "Literal",
                "start": 322,
                "end": 332,
                "value": 1234567890,
                "raw": "1234567890",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 338,
      "end": 820,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 343,
        "end": 357,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 349,
            "end": 357,
            "id": {
              "type": "Identifier",
              "start": 349,
              "end": 357,
              "name": "calendar"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 361,
        "end": 368,
        "name": "numbers"
      },
      "body": {
        "type": "BlockStatement",
        "start": 370,
        "end": 820,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 374,
            "end": 429,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 380,
                "end": 428,
                "id": {
                  "type": "Identifier",
                  "start": 380,
                  "end": 383,
                  "name": "arg"
                },
                "init": {
                  "type": "ObjectExpression",
                  "start": 386,
                  "end": 428,
                  "properties": [
                    {
                      "type": "Property",
                      "start": 388,
                      "end": 398,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 388,
                        "end": 392,
                        "name": "year"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 394,
                        "end": 398,
                        "value": 2019,
                        "raw": "2019",
                        "regex": null,
                        "bigint": null
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "start": 400,
                      "end": 416,
                      "method": false,
                      "shorthand": false,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 400,
                        "end": 409,
                        "name": "monthCode"
                      },
                      "value": {
                        "type": "Literal",
                        "start": 411,
                        "end": 416,
                        "value": "M06",
                        "raw": "\"M06\"",
                        "regex": null,
                        "bigint": null
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "start": 418,
                      "end": 426,
                      "method": false,
                      "shorthand": true,
                      "computed": false,
                      "key": {
                        "type": "Identifier",
                        "start": 418,
                        "end": 426,
                        "name": "calendar"
                      },
                      "value": {
                        "type": "Identifier",
                        "start": 418,
                        "end": 426,
                        "name": "calendar"
                      },
                      "kind": "init"
                    }
                  ]
                }
              }
            ],
            "kind": "const"
          },
          {
            "type": "ExpressionStatement",
            "start": 432,
            "end": 623,
            "expression": {
              "type": "CallExpression",
              "start": 432,
              "end": 622,
              "callee": {
                "type": "MemberExpression",
                "start": 432,
                "end": 445,
                "object": {
                  "type": "Identifier",
                  "start": 432,
                  "end": 438,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 439,
                  "end": 445,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 451,
                  "end": 460,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 466,
                  "end": 546,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 472,
                    "end": 546,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 472,
                      "end": 503,
                      "object": {
                        "type": "MemberExpression",
                        "start": 472,
                        "end": 495,
                        "object": {
                          "type": "Identifier",
                          "start": 472,
                          "end": 480,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 481,
                          "end": 495,
                          "name": "PlainYearMonth"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 496,
                        "end": 503,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 504,
                        "end": 507,
                        "name": "arg"
                      },
                      {
                        "type": "NewExpression",
                        "start": 509,
                        "end": 545,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 513,
                          "end": 536,
                          "object": {
                            "type": "Identifier",
                            "start": 513,
                            "end": 521,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 522,
                            "end": 536,
                            "name": "PlainYearMonth"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 537,
                            "end": 541,
                            "value": 2019,
                            "raw": "2019",
                            "regex": null,
                            "bigint": null
                          },
                          {
                            "type": "Literal",
                            "start": 543,
                            "end": 544,
                            "value": 6,
                            "raw": "6",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "Literal",
                  "start": 552,
                  "end": 618,
                  "value": "A number is not a valid ISO string for calendar (first argument)",
                  "raw": "\"A number is not a valid ISO string for calendar (first argument)\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 626,
            "end": 818,
            "expression": {
              "type": "CallExpression",
              "start": 626,
              "end": 817,
              "callee": {
                "type": "MemberExpression",
                "start": 626,
                "end": 639,
                "object": {
                  "type": "Identifier",
                  "start": 626,
                  "end": 632,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 633,
                  "end": 639,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 645,
                  "end": 654,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 660,
                  "end": 740,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 666,
                    "end": 740,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 666,
                      "end": 697,
                      "object": {
                        "type": "MemberExpression",
                        "start": 666,
                        "end": 689,
                        "object": {
                          "type": "Identifier",
                          "start": 666,
                          "end": 674,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 675,
                          "end": 689,
                          "name": "PlainYearMonth"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 690,
                        "end": 697,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "NewExpression",
                        "start": 698,
                        "end": 734,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 702,
                          "end": 725,
                          "object": {
                            "type": "Identifier",
                            "start": 702,
                            "end": 710,
                            "name": "Temporal"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 711,
                            "end": 725,
                            "name": "PlainYearMonth"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 726,
                            "end": 730,
                            "value": 2019,
                            "raw": "2019",
                            "regex": null,
                            "bigint": null
                          },
                          {
                            "type": "Literal",
                            "start": 732,
                            "end": 733,
                            "value": 6,
                            "raw": "6",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      },
                      {
                        "type": "Identifier",
                        "start": 736,
                        "end": 739,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "Literal",
                  "start": 746,
                  "end": 813,
                  "value": "A number is not a valid ISO string for calendar (second argument)",
                  "raw": "\"A number is not a valid ISO string for calendar (second argument)\"",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}