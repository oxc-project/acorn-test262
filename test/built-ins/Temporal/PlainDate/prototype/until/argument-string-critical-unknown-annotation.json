{
  "type": "Program",
  "start": 0,
  "end": 783,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 272,
      "end": 563,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 278,
          "end": 562,
          "id": {
            "type": "Identifier",
            "start": 278,
            "end": 292,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 295,
            "end": 562,
            "elements": [
              {
                "type": "Literal",
                "start": 299,
                "end": 321,
                "value": "1970-01-01[!foo=bar]",
                "raw": "\"1970-01-01[!foo=bar]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 325,
                "end": 353,
                "value": "1970-01-01T00:00[!foo=bar]",
                "raw": "\"1970-01-01T00:00[!foo=bar]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 357,
                "end": 390,
                "value": "1970-01-01T00:00[UTC][!foo=bar]",
                "raw": "\"1970-01-01T00:00[UTC][!foo=bar]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 394,
                "end": 436,
                "value": "1970-01-01T00:00[u-ca=iso8601][!foo=bar]",
                "raw": "\"1970-01-01T00:00[u-ca=iso8601][!foo=bar]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 440,
                "end": 487,
                "value": "1970-01-01T00:00[UTC][!foo=bar][u-ca=iso8601]",
                "raw": "\"1970-01-01T00:00[UTC][!foo=bar][u-ca=iso8601]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 491,
                "end": 559,
                "value": "1970-01-01T00:00[foo=bar][!_foo-bar0=Dont-Ignore-This-99999999999]",
                "raw": "\"1970-01-01T00:00[foo=bar][!_foo-bar0=Dont-Ignore-This-99999999999]\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 564,
      "end": 616,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 570,
          "end": 615,
          "id": {
            "type": "Identifier",
            "start": 570,
            "end": 578,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 581,
            "end": 615,
            "callee": {
              "type": "MemberExpression",
              "start": 585,
              "end": 603,
              "object": {
                "type": "Identifier",
                "start": 585,
                "end": 593,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 594,
                "end": 603,
                "name": "PlainDate"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 604,
                "end": 608,
                "value": 2000,
                "raw": "2000",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 610,
                "end": 611,
                "value": 5,
                "raw": "5",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 613,
                "end": 614,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 617,
      "end": 782,
      "expression": {
        "type": "CallExpression",
        "start": 617,
        "end": 781,
        "callee": {
          "type": "MemberExpression",
          "start": 617,
          "end": 639,
          "object": {
            "type": "Identifier",
            "start": 617,
            "end": 631,
            "name": "invalidStrings"
          },
          "property": {
            "type": "Identifier",
            "start": 632,
            "end": 639,
            "name": "forEach"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "start": 640,
            "end": 780,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 641,
                "end": 644,
                "name": "arg"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 649,
              "end": 780,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 653,
                  "end": 778,
                  "expression": {
                    "type": "CallExpression",
                    "start": 653,
                    "end": 777,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 653,
                      "end": 666,
                      "object": {
                        "type": "Identifier",
                        "start": 653,
                        "end": 659,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 660,
                        "end": 666,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 672,
                        "end": 682,
                        "name": "RangeError"
                      },
                      {
                        "type": "ArrowFunctionExpression",
                        "start": 688,
                        "end": 713,
                        "id": null,
                        "expression": true,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "CallExpression",
                          "start": 694,
                          "end": 713,
                          "callee": {
                            "type": "MemberExpression",
                            "start": 694,
                            "end": 708,
                            "object": {
                              "type": "Identifier",
                              "start": 694,
                              "end": 702,
                              "name": "instance"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 703,
                              "end": 708,
                              "name": "until"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "start": 709,
                              "end": 712,
                              "name": "arg"
                            }
                          ],
                          "optional": false
                        }
                      },
                      {
                        "type": "TemplateLiteral",
                        "start": 719,
                        "end": 773,
                        "expressions": [
                          {
                            "type": "Identifier",
                            "start": 768,
                            "end": 771,
                            "name": "arg"
                          }
                        ],
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "start": 720,
                            "end": 766,
                            "value": {
                              "raw": "reject unknown annotation with critical flag: ",
                              "cooked": "reject unknown annotation with critical flag: "
                            },
                            "tail": false
                          },
                          {
                            "type": "TemplateElement",
                            "start": 772,
                            "end": 772,
                            "value": {
                              "raw": "",
                              "cooked": ""
                            },
                            "tail": true
                          }
                        ]
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}