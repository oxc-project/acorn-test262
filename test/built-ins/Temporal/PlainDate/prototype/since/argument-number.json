{
  "type": "Program",
  "start": 0,
  "end": 567,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 277,
      "end": 331,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 283,
          "end": 330,
          "id": {
            "type": "Identifier",
            "start": 283,
            "end": 291,
            "name": "instance"
          },
          "init": {
            "type": "NewExpression",
            "start": 294,
            "end": 330,
            "callee": {
              "type": "MemberExpression",
              "start": 298,
              "end": 316,
              "object": {
                "type": "Identifier",
                "start": 298,
                "end": 306,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 307,
                "end": 316,
                "name": "PlainDate"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 317,
                "end": 321,
                "value": 1976,
                "raw": "1976"
              },
              {
                "type": "Literal",
                "start": 323,
                "end": 325,
                "value": 11,
                "raw": "11"
              },
              {
                "type": "Literal",
                "start": 327,
                "end": 329,
                "value": 18,
                "raw": "18"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 333,
      "end": 397,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 339,
          "end": 396,
          "id": {
            "type": "Identifier",
            "start": 339,
            "end": 346,
            "name": "numbers"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 349,
            "end": 396,
            "elements": [
              {
                "type": "Literal",
                "start": 353,
                "end": 354,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 358,
                "end": 366,
                "value": 19761118,
                "raw": "19761118"
              },
              {
                "type": "UnaryExpression",
                "start": 370,
                "end": 379,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 371,
                  "end": 379,
                  "value": 19761118,
                  "raw": "19761118"
                }
              },
              {
                "type": "Literal",
                "start": 383,
                "end": 393,
                "value": 1234567890,
                "raw": "1234567890"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 399,
      "end": 566,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 404,
        "end": 413,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 410,
            "end": 413,
            "id": {
              "type": "Identifier",
              "start": 410,
              "end": 413,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 417,
        "end": 424,
        "name": "numbers"
      },
      "body": {
        "type": "BlockStatement",
        "start": 426,
        "end": 566,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 430,
            "end": 564,
            "expression": {
              "type": "CallExpression",
              "start": 430,
              "end": 563,
              "callee": {
                "type": "MemberExpression",
                "start": 430,
                "end": 443,
                "object": {
                  "type": "Identifier",
                  "start": 430,
                  "end": 436,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 437,
                  "end": 443,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 449,
                  "end": 458,
                  "name": "TypeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 464,
                  "end": 489,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 470,
                    "end": 489,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 470,
                      "end": 484,
                      "object": {
                        "type": "Identifier",
                        "start": 470,
                        "end": 478,
                        "name": "instance"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 479,
                        "end": 484,
                        "name": "since"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 485,
                        "end": 488,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "Literal",
                  "start": 495,
                  "end": 559,
                  "value": "Numbers cannot be used in place of an ISO string for PlainDate",
                  "raw": "'Numbers cannot be used in place of an ISO string for PlainDate'"
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}