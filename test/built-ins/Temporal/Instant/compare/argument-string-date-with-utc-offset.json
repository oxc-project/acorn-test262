{
  "type": "Program",
  "start": 0,
  "end": 1353,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 272,
      "end": 533,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 278,
          "end": 532,
          "id": {
            "type": "Identifier",
            "start": 278,
            "end": 290,
            "name": "validStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 293,
            "end": 532,
            "elements": [
              {
                "type": "Literal",
                "start": 297,
                "end": 313,
                "value": "1970-01-01T00Z",
                "raw": "\"1970-01-01T00Z\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 317,
                "end": 338,
                "value": "1970-01-01T00Z[UTC]",
                "raw": "\"1970-01-01T00Z[UTC]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 342,
                "end": 364,
                "value": "1970-01-01T00Z[!UTC]",
                "raw": "\"1970-01-01T00Z[!UTC]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 368,
                "end": 399,
                "value": "1970-01-01T00Z[Europe/Vienna]",
                "raw": "\"1970-01-01T00Z[Europe/Vienna]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 403,
                "end": 424,
                "value": "1970-01-01T00+00:00",
                "raw": "\"1970-01-01T00+00:00\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 428,
                "end": 454,
                "value": "1970-01-01T00+00:00[UTC]",
                "raw": "\"1970-01-01T00+00:00[UTC]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 458,
                "end": 485,
                "value": "1970-01-01T00+00:00[!UTC]",
                "raw": "\"1970-01-01T00+00:00[!UTC]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 489,
                "end": 529,
                "value": "1969-12-31T16-08:00[America/Vancouver]",
                "raw": "\"1969-12-31T16-08:00[America/Vancouver]\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 535,
      "end": 727,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 540,
        "end": 549,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 546,
            "end": 549,
            "id": {
              "type": "Identifier",
              "start": 546,
              "end": 549,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 553,
        "end": 565,
        "name": "validStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 567,
        "end": 727,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 571,
            "end": 621,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 577,
                "end": 620,
                "id": {
                  "type": "Identifier",
                  "start": 577,
                  "end": 583,
                  "name": "result"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 586,
                  "end": 620,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 586,
                    "end": 610,
                    "object": {
                      "type": "MemberExpression",
                      "start": 586,
                      "end": 602,
                      "object": {
                        "type": "Identifier",
                        "start": 586,
                        "end": 594,
                        "name": "Temporal"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 595,
                        "end": 602,
                        "name": "Instant"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 603,
                      "end": 610,
                      "name": "compare"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 611,
                      "end": 614,
                      "name": "arg"
                    },
                    {
                      "type": "Identifier",
                      "start": 616,
                      "end": 619,
                      "name": "arg"
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "const"
          },
          {
            "type": "ExpressionStatement",
            "start": 625,
            "end": 725,
            "expression": {
              "type": "CallExpression",
              "start": 625,
              "end": 724,
              "callee": {
                "type": "MemberExpression",
                "start": 625,
                "end": 641,
                "object": {
                  "type": "Identifier",
                  "start": 625,
                  "end": 631,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 632,
                  "end": 641,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 647,
                  "end": 653,
                  "name": "result"
                },
                {
                  "type": "Literal",
                  "start": 659,
                  "end": 660,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                },
                {
                  "type": "TemplateLiteral",
                  "start": 666,
                  "end": 720,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 670,
                      "end": 673,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 667,
                      "end": 668,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 674,
                      "end": 719,
                      "value": {
                        "raw": "\" is a valid UTC offset with time for Instant",
                        "cooked": "\" is a valid UTC offset with time for Instant"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 729,
      "end": 938,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 735,
          "end": 937,
          "id": {
            "type": "Identifier",
            "start": 735,
            "end": 749,
            "name": "invalidStrings"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 752,
            "end": 937,
            "elements": [
              {
                "type": "Literal",
                "start": 756,
                "end": 769,
                "value": "2022-09-15Z",
                "raw": "\"2022-09-15Z\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 773,
                "end": 791,
                "value": "2022-09-15Z[UTC]",
                "raw": "\"2022-09-15Z[UTC]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 795,
                "end": 823,
                "value": "2022-09-15Z[Europe/Vienna]",
                "raw": "\"2022-09-15Z[Europe/Vienna]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 827,
                "end": 845,
                "value": "2022-09-15+00:00",
                "raw": "\"2022-09-15+00:00\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 849,
                "end": 872,
                "value": "2022-09-15+00:00[UTC]",
                "raw": "\"2022-09-15+00:00[UTC]\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 876,
                "end": 894,
                "value": "2022-09-15-02:30",
                "raw": "\"2022-09-15-02:30\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 898,
                "end": 934,
                "value": "2022-09-15-02:30[America/St_Johns]",
                "raw": "\"2022-09-15-02:30[America/St_Johns]\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 939,
      "end": 978,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 945,
          "end": 977,
          "id": {
            "type": "Identifier",
            "start": 945,
            "end": 950,
            "name": "epoch"
          },
          "init": {
            "type": "NewExpression",
            "start": 953,
            "end": 977,
            "callee": {
              "type": "MemberExpression",
              "start": 957,
              "end": 973,
              "object": {
                "type": "Identifier",
                "start": 957,
                "end": 965,
                "name": "Temporal"
              },
              "property": {
                "type": "Identifier",
                "start": 966,
                "end": 973,
                "name": "Instant"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 974,
                "end": 976,
                "value": null,
                "raw": "0n",
                "regex": null,
                "bigint": "0"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ForOfStatement",
      "start": 980,
      "end": 1352,
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "start": 985,
        "end": 994,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 991,
            "end": 994,
            "id": {
              "type": "Identifier",
              "start": 991,
              "end": 994,
              "name": "arg"
            },
            "init": null
          }
        ],
        "kind": "const"
      },
      "right": {
        "type": "Identifier",
        "start": 998,
        "end": 1012,
        "name": "invalidStrings"
      },
      "body": {
        "type": "BlockStatement",
        "start": 1014,
        "end": 1352,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 1018,
            "end": 1182,
            "expression": {
              "type": "CallExpression",
              "start": 1018,
              "end": 1181,
              "callee": {
                "type": "MemberExpression",
                "start": 1018,
                "end": 1031,
                "object": {
                  "type": "Identifier",
                  "start": 1018,
                  "end": 1024,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1025,
                  "end": 1031,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1037,
                  "end": 1047,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1053,
                  "end": 1095,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1059,
                    "end": 1095,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1059,
                      "end": 1083,
                      "object": {
                        "type": "MemberExpression",
                        "start": 1059,
                        "end": 1075,
                        "object": {
                          "type": "Identifier",
                          "start": 1059,
                          "end": 1067,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1068,
                          "end": 1075,
                          "name": "Instant"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1076,
                        "end": 1083,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1084,
                        "end": 1087,
                        "name": "arg"
                      },
                      {
                        "type": "Identifier",
                        "start": 1089,
                        "end": 1094,
                        "name": "epoch"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1101,
                  "end": 1177,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1105,
                      "end": 1108,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1102,
                      "end": 1103,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1109,
                      "end": 1176,
                      "value": {
                        "raw": "\" UTC offset without time is not valid for Instant (first argument)",
                        "cooked": "\" UTC offset without time is not valid for Instant (first argument)"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 1185,
            "end": 1350,
            "expression": {
              "type": "CallExpression",
              "start": 1185,
              "end": 1349,
              "callee": {
                "type": "MemberExpression",
                "start": 1185,
                "end": 1198,
                "object": {
                  "type": "Identifier",
                  "start": 1185,
                  "end": 1191,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 1192,
                  "end": 1198,
                  "name": "throws"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 1204,
                  "end": 1214,
                  "name": "RangeError"
                },
                {
                  "type": "ArrowFunctionExpression",
                  "start": 1220,
                  "end": 1262,
                  "id": null,
                  "expression": true,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "CallExpression",
                    "start": 1226,
                    "end": 1262,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1226,
                      "end": 1250,
                      "object": {
                        "type": "MemberExpression",
                        "start": 1226,
                        "end": 1242,
                        "object": {
                          "type": "Identifier",
                          "start": 1226,
                          "end": 1234,
                          "name": "Temporal"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1235,
                          "end": 1242,
                          "name": "Instant"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1243,
                        "end": 1250,
                        "name": "compare"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1251,
                        "end": 1256,
                        "name": "epoch"
                      },
                      {
                        "type": "Identifier",
                        "start": 1258,
                        "end": 1261,
                        "name": "arg"
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "TemplateLiteral",
                  "start": 1268,
                  "end": 1345,
                  "expressions": [
                    {
                      "type": "Identifier",
                      "start": 1272,
                      "end": 1275,
                      "name": "arg"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 1269,
                      "end": 1270,
                      "value": {
                        "raw": "\"",
                        "cooked": "\""
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1276,
                      "end": 1344,
                      "value": {
                        "raw": "\" UTC offset without time is not valid for Instant (second argument)",
                        "cooked": "\" UTC offset without time is not valid for Instant (second argument)"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}