{
  "type": "Program",
  "start": 0,
  "end": 788,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 203,
      "end": 297,
      "expression": {
        "type": "CallExpression",
        "start": 203,
        "end": 296,
        "callee": {
          "type": "MemberExpression",
          "start": 203,
          "end": 219,
          "object": {
            "type": "Identifier",
            "start": 203,
            "end": 209,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 210,
            "end": 219,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 220,
            "end": 234,
            "callee": {
              "type": "MemberExpression",
              "start": 220,
              "end": 229,
              "object": {
                "type": "Identifier",
                "start": 220,
                "end": 224,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 225,
                "end": 229,
                "name": "cosh"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 230,
                "end": 233,
                "name": "NaN"
              }
            ],
            "optional": false
          },
          {
            "type": "MemberExpression",
            "start": 236,
            "end": 246,
            "object": {
              "type": "Identifier",
              "start": 236,
              "end": 242,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 243,
              "end": 246,
              "name": "NaN"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 250,
            "end": 295,
            "value": "Math.cosh produces incorrect output for NaN",
            "raw": "\"Math.cosh produces incorrect output for NaN\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 298,
      "end": 376,
      "expression": {
        "type": "CallExpression",
        "start": 298,
        "end": 375,
        "callee": {
          "type": "MemberExpression",
          "start": 298,
          "end": 314,
          "object": {
            "type": "Identifier",
            "start": 298,
            "end": 304,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 305,
            "end": 314,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 315,
            "end": 327,
            "callee": {
              "type": "MemberExpression",
              "start": 315,
              "end": 324,
              "object": {
                "type": "Identifier",
                "start": 315,
                "end": 319,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 320,
                "end": 324,
                "name": "cosh"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 325,
                "end": 326,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 329,
            "end": 330,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 332,
            "end": 374,
            "value": "Math.cosh should produce 1 for input = 0",
            "raw": "\"Math.cosh should produce 1 for input = 0\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 377,
      "end": 457,
      "expression": {
        "type": "CallExpression",
        "start": 377,
        "end": 456,
        "callee": {
          "type": "MemberExpression",
          "start": 377,
          "end": 393,
          "object": {
            "type": "Identifier",
            "start": 377,
            "end": 383,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 384,
            "end": 393,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 394,
            "end": 407,
            "callee": {
              "type": "MemberExpression",
              "start": 394,
              "end": 403,
              "object": {
                "type": "Identifier",
                "start": 394,
                "end": 398,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 399,
                "end": 403,
                "name": "cosh"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 404,
                "end": 406,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 405,
                  "end": 406,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 409,
            "end": 410,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 412,
            "end": 455,
            "value": "Math.cosh should produce 1 for input = -0",
            "raw": "\"Math.cosh should produce 1 for input = -0\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 458,
      "end": 622,
      "expression": {
        "type": "CallExpression",
        "start": 458,
        "end": 621,
        "callee": {
          "type": "MemberExpression",
          "start": 458,
          "end": 474,
          "object": {
            "type": "Identifier",
            "start": 458,
            "end": 464,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 465,
            "end": 474,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 475,
            "end": 510,
            "callee": {
              "type": "MemberExpression",
              "start": 475,
              "end": 484,
              "object": {
                "type": "Identifier",
                "start": 475,
                "end": 479,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 480,
                "end": 484,
                "name": "cosh"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 485,
                "end": 509,
                "object": {
                  "type": "Identifier",
                  "start": 485,
                  "end": 491,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 492,
                  "end": 509,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            ],
            "optional": false
          },
          {
            "type": "MemberExpression",
            "start": 512,
            "end": 536,
            "object": {
              "type": "Identifier",
              "start": 512,
              "end": 518,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 519,
              "end": 536,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 540,
            "end": 620,
            "value": "Math.cosh should produce Number.POSITIVE_INFINITY for Number.NEGATIVE_INFINITY",
            "raw": "\"Math.cosh should produce Number.POSITIVE_INFINITY for Number.NEGATIVE_INFINITY\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 623,
      "end": 787,
      "expression": {
        "type": "CallExpression",
        "start": 623,
        "end": 786,
        "callee": {
          "type": "MemberExpression",
          "start": 623,
          "end": 639,
          "object": {
            "type": "Identifier",
            "start": 623,
            "end": 629,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 630,
            "end": 639,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 640,
            "end": 675,
            "callee": {
              "type": "MemberExpression",
              "start": 640,
              "end": 649,
              "object": {
                "type": "Identifier",
                "start": 640,
                "end": 644,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 645,
                "end": 649,
                "name": "cosh"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "MemberExpression",
                "start": 650,
                "end": 674,
                "object": {
                  "type": "Identifier",
                  "start": 650,
                  "end": 656,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 657,
                  "end": 674,
                  "name": "POSITIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            ],
            "optional": false
          },
          {
            "type": "MemberExpression",
            "start": 677,
            "end": 701,
            "object": {
              "type": "Identifier",
              "start": 677,
              "end": 683,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 684,
              "end": 701,
              "name": "POSITIVE_INFINITY"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 705,
            "end": 785,
            "value": "Math.cosh should produce Number.POSITIVE_INFINITY for Number.POSITIVE_INFINITY",
            "raw": "\"Math.cosh should produce Number.POSITIVE_INFINITY for Number.POSITIVE_INFINITY\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}