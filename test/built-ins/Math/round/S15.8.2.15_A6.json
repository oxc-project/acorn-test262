{
  "type": "Program",
  "start": 0,
  "end": 981,
  "body": [
    {
      "type": "ForStatement",
      "start": 495,
      "end": 706,
      "init": {
        "type": "VariableDeclaration",
        "start": 500,
        "end": 509,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 504,
            "end": 509,
            "id": {
              "type": "Identifier",
              "start": 504,
              "end": 505,
              "name": "i"
            },
            "init": {
              "type": "Literal",
              "start": 508,
              "end": 509,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          }
        ],
        "kind": "var"
      },
      "test": {
        "type": "BinaryExpression",
        "start": 511,
        "end": 520,
        "left": {
          "type": "Identifier",
          "start": 511,
          "end": 512,
          "name": "i"
        },
        "operator": "<=",
        "right": {
          "type": "Literal",
          "start": 516,
          "end": 520,
          "value": 1000,
          "raw": "1000",
          "regex": null,
          "bigint": null
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 522,
        "end": 525,
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 522,
          "end": 523,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 527,
        "end": 706,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 531,
            "end": 548,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 535,
                "end": 547,
                "id": {
                  "type": "Identifier",
                  "start": 535,
                  "end": 536,
                  "name": "x"
                },
                "init": {
                  "type": "BinaryExpression",
                  "start": 539,
                  "end": 547,
                  "left": {
                    "type": "Identifier",
                    "start": 539,
                    "end": 540,
                    "name": "i"
                  },
                  "operator": "/",
                  "right": {
                    "type": "Literal",
                    "start": 543,
                    "end": 547,
                    "value": 10,
                    "raw": "10.0",
                    "regex": null,
                    "bigint": null
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "start": 552,
            "end": 704,
            "expression": {
              "type": "CallExpression",
              "start": 552,
              "end": 703,
              "callee": {
                "type": "MemberExpression",
                "start": 552,
                "end": 568,
                "object": {
                  "type": "Identifier",
                  "start": 552,
                  "end": 558,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 559,
                  "end": 568,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 574,
                  "end": 587,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 574,
                    "end": 584,
                    "object": {
                      "type": "Identifier",
                      "start": 574,
                      "end": 578,
                      "name": "Math"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 579,
                      "end": 584,
                      "name": "round"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 585,
                      "end": 586,
                      "name": "x"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "CallExpression",
                  "start": 593,
                  "end": 612,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 593,
                    "end": 603,
                    "object": {
                      "type": "Identifier",
                      "start": 593,
                      "end": 597,
                      "name": "Math"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 598,
                      "end": 603,
                      "name": "floor"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 604,
                      "end": 611,
                      "left": {
                        "type": "Identifier",
                        "start": 604,
                        "end": 605,
                        "name": "x"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 608,
                        "end": 611,
                        "value": 0.5,
                        "raw": "0.5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 618,
                  "end": 699,
                  "value": "Math.round(i / 10.0) must return the same value returned by Math.floor(x + 0.5)",
                  "raw": "'Math.round(i / 10.0) must return the same value returned by Math.floor(x + 0.5)'",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    {
      "type": "ForStatement",
      "start": 708,
      "end": 980,
      "init": {
        "type": "AssignmentExpression",
        "start": 713,
        "end": 719,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 713,
          "end": 714,
          "name": "i"
        },
        "right": {
          "type": "UnaryExpression",
          "start": 717,
          "end": 719,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 718,
            "end": 719,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          }
        }
      },
      "test": {
        "type": "BinaryExpression",
        "start": 721,
        "end": 731,
        "left": {
          "type": "Identifier",
          "start": 721,
          "end": 722,
          "name": "i"
        },
        "operator": ">=",
        "right": {
          "type": "UnaryExpression",
          "start": 726,
          "end": 731,
          "operator": "-",
          "prefix": true,
          "argument": {
            "type": "Literal",
            "start": 727,
            "end": 731,
            "value": 1000,
            "raw": "1000",
            "regex": null,
            "bigint": null
          }
        }
      },
      "update": {
        "type": "UpdateExpression",
        "start": 733,
        "end": 736,
        "operator": "--",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "start": 733,
          "end": 734,
          "name": "i"
        }
      },
      "body": {
        "type": "BlockStatement",
        "start": 738,
        "end": 980,
        "body": [
          {
            "type": "IfStatement",
            "start": 742,
            "end": 822,
            "test": {
              "type": "BinaryExpression",
              "start": 746,
              "end": 754,
              "left": {
                "type": "Identifier",
                "start": 746,
                "end": 747,
                "name": "i"
              },
              "operator": "===",
              "right": {
                "type": "UnaryExpression",
                "start": 752,
                "end": 754,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 753,
                  "end": 754,
                  "value": 5,
                  "raw": "5",
                  "regex": null,
                  "bigint": null
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 758,
              "end": 791,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 764,
                  "end": 787,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 764,
                    "end": 786,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 764,
                      "end": 765,
                      "name": "x"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "start": 768,
                      "end": 786,
                      "operator": "-",
                      "prefix": true,
                      "argument": {
                        "type": "Literal",
                        "start": 769,
                        "end": 786,
                        "value": 0.500000000000001,
                        "raw": "0.500000000000001",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "start": 799,
              "end": 822,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 805,
                  "end": 818,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 805,
                    "end": 817,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 805,
                      "end": 806,
                      "name": "x"
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "start": 809,
                      "end": 817,
                      "left": {
                        "type": "Identifier",
                        "start": 809,
                        "end": 810,
                        "name": "i"
                      },
                      "operator": "/",
                      "right": {
                        "type": "Literal",
                        "start": 813,
                        "end": 817,
                        "value": 10,
                        "raw": "10.0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "start": 826,
            "end": 978,
            "expression": {
              "type": "CallExpression",
              "start": 826,
              "end": 977,
              "callee": {
                "type": "MemberExpression",
                "start": 826,
                "end": 842,
                "object": {
                  "type": "Identifier",
                  "start": 826,
                  "end": 832,
                  "name": "assert"
                },
                "property": {
                  "type": "Identifier",
                  "start": 833,
                  "end": 842,
                  "name": "sameValue"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "start": 848,
                  "end": 861,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 848,
                    "end": 858,
                    "object": {
                      "type": "Identifier",
                      "start": 848,
                      "end": 852,
                      "name": "Math"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 853,
                      "end": 858,
                      "name": "round"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 859,
                      "end": 860,
                      "name": "x"
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "CallExpression",
                  "start": 867,
                  "end": 886,
                  "callee": {
                    "type": "MemberExpression",
                    "start": 867,
                    "end": 877,
                    "object": {
                      "type": "Identifier",
                      "start": 867,
                      "end": 871,
                      "name": "Math"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 872,
                      "end": 877,
                      "name": "floor"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 878,
                      "end": 885,
                      "left": {
                        "type": "Identifier",
                        "start": 878,
                        "end": 879,
                        "name": "x"
                      },
                      "operator": "+",
                      "right": {
                        "type": "Literal",
                        "start": 882,
                        "end": 885,
                        "value": 0.5,
                        "raw": "0.5",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "optional": false
                },
                {
                  "type": "Literal",
                  "start": 892,
                  "end": 973,
                  "value": "Math.round(i / 10.0) must return the same value returned by Math.floor(x + 0.5)",
                  "raw": "'Math.round(i / 10.0) must return the same value returned by Math.floor(x + 0.5)'",
                  "regex": null,
                  "bigint": null
                }
              ],
              "optional": false
            }
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}