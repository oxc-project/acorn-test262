{
  "type": "Program",
  "start": 0,
  "end": 284,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 202,
      "end": 241,
      "expression": {
        "type": "CallExpression",
        "start": 202,
        "end": 240,
        "callee": {
          "type": "MemberExpression",
          "start": 202,
          "end": 218,
          "object": {
            "type": "Identifier",
            "start": 202,
            "end": 208,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 209,
            "end": 218,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 219,
            "end": 230,
            "callee": {
              "type": "MemberExpression",
              "start": 219,
              "end": 227,
              "object": {
                "type": "Identifier",
                "start": 219,
                "end": 223,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 224,
                "end": 227,
                "name": "sin"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 228,
                "end": 229,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 232,
            "end": 233,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 235,
            "end": 239,
            "value": "+0",
            "raw": "\"+0\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 242,
      "end": 283,
      "expression": {
        "type": "CallExpression",
        "start": 242,
        "end": 282,
        "callee": {
          "type": "MemberExpression",
          "start": 242,
          "end": 258,
          "object": {
            "type": "Identifier",
            "start": 242,
            "end": 248,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 249,
            "end": 258,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 259,
            "end": 271,
            "callee": {
              "type": "MemberExpression",
              "start": 259,
              "end": 267,
              "object": {
                "type": "Identifier",
                "start": 259,
                "end": 263,
                "name": "Math"
              },
              "property": {
                "type": "Identifier",
                "start": 264,
                "end": 267,
                "name": "sin"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 268,
                "end": 270,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 269,
                  "end": 270,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                }
              }
            ],
            "optional": false
          },
          {
            "type": "UnaryExpression",
            "start": 273,
            "end": 275,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 274,
              "end": 275,
              "value": 0,
              "raw": "0",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 277,
            "end": 281,
            "value": "-0",
            "raw": "\"-0\"",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}