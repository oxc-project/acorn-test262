{
  "type": "Program",
  "start": 0,
  "end": 930,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 305,
      "end": 456,
      "expression": {
        "type": "CallExpression",
        "start": 305,
        "end": 455,
        "callee": {
          "type": "MemberExpression",
          "start": 305,
          "end": 321,
          "object": {
            "type": "Identifier",
            "start": 305,
            "end": 311,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 312,
            "end": 321,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "UnaryExpression",
            "start": 325,
            "end": 362,
            "operator": "typeof",
            "prefix": true,
            "argument": {
              "type": "MemberExpression",
              "start": 332,
              "end": 362,
              "object": {
                "type": "MemberExpression",
                "start": 332,
                "end": 353,
                "object": {
                  "type": "Identifier",
                  "start": 332,
                  "end": 343,
                  "name": "ShadowRealm"
                },
                "property": {
                  "type": "Identifier",
                  "start": 344,
                  "end": 353,
                  "name": "prototype"
                },
                "computed": false,
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 354,
                "end": 362,
                "name": "evaluate"
              },
              "computed": false,
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 366,
            "end": 376,
            "value": "function",
            "raw": "'function'"
          },
          {
            "type": "Literal",
            "start": 380,
            "end": 453,
            "value": "This test must fail if ShadowRealm.prototype.evaluate is not a function",
            "raw": "'This test must fail if ShadowRealm.prototype.evaluate is not a function'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 458,
      "end": 486,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 464,
          "end": 485,
          "id": {
            "type": "Identifier",
            "start": 464,
            "end": 465,
            "name": "r"
          },
          "init": {
            "type": "NewExpression",
            "start": 468,
            "end": 485,
            "callee": {
              "type": "Identifier",
              "start": 472,
              "end": 483,
              "name": "ShadowRealm"
            },
            "arguments": []
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 488,
      "end": 573,
      "expression": {
        "type": "CallExpression",
        "start": 488,
        "end": 572,
        "callee": {
          "type": "MemberExpression",
          "start": 488,
          "end": 501,
          "object": {
            "type": "Identifier",
            "start": 488,
            "end": 494,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 495,
            "end": 501,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 502,
            "end": 513,
            "name": "SyntaxError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 515,
            "end": 538,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 521,
              "end": 538,
              "callee": {
                "type": "MemberExpression",
                "start": 521,
                "end": 531,
                "object": {
                  "type": "Identifier",
                  "start": 521,
                  "end": 522,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 523,
                  "end": 531,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 532,
                  "end": 537,
                  "value": "...",
                  "raw": "'...'"
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 540,
            "end": 571,
            "value": "SyntaxError exposed to Parent",
            "raw": "'SyntaxError exposed to Parent'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 574,
      "end": 773,
      "expression": {
        "type": "CallExpression",
        "start": 574,
        "end": 772,
        "callee": {
          "type": "MemberExpression",
          "start": 574,
          "end": 587,
          "object": {
            "type": "Identifier",
            "start": 574,
            "end": 580,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 581,
            "end": 587,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 588,
            "end": 599,
            "name": "SyntaxError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 601,
            "end": 706,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 607,
              "end": 706,
              "callee": {
                "type": "MemberExpression",
                "start": 607,
                "end": 617,
                "object": {
                  "type": "Identifier",
                  "start": 607,
                  "end": 608,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 609,
                  "end": 617,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "start": 618,
                  "end": 705,
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 619,
                      "end": 704,
                      "value": {
                        "raw": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  function lol(){\n    arguments = 1;\n  }\n",
                        "cooked": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  function lol(){\n    arguments = 1;\n  }\n"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 708,
            "end": 771,
            "value": "Strict mode only SyntaxError, setting value to a fn arguments",
            "raw": "'Strict mode only SyntaxError, setting value to a fn arguments'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 774,
      "end": 929,
      "expression": {
        "type": "CallExpression",
        "start": 774,
        "end": 928,
        "callee": {
          "type": "MemberExpression",
          "start": 774,
          "end": 787,
          "object": {
            "type": "Identifier",
            "start": 774,
            "end": 780,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 781,
            "end": 787,
            "name": "throws"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 788,
            "end": 799,
            "name": "SyntaxError"
          },
          {
            "type": "ArrowFunctionExpression",
            "start": 801,
            "end": 883,
            "id": null,
            "expression": true,
            "generator": false,
            "async": false,
            "params": [],
            "body": {
              "type": "CallExpression",
              "start": 807,
              "end": 883,
              "callee": {
                "type": "MemberExpression",
                "start": 807,
                "end": 817,
                "object": {
                  "type": "Identifier",
                  "start": 807,
                  "end": 808,
                  "name": "r"
                },
                "property": {
                  "type": "Identifier",
                  "start": 809,
                  "end": 817,
                  "name": "evaluate"
                },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "TemplateLiteral",
                  "start": 818,
                  "end": 882,
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 819,
                      "end": 881,
                      "value": {
                        "raw": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  var public = 1;\n",
                        "cooked": "\n  \"use strict\";\n  throw \"do not evaluate\";\n  var public = 1;\n"
                      },
                      "tail": true
                    }
                  ]
                }
              ],
              "optional": false
            }
          },
          {
            "type": "Literal",
            "start": 885,
            "end": 927,
            "value": "Strict mode only SyntaxError, var public",
            "raw": "'Strict mode only SyntaxError, var public'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}