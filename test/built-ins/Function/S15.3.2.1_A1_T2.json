{
  "type": "Program",
  "start": 0,
  "end": 1231,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 884,
      "end": 952,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 888,
          "end": 951,
          "id": {
            "type": "Identifier",
            "start": 888,
            "end": 892,
            "name": "body"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 895,
            "end": 951,
            "properties": [
              {
                "type": "Property",
                "start": 899,
                "end": 949,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 899,
                  "end": 907,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 909,
                  "end": 949,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 920,
                    "end": 949,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 926,
                        "end": 945,
                        "argument": {
                          "type": "Literal",
                          "start": 933,
                          "end": 944,
                          "value": "return 1;",
                          "raw": "\"return 1;\"",
                          "regex": null,
                          "bigint": null
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 954,
      "end": 1066,
      "block": {
        "type": "BlockStatement",
        "start": 958,
        "end": 991,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 962,
            "end": 989,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 966,
                "end": 988,
                "id": {
                  "type": "Identifier",
                  "start": 966,
                  "end": 967,
                  "name": "f"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 970,
                  "end": 988,
                  "callee": {
                    "type": "Identifier",
                    "start": 974,
                    "end": 982,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 983,
                      "end": 987,
                      "name": "body"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 992,
        "end": 1066,
        "param": {
          "type": "Identifier",
          "start": 999,
          "end": 1000,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1002,
          "end": 1066,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 1006,
              "end": 1064,
              "argument": {
                "type": "NewExpression",
                "start": 1012,
                "end": 1063,
                "callee": {
                  "type": "Identifier",
                  "start": 1016,
                  "end": 1028,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1029,
                    "end": 1062,
                    "left": {
                      "type": "Literal",
                      "start": 1029,
                      "end": 1058,
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1061,
                      "end": 1062,
                      "name": "e"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1068,
      "end": 1183,
      "expression": {
        "type": "CallExpression",
        "start": 1068,
        "end": 1182,
        "callee": {
          "type": "MemberExpression",
          "start": 1068,
          "end": 1084,
          "object": {
            "type": "Identifier",
            "start": 1068,
            "end": 1074,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1075,
            "end": 1084,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1085,
            "end": 1098,
            "object": {
              "type": "Identifier",
              "start": 1085,
              "end": 1086,
              "name": "f"
            },
            "property": {
              "type": "Identifier",
              "start": 1087,
              "end": 1098,
              "name": "constructor"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1100,
            "end": 1108,
            "name": "Function"
          },
          {
            "type": "Literal",
            "start": 1110,
            "end": 1181,
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1184,
      "end": 1230,
      "expression": {
        "type": "CallExpression",
        "start": 1184,
        "end": 1229,
        "callee": {
          "type": "MemberExpression",
          "start": 1184,
          "end": 1200,
          "object": {
            "type": "Identifier",
            "start": 1184,
            "end": 1190,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1191,
            "end": 1200,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1201,
            "end": 1204,
            "callee": {
              "type": "Identifier",
              "start": 1201,
              "end": 1202,
              "name": "f"
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1206,
            "end": 1207,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1209,
            "end": 1228,
            "value": "f() must return 1",
            "raw": "'f() must return 1'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}