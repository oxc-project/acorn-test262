{
  "type": "Program",
  "start": 0,
  "end": 1275,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 946,
      "end": 969,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 950,
          "end": 968,
          "id": {
            "type": "Identifier",
            "start": 950,
            "end": 954,
            "name": "body"
          },
          "init": {
            "type": "Literal",
            "start": 957,
            "end": 968,
            "value": "return a;",
            "raw": "\"return a;\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 971,
      "end": 991,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 975,
          "end": 990,
          "id": {
            "type": "Identifier",
            "start": 975,
            "end": 976,
            "name": "p"
          },
          "init": {
            "type": "CallExpression",
            "start": 979,
            "end": 990,
            "callee": {
              "type": "Identifier",
              "start": 979,
              "end": 985,
              "name": "Object"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 986,
                "end": 989,
                "value": "a",
                "raw": "\"a\"",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 993,
      "end": 1108,
      "block": {
        "type": "BlockStatement",
        "start": 997,
        "end": 1033,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 1001,
            "end": 1031,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 1005,
                "end": 1030,
                "id": {
                  "type": "Identifier",
                  "start": 1005,
                  "end": 1006,
                  "name": "f"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 1009,
                  "end": 1030,
                  "callee": {
                    "type": "Identifier",
                    "start": 1013,
                    "end": 1021,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 1022,
                      "end": 1023,
                      "name": "p"
                    },
                    {
                      "type": "Identifier",
                      "start": 1025,
                      "end": 1029,
                      "name": "body"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1034,
        "end": 1108,
        "param": {
          "type": "Identifier",
          "start": 1041,
          "end": 1042,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1044,
          "end": 1108,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 1048,
              "end": 1106,
              "argument": {
                "type": "NewExpression",
                "start": 1054,
                "end": 1105,
                "callee": {
                  "type": "Identifier",
                  "start": 1058,
                  "end": 1070,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1071,
                    "end": 1104,
                    "left": {
                      "type": "Literal",
                      "start": 1071,
                      "end": 1100,
                      "value": "#1: test failed with error ",
                      "raw": "'#1: test failed with error '",
                      "regex": null,
                      "bigint": null
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1103,
                      "end": 1104,
                      "name": "e"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 1110,
      "end": 1225,
      "expression": {
        "type": "CallExpression",
        "start": 1110,
        "end": 1224,
        "callee": {
          "type": "MemberExpression",
          "start": 1110,
          "end": 1126,
          "object": {
            "type": "Identifier",
            "start": 1110,
            "end": 1116,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1117,
            "end": 1126,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1127,
            "end": 1140,
            "object": {
              "type": "Identifier",
              "start": 1127,
              "end": 1128,
              "name": "f"
            },
            "property": {
              "type": "Identifier",
              "start": 1129,
              "end": 1140,
              "name": "constructor"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 1142,
            "end": 1150,
            "name": "Function"
          },
          {
            "type": "Literal",
            "start": 1152,
            "end": 1223,
            "value": "The value of f.constructor is expected to equal the value of Function",
            "raw": "'The value of f.constructor is expected to equal the value of Function'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1226,
      "end": 1274,
      "expression": {
        "type": "CallExpression",
        "start": 1226,
        "end": 1273,
        "callee": {
          "type": "MemberExpression",
          "start": 1226,
          "end": 1242,
          "object": {
            "type": "Identifier",
            "start": 1226,
            "end": 1232,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1233,
            "end": 1242,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1243,
            "end": 1247,
            "callee": {
              "type": "Identifier",
              "start": 1243,
              "end": 1244,
              "name": "f"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1245,
                "end": 1246,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1249,
            "end": 1250,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 1252,
            "end": 1272,
            "value": "f(1) must return 1",
            "raw": "'f(1) must return 1'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}