{
  "type": "Program",
  "start": 0,
  "end": 799,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 416,
      "end": 426,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 420,
          "end": 425,
          "id": {
            "type": "Identifier",
            "start": 420,
            "end": 421,
            "name": "i"
          },
          "init": {
            "type": "Literal",
            "start": 424,
            "end": 425,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 428,
      "end": 494,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 432,
          "end": 493,
          "id": {
            "type": "Identifier",
            "start": 432,
            "end": 433,
            "name": "p"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 436,
            "end": 493,
            "properties": [
              {
                "type": "Property",
                "start": 440,
                "end": 491,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 440,
                  "end": 448,
                  "name": "toString"
                },
                "value": {
                  "type": "FunctionExpression",
                  "start": 450,
                  "end": 491,
                  "id": null,
                  "expression": false,
                  "generator": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 461,
                    "end": 491,
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "start": 467,
                        "end": 487,
                        "argument": {
                          "type": "BinaryExpression",
                          "start": 474,
                          "end": 487,
                          "left": {
                            "type": "Literal",
                            "start": 474,
                            "end": 479,
                            "value": "arg",
                            "raw": "\"arg\"",
                            "regex": null,
                            "bigint": null
                          },
                          "operator": "+",
                          "right": {
                            "type": "ParenthesizedExpression",
                            "start": 482,
                            "end": 487,
                            "expression": {
                              "type": "UpdateExpression",
                              "start": 483,
                              "end": 486,
                              "operator": "++",
                              "prefix": true,
                              "argument": {
                                "type": "Identifier",
                                "start": 485,
                                "end": 486,
                                "name": "i"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 496,
      "end": 624,
      "block": {
        "type": "BlockStatement",
        "start": 500,
        "end": 565,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 504,
            "end": 563,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 508,
                "end": 562,
                "id": {
                  "type": "Identifier",
                  "start": 508,
                  "end": 509,
                  "name": "f"
                },
                "init": {
                  "type": "CallExpression",
                  "start": 512,
                  "end": 562,
                  "callee": {
                    "type": "Identifier",
                    "start": 512,
                    "end": 520,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "start": 521,
                      "end": 532,
                      "left": {
                        "type": "BinaryExpression",
                        "start": 521,
                        "end": 528,
                        "left": {
                          "type": "Identifier",
                          "start": 521,
                          "end": 522,
                          "name": "p"
                        },
                        "operator": "+",
                        "right": {
                          "type": "Literal",
                          "start": 525,
                          "end": 528,
                          "value": ",",
                          "raw": "\",\"",
                          "regex": null,
                          "bigint": null
                        }
                      },
                      "operator": "+",
                      "right": {
                        "type": "Identifier",
                        "start": 531,
                        "end": 532,
                        "name": "p"
                      }
                    },
                    {
                      "type": "Identifier",
                      "start": 534,
                      "end": 535,
                      "name": "p"
                    },
                    {
                      "type": "Literal",
                      "start": 537,
                      "end": 561,
                      "value": "return arg1+arg2+arg3;",
                      "raw": "\"return arg1+arg2+arg3;\"",
                      "regex": null,
                      "bigint": null
                    }
                  ],
                  "optional": false
                }
              }
            ],
            "kind": "var"
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 566,
        "end": 624,
        "param": {
          "type": "Identifier",
          "start": 573,
          "end": 574,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 576,
          "end": 624,
          "body": [
            {
              "type": "ThrowStatement",
              "start": 580,
              "end": 622,
              "argument": {
                "type": "NewExpression",
                "start": 586,
                "end": 621,
                "callee": {
                  "type": "Identifier",
                  "start": 590,
                  "end": 602,
                  "name": "Test262Error"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "start": 603,
                    "end": 620,
                    "value": "#1: test failed",
                    "raw": "'#1: test failed'",
                    "regex": null,
                    "bigint": null
                  }
                ]
              }
            }
          ]
        }
      },
      "finalizer": null
    },
    {
      "type": "ExpressionStatement",
      "start": 626,
      "end": 731,
      "expression": {
        "type": "CallExpression",
        "start": 626,
        "end": 730,
        "callee": {
          "type": "Identifier",
          "start": 626,
          "end": 632,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 633,
            "end": 654,
            "left": {
              "type": "Identifier",
              "start": 633,
              "end": 634,
              "name": "f"
            },
            "operator": "instanceof",
            "right": {
              "type": "Identifier",
              "start": 646,
              "end": 654,
              "name": "Function"
            }
          },
          {
            "type": "Literal",
            "start": 656,
            "end": 729,
            "value": "The result of evaluating (f instanceof Function) is expected to be true",
            "raw": "'The result of evaluating (f instanceof Function) is expected to be true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 732,
      "end": 798,
      "expression": {
        "type": "CallExpression",
        "start": 732,
        "end": 797,
        "callee": {
          "type": "MemberExpression",
          "start": 732,
          "end": 748,
          "object": {
            "type": "Identifier",
            "start": 732,
            "end": 738,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 739,
            "end": 748,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 749,
            "end": 760,
            "callee": {
              "type": "Identifier",
              "start": 749,
              "end": 750,
              "name": "f"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 751,
                "end": 753,
                "value": "",
                "raw": "\"\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 755,
                "end": 756,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 758,
                "end": 759,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 762,
            "end": 766,
            "value": "12",
            "raw": "\"12\"",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 768,
            "end": 796,
            "value": "f(, 1, 2) must return \"12\"",
            "raw": "'f(, 1, 2) must return \"12\"'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}