{
  "type": "Program",
  "start": 0,
  "end": 1168,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 858,
      "end": 880,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 862,
          "end": 879,
          "id": {
            "type": "Identifier",
            "start": 862,
            "end": 866,
            "name": "body"
          },
          "init": {
            "type": "Literal",
            "start": 869,
            "end": 879,
            "value": "var 1=1;",
            "raw": "\"var 1=1;\"",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "TryStatement",
      "start": 882,
      "end": 1167,
      "block": {
        "type": "BlockStatement",
        "start": 886,
        "end": 1027,
        "body": [
          {
            "type": "VariableDeclaration",
            "start": 890,
            "end": 917,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "start": 894,
                "end": 916,
                "id": {
                  "type": "Identifier",
                  "start": 894,
                  "end": 895,
                  "name": "f"
                },
                "init": {
                  "type": "NewExpression",
                  "start": 898,
                  "end": 916,
                  "callee": {
                    "type": "Identifier",
                    "start": 902,
                    "end": 910,
                    "name": "Function"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 911,
                      "end": 915,
                      "name": "body"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ThrowStatement",
            "start": 920,
            "end": 1025,
            "argument": {
              "type": "NewExpression",
              "start": 926,
              "end": 1024,
              "callee": {
                "type": "Identifier",
                "start": 930,
                "end": 942,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "start": 943,
                  "end": 1023,
                  "value": "#1: If body is not parsable as FunctionBody then throw a SyntaxError exception",
                  "raw": "'#1: If body is not parsable as FunctionBody then throw a SyntaxError exception'",
                  "regex": null,
                  "bigint": null
                }
              ]
            }
          }
        ]
      },
      "handler": {
        "type": "CatchClause",
        "start": 1028,
        "end": 1167,
        "param": {
          "type": "Identifier",
          "start": 1035,
          "end": 1036,
          "name": "e"
        },
        "body": {
          "type": "BlockStatement",
          "start": 1038,
          "end": 1167,
          "body": [
            {
              "type": "ExpressionStatement",
              "start": 1042,
              "end": 1165,
              "expression": {
                "type": "CallExpression",
                "start": 1042,
                "end": 1164,
                "callee": {
                  "type": "Identifier",
                  "start": 1042,
                  "end": 1048,
                  "name": "assert"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 1054,
                    "end": 1078,
                    "left": {
                      "type": "Identifier",
                      "start": 1054,
                      "end": 1055,
                      "name": "e"
                    },
                    "operator": "instanceof",
                    "right": {
                      "type": "Identifier",
                      "start": 1067,
                      "end": 1078,
                      "name": "SyntaxError"
                    }
                  },
                  {
                    "type": "Literal",
                    "start": 1084,
                    "end": 1160,
                    "value": "The result of evaluating (e instanceof SyntaxError) is expected to be true",
                    "raw": "'The result of evaluating (e instanceof SyntaxError) is expected to be true'",
                    "regex": null,
                    "bigint": null
                  }
                ],
                "optional": false
              }
            }
          ]
        }
      },
      "finalizer": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}