{
  "type": "Program",
  "start": 0,
  "end": 1327,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1153,
      "end": 1326,
      "expression": {
        "type": "CallExpression",
        "start": 1153,
        "end": 1325,
        "callee": {
          "type": "Identifier",
          "start": 1153,
          "end": 1183,
          "name": "testWithTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1184,
            "end": 1324,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1193,
                "end": 1195,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1197,
              "end": 1324,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1201,
                  "end": 1244,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1205,
                      "end": 1243,
                      "id": {
                        "type": "Identifier",
                        "start": 1205,
                        "end": 1211,
                        "name": "sample"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 1214,
                        "end": 1243,
                        "callee": {
                          "type": "Identifier",
                          "start": 1218,
                          "end": 1220,
                          "name": "TA"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "start": 1221,
                            "end": 1242,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 1222,
                                "end": 1223,
                                "value": 1,
                                "raw": "1",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1225,
                                "end": 1226,
                                "value": 0,
                                "raw": "0",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1228,
                                "end": 1229,
                                "value": 2,
                                "raw": "2",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1231,
                                "end": 1232,
                                "value": 3,
                                "raw": "3",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1234,
                                "end": 1236,
                                "value": 42,
                                "raw": "42",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1238,
                                "end": 1241,
                                "value": 127,
                                "raw": "127",
                                "regex": null,
                                "bigint": null
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1248,
                  "end": 1275,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1252,
                      "end": 1274,
                      "id": {
                        "type": "Identifier",
                        "start": 1252,
                        "end": 1258,
                        "name": "result"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 1261,
                        "end": 1274,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1261,
                          "end": 1272,
                          "object": {
                            "type": "Identifier",
                            "start": 1261,
                            "end": 1267,
                            "name": "sample"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 1268,
                            "end": 1272,
                            "name": "join"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1279,
                  "end": 1322,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1279,
                    "end": 1321,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1279,
                      "end": 1295,
                      "object": {
                        "type": "Identifier",
                        "start": 1279,
                        "end": 1285,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1286,
                        "end": 1295,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1296,
                        "end": 1302,
                        "name": "result"
                      },
                      {
                        "type": "Literal",
                        "start": 1304,
                        "end": 1320,
                        "value": "1,0,2,3,42,127",
                        "raw": "\"1,0,2,3,42,127\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}