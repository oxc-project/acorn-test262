{
  "type": "Program",
  "start": 0,
  "end": 1483,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 1100,
      "end": 1114,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1104,
          "end": 1113,
          "id": {
            "type": "Identifier",
            "start": 1104,
            "end": 1109,
            "name": "calls"
          },
          "init": {
            "type": "Literal",
            "start": 1112,
            "end": 1113,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1116,
      "end": 1229,
      "expression": {
        "type": "AssignmentExpression",
        "start": 1116,
        "end": 1228,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 1116,
          "end": 1147,
          "object": {
            "type": "MemberExpression",
            "start": 1116,
            "end": 1132,
            "object": {
              "type": "Identifier",
              "start": 1116,
              "end": 1122,
              "name": "Number"
            },
            "property": {
              "type": "Identifier",
              "start": 1123,
              "end": 1132,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 1133,
            "end": 1147,
            "name": "toLocaleString"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "FunctionExpression",
          "start": 1150,
          "end": 1228,
          "id": null,
          "expression": false,
          "generator": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 1161,
            "end": 1228,
            "body": [
              {
                "type": "ExpressionStatement",
                "start": 1165,
                "end": 1173,
                "expression": {
                  "type": "UpdateExpression",
                  "start": 1165,
                  "end": 1172,
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "start": 1165,
                    "end": 1170,
                    "name": "calls"
                  }
                }
              },
              {
                "type": "IfStatement",
                "start": 1176,
                "end": 1226,
                "test": {
                  "type": "BinaryExpression",
                  "start": 1180,
                  "end": 1189,
                  "left": {
                    "type": "Identifier",
                    "start": 1180,
                    "end": 1185,
                    "name": "calls"
                  },
                  "operator": ">",
                  "right": {
                    "type": "Literal",
                    "start": 1188,
                    "end": 1189,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "start": 1191,
                  "end": 1226,
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "start": 1197,
                      "end": 1222,
                      "argument": {
                        "type": "NewExpression",
                        "start": 1203,
                        "end": 1221,
                        "callee": {
                          "type": "Identifier",
                          "start": 1207,
                          "end": 1219,
                          "name": "Test262Error"
                        },
                        "arguments": []
                      }
                    }
                  ]
                },
                "alternate": null
              }
            ]
          }
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1231,
      "end": 1249,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1235,
          "end": 1248,
          "id": {
            "type": "Identifier",
            "start": 1235,
            "end": 1238,
            "name": "arr"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 1241,
            "end": 1248,
            "elements": [
              {
                "type": "Literal",
                "start": 1242,
                "end": 1244,
                "value": 42,
                "raw": "42",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1246,
                "end": 1247,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 1251,
      "end": 1482,
      "expression": {
        "type": "CallExpression",
        "start": 1251,
        "end": 1481,
        "callee": {
          "type": "Identifier",
          "start": 1251,
          "end": 1281,
          "name": "testWithTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1282,
            "end": 1480,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1291,
                "end": 1293,
                "name": "TA"
              },
              {
                "type": "Identifier",
                "start": 1295,
                "end": 1296,
                "name": "N"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1298,
              "end": 1480,
              "body": [
                {
                  "type": "ExpressionStatement",
                  "start": 1302,
                  "end": 1312,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1302,
                    "end": 1311,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1302,
                      "end": 1307,
                      "name": "calls"
                    },
                    "right": {
                      "type": "Literal",
                      "start": 1310,
                      "end": 1311,
                      "value": 0,
                      "raw": "0",
                      "regex": null,
                      "bigint": null
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1315,
                  "end": 1340,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1319,
                      "end": 1339,
                      "id": {
                        "type": "Identifier",
                        "start": 1319,
                        "end": 1325,
                        "name": "sample"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 1328,
                        "end": 1339,
                        "callee": {
                          "type": "Identifier",
                          "start": 1332,
                          "end": 1334,
                          "name": "TA"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1335,
                            "end": 1338,
                            "name": "arr"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1343,
                  "end": 1418,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1343,
                    "end": 1417,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1343,
                      "end": 1356,
                      "object": {
                        "type": "Identifier",
                        "start": 1343,
                        "end": 1349,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1350,
                        "end": 1356,
                        "name": "throws"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1357,
                        "end": 1369,
                        "name": "Test262Error"
                      },
                      {
                        "type": "FunctionExpression",
                        "start": 1371,
                        "end": 1416,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1382,
                          "end": 1416,
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "start": 1388,
                              "end": 1412,
                              "expression": {
                                "type": "CallExpression",
                                "start": 1388,
                                "end": 1411,
                                "callee": {
                                  "type": "MemberExpression",
                                  "start": 1388,
                                  "end": 1409,
                                  "object": {
                                    "type": "Identifier",
                                    "start": 1388,
                                    "end": 1394,
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "start": 1395,
                                    "end": 1409,
                                    "name": "toLocaleString"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "arguments": [],
                                "optional": false
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1421,
                  "end": 1478,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1421,
                    "end": 1477,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1421,
                      "end": 1437,
                      "object": {
                        "type": "Identifier",
                        "start": 1421,
                        "end": 1427,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1428,
                        "end": 1437,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1438,
                        "end": 1443,
                        "name": "calls"
                      },
                      {
                        "type": "Literal",
                        "start": 1445,
                        "end": 1446,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      {
                        "type": "Literal",
                        "start": 1448,
                        "end": 1476,
                        "value": "abrupt from a next element",
                        "raw": "\"abrupt from a next element\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}