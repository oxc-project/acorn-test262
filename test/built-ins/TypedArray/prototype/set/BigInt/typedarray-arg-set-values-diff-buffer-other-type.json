{
  "type": "Program",
  "start": 0,
  "end": 1823,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 1002,
      "end": 1822,
      "expression": {
        "type": "CallExpression",
        "start": 1002,
        "end": 1821,
        "callee": {
          "type": "Identifier",
          "start": 1002,
          "end": 1038,
          "name": "testWithBigIntTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1039,
            "end": 1820,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1048,
                "end": 1050,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1052,
              "end": 1820,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1056,
                  "end": 1122,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1060,
                      "end": 1121,
                      "id": {
                        "type": "Identifier",
                        "start": 1060,
                        "end": 1065,
                        "name": "other"
                      },
                      "init": {
                        "type": "ConditionalExpression",
                        "start": 1068,
                        "end": 1121,
                        "test": {
                          "type": "BinaryExpression",
                          "start": 1068,
                          "end": 1088,
                          "left": {
                            "type": "Identifier",
                            "start": 1068,
                            "end": 1070,
                            "name": "TA"
                          },
                          "operator": "===",
                          "right": {
                            "type": "Identifier",
                            "start": 1075,
                            "end": 1088,
                            "name": "BigInt64Array"
                          }
                        },
                        "consequent": {
                          "type": "Identifier",
                          "start": 1091,
                          "end": 1105,
                          "name": "BigUint64Array"
                        },
                        "alternate": {
                          "type": "Identifier",
                          "start": 1108,
                          "end": 1121,
                          "name": "BigInt64Array"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1125,
                  "end": 1157,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1129,
                      "end": 1156,
                      "id": {
                        "type": "Identifier",
                        "start": 1129,
                        "end": 1132,
                        "name": "src"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 1135,
                        "end": 1156,
                        "callee": {
                          "type": "Identifier",
                          "start": 1139,
                          "end": 1144,
                          "name": "other"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "start": 1145,
                            "end": 1155,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 1146,
                                "end": 1149,
                                "value": null,
                                "raw": "42n",
                                "regex": null,
                                "bigint": "42"
                              },
                              {
                                "type": "Literal",
                                "start": 1151,
                                "end": 1154,
                                "value": null,
                                "raw": "43n",
                                "regex": null,
                                "bigint": "43"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1160,
                  "end": 1179,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1164,
                      "end": 1170,
                      "id": {
                        "type": "Identifier",
                        "start": 1164,
                        "end": 1170,
                        "name": "sample"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "start": 1172,
                      "end": 1178,
                      "id": {
                        "type": "Identifier",
                        "start": 1172,
                        "end": 1178,
                        "name": "result"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1183,
                  "end": 1217,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1183,
                    "end": 1216,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1183,
                      "end": 1189,
                      "name": "sample"
                    },
                    "right": {
                      "type": "NewExpression",
                      "start": 1192,
                      "end": 1216,
                      "callee": {
                        "type": "Identifier",
                        "start": 1196,
                        "end": 1198,
                        "name": "TA"
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "start": 1199,
                          "end": 1215,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1200,
                              "end": 1202,
                              "value": null,
                              "raw": "1n",
                              "regex": null,
                              "bigint": "1"
                            },
                            {
                              "type": "Literal",
                              "start": 1204,
                              "end": 1206,
                              "value": null,
                              "raw": "2n",
                              "regex": null,
                              "bigint": "2"
                            },
                            {
                              "type": "Literal",
                              "start": 1208,
                              "end": 1210,
                              "value": null,
                              "raw": "3n",
                              "regex": null,
                              "bigint": "3"
                            },
                            {
                              "type": "Literal",
                              "start": 1212,
                              "end": 1214,
                              "value": null,
                              "raw": "4n",
                              "regex": null,
                              "bigint": "4"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1220,
                  "end": 1248,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1220,
                    "end": 1247,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1220,
                      "end": 1226,
                      "name": "result"
                    },
                    "right": {
                      "type": "CallExpression",
                      "start": 1229,
                      "end": 1247,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1229,
                        "end": 1239,
                        "object": {
                          "type": "Identifier",
                          "start": 1229,
                          "end": 1235,
                          "name": "sample"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1236,
                          "end": 1239,
                          "name": "set"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1240,
                          "end": 1243,
                          "name": "src"
                        },
                        {
                          "type": "Literal",
                          "start": 1245,
                          "end": 1246,
                          "value": 0,
                          "raw": "0",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1251,
                  "end": 1332,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1251,
                    "end": 1331,
                    "callee": {
                      "type": "Identifier",
                      "start": 1251,
                      "end": 1257,
                      "name": "assert"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "start": 1258,
                        "end": 1298,
                        "callee": {
                          "type": "Identifier",
                          "start": 1258,
                          "end": 1270,
                          "name": "compareArray"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1271,
                            "end": 1277,
                            "name": "sample"
                          },
                          {
                            "type": "ArrayExpression",
                            "start": 1279,
                            "end": 1297,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 1280,
                                "end": 1283,
                                "value": null,
                                "raw": "42n",
                                "regex": null,
                                "bigint": "42"
                              },
                              {
                                "type": "Literal",
                                "start": 1285,
                                "end": 1288,
                                "value": null,
                                "raw": "43n",
                                "regex": null,
                                "bigint": "43"
                              },
                              {
                                "type": "Literal",
                                "start": 1290,
                                "end": 1292,
                                "value": null,
                                "raw": "3n",
                                "regex": null,
                                "bigint": "3"
                              },
                              {
                                "type": "Literal",
                                "start": 1294,
                                "end": 1296,
                                "value": null,
                                "raw": "4n",
                                "regex": null,
                                "bigint": "4"
                              }
                            ]
                          }
                        ],
                        "optional": false
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1300,
                        "end": 1330,
                        "left": {
                          "type": "Literal",
                          "start": 1300,
                          "end": 1321,
                          "value": "offset: 0, result: ",
                          "raw": "\"offset: 0, result: \"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1324,
                          "end": 1330,
                          "name": "sample"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1335,
                  "end": 1392,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1335,
                    "end": 1391,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1335,
                      "end": 1351,
                      "object": {
                        "type": "Identifier",
                        "start": 1335,
                        "end": 1341,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1342,
                        "end": 1351,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1352,
                        "end": 1358,
                        "name": "result"
                      },
                      {
                        "type": "Identifier",
                        "start": 1360,
                        "end": 1369,
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "start": 1371,
                        "end": 1390,
                        "value": "returns undefined",
                        "raw": "\"returns undefined\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1396,
                  "end": 1430,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1396,
                    "end": 1429,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1396,
                      "end": 1402,
                      "name": "sample"
                    },
                    "right": {
                      "type": "NewExpression",
                      "start": 1405,
                      "end": 1429,
                      "callee": {
                        "type": "Identifier",
                        "start": 1409,
                        "end": 1411,
                        "name": "TA"
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "start": 1412,
                          "end": 1428,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1413,
                              "end": 1415,
                              "value": null,
                              "raw": "1n",
                              "regex": null,
                              "bigint": "1"
                            },
                            {
                              "type": "Literal",
                              "start": 1417,
                              "end": 1419,
                              "value": null,
                              "raw": "2n",
                              "regex": null,
                              "bigint": "2"
                            },
                            {
                              "type": "Literal",
                              "start": 1421,
                              "end": 1423,
                              "value": null,
                              "raw": "3n",
                              "regex": null,
                              "bigint": "3"
                            },
                            {
                              "type": "Literal",
                              "start": 1425,
                              "end": 1427,
                              "value": null,
                              "raw": "4n",
                              "regex": null,
                              "bigint": "4"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1433,
                  "end": 1461,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1433,
                    "end": 1460,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1433,
                      "end": 1439,
                      "name": "result"
                    },
                    "right": {
                      "type": "CallExpression",
                      "start": 1442,
                      "end": 1460,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1442,
                        "end": 1452,
                        "object": {
                          "type": "Identifier",
                          "start": 1442,
                          "end": 1448,
                          "name": "sample"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1449,
                          "end": 1452,
                          "name": "set"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1453,
                          "end": 1456,
                          "name": "src"
                        },
                        {
                          "type": "Literal",
                          "start": 1458,
                          "end": 1459,
                          "value": 1,
                          "raw": "1",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1464,
                  "end": 1545,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1464,
                    "end": 1544,
                    "callee": {
                      "type": "Identifier",
                      "start": 1464,
                      "end": 1470,
                      "name": "assert"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "start": 1471,
                        "end": 1511,
                        "callee": {
                          "type": "Identifier",
                          "start": 1471,
                          "end": 1483,
                          "name": "compareArray"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1484,
                            "end": 1490,
                            "name": "sample"
                          },
                          {
                            "type": "ArrayExpression",
                            "start": 1492,
                            "end": 1510,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 1493,
                                "end": 1495,
                                "value": null,
                                "raw": "1n",
                                "regex": null,
                                "bigint": "1"
                              },
                              {
                                "type": "Literal",
                                "start": 1497,
                                "end": 1500,
                                "value": null,
                                "raw": "42n",
                                "regex": null,
                                "bigint": "42"
                              },
                              {
                                "type": "Literal",
                                "start": 1502,
                                "end": 1505,
                                "value": null,
                                "raw": "43n",
                                "regex": null,
                                "bigint": "43"
                              },
                              {
                                "type": "Literal",
                                "start": 1507,
                                "end": 1509,
                                "value": null,
                                "raw": "4n",
                                "regex": null,
                                "bigint": "4"
                              }
                            ]
                          }
                        ],
                        "optional": false
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1513,
                        "end": 1543,
                        "left": {
                          "type": "Literal",
                          "start": 1513,
                          "end": 1534,
                          "value": "offset: 1, result: ",
                          "raw": "\"offset: 1, result: \"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1537,
                          "end": 1543,
                          "name": "sample"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1548,
                  "end": 1605,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1548,
                    "end": 1604,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1548,
                      "end": 1564,
                      "object": {
                        "type": "Identifier",
                        "start": 1548,
                        "end": 1554,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1555,
                        "end": 1564,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1565,
                        "end": 1571,
                        "name": "result"
                      },
                      {
                        "type": "Identifier",
                        "start": 1573,
                        "end": 1582,
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "start": 1584,
                        "end": 1603,
                        "value": "returns undefined",
                        "raw": "\"returns undefined\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1609,
                  "end": 1643,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1609,
                    "end": 1642,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1609,
                      "end": 1615,
                      "name": "sample"
                    },
                    "right": {
                      "type": "NewExpression",
                      "start": 1618,
                      "end": 1642,
                      "callee": {
                        "type": "Identifier",
                        "start": 1622,
                        "end": 1624,
                        "name": "TA"
                      },
                      "arguments": [
                        {
                          "type": "ArrayExpression",
                          "start": 1625,
                          "end": 1641,
                          "elements": [
                            {
                              "type": "Literal",
                              "start": 1626,
                              "end": 1628,
                              "value": null,
                              "raw": "1n",
                              "regex": null,
                              "bigint": "1"
                            },
                            {
                              "type": "Literal",
                              "start": 1630,
                              "end": 1632,
                              "value": null,
                              "raw": "2n",
                              "regex": null,
                              "bigint": "2"
                            },
                            {
                              "type": "Literal",
                              "start": 1634,
                              "end": 1636,
                              "value": null,
                              "raw": "3n",
                              "regex": null,
                              "bigint": "3"
                            },
                            {
                              "type": "Literal",
                              "start": 1638,
                              "end": 1640,
                              "value": null,
                              "raw": "4n",
                              "regex": null,
                              "bigint": "4"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1646,
                  "end": 1674,
                  "expression": {
                    "type": "AssignmentExpression",
                    "start": 1646,
                    "end": 1673,
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "start": 1646,
                      "end": 1652,
                      "name": "result"
                    },
                    "right": {
                      "type": "CallExpression",
                      "start": 1655,
                      "end": 1673,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1655,
                        "end": 1665,
                        "object": {
                          "type": "Identifier",
                          "start": 1655,
                          "end": 1661,
                          "name": "sample"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1662,
                          "end": 1665,
                          "name": "set"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1666,
                          "end": 1669,
                          "name": "src"
                        },
                        {
                          "type": "Literal",
                          "start": 1671,
                          "end": 1672,
                          "value": 2,
                          "raw": "2",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1677,
                  "end": 1758,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1677,
                    "end": 1757,
                    "callee": {
                      "type": "Identifier",
                      "start": 1677,
                      "end": 1683,
                      "name": "assert"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "start": 1684,
                        "end": 1724,
                        "callee": {
                          "type": "Identifier",
                          "start": 1684,
                          "end": 1696,
                          "name": "compareArray"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1697,
                            "end": 1703,
                            "name": "sample"
                          },
                          {
                            "type": "ArrayExpression",
                            "start": 1705,
                            "end": 1723,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 1706,
                                "end": 1708,
                                "value": null,
                                "raw": "1n",
                                "regex": null,
                                "bigint": "1"
                              },
                              {
                                "type": "Literal",
                                "start": 1710,
                                "end": 1712,
                                "value": null,
                                "raw": "2n",
                                "regex": null,
                                "bigint": "2"
                              },
                              {
                                "type": "Literal",
                                "start": 1714,
                                "end": 1717,
                                "value": null,
                                "raw": "42n",
                                "regex": null,
                                "bigint": "42"
                              },
                              {
                                "type": "Literal",
                                "start": 1719,
                                "end": 1722,
                                "value": null,
                                "raw": "43n",
                                "regex": null,
                                "bigint": "43"
                              }
                            ]
                          }
                        ],
                        "optional": false
                      },
                      {
                        "type": "BinaryExpression",
                        "start": 1726,
                        "end": 1756,
                        "left": {
                          "type": "Literal",
                          "start": 1726,
                          "end": 1747,
                          "value": "offset: 2, result: ",
                          "raw": "\"offset: 2, result: \"",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "Identifier",
                          "start": 1750,
                          "end": 1756,
                          "name": "sample"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1761,
                  "end": 1818,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1761,
                    "end": 1817,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1761,
                      "end": 1777,
                      "object": {
                        "type": "Identifier",
                        "start": 1761,
                        "end": 1767,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1768,
                        "end": 1777,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1778,
                        "end": 1784,
                        "name": "result"
                      },
                      {
                        "type": "Identifier",
                        "start": 1786,
                        "end": 1795,
                        "name": "undefined"
                      },
                      {
                        "type": "Literal",
                        "start": 1797,
                        "end": 1816,
                        "value": "returns undefined",
                        "raw": "\"returns undefined\"",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}