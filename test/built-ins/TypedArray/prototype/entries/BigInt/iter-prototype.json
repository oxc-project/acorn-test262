{
  "type": "Program",
  "start": 0,
  "end": 737,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 469,
      "end": 539,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 473,
          "end": 538,
          "id": {
            "type": "Identifier",
            "start": 473,
            "end": 491,
            "name": "ArrayIteratorProto"
          },
          "init": {
            "type": "CallExpression",
            "start": 494,
            "end": 538,
            "callee": {
              "type": "MemberExpression",
              "start": 494,
              "end": 515,
              "object": {
                "type": "Identifier",
                "start": 494,
                "end": 500,
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "start": 501,
                "end": 515,
                "name": "getPrototypeOf"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "CallExpression",
                "start": 516,
                "end": 537,
                "callee": {
                  "type": "MemberExpression",
                  "start": 516,
                  "end": 535,
                  "object": {
                    "type": "ArrayExpression",
                    "start": 516,
                    "end": 518,
                    "elements": []
                  },
                  "property": {
                    "type": "MemberExpression",
                    "start": 519,
                    "end": 534,
                    "object": {
                      "type": "Identifier",
                      "start": 519,
                      "end": 525,
                      "name": "Symbol"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 526,
                      "end": 534,
                      "name": "iterator"
                    },
                    "computed": false,
                    "optional": false
                  },
                  "computed": true,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 541,
      "end": 736,
      "expression": {
        "type": "CallExpression",
        "start": 541,
        "end": 735,
        "callee": {
          "type": "Identifier",
          "start": 541,
          "end": 577,
          "name": "testWithBigIntTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 578,
            "end": 734,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 587,
                "end": 589,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 591,
              "end": 734,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 595,
                  "end": 631,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 599,
                      "end": 630,
                      "id": {
                        "type": "Identifier",
                        "start": 599,
                        "end": 605,
                        "name": "sample"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 608,
                        "end": 630,
                        "callee": {
                          "type": "Identifier",
                          "start": 612,
                          "end": 614,
                          "name": "TA"
                        },
                        "arguments": [
                          {
                            "type": "ArrayExpression",
                            "start": 615,
                            "end": 629,
                            "elements": [
                              {
                                "type": "Literal",
                                "start": 616,
                                "end": 618,
                                "value": null,
                                "raw": "0n",
                                "bigint": "0"
                              },
                              {
                                "type": "Literal",
                                "start": 620,
                                "end": 623,
                                "value": null,
                                "raw": "42n",
                                "bigint": "42"
                              },
                              {
                                "type": "Literal",
                                "start": 625,
                                "end": 628,
                                "value": null,
                                "raw": "64n",
                                "bigint": "64"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 634,
                  "end": 662,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 638,
                      "end": 661,
                      "id": {
                        "type": "Identifier",
                        "start": 638,
                        "end": 642,
                        "name": "iter"
                      },
                      "init": {
                        "type": "CallExpression",
                        "start": 645,
                        "end": 661,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 645,
                          "end": 659,
                          "object": {
                            "type": "Identifier",
                            "start": 645,
                            "end": 651,
                            "name": "sample"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 652,
                            "end": 659,
                            "name": "entries"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [],
                        "optional": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 666,
                  "end": 732,
                  "expression": {
                    "type": "CallExpression",
                    "start": 666,
                    "end": 731,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 666,
                      "end": 682,
                      "object": {
                        "type": "Identifier",
                        "start": 666,
                        "end": 672,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 673,
                        "end": 682,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "start": 683,
                        "end": 710,
                        "callee": {
                          "type": "MemberExpression",
                          "start": 683,
                          "end": 704,
                          "object": {
                            "type": "Identifier",
                            "start": 683,
                            "end": 689,
                            "name": "Object"
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 690,
                            "end": 704,
                            "name": "getPrototypeOf"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 705,
                            "end": 709,
                            "name": "iter"
                          }
                        ],
                        "optional": false
                      },
                      {
                        "type": "Identifier",
                        "start": 712,
                        "end": 730,
                        "name": "ArrayIteratorProto"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}