{
  "type": "Program",
  "start": 0,
  "end": 1241,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 972,
      "end": 1240,
      "expression": {
        "type": "CallExpression",
        "start": 972,
        "end": 1239,
        "callee": {
          "type": "Identifier",
          "start": 972,
          "end": 1008,
          "name": "testWithBigIntTypedArrayConstructors"
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "start": 1009,
            "end": 1238,
            "id": null,
            "expression": false,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1018,
                "end": 1020,
                "name": "TA"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1022,
              "end": 1238,
              "body": [
                {
                  "type": "VariableDeclaration",
                  "start": 1026,
                  "end": 1040,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1030,
                      "end": 1039,
                      "id": {
                        "type": "Identifier",
                        "start": 1030,
                        "end": 1035,
                        "name": "loops"
                      },
                      "init": {
                        "type": "Literal",
                        "start": 1038,
                        "end": 1039,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "start": 1043,
                  "end": 1066,
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "start": 1047,
                      "end": 1065,
                      "id": {
                        "type": "Identifier",
                        "start": 1047,
                        "end": 1053,
                        "name": "sample"
                      },
                      "init": {
                        "type": "NewExpression",
                        "start": 1056,
                        "end": 1065,
                        "callee": {
                          "type": "Identifier",
                          "start": 1060,
                          "end": 1062,
                          "name": "TA"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "start": 1063,
                            "end": 1064,
                            "value": 2,
                            "raw": "2",
                            "regex": null,
                            "bigint": null
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1070,
                  "end": 1205,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1070,
                    "end": 1204,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1070,
                      "end": 1088,
                      "object": {
                        "type": "Identifier",
                        "start": 1070,
                        "end": 1076,
                        "name": "sample"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1077,
                        "end": 1088,
                        "name": "reduceRight"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "start": 1089,
                        "end": 1200,
                        "id": null,
                        "expression": false,
                        "generator": false,
                        "async": false,
                        "params": [],
                        "body": {
                          "type": "BlockStatement",
                          "start": 1100,
                          "end": 1200,
                          "body": [
                            {
                              "type": "IfStatement",
                              "start": 1106,
                              "end": 1166,
                              "test": {
                                "type": "BinaryExpression",
                                "start": 1110,
                                "end": 1121,
                                "left": {
                                  "type": "Identifier",
                                  "start": 1110,
                                  "end": 1115,
                                  "name": "loops"
                                },
                                "operator": "===",
                                "right": {
                                  "type": "Literal",
                                  "start": 1120,
                                  "end": 1121,
                                  "value": 0,
                                  "raw": "0",
                                  "regex": null,
                                  "bigint": null
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "start": 1123,
                                "end": 1166,
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "start": 1131,
                                    "end": 1160,
                                    "expression": {
                                      "type": "CallExpression",
                                      "start": 1131,
                                      "end": 1159,
                                      "callee": {
                                        "type": "Identifier",
                                        "start": 1131,
                                        "end": 1144,
                                        "name": "$DETACHBUFFER"
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "start": 1145,
                                          "end": 1158,
                                          "object": {
                                            "type": "Identifier",
                                            "start": 1145,
                                            "end": 1151,
                                            "name": "sample"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "start": 1152,
                                            "end": 1158,
                                            "name": "buffer"
                                          },
                                          "computed": false,
                                          "optional": false
                                        }
                                      ],
                                      "optional": false
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "ExpressionStatement",
                              "start": 1171,
                              "end": 1179,
                              "expression": {
                                "type": "UpdateExpression",
                                "start": 1171,
                                "end": 1178,
                                "operator": "++",
                                "prefix": false,
                                "argument": {
                                  "type": "Identifier",
                                  "start": 1171,
                                  "end": 1176,
                                  "name": "loops"
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "start": 1184,
                              "end": 1196,
                              "argument": {
                                "type": "Literal",
                                "start": 1191,
                                "end": 1195,
                                "value": true,
                                "raw": "true",
                                "regex": null,
                                "bigint": null
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "Literal",
                        "start": 1202,
                        "end": 1203,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "start": 1209,
                  "end": 1236,
                  "expression": {
                    "type": "CallExpression",
                    "start": 1209,
                    "end": 1235,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1209,
                      "end": 1225,
                      "object": {
                        "type": "Identifier",
                        "start": 1209,
                        "end": 1215,
                        "name": "assert"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1216,
                        "end": 1225,
                        "name": "sameValue"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "start": 1226,
                        "end": 1231,
                        "name": "loops"
                      },
                      {
                        "type": "Literal",
                        "start": 1233,
                        "end": 1234,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}