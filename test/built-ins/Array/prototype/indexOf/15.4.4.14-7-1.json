{
  "type": "Program",
  "start": 0,
  "end": 355,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 281,
      "end": 354,
      "expression": {
        "type": "CallExpression",
        "start": 281,
        "end": 353,
        "callee": {
          "type": "MemberExpression",
          "start": 281,
          "end": 297,
          "object": {
            "type": "Identifier",
            "start": 281,
            "end": 287,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 288,
            "end": 297,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 298,
            "end": 321,
            "callee": {
              "type": "MemberExpression",
              "start": 298,
              "end": 315,
              "object": {
                "type": "ArrayExpression",
                "start": 298,
                "end": 307,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 299,
                    "end": 300,
                    "value": 1,
                    "raw": "1",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 302,
                    "end": 303,
                    "value": 2,
                    "raw": "2",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 305,
                    "end": 306,
                    "value": 3,
                    "raw": "3",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "start": 308,
                "end": 315,
                "name": "indexOf"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 316,
                "end": 317,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 319,
                "end": 320,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "UnaryExpression",
            "start": 323,
            "end": 325,
            "operator": "-",
            "prefix": true,
            "argument": {
              "type": "Literal",
              "start": 324,
              "end": 325,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            }
          },
          {
            "type": "Literal",
            "start": 327,
            "end": 352,
            "value": "[1, 2, 3].indexOf(1, 2)",
            "raw": "'[1, 2, 3].indexOf(1, 2)'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}