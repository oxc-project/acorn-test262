{
  "type": "Program",
  "start": 0,
  "end": 907,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 318,
      "end": 483,
      "expression": {
        "type": "CallExpression",
        "start": 318,
        "end": 482,
        "callee": {
          "type": "MemberExpression",
          "start": 318,
          "end": 337,
          "object": {
            "type": "Identifier",
            "start": 318,
            "end": 324,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 325,
            "end": 337,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 338,
            "end": 390,
            "callee": {
              "type": "MemberExpression",
              "start": 338,
              "end": 352,
              "object": {
                "type": "ArrayExpression",
                "start": 338,
                "end": 344,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 339,
                    "end": 340,
                    "value": 1,
                    "raw": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 342,
                    "end": 343,
                    "value": 2,
                    "raw": "2"
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "start": 345,
                "end": 352,
                "name": "flatMap"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 353,
                "end": 389,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 362,
                    "end": 363,
                    "name": "e"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 365,
                  "end": 389,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 369,
                      "end": 387,
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 376,
                        "end": 386,
                        "elements": [
                          {
                            "type": "Identifier",
                            "start": 377,
                            "end": 378,
                            "name": "e"
                          },
                          {
                            "type": "BinaryExpression",
                            "start": 380,
                            "end": 385,
                            "left": {
                              "type": "Identifier",
                              "start": 380,
                              "end": 381,
                              "name": "e"
                            },
                            "operator": "*",
                            "right": {
                              "type": "Literal",
                              "start": 384,
                              "end": 385,
                              "value": 2,
                              "raw": "2"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 392,
            "end": 404,
            "elements": [
              {
                "type": "Literal",
                "start": 393,
                "end": 394,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 396,
                "end": 397,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 399,
                "end": 400,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 402,
                "end": 403,
                "value": 4,
                "raw": "4"
              }
            ]
          },
          {
            "type": "Literal",
            "start": 406,
            "end": 481,
            "value": "[1, 2].flatMap(function(e) {return [e, e * 2];}) must return [1, 2, 2, 4]",
            "raw": "'[1, 2].flatMap(function(e) {return [e, e * 2];}) must return [1, 2, 2, 4]'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 485,
      "end": 565,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 489,
          "end": 564,
          "id": {
            "type": "Identifier",
            "start": 489,
            "end": 495,
            "name": "result"
          },
          "init": {
            "type": "CallExpression",
            "start": 498,
            "end": 564,
            "callee": {
              "type": "MemberExpression",
              "start": 498,
              "end": 515,
              "object": {
                "type": "ArrayExpression",
                "start": 498,
                "end": 507,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 499,
                    "end": 500,
                    "value": 1,
                    "raw": "1"
                  },
                  {
                    "type": "Literal",
                    "start": 502,
                    "end": 503,
                    "value": 2,
                    "raw": "2"
                  },
                  {
                    "type": "Literal",
                    "start": 505,
                    "end": 506,
                    "value": 3,
                    "raw": "3"
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "start": 508,
                "end": 515,
                "name": "flatMap"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "start": 516,
                "end": 563,
                "id": null,
                "expression": false,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 525,
                    "end": 528,
                    "name": "ele"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 530,
                  "end": 563,
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 534,
                      "end": 561,
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 541,
                        "end": 560,
                        "elements": [
                          {
                            "type": "ArrayExpression",
                            "start": 547,
                            "end": 556,
                            "elements": [
                              {
                                "type": "BinaryExpression",
                                "start": 548,
                                "end": 555,
                                "left": {
                                  "type": "Identifier",
                                  "start": 548,
                                  "end": 551,
                                  "name": "ele"
                                },
                                "operator": "*",
                                "right": {
                                  "type": "Literal",
                                  "start": 554,
                                  "end": 555,
                                  "value": 2,
                                  "raw": "2"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 566,
      "end": 651,
      "expression": {
        "type": "CallExpression",
        "start": 566,
        "end": 650,
        "callee": {
          "type": "MemberExpression",
          "start": 566,
          "end": 582,
          "object": {
            "type": "Identifier",
            "start": 566,
            "end": 572,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 573,
            "end": 582,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 583,
            "end": 596,
            "object": {
              "type": "Identifier",
              "start": 583,
              "end": 589,
              "name": "result"
            },
            "property": {
              "type": "Identifier",
              "start": 590,
              "end": 596,
              "name": "length"
            },
            "computed": false,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 598,
            "end": 599,
            "value": 3,
            "raw": "3"
          },
          {
            "type": "Literal",
            "start": 601,
            "end": 649,
            "value": "The value of result.length is expected to be 3",
            "raw": "'The value of result.length is expected to be 3'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 652,
      "end": 736,
      "expression": {
        "type": "CallExpression",
        "start": 652,
        "end": 735,
        "callee": {
          "type": "MemberExpression",
          "start": 652,
          "end": 671,
          "object": {
            "type": "Identifier",
            "start": 652,
            "end": 658,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 659,
            "end": 671,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 672,
            "end": 681,
            "object": {
              "type": "Identifier",
              "start": 672,
              "end": 678,
              "name": "result"
            },
            "property": {
              "type": "Literal",
              "start": 679,
              "end": 680,
              "value": 0,
              "raw": "0"
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 683,
            "end": 686,
            "elements": [
              {
                "type": "Literal",
                "start": 684,
                "end": 685,
                "value": 2,
                "raw": "2"
              }
            ]
          },
          {
            "type": "Literal",
            "start": 688,
            "end": 734,
            "value": "The value of result[0] is expected to be [2]",
            "raw": "'The value of result[0] is expected to be [2]'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 737,
      "end": 821,
      "expression": {
        "type": "CallExpression",
        "start": 737,
        "end": 820,
        "callee": {
          "type": "MemberExpression",
          "start": 737,
          "end": 756,
          "object": {
            "type": "Identifier",
            "start": 737,
            "end": 743,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 744,
            "end": 756,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 757,
            "end": 766,
            "object": {
              "type": "Identifier",
              "start": 757,
              "end": 763,
              "name": "result"
            },
            "property": {
              "type": "Literal",
              "start": 764,
              "end": 765,
              "value": 1,
              "raw": "1"
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 768,
            "end": 771,
            "elements": [
              {
                "type": "Literal",
                "start": 769,
                "end": 770,
                "value": 4,
                "raw": "4"
              }
            ]
          },
          {
            "type": "Literal",
            "start": 773,
            "end": 819,
            "value": "The value of result[1] is expected to be [4]",
            "raw": "'The value of result[1] is expected to be [4]'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 822,
      "end": 906,
      "expression": {
        "type": "CallExpression",
        "start": 822,
        "end": 905,
        "callee": {
          "type": "MemberExpression",
          "start": 822,
          "end": 841,
          "object": {
            "type": "Identifier",
            "start": 822,
            "end": 828,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 829,
            "end": 841,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 842,
            "end": 851,
            "object": {
              "type": "Identifier",
              "start": 842,
              "end": 848,
              "name": "result"
            },
            "property": {
              "type": "Literal",
              "start": 849,
              "end": 850,
              "value": 2,
              "raw": "2"
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 853,
            "end": 856,
            "elements": [
              {
                "type": "Literal",
                "start": 854,
                "end": 855,
                "value": 6,
                "raw": "6"
              }
            ]
          },
          {
            "type": "Literal",
            "start": 858,
            "end": 904,
            "value": "The value of result[2] is expected to be [6]",
            "raw": "'The value of result[2] is expected to be [6]'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}