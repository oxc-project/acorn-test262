{
  "type": "Program",
  "start": 0,
  "end": 1225,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 394,
      "end": 405,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 398,
          "end": 404,
          "id": {
            "type": "Identifier",
            "start": 398,
            "end": 399,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 402,
            "end": 404,
            "elements": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 406,
      "end": 432,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 410,
          "end": 431,
          "id": {
            "type": "Identifier",
            "start": 410,
            "end": 417,
            "name": "reverse"
          },
          "init": {
            "type": "CallExpression",
            "start": 420,
            "end": 431,
            "callee": {
              "type": "MemberExpression",
              "start": 420,
              "end": 429,
              "object": {
                "type": "Identifier",
                "start": 420,
                "end": 421,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 422,
                "end": 429,
                "name": "reverse"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 433,
      "end": 536,
      "test": {
        "type": "BinaryExpression",
        "start": 437,
        "end": 450,
        "left": {
          "type": "Identifier",
          "start": 437,
          "end": 444,
          "name": "reverse"
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 449,
          "end": 450,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 452,
        "end": 536,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 456,
            "end": 534,
            "argument": {
              "type": "NewExpression",
              "start": 462,
              "end": 533,
              "callee": {
                "type": "Identifier",
                "start": 466,
                "end": 478,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 479,
                  "end": 532,
                  "left": {
                    "type": "Literal",
                    "start": 479,
                    "end": 520,
                    "value": "#1: x = []; x.reverse() === x. Actual: ",
                    "raw": "'#1: x = []; x.reverse() === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 523,
                    "end": 532,
                    "expression": {
                      "type": "Identifier",
                      "start": 524,
                      "end": 531,
                      "name": "reverse"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 538,
      "end": 545,
      "expression": {
        "type": "AssignmentExpression",
        "start": 538,
        "end": 544,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 538,
          "end": 539,
          "name": "x"
        },
        "right": {
          "type": "ArrayExpression",
          "start": 542,
          "end": 544,
          "elements": []
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 546,
      "end": 555,
      "expression": {
        "type": "AssignmentExpression",
        "start": 546,
        "end": 554,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 546,
          "end": 550,
          "object": {
            "type": "Identifier",
            "start": 546,
            "end": 547,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 548,
            "end": 549,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 553,
          "end": 554,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 556,
      "end": 582,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 560,
          "end": 581,
          "id": {
            "type": "Identifier",
            "start": 560,
            "end": 567,
            "name": "reverse"
          },
          "init": {
            "type": "CallExpression",
            "start": 570,
            "end": 581,
            "callee": {
              "type": "MemberExpression",
              "start": 570,
              "end": 579,
              "object": {
                "type": "Identifier",
                "start": 570,
                "end": 571,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 572,
                "end": 579,
                "name": "reverse"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 583,
      "end": 696,
      "test": {
        "type": "BinaryExpression",
        "start": 587,
        "end": 600,
        "left": {
          "type": "Identifier",
          "start": 587,
          "end": 594,
          "name": "reverse"
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 599,
          "end": 600,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 602,
        "end": 696,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 606,
            "end": 694,
            "argument": {
              "type": "NewExpression",
              "start": 612,
              "end": 693,
              "callee": {
                "type": "Identifier",
                "start": 616,
                "end": 628,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 629,
                  "end": 692,
                  "left": {
                    "type": "Literal",
                    "start": 629,
                    "end": 680,
                    "value": "#2: x = []; x[0] = 1; x.reverse() === x. Actual: ",
                    "raw": "'#2: x = []; x[0] = 1; x.reverse() === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 683,
                    "end": 692,
                    "expression": {
                      "type": "Identifier",
                      "start": 684,
                      "end": 691,
                      "name": "reverse"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "start": 698,
      "end": 718,
      "expression": {
        "type": "AssignmentExpression",
        "start": 698,
        "end": 717,
        "operator": "=",
        "left": {
          "type": "Identifier",
          "start": 698,
          "end": 699,
          "name": "x"
        },
        "right": {
          "type": "NewExpression",
          "start": 702,
          "end": 717,
          "callee": {
            "type": "Identifier",
            "start": 706,
            "end": 711,
            "name": "Array"
          },
          "arguments": [
            {
              "type": "Literal",
              "start": 712,
              "end": 713,
              "value": 1,
              "raw": "1",
              "regex": null,
              "bigint": null
            },
            {
              "type": "Literal",
              "start": 715,
              "end": 716,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            }
          ]
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 719,
      "end": 745,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 723,
          "end": 744,
          "id": {
            "type": "Identifier",
            "start": 723,
            "end": 730,
            "name": "reverse"
          },
          "init": {
            "type": "CallExpression",
            "start": 733,
            "end": 744,
            "callee": {
              "type": "MemberExpression",
              "start": 733,
              "end": 742,
              "object": {
                "type": "Identifier",
                "start": 733,
                "end": 734,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 735,
                "end": 742,
                "name": "reverse"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 746,
      "end": 861,
      "test": {
        "type": "BinaryExpression",
        "start": 750,
        "end": 763,
        "left": {
          "type": "Identifier",
          "start": 750,
          "end": 757,
          "name": "reverse"
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 762,
          "end": 763,
          "name": "x"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 765,
        "end": 861,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 769,
            "end": 859,
            "argument": {
              "type": "NewExpression",
              "start": 775,
              "end": 858,
              "callee": {
                "type": "Identifier",
                "start": 779,
                "end": 791,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 792,
                  "end": 857,
                  "left": {
                    "type": "Literal",
                    "start": 792,
                    "end": 845,
                    "value": "#3: x = new Array(1,2); x.reverse() === x. Actual: ",
                    "raw": "'#3: x = new Array(1,2); x.reverse() === x. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 848,
                    "end": 857,
                    "expression": {
                      "type": "Identifier",
                      "start": 849,
                      "end": 856,
                      "name": "reverse"
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 863,
      "end": 978,
      "test": {
        "type": "BinaryExpression",
        "start": 867,
        "end": 877,
        "left": {
          "type": "MemberExpression",
          "start": 867,
          "end": 871,
          "object": {
            "type": "Identifier",
            "start": 867,
            "end": 868,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 869,
            "end": 870,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 876,
          "end": 877,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 879,
        "end": 978,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 883,
            "end": 976,
            "argument": {
              "type": "NewExpression",
              "start": 889,
              "end": 975,
              "callee": {
                "type": "Identifier",
                "start": 893,
                "end": 905,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 906,
                  "end": 974,
                  "left": {
                    "type": "Literal",
                    "start": 906,
                    "end": 965,
                    "value": "#4: x = new Array(1,2); x.reverse(); x[0] === 2. Actual: ",
                    "raw": "'#4: x = new Array(1,2); x.reverse(); x[0] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 968,
                    "end": 974,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 969,
                      "end": 973,
                      "object": {
                        "type": "Identifier",
                        "start": 969,
                        "end": 970,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 971,
                        "end": 972,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 980,
      "end": 1095,
      "test": {
        "type": "BinaryExpression",
        "start": 984,
        "end": 994,
        "left": {
          "type": "MemberExpression",
          "start": 984,
          "end": 988,
          "object": {
            "type": "Identifier",
            "start": 984,
            "end": 985,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 986,
            "end": 987,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 993,
          "end": 994,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 996,
        "end": 1095,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1000,
            "end": 1093,
            "argument": {
              "type": "NewExpression",
              "start": 1006,
              "end": 1092,
              "callee": {
                "type": "Identifier",
                "start": 1010,
                "end": 1022,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1023,
                  "end": 1091,
                  "left": {
                    "type": "Literal",
                    "start": 1023,
                    "end": 1082,
                    "value": "#5: x = new Array(1,2); x.reverse(); x[1] === 1. Actual: ",
                    "raw": "'#5: x = new Array(1,2); x.reverse(); x[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1085,
                    "end": 1091,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1086,
                      "end": 1090,
                      "object": {
                        "type": "Identifier",
                        "start": 1086,
                        "end": 1087,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1088,
                        "end": 1089,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1097,
      "end": 1224,
      "test": {
        "type": "BinaryExpression",
        "start": 1101,
        "end": 1115,
        "left": {
          "type": "MemberExpression",
          "start": 1101,
          "end": 1109,
          "object": {
            "type": "Identifier",
            "start": 1101,
            "end": 1102,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 1103,
            "end": 1109,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1114,
          "end": 1115,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1117,
        "end": 1224,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1121,
            "end": 1222,
            "argument": {
              "type": "NewExpression",
              "start": 1127,
              "end": 1221,
              "callee": {
                "type": "Identifier",
                "start": 1131,
                "end": 1143,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1144,
                  "end": 1220,
                  "left": {
                    "type": "Literal",
                    "start": 1144,
                    "end": 1207,
                    "value": "#6: x = new Array(1,2); x.reverse(); x.length === 2. Actual: ",
                    "raw": "'#6: x = new Array(1,2); x.reverse(); x.length === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1210,
                    "end": 1220,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1211,
                      "end": 1219,
                      "object": {
                        "type": "Identifier",
                        "start": 1211,
                        "end": 1212,
                        "name": "x"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1213,
                        "end": 1219,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}