{
  "type": "Program",
  "start": 0,
  "end": 1753,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 367,
      "end": 388,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 371,
          "end": 387,
          "id": {
            "type": "Identifier",
            "start": 371,
            "end": 372,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 375,
            "end": 387,
            "elements": [
              {
                "type": "Literal",
                "start": 376,
                "end": 377,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 379,
                "end": 380,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 382,
                "end": 383,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 385,
                "end": 386,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 389,
      "end": 420,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 393,
          "end": 419,
          "id": {
            "type": "Identifier",
            "start": 393,
            "end": 396,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 399,
            "end": 419,
            "callee": {
              "type": "MemberExpression",
              "start": 399,
              "end": 407,
              "object": {
                "type": "Identifier",
                "start": 399,
                "end": 400,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 401,
                "end": 407,
                "name": "splice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 408,
                "end": 409,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 411,
                "end": 412,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 414,
                "end": 415,
                "value": 4,
                "raw": "4",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 417,
                "end": 418,
                "value": 5,
                "raw": "5",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 422,
      "end": 463,
      "expression": {
        "type": "AssignmentExpression",
        "start": 422,
        "end": 462,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 422,
          "end": 434,
          "object": {
            "type": "Identifier",
            "start": 422,
            "end": 425,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 426,
            "end": 434,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 437,
          "end": 462,
          "object": {
            "type": "MemberExpression",
            "start": 437,
            "end": 453,
            "object": {
              "type": "Identifier",
              "start": 437,
              "end": 443,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 444,
              "end": 453,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 454,
            "end": 462,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 464,
      "end": 648,
      "test": {
        "type": "BinaryExpression",
        "start": 468,
        "end": 513,
        "left": {
          "type": "CallExpression",
          "start": 468,
          "end": 482,
          "callee": {
            "type": "MemberExpression",
            "start": 468,
            "end": 480,
            "object": {
              "type": "Identifier",
              "start": 468,
              "end": 471,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 472,
              "end": 480,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 487,
          "end": 513,
          "left": {
            "type": "BinaryExpression",
            "start": 487,
            "end": 507,
            "left": {
              "type": "Literal",
              "start": 487,
              "end": 497,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 500,
              "end": 507,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 510,
            "end": 513,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 515,
        "end": 648,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 519,
            "end": 646,
            "argument": {
              "type": "NewExpression",
              "start": 525,
              "end": 645,
              "callee": {
                "type": "Identifier",
                "start": 529,
                "end": 541,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 542,
                  "end": 644,
                  "left": {
                    "type": "Literal",
                    "start": 542,
                    "end": 625,
                    "value": "#1: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 628,
                    "end": 644,
                    "expression": {
                      "type": "CallExpression",
                      "start": 629,
                      "end": 643,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 629,
                        "end": 641,
                        "object": {
                          "type": "Identifier",
                          "start": 629,
                          "end": 632,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 633,
                          "end": 641,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 650,
      "end": 798,
      "test": {
        "type": "BinaryExpression",
        "start": 654,
        "end": 670,
        "left": {
          "type": "MemberExpression",
          "start": 654,
          "end": 664,
          "object": {
            "type": "Identifier",
            "start": 654,
            "end": 657,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 658,
            "end": 664,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 669,
          "end": 670,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 672,
        "end": 798,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 676,
            "end": 796,
            "argument": {
              "type": "NewExpression",
              "start": 682,
              "end": 795,
              "callee": {
                "type": "Identifier",
                "start": 686,
                "end": 698,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 699,
                  "end": 794,
                  "left": {
                    "type": "Literal",
                    "start": 699,
                    "end": 779,
                    "value": "#2: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr.length === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 782,
                    "end": 794,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 783,
                      "end": 793,
                      "object": {
                        "type": "Identifier",
                        "start": 783,
                        "end": 786,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 787,
                        "end": 793,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 800,
      "end": 936,
      "test": {
        "type": "BinaryExpression",
        "start": 804,
        "end": 816,
        "left": {
          "type": "MemberExpression",
          "start": 804,
          "end": 810,
          "object": {
            "type": "Identifier",
            "start": 804,
            "end": 807,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 808,
            "end": 809,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 815,
          "end": 816,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 818,
        "end": 936,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 822,
            "end": 934,
            "argument": {
              "type": "NewExpression",
              "start": 828,
              "end": 933,
              "callee": {
                "type": "Identifier",
                "start": 832,
                "end": 844,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 845,
                  "end": 932,
                  "left": {
                    "type": "Literal",
                    "start": 845,
                    "end": 921,
                    "value": "#3: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr[0] === 1. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr[0] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 924,
                    "end": 932,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 925,
                      "end": 931,
                      "object": {
                        "type": "Identifier",
                        "start": 925,
                        "end": 928,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 929,
                        "end": 930,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 938,
      "end": 1074,
      "test": {
        "type": "BinaryExpression",
        "start": 942,
        "end": 954,
        "left": {
          "type": "MemberExpression",
          "start": 942,
          "end": 948,
          "object": {
            "type": "Identifier",
            "start": 942,
            "end": 945,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 946,
            "end": 947,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 953,
          "end": 954,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 956,
        "end": 1074,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 960,
            "end": 1072,
            "argument": {
              "type": "NewExpression",
              "start": 966,
              "end": 1071,
              "callee": {
                "type": "Identifier",
                "start": 970,
                "end": 982,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 983,
                  "end": 1070,
                  "left": {
                    "type": "Literal",
                    "start": 983,
                    "end": 1059,
                    "value": "#4: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr[1] === 2. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr[1] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1062,
                    "end": 1070,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1063,
                      "end": 1069,
                      "object": {
                        "type": "Identifier",
                        "start": 1063,
                        "end": 1066,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1067,
                        "end": 1068,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1076,
      "end": 1212,
      "test": {
        "type": "BinaryExpression",
        "start": 1080,
        "end": 1092,
        "left": {
          "type": "MemberExpression",
          "start": 1080,
          "end": 1086,
          "object": {
            "type": "Identifier",
            "start": 1080,
            "end": 1083,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1084,
            "end": 1085,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1091,
          "end": 1092,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1094,
        "end": 1212,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1098,
            "end": 1210,
            "argument": {
              "type": "NewExpression",
              "start": 1104,
              "end": 1209,
              "callee": {
                "type": "Identifier",
                "start": 1108,
                "end": 1120,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1121,
                  "end": 1208,
                  "left": {
                    "type": "Literal",
                    "start": 1121,
                    "end": 1197,
                    "value": "#5: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr[2] === 3. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); arr[2] === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1200,
                    "end": 1208,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1201,
                      "end": 1207,
                      "object": {
                        "type": "Identifier",
                        "start": 1201,
                        "end": 1204,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1205,
                        "end": 1206,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1214,
      "end": 1356,
      "test": {
        "type": "BinaryExpression",
        "start": 1218,
        "end": 1232,
        "left": {
          "type": "MemberExpression",
          "start": 1218,
          "end": 1226,
          "object": {
            "type": "Identifier",
            "start": 1218,
            "end": 1219,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 1220,
            "end": 1226,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1231,
          "end": 1232,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1234,
        "end": 1356,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1238,
            "end": 1354,
            "argument": {
              "type": "NewExpression",
              "start": 1244,
              "end": 1353,
              "callee": {
                "type": "Identifier",
                "start": 1248,
                "end": 1260,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1261,
                  "end": 1352,
                  "left": {
                    "type": "Literal",
                    "start": 1261,
                    "end": 1339,
                    "value": "#6: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x.length === 3. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x.length === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1342,
                    "end": 1352,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1343,
                      "end": 1351,
                      "object": {
                        "type": "Identifier",
                        "start": 1343,
                        "end": 1344,
                        "name": "x"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1345,
                        "end": 1351,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1358,
      "end": 1488,
      "test": {
        "type": "BinaryExpression",
        "start": 1362,
        "end": 1372,
        "left": {
          "type": "MemberExpression",
          "start": 1362,
          "end": 1366,
          "object": {
            "type": "Identifier",
            "start": 1362,
            "end": 1363,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 1364,
            "end": 1365,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1371,
          "end": 1372,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1374,
        "end": 1488,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1378,
            "end": 1486,
            "argument": {
              "type": "NewExpression",
              "start": 1384,
              "end": 1485,
              "callee": {
                "type": "Identifier",
                "start": 1388,
                "end": 1400,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1401,
                  "end": 1484,
                  "left": {
                    "type": "Literal",
                    "start": 1401,
                    "end": 1475,
                    "value": "#7: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x[0] === 0. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1478,
                    "end": 1484,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1479,
                      "end": 1483,
                      "object": {
                        "type": "Identifier",
                        "start": 1479,
                        "end": 1480,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1481,
                        "end": 1482,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1490,
      "end": 1620,
      "test": {
        "type": "BinaryExpression",
        "start": 1494,
        "end": 1504,
        "left": {
          "type": "MemberExpression",
          "start": 1494,
          "end": 1498,
          "object": {
            "type": "Identifier",
            "start": 1494,
            "end": 1495,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 1496,
            "end": 1497,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1503,
          "end": 1504,
          "value": 4,
          "raw": "4",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1506,
        "end": 1620,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1510,
            "end": 1618,
            "argument": {
              "type": "NewExpression",
              "start": 1516,
              "end": 1617,
              "callee": {
                "type": "Identifier",
                "start": 1520,
                "end": 1532,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1533,
                  "end": 1616,
                  "left": {
                    "type": "Literal",
                    "start": 1533,
                    "end": 1607,
                    "value": "#8: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x[1] === 4. Actual: ",
                    "raw": "'#8: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x[1] === 4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1610,
                    "end": 1616,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1611,
                      "end": 1615,
                      "object": {
                        "type": "Identifier",
                        "start": 1611,
                        "end": 1612,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1613,
                        "end": 1614,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1622,
      "end": 1752,
      "test": {
        "type": "BinaryExpression",
        "start": 1626,
        "end": 1636,
        "left": {
          "type": "MemberExpression",
          "start": 1626,
          "end": 1630,
          "object": {
            "type": "Identifier",
            "start": 1626,
            "end": 1627,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 1628,
            "end": 1629,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1635,
          "end": 1636,
          "value": 5,
          "raw": "5",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1638,
        "end": 1752,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1642,
            "end": 1750,
            "argument": {
              "type": "NewExpression",
              "start": 1648,
              "end": 1749,
              "callee": {
                "type": "Identifier",
                "start": 1652,
                "end": 1664,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1665,
                  "end": 1748,
                  "left": {
                    "type": "Literal",
                    "start": 1665,
                    "end": 1739,
                    "value": "#9: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x[2] === 5. Actual: ",
                    "raw": "'#9: var x = [0,1,2,3]; var arr = x.splice(1,3,4,5); x[2] === 5. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1742,
                    "end": 1748,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1743,
                      "end": 1747,
                      "object": {
                        "type": "Identifier",
                        "start": 1743,
                        "end": 1744,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1745,
                        "end": 1746,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}