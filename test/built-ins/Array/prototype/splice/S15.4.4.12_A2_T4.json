{
  "type": "Program",
  "start": 0,
  "end": 2744,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 439,
      "end": 484,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 443,
          "end": 483,
          "id": {
            "type": "Identifier",
            "start": 443,
            "end": 446,
            "name": "obj"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 449,
            "end": 483,
            "properties": [
              {
                "type": "Property",
                "start": 453,
                "end": 457,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Literal",
                  "start": 453,
                  "end": 454,
                  "value": 0,
                  "raw": "0"
                },
                "value": {
                  "type": "Literal",
                  "start": 456,
                  "end": 457,
                  "value": 0,
                  "raw": "0"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 461,
                "end": 465,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Literal",
                  "start": 461,
                  "end": 462,
                  "value": 1,
                  "raw": "1"
                },
                "value": {
                  "type": "Literal",
                  "start": 464,
                  "end": 465,
                  "value": 1,
                  "raw": "1"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 469,
                "end": 473,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Literal",
                  "start": 469,
                  "end": 470,
                  "value": 2,
                  "raw": "2"
                },
                "value": {
                  "type": "Literal",
                  "start": 472,
                  "end": 473,
                  "value": 2,
                  "raw": "2"
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 477,
                "end": 481,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Literal",
                  "start": 477,
                  "end": 478,
                  "value": 3,
                  "raw": "3"
                },
                "value": {
                  "type": "Literal",
                  "start": 480,
                  "end": 481,
                  "value": 3,
                  "raw": "3"
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 485,
      "end": 500,
      "expression": {
        "type": "AssignmentExpression",
        "start": 485,
        "end": 499,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 485,
          "end": 495,
          "object": {
            "type": "Identifier",
            "start": 485,
            "end": 488,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 489,
            "end": 495,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 498,
          "end": 499,
          "value": 4,
          "raw": "4"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 501,
      "end": 537,
      "expression": {
        "type": "AssignmentExpression",
        "start": 501,
        "end": 536,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 501,
          "end": 511,
          "object": {
            "type": "Identifier",
            "start": 501,
            "end": 504,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 505,
            "end": 511,
            "name": "splice"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 514,
          "end": 536,
          "object": {
            "type": "MemberExpression",
            "start": 514,
            "end": 529,
            "object": {
              "type": "Identifier",
              "start": 514,
              "end": 519,
              "name": "Array"
            },
            "property": {
              "type": "Identifier",
              "start": 520,
              "end": 529,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 530,
            "end": 536,
            "name": "splice"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 538,
      "end": 572,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 542,
          "end": 571,
          "id": {
            "type": "Identifier",
            "start": 542,
            "end": 545,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 548,
            "end": 571,
            "callee": {
              "type": "MemberExpression",
              "start": 548,
              "end": 558,
              "object": {
                "type": "Identifier",
                "start": 548,
                "end": 551,
                "name": "obj"
              },
              "property": {
                "type": "Identifier",
                "start": 552,
                "end": 558,
                "name": "splice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 559,
                "end": 561,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 560,
                  "end": 561,
                  "value": 4,
                  "raw": "4"
                }
              },
              {
                "type": "Literal",
                "start": 563,
                "end": 564,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 566,
                "end": 567,
                "value": 4,
                "raw": "4"
              },
              {
                "type": "Literal",
                "start": 569,
                "end": 570,
                "value": 5,
                "raw": "5"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 574,
      "end": 615,
      "expression": {
        "type": "AssignmentExpression",
        "start": 574,
        "end": 614,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 574,
          "end": 586,
          "object": {
            "type": "Identifier",
            "start": 574,
            "end": 577,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 578,
            "end": 586,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 589,
          "end": 614,
          "object": {
            "type": "MemberExpression",
            "start": 589,
            "end": 605,
            "object": {
              "type": "Identifier",
              "start": 589,
              "end": 595,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 596,
              "end": 605,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 606,
            "end": 614,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 616,
      "end": 866,
      "test": {
        "type": "BinaryExpression",
        "start": 620,
        "end": 665,
        "left": {
          "type": "CallExpression",
          "start": 620,
          "end": 634,
          "callee": {
            "type": "MemberExpression",
            "start": 620,
            "end": 632,
            "object": {
              "type": "Identifier",
              "start": 620,
              "end": 623,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 624,
              "end": 632,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 639,
          "end": 665,
          "left": {
            "type": "BinaryExpression",
            "start": 639,
            "end": 659,
            "left": {
              "type": "Literal",
              "start": 639,
              "end": 649,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 652,
              "end": 659,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 662,
            "end": 665,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 667,
        "end": 866,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 671,
            "end": 864,
            "argument": {
              "type": "NewExpression",
              "start": 677,
              "end": 863,
              "callee": {
                "type": "Identifier",
                "start": 681,
                "end": 693,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 694,
                  "end": 862,
                  "left": {
                    "type": "Literal",
                    "start": 694,
                    "end": 843,
                    "value": "#1: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr is Array object. Actual: ",
                    "raw": "'#1: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 846,
                    "end": 862,
                    "expression": {
                      "type": "CallExpression",
                      "start": 847,
                      "end": 861,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 847,
                        "end": 859,
                        "object": {
                          "type": "Identifier",
                          "start": 847,
                          "end": 850,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 851,
                          "end": 859,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 868,
      "end": 1082,
      "test": {
        "type": "BinaryExpression",
        "start": 872,
        "end": 888,
        "left": {
          "type": "MemberExpression",
          "start": 872,
          "end": 882,
          "object": {
            "type": "Identifier",
            "start": 872,
            "end": 875,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 876,
            "end": 882,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 887,
          "end": 888,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 890,
        "end": 1082,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 894,
            "end": 1080,
            "argument": {
              "type": "NewExpression",
              "start": 900,
              "end": 1079,
              "callee": {
                "type": "Identifier",
                "start": 904,
                "end": 916,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 917,
                  "end": 1078,
                  "left": {
                    "type": "Literal",
                    "start": 917,
                    "end": 1063,
                    "value": "#2: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr.length === 3. Actual: ",
                    "raw": "'#2: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr.length === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1066,
                    "end": 1078,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1067,
                      "end": 1077,
                      "object": {
                        "type": "Identifier",
                        "start": 1067,
                        "end": 1070,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1071,
                        "end": 1077,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1084,
      "end": 1286,
      "test": {
        "type": "BinaryExpression",
        "start": 1088,
        "end": 1100,
        "left": {
          "type": "MemberExpression",
          "start": 1088,
          "end": 1094,
          "object": {
            "type": "Identifier",
            "start": 1088,
            "end": 1091,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1092,
            "end": 1093,
            "value": 0,
            "raw": "0"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1099,
          "end": 1100,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1102,
        "end": 1286,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1106,
            "end": 1284,
            "argument": {
              "type": "NewExpression",
              "start": 1112,
              "end": 1283,
              "callee": {
                "type": "Identifier",
                "start": 1116,
                "end": 1128,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1129,
                  "end": 1282,
                  "left": {
                    "type": "Literal",
                    "start": 1129,
                    "end": 1271,
                    "value": "#3: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr[0] === 0. Actual: ",
                    "raw": "'#3: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr[0] === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1274,
                    "end": 1282,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1275,
                      "end": 1281,
                      "object": {
                        "type": "Identifier",
                        "start": 1275,
                        "end": 1278,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1279,
                        "end": 1280,
                        "value": 0,
                        "raw": "0"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1288,
      "end": 1490,
      "test": {
        "type": "BinaryExpression",
        "start": 1292,
        "end": 1304,
        "left": {
          "type": "MemberExpression",
          "start": 1292,
          "end": 1298,
          "object": {
            "type": "Identifier",
            "start": 1292,
            "end": 1295,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1296,
            "end": 1297,
            "value": 1,
            "raw": "1"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1303,
          "end": 1304,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1306,
        "end": 1490,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1310,
            "end": 1488,
            "argument": {
              "type": "NewExpression",
              "start": 1316,
              "end": 1487,
              "callee": {
                "type": "Identifier",
                "start": 1320,
                "end": 1332,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1333,
                  "end": 1486,
                  "left": {
                    "type": "Literal",
                    "start": 1333,
                    "end": 1475,
                    "value": "#4: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr[1] === 1. Actual: ",
                    "raw": "'#4: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr[1] === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1478,
                    "end": 1486,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1479,
                      "end": 1485,
                      "object": {
                        "type": "Identifier",
                        "start": 1479,
                        "end": 1482,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1483,
                        "end": 1484,
                        "value": 1,
                        "raw": "1"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1492,
      "end": 1694,
      "test": {
        "type": "BinaryExpression",
        "start": 1496,
        "end": 1508,
        "left": {
          "type": "MemberExpression",
          "start": 1496,
          "end": 1502,
          "object": {
            "type": "Identifier",
            "start": 1496,
            "end": 1499,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1500,
            "end": 1501,
            "value": 2,
            "raw": "2"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1507,
          "end": 1508,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1510,
        "end": 1694,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1514,
            "end": 1692,
            "argument": {
              "type": "NewExpression",
              "start": 1520,
              "end": 1691,
              "callee": {
                "type": "Identifier",
                "start": 1524,
                "end": 1536,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1537,
                  "end": 1690,
                  "left": {
                    "type": "Literal",
                    "start": 1537,
                    "end": 1679,
                    "value": "#5: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr[2] === 2. Actual: ",
                    "raw": "'#5: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); arr[2] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1682,
                    "end": 1690,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1683,
                      "end": 1689,
                      "object": {
                        "type": "Identifier",
                        "start": 1683,
                        "end": 1686,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1687,
                        "end": 1688,
                        "value": 2,
                        "raw": "2"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1696,
      "end": 1910,
      "test": {
        "type": "BinaryExpression",
        "start": 1700,
        "end": 1716,
        "left": {
          "type": "MemberExpression",
          "start": 1700,
          "end": 1710,
          "object": {
            "type": "Identifier",
            "start": 1700,
            "end": 1703,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 1704,
            "end": 1710,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1715,
          "end": 1716,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1718,
        "end": 1910,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1722,
            "end": 1908,
            "argument": {
              "type": "NewExpression",
              "start": 1728,
              "end": 1907,
              "callee": {
                "type": "Identifier",
                "start": 1732,
                "end": 1744,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1745,
                  "end": 1906,
                  "left": {
                    "type": "Literal",
                    "start": 1745,
                    "end": 1891,
                    "value": "#6: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj.length === 3. Actual: ",
                    "raw": "'#6: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj.length === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1894,
                    "end": 1906,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1895,
                      "end": 1905,
                      "object": {
                        "type": "Identifier",
                        "start": 1895,
                        "end": 1898,
                        "name": "obj"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1899,
                        "end": 1905,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1912,
      "end": 2114,
      "test": {
        "type": "BinaryExpression",
        "start": 1916,
        "end": 1928,
        "left": {
          "type": "MemberExpression",
          "start": 1916,
          "end": 1922,
          "object": {
            "type": "Identifier",
            "start": 1916,
            "end": 1919,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 1920,
            "end": 1921,
            "value": 0,
            "raw": "0"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1927,
          "end": 1928,
          "value": 4,
          "raw": "4"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1930,
        "end": 2114,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1934,
            "end": 2112,
            "argument": {
              "type": "NewExpression",
              "start": 1940,
              "end": 2111,
              "callee": {
                "type": "Identifier",
                "start": 1944,
                "end": 1956,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1957,
                  "end": 2110,
                  "left": {
                    "type": "Literal",
                    "start": 1957,
                    "end": 2099,
                    "value": "#7: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[0] === 4. Actual: ",
                    "raw": "'#7: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[0] === 4. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2102,
                    "end": 2110,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 2103,
                      "end": 2109,
                      "object": {
                        "type": "Identifier",
                        "start": 2103,
                        "end": 2106,
                        "name": "obj"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 2107,
                        "end": 2108,
                        "value": 0,
                        "raw": "0"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2116,
      "end": 2318,
      "test": {
        "type": "BinaryExpression",
        "start": 2120,
        "end": 2132,
        "left": {
          "type": "MemberExpression",
          "start": 2120,
          "end": 2126,
          "object": {
            "type": "Identifier",
            "start": 2120,
            "end": 2123,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 2124,
            "end": 2125,
            "value": 1,
            "raw": "1"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2131,
          "end": 2132,
          "value": 5,
          "raw": "5"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2134,
        "end": 2318,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2138,
            "end": 2316,
            "argument": {
              "type": "NewExpression",
              "start": 2144,
              "end": 2315,
              "callee": {
                "type": "Identifier",
                "start": 2148,
                "end": 2160,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2161,
                  "end": 2314,
                  "left": {
                    "type": "Literal",
                    "start": 2161,
                    "end": 2303,
                    "value": "#8: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[1] === 5. Actual: ",
                    "raw": "'#8: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[1] === 5. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2306,
                    "end": 2314,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 2307,
                      "end": 2313,
                      "object": {
                        "type": "Identifier",
                        "start": 2307,
                        "end": 2310,
                        "name": "obj"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 2311,
                        "end": 2312,
                        "value": 1,
                        "raw": "1"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2320,
      "end": 2522,
      "test": {
        "type": "BinaryExpression",
        "start": 2324,
        "end": 2336,
        "left": {
          "type": "MemberExpression",
          "start": 2324,
          "end": 2330,
          "object": {
            "type": "Identifier",
            "start": 2324,
            "end": 2327,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 2328,
            "end": 2329,
            "value": 2,
            "raw": "2"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 2335,
          "end": 2336,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2338,
        "end": 2522,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2342,
            "end": 2520,
            "argument": {
              "type": "NewExpression",
              "start": 2348,
              "end": 2519,
              "callee": {
                "type": "Identifier",
                "start": 2352,
                "end": 2364,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2365,
                  "end": 2518,
                  "left": {
                    "type": "Literal",
                    "start": 2365,
                    "end": 2507,
                    "value": "#9: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[2] === 3. Actual: ",
                    "raw": "'#9: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[2] === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2510,
                    "end": 2518,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 2511,
                      "end": 2517,
                      "object": {
                        "type": "Identifier",
                        "start": 2511,
                        "end": 2514,
                        "name": "obj"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 2515,
                        "end": 2516,
                        "value": 2,
                        "raw": "2"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 2524,
      "end": 2743,
      "test": {
        "type": "BinaryExpression",
        "start": 2528,
        "end": 2548,
        "left": {
          "type": "MemberExpression",
          "start": 2528,
          "end": 2534,
          "object": {
            "type": "Identifier",
            "start": 2528,
            "end": 2531,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 2532,
            "end": 2533,
            "value": 3,
            "raw": "3"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 2539,
          "end": 2548,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2550,
        "end": 2743,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2554,
            "end": 2741,
            "argument": {
              "type": "NewExpression",
              "start": 2560,
              "end": 2740,
              "callee": {
                "type": "Identifier",
                "start": 2564,
                "end": 2576,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2577,
                  "end": 2739,
                  "left": {
                    "type": "Literal",
                    "start": 2577,
                    "end": 2728,
                    "value": "#10: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[3] === undefined. Actual: ",
                    "raw": "'#10: var obj = {0:0,1:1,2:2,3:3}; obj.length = 4; obj.splice = Array.prototype.splice; var arr = obj.splice(-4,3,4,5); obj[3] === undefined. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2731,
                    "end": 2739,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 2732,
                      "end": 2738,
                      "object": {
                        "type": "Identifier",
                        "start": 2732,
                        "end": 2735,
                        "name": "obj"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 2736,
                        "end": 2737,
                        "value": 3,
                        "raw": "3"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}