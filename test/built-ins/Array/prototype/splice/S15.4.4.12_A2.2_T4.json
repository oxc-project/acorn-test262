{
  "type": "Program",
  "start": 0,
  "end": 1188,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 262,
      "end": 277,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 266,
          "end": 276,
          "id": {
            "type": "Identifier",
            "start": 266,
            "end": 267,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 270,
            "end": 276,
            "elements": [
              {
                "type": "Literal",
                "start": 271,
                "end": 272,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 274,
                "end": 275,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 278,
      "end": 326,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 282,
          "end": 325,
          "id": {
            "type": "Identifier",
            "start": 282,
            "end": 285,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 288,
            "end": 325,
            "callee": {
              "type": "MemberExpression",
              "start": 288,
              "end": 296,
              "object": {
                "type": "Identifier",
                "start": 288,
                "end": 289,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 290,
                "end": 296,
                "name": "splice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 297,
                "end": 298,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "MemberExpression",
                "start": 300,
                "end": 324,
                "object": {
                  "type": "Identifier",
                  "start": 300,
                  "end": 306,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 307,
                  "end": 324,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 328,
      "end": 369,
      "expression": {
        "type": "AssignmentExpression",
        "start": 328,
        "end": 368,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 328,
          "end": 340,
          "object": {
            "type": "Identifier",
            "start": 328,
            "end": 331,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 332,
            "end": 340,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 343,
          "end": 368,
          "object": {
            "type": "MemberExpression",
            "start": 343,
            "end": 359,
            "object": {
              "type": "Identifier",
              "start": 343,
              "end": 349,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 350,
              "end": 359,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 360,
            "end": 368,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 370,
      "end": 569,
      "test": {
        "type": "BinaryExpression",
        "start": 374,
        "end": 419,
        "left": {
          "type": "CallExpression",
          "start": 374,
          "end": 388,
          "callee": {
            "type": "MemberExpression",
            "start": 374,
            "end": 386,
            "object": {
              "type": "Identifier",
              "start": 374,
              "end": 377,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 378,
              "end": 386,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 393,
          "end": 419,
          "left": {
            "type": "BinaryExpression",
            "start": 393,
            "end": 413,
            "left": {
              "type": "Literal",
              "start": 393,
              "end": 403,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 406,
              "end": 413,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 416,
            "end": 419,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 421,
        "end": 569,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 425,
            "end": 567,
            "argument": {
              "type": "NewExpression",
              "start": 431,
              "end": 566,
              "callee": {
                "type": "Identifier",
                "start": 435,
                "end": 447,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 448,
                  "end": 565,
                  "left": {
                    "type": "Literal",
                    "start": 448,
                    "end": 546,
                    "value": "#0: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr is Array object. Actual: ",
                    "raw": "'#0: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 549,
                    "end": 565,
                    "expression": {
                      "type": "CallExpression",
                      "start": 550,
                      "end": 564,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 550,
                        "end": 562,
                        "object": {
                          "type": "Identifier",
                          "start": 550,
                          "end": 553,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 554,
                          "end": 562,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 571,
      "end": 734,
      "test": {
        "type": "BinaryExpression",
        "start": 575,
        "end": 591,
        "left": {
          "type": "MemberExpression",
          "start": 575,
          "end": 585,
          "object": {
            "type": "Identifier",
            "start": 575,
            "end": 578,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 579,
            "end": 585,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 590,
          "end": 591,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 593,
        "end": 734,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 597,
            "end": 732,
            "argument": {
              "type": "NewExpression",
              "start": 603,
              "end": 731,
              "callee": {
                "type": "Identifier",
                "start": 607,
                "end": 619,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 620,
                  "end": 730,
                  "left": {
                    "type": "Literal",
                    "start": 620,
                    "end": 715,
                    "value": "#1: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr.length === 0. Actual: ",
                    "raw": "'#1: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); arr.length === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 718,
                    "end": 730,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 719,
                      "end": 729,
                      "object": {
                        "type": "Identifier",
                        "start": 719,
                        "end": 722,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 723,
                        "end": 729,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 736,
      "end": 893,
      "test": {
        "type": "BinaryExpression",
        "start": 740,
        "end": 754,
        "left": {
          "type": "MemberExpression",
          "start": 740,
          "end": 748,
          "object": {
            "type": "Identifier",
            "start": 740,
            "end": 741,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 742,
            "end": 748,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 753,
          "end": 754,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 756,
        "end": 893,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 760,
            "end": 891,
            "argument": {
              "type": "NewExpression",
              "start": 766,
              "end": 890,
              "callee": {
                "type": "Identifier",
                "start": 770,
                "end": 782,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 783,
                  "end": 889,
                  "left": {
                    "type": "Literal",
                    "start": 783,
                    "end": 876,
                    "value": "#2: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x.length === 2. Actual: ",
                    "raw": "'#2: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x.length === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 879,
                    "end": 889,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 880,
                      "end": 888,
                      "object": {
                        "type": "Identifier",
                        "start": 880,
                        "end": 881,
                        "name": "x"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 882,
                        "end": 888,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 895,
      "end": 1040,
      "test": {
        "type": "BinaryExpression",
        "start": 899,
        "end": 909,
        "left": {
          "type": "MemberExpression",
          "start": 899,
          "end": 903,
          "object": {
            "type": "Identifier",
            "start": 899,
            "end": 900,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 901,
            "end": 902,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 908,
          "end": 909,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 911,
        "end": 1040,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 915,
            "end": 1038,
            "argument": {
              "type": "NewExpression",
              "start": 921,
              "end": 1037,
              "callee": {
                "type": "Identifier",
                "start": 925,
                "end": 937,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 938,
                  "end": 1036,
                  "left": {
                    "type": "Literal",
                    "start": 938,
                    "end": 1027,
                    "value": "#3: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1030,
                    "end": 1036,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1031,
                      "end": 1035,
                      "object": {
                        "type": "Identifier",
                        "start": 1031,
                        "end": 1032,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1033,
                        "end": 1034,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1042,
      "end": 1187,
      "test": {
        "type": "BinaryExpression",
        "start": 1046,
        "end": 1056,
        "left": {
          "type": "MemberExpression",
          "start": 1046,
          "end": 1050,
          "object": {
            "type": "Identifier",
            "start": 1046,
            "end": 1047,
            "name": "x"
          },
          "property": {
            "type": "Literal",
            "start": 1048,
            "end": 1049,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1055,
          "end": 1056,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1058,
        "end": 1187,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1062,
            "end": 1185,
            "argument": {
              "type": "NewExpression",
              "start": 1068,
              "end": 1184,
              "callee": {
                "type": "Identifier",
                "start": 1072,
                "end": 1084,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1085,
                  "end": 1183,
                  "left": {
                    "type": "Literal",
                    "start": 1085,
                    "end": 1174,
                    "value": "#4: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1]; var arr = x.splice(0,Number.NEGATIVE_INFINITY); x[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1177,
                    "end": 1183,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1178,
                      "end": 1182,
                      "object": {
                        "type": "Identifier",
                        "start": 1178,
                        "end": 1179,
                        "name": "x"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1180,
                        "end": 1181,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}