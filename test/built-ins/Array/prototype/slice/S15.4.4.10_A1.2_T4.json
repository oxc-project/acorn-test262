{
  "type": "Program",
  "start": 0,
  "end": 1596,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 339,
      "end": 363,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 343,
          "end": 362,
          "id": {
            "type": "Identifier",
            "start": 343,
            "end": 344,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 347,
            "end": 362,
            "elements": [
              {
                "type": "Literal",
                "start": 348,
                "end": 349,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 351,
                "end": 352,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 354,
                "end": 355,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 357,
                "end": 358,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 360,
                "end": 361,
                "value": 4,
                "raw": "4",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 364,
      "end": 389,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 368,
          "end": 388,
          "id": {
            "type": "Identifier",
            "start": 368,
            "end": 371,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 374,
            "end": 388,
            "callee": {
              "type": "MemberExpression",
              "start": 374,
              "end": 381,
              "object": {
                "type": "Identifier",
                "start": 374,
                "end": 375,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 376,
                "end": 381,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 382,
                "end": 384,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 383,
                  "end": 384,
                  "value": 9,
                  "raw": "9",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "Literal",
                "start": 386,
                "end": 387,
                "value": 5,
                "raw": "5",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 391,
      "end": 432,
      "expression": {
        "type": "AssignmentExpression",
        "start": 391,
        "end": 431,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 391,
          "end": 403,
          "object": {
            "type": "Identifier",
            "start": 391,
            "end": 394,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 395,
            "end": 403,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 406,
          "end": 431,
          "object": {
            "type": "MemberExpression",
            "start": 406,
            "end": 422,
            "object": {
              "type": "Identifier",
              "start": 406,
              "end": 412,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 413,
              "end": 422,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 423,
            "end": 431,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 433,
      "end": 615,
      "test": {
        "type": "BinaryExpression",
        "start": 437,
        "end": 482,
        "left": {
          "type": "CallExpression",
          "start": 437,
          "end": 451,
          "callee": {
            "type": "MemberExpression",
            "start": 437,
            "end": 449,
            "object": {
              "type": "Identifier",
              "start": 437,
              "end": 440,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 441,
              "end": 449,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 456,
          "end": 482,
          "left": {
            "type": "BinaryExpression",
            "start": 456,
            "end": 476,
            "left": {
              "type": "Literal",
              "start": 456,
              "end": 466,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 469,
              "end": 476,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 479,
            "end": 482,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 484,
        "end": 615,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 488,
            "end": 613,
            "argument": {
              "type": "NewExpression",
              "start": 494,
              "end": 612,
              "callee": {
                "type": "Identifier",
                "start": 498,
                "end": 510,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 511,
                  "end": 611,
                  "left": {
                    "type": "Literal",
                    "start": 511,
                    "end": 592,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 595,
                    "end": 611,
                    "expression": {
                      "type": "CallExpression",
                      "start": 596,
                      "end": 610,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 596,
                        "end": 608,
                        "object": {
                          "type": "Identifier",
                          "start": 596,
                          "end": 599,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 600,
                          "end": 608,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 617,
      "end": 763,
      "test": {
        "type": "BinaryExpression",
        "start": 621,
        "end": 637,
        "left": {
          "type": "MemberExpression",
          "start": 621,
          "end": 631,
          "object": {
            "type": "Identifier",
            "start": 621,
            "end": 624,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 625,
            "end": 631,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 636,
          "end": 637,
          "value": 5,
          "raw": "5",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 639,
        "end": 763,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 643,
            "end": 761,
            "argument": {
              "type": "NewExpression",
              "start": 649,
              "end": 760,
              "callee": {
                "type": "Identifier",
                "start": 653,
                "end": 665,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 666,
                  "end": 759,
                  "left": {
                    "type": "Literal",
                    "start": 666,
                    "end": 744,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr.length === 5. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr.length === 5. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 747,
                    "end": 759,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 748,
                      "end": 758,
                      "object": {
                        "type": "Identifier",
                        "start": 748,
                        "end": 751,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 752,
                        "end": 758,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 765,
      "end": 899,
      "test": {
        "type": "BinaryExpression",
        "start": 769,
        "end": 781,
        "left": {
          "type": "MemberExpression",
          "start": 769,
          "end": 775,
          "object": {
            "type": "Identifier",
            "start": 769,
            "end": 772,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 773,
            "end": 774,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 780,
          "end": 781,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 783,
        "end": 899,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 787,
            "end": 897,
            "argument": {
              "type": "NewExpression",
              "start": 793,
              "end": 896,
              "callee": {
                "type": "Identifier",
                "start": 797,
                "end": 809,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 810,
                  "end": 895,
                  "left": {
                    "type": "Literal",
                    "start": 810,
                    "end": 884,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 887,
                    "end": 895,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 888,
                      "end": 894,
                      "object": {
                        "type": "Identifier",
                        "start": 888,
                        "end": 891,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 892,
                        "end": 893,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 901,
      "end": 1035,
      "test": {
        "type": "BinaryExpression",
        "start": 905,
        "end": 917,
        "left": {
          "type": "MemberExpression",
          "start": 905,
          "end": 911,
          "object": {
            "type": "Identifier",
            "start": 905,
            "end": 908,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 909,
            "end": 910,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 916,
          "end": 917,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 919,
        "end": 1035,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 923,
            "end": 1033,
            "argument": {
              "type": "NewExpression",
              "start": 929,
              "end": 1032,
              "callee": {
                "type": "Identifier",
                "start": 933,
                "end": 945,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 946,
                  "end": 1031,
                  "left": {
                    "type": "Literal",
                    "start": 946,
                    "end": 1020,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1023,
                    "end": 1031,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1024,
                      "end": 1030,
                      "object": {
                        "type": "Identifier",
                        "start": 1024,
                        "end": 1027,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1028,
                        "end": 1029,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1037,
      "end": 1171,
      "test": {
        "type": "BinaryExpression",
        "start": 1041,
        "end": 1053,
        "left": {
          "type": "MemberExpression",
          "start": 1041,
          "end": 1047,
          "object": {
            "type": "Identifier",
            "start": 1041,
            "end": 1044,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1045,
            "end": 1046,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1052,
          "end": 1053,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1055,
        "end": 1171,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1059,
            "end": 1169,
            "argument": {
              "type": "NewExpression",
              "start": 1065,
              "end": 1168,
              "callee": {
                "type": "Identifier",
                "start": 1069,
                "end": 1081,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1082,
                  "end": 1167,
                  "left": {
                    "type": "Literal",
                    "start": 1082,
                    "end": 1156,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[2] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1159,
                    "end": 1167,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1160,
                      "end": 1166,
                      "object": {
                        "type": "Identifier",
                        "start": 1160,
                        "end": 1163,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1164,
                        "end": 1165,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1173,
      "end": 1307,
      "test": {
        "type": "BinaryExpression",
        "start": 1177,
        "end": 1189,
        "left": {
          "type": "MemberExpression",
          "start": 1177,
          "end": 1183,
          "object": {
            "type": "Identifier",
            "start": 1177,
            "end": 1180,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1181,
            "end": 1182,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1188,
          "end": 1189,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1191,
        "end": 1307,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1195,
            "end": 1305,
            "argument": {
              "type": "NewExpression",
              "start": 1201,
              "end": 1304,
              "callee": {
                "type": "Identifier",
                "start": 1205,
                "end": 1217,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1218,
                  "end": 1303,
                  "left": {
                    "type": "Literal",
                    "start": 1218,
                    "end": 1292,
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[3] === 3. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[3] === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1295,
                    "end": 1303,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1296,
                      "end": 1302,
                      "object": {
                        "type": "Identifier",
                        "start": 1296,
                        "end": 1299,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1300,
                        "end": 1301,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1309,
      "end": 1443,
      "test": {
        "type": "BinaryExpression",
        "start": 1313,
        "end": 1325,
        "left": {
          "type": "MemberExpression",
          "start": 1313,
          "end": 1319,
          "object": {
            "type": "Identifier",
            "start": 1313,
            "end": 1316,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1317,
            "end": 1318,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1324,
          "end": 1325,
          "value": 4,
          "raw": "4",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1327,
        "end": 1443,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1331,
            "end": 1441,
            "argument": {
              "type": "NewExpression",
              "start": 1337,
              "end": 1440,
              "callee": {
                "type": "Identifier",
                "start": 1341,
                "end": 1353,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1354,
                  "end": 1439,
                  "left": {
                    "type": "Literal",
                    "start": 1354,
                    "end": 1428,
                    "value": "#7: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[4] === 4. Actual: ",
                    "raw": "'#7: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[4] === 4. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1431,
                    "end": 1439,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1432,
                      "end": 1438,
                      "object": {
                        "type": "Identifier",
                        "start": 1432,
                        "end": 1435,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1436,
                        "end": 1437,
                        "value": 4,
                        "raw": "4",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1445,
      "end": 1595,
      "test": {
        "type": "BinaryExpression",
        "start": 1449,
        "end": 1469,
        "left": {
          "type": "MemberExpression",
          "start": 1449,
          "end": 1455,
          "object": {
            "type": "Identifier",
            "start": 1449,
            "end": 1452,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1453,
            "end": 1454,
            "value": 5,
            "raw": "5",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1460,
          "end": 1469,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1471,
        "end": 1595,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1475,
            "end": 1593,
            "argument": {
              "type": "NewExpression",
              "start": 1481,
              "end": 1592,
              "callee": {
                "type": "Identifier",
                "start": 1485,
                "end": 1497,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1498,
                  "end": 1591,
                  "left": {
                    "type": "Literal",
                    "start": 1498,
                    "end": 1580,
                    "value": "#8: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[5] === undefined. Actual: ",
                    "raw": "'#8: var x = [0,1,2,3,4]; var arr = x.slice(-9,5); arr[5] === undefined. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1583,
                    "end": 1591,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1584,
                      "end": 1590,
                      "object": {
                        "type": "Identifier",
                        "start": 1584,
                        "end": 1587,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1588,
                        "end": 1589,
                        "value": 5,
                        "raw": "5",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}