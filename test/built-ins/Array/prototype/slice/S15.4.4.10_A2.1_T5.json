{
  "type": "Program",
  "start": 0,
  "end": 1702,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 254,
      "end": 278,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 258,
          "end": 277,
          "id": {
            "type": "Identifier",
            "start": 258,
            "end": 259,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 262,
            "end": 277,
            "elements": [
              {
                "type": "Literal",
                "start": 263,
                "end": 264,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 266,
                "end": 267,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 269,
                "end": 270,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 272,
                "end": 273,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 275,
                "end": 276,
                "value": 4,
                "raw": "4",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 279,
      "end": 389,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 283,
          "end": 388,
          "id": {
            "type": "Identifier",
            "start": 283,
            "end": 286,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 289,
            "end": 388,
            "callee": {
              "type": "MemberExpression",
              "start": 289,
              "end": 296,
              "object": {
                "type": "Identifier",
                "start": 289,
                "end": 290,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 291,
                "end": 296,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "start": 297,
                "end": 384,
                "properties": [
                  {
                    "type": "Property",
                    "start": 301,
                    "end": 339,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 301,
                      "end": 308,
                      "name": "valueOf"
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "start": 310,
                      "end": 339,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 321,
                        "end": 339,
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "start": 327,
                            "end": 335,
                            "argument": {
                              "type": "Literal",
                              "start": 334,
                              "end": 335,
                              "value": 0,
                              "raw": "0",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        ]
                      }
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 343,
                    "end": 382,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 343,
                      "end": 351,
                      "name": "toString"
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "start": 353,
                      "end": 382,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 364,
                        "end": 382,
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "start": 370,
                            "end": 378,
                            "argument": {
                              "type": "Literal",
                              "start": 377,
                              "end": 378,
                              "value": 3,
                              "raw": "3",
                              "regex": null,
                              "bigint": null
                            }
                          }
                        ]
                      }
                    },
                    "kind": "init"
                  }
                ]
              },
              {
                "type": "Literal",
                "start": 386,
                "end": 387,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 391,
      "end": 432,
      "expression": {
        "type": "AssignmentExpression",
        "start": 391,
        "end": 431,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 391,
          "end": 403,
          "object": {
            "type": "Identifier",
            "start": 391,
            "end": 394,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 395,
            "end": 403,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 406,
          "end": 431,
          "object": {
            "type": "MemberExpression",
            "start": 406,
            "end": 422,
            "object": {
              "type": "Identifier",
              "start": 406,
              "end": 412,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 413,
              "end": 422,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 423,
            "end": 431,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 433,
      "end": 678,
      "test": {
        "type": "BinaryExpression",
        "start": 437,
        "end": 482,
        "left": {
          "type": "CallExpression",
          "start": 437,
          "end": 451,
          "callee": {
            "type": "MemberExpression",
            "start": 437,
            "end": 449,
            "object": {
              "type": "Identifier",
              "start": 437,
              "end": 440,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 441,
              "end": 449,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 456,
          "end": 482,
          "left": {
            "type": "BinaryExpression",
            "start": 456,
            "end": 476,
            "left": {
              "type": "Literal",
              "start": 456,
              "end": 466,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 469,
              "end": 476,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 479,
            "end": 482,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 484,
        "end": 678,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 488,
            "end": 676,
            "argument": {
              "type": "NewExpression",
              "start": 494,
              "end": 675,
              "callee": {
                "type": "Identifier",
                "start": 498,
                "end": 510,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 511,
                  "end": 674,
                  "left": {
                    "type": "Literal",
                    "start": 511,
                    "end": 655,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 658,
                    "end": 674,
                    "expression": {
                      "type": "CallExpression",
                      "start": 659,
                      "end": 673,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 659,
                        "end": 671,
                        "object": {
                          "type": "Identifier",
                          "start": 659,
                          "end": 662,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 663,
                          "end": 671,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 680,
      "end": 889,
      "test": {
        "type": "BinaryExpression",
        "start": 684,
        "end": 700,
        "left": {
          "type": "MemberExpression",
          "start": 684,
          "end": 694,
          "object": {
            "type": "Identifier",
            "start": 684,
            "end": 687,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 688,
            "end": 694,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 699,
          "end": 700,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 702,
        "end": 889,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 706,
            "end": 887,
            "argument": {
              "type": "NewExpression",
              "start": 712,
              "end": 886,
              "callee": {
                "type": "Identifier",
                "start": 716,
                "end": 728,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 729,
                  "end": 885,
                  "left": {
                    "type": "Literal",
                    "start": 729,
                    "end": 870,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr.length === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 873,
                    "end": 885,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 874,
                      "end": 884,
                      "object": {
                        "type": "Identifier",
                        "start": 874,
                        "end": 877,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 878,
                        "end": 884,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 891,
      "end": 1088,
      "test": {
        "type": "BinaryExpression",
        "start": 895,
        "end": 907,
        "left": {
          "type": "MemberExpression",
          "start": 895,
          "end": 901,
          "object": {
            "type": "Identifier",
            "start": 895,
            "end": 898,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 899,
            "end": 900,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 906,
          "end": 907,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 909,
        "end": 1088,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 913,
            "end": 1086,
            "argument": {
              "type": "NewExpression",
              "start": 919,
              "end": 1085,
              "callee": {
                "type": "Identifier",
                "start": 923,
                "end": 935,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 936,
                  "end": 1084,
                  "left": {
                    "type": "Literal",
                    "start": 936,
                    "end": 1073,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1076,
                    "end": 1084,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1077,
                      "end": 1083,
                      "object": {
                        "type": "Identifier",
                        "start": 1077,
                        "end": 1080,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1081,
                        "end": 1082,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1090,
      "end": 1287,
      "test": {
        "type": "BinaryExpression",
        "start": 1094,
        "end": 1106,
        "left": {
          "type": "MemberExpression",
          "start": 1094,
          "end": 1100,
          "object": {
            "type": "Identifier",
            "start": 1094,
            "end": 1097,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1098,
            "end": 1099,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1105,
          "end": 1106,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1108,
        "end": 1287,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1112,
            "end": 1285,
            "argument": {
              "type": "NewExpression",
              "start": 1118,
              "end": 1284,
              "callee": {
                "type": "Identifier",
                "start": 1122,
                "end": 1134,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1135,
                  "end": 1283,
                  "left": {
                    "type": "Literal",
                    "start": 1135,
                    "end": 1272,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1275,
                    "end": 1283,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1276,
                      "end": 1282,
                      "object": {
                        "type": "Identifier",
                        "start": 1276,
                        "end": 1279,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1280,
                        "end": 1281,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1289,
      "end": 1486,
      "test": {
        "type": "BinaryExpression",
        "start": 1293,
        "end": 1305,
        "left": {
          "type": "MemberExpression",
          "start": 1293,
          "end": 1299,
          "object": {
            "type": "Identifier",
            "start": 1293,
            "end": 1296,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1297,
            "end": 1298,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1304,
          "end": 1305,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1307,
        "end": 1486,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1311,
            "end": 1484,
            "argument": {
              "type": "NewExpression",
              "start": 1317,
              "end": 1483,
              "callee": {
                "type": "Identifier",
                "start": 1321,
                "end": 1333,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1334,
                  "end": 1482,
                  "left": {
                    "type": "Literal",
                    "start": 1334,
                    "end": 1471,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[2] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1474,
                    "end": 1482,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1475,
                      "end": 1481,
                      "object": {
                        "type": "Identifier",
                        "start": 1475,
                        "end": 1478,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1479,
                        "end": 1480,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1488,
      "end": 1701,
      "test": {
        "type": "BinaryExpression",
        "start": 1492,
        "end": 1512,
        "left": {
          "type": "MemberExpression",
          "start": 1492,
          "end": 1498,
          "object": {
            "type": "Identifier",
            "start": 1492,
            "end": 1495,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1496,
            "end": 1497,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1503,
          "end": 1512,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1514,
        "end": 1701,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1518,
            "end": 1699,
            "argument": {
              "type": "NewExpression",
              "start": 1524,
              "end": 1698,
              "callee": {
                "type": "Identifier",
                "start": 1528,
                "end": 1540,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1541,
                  "end": 1697,
                  "left": {
                    "type": "Literal",
                    "start": 1541,
                    "end": 1686,
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice({valueOf: function() {return 0}, toString: function() {return 3}},3); arr[3] === undefined. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1689,
                    "end": 1697,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1690,
                      "end": 1696,
                      "object": {
                        "type": "Identifier",
                        "start": 1690,
                        "end": 1693,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1694,
                        "end": 1695,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}