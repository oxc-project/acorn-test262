{
  "type": "Program",
  "start": 0,
  "end": 1107,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 252,
      "end": 276,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 256,
          "end": 275,
          "id": {
            "type": "Identifier",
            "start": 256,
            "end": 257,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 260,
            "end": 275,
            "elements": [
              {
                "type": "Literal",
                "start": 261,
                "end": 262,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 264,
                "end": 265,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 267,
                "end": 268,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 270,
                "end": 271,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 273,
                "end": 274,
                "value": 4,
                "raw": "4"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 277,
      "end": 303,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 281,
          "end": 302,
          "id": {
            "type": "Identifier",
            "start": 281,
            "end": 284,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 287,
            "end": 302,
            "callee": {
              "type": "MemberExpression",
              "start": 287,
              "end": 294,
              "object": {
                "type": "Identifier",
                "start": 287,
                "end": 288,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 289,
                "end": 294,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 295,
                "end": 298,
                "value": 2.5,
                "raw": "2.5"
              },
              {
                "type": "Literal",
                "start": 300,
                "end": 301,
                "value": 4,
                "raw": "4"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 305,
      "end": 346,
      "expression": {
        "type": "AssignmentExpression",
        "start": 305,
        "end": 345,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 305,
          "end": 317,
          "object": {
            "type": "Identifier",
            "start": 305,
            "end": 308,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 309,
            "end": 317,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 320,
          "end": 345,
          "object": {
            "type": "MemberExpression",
            "start": 320,
            "end": 336,
            "object": {
              "type": "Identifier",
              "start": 320,
              "end": 326,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 327,
              "end": 336,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 337,
            "end": 345,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 347,
      "end": 530,
      "test": {
        "type": "BinaryExpression",
        "start": 351,
        "end": 396,
        "left": {
          "type": "CallExpression",
          "start": 351,
          "end": 365,
          "callee": {
            "type": "MemberExpression",
            "start": 351,
            "end": 363,
            "object": {
              "type": "Identifier",
              "start": 351,
              "end": 354,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 355,
              "end": 363,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 370,
          "end": 396,
          "left": {
            "type": "BinaryExpression",
            "start": 370,
            "end": 390,
            "left": {
              "type": "Literal",
              "start": 370,
              "end": 380,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 383,
              "end": 390,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 393,
            "end": 396,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 398,
        "end": 530,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 402,
            "end": 528,
            "argument": {
              "type": "NewExpression",
              "start": 408,
              "end": 527,
              "callee": {
                "type": "Identifier",
                "start": 412,
                "end": 424,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 425,
                  "end": 526,
                  "left": {
                    "type": "Literal",
                    "start": 425,
                    "end": 507,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 510,
                    "end": 526,
                    "expression": {
                      "type": "CallExpression",
                      "start": 511,
                      "end": 525,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 511,
                        "end": 523,
                        "object": {
                          "type": "Identifier",
                          "start": 511,
                          "end": 514,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 515,
                          "end": 523,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 532,
      "end": 679,
      "test": {
        "type": "BinaryExpression",
        "start": 536,
        "end": 552,
        "left": {
          "type": "MemberExpression",
          "start": 536,
          "end": 546,
          "object": {
            "type": "Identifier",
            "start": 536,
            "end": 539,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 540,
            "end": 546,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 551,
          "end": 552,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 554,
        "end": 679,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 558,
            "end": 677,
            "argument": {
              "type": "NewExpression",
              "start": 564,
              "end": 676,
              "callee": {
                "type": "Identifier",
                "start": 568,
                "end": 580,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 581,
                  "end": 675,
                  "left": {
                    "type": "Literal",
                    "start": 581,
                    "end": 660,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr.length === 2. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr.length === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 663,
                    "end": 675,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 664,
                      "end": 674,
                      "object": {
                        "type": "Identifier",
                        "start": 664,
                        "end": 667,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 668,
                        "end": 674,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 681,
      "end": 816,
      "test": {
        "type": "BinaryExpression",
        "start": 685,
        "end": 697,
        "left": {
          "type": "MemberExpression",
          "start": 685,
          "end": 691,
          "object": {
            "type": "Identifier",
            "start": 685,
            "end": 688,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 689,
            "end": 690,
            "value": 0,
            "raw": "0"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 696,
          "end": 697,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 699,
        "end": 816,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 703,
            "end": 814,
            "argument": {
              "type": "NewExpression",
              "start": 709,
              "end": 813,
              "callee": {
                "type": "Identifier",
                "start": 713,
                "end": 725,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 726,
                  "end": 812,
                  "left": {
                    "type": "Literal",
                    "start": 726,
                    "end": 801,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr[0] === 2. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr[0] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 804,
                    "end": 812,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 805,
                      "end": 811,
                      "object": {
                        "type": "Identifier",
                        "start": 805,
                        "end": 808,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 809,
                        "end": 810,
                        "value": 0,
                        "raw": "0"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 818,
      "end": 953,
      "test": {
        "type": "BinaryExpression",
        "start": 822,
        "end": 834,
        "left": {
          "type": "MemberExpression",
          "start": 822,
          "end": 828,
          "object": {
            "type": "Identifier",
            "start": 822,
            "end": 825,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 826,
            "end": 827,
            "value": 1,
            "raw": "1"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 833,
          "end": 834,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 836,
        "end": 953,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 840,
            "end": 951,
            "argument": {
              "type": "NewExpression",
              "start": 846,
              "end": 950,
              "callee": {
                "type": "Identifier",
                "start": 850,
                "end": 862,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 863,
                  "end": 949,
                  "left": {
                    "type": "Literal",
                    "start": 863,
                    "end": 938,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr[1] === 3. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr[1] === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 941,
                    "end": 949,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 942,
                      "end": 948,
                      "object": {
                        "type": "Identifier",
                        "start": 942,
                        "end": 945,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 946,
                        "end": 947,
                        "value": 1,
                        "raw": "1"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 955,
      "end": 1106,
      "test": {
        "type": "BinaryExpression",
        "start": 959,
        "end": 979,
        "left": {
          "type": "MemberExpression",
          "start": 959,
          "end": 965,
          "object": {
            "type": "Identifier",
            "start": 959,
            "end": 962,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 963,
            "end": 964,
            "value": 3,
            "raw": "3"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 970,
          "end": 979,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 981,
        "end": 1106,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 985,
            "end": 1104,
            "argument": {
              "type": "NewExpression",
              "start": 991,
              "end": 1103,
              "callee": {
                "type": "Identifier",
                "start": 995,
                "end": 1007,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1008,
                  "end": 1102,
                  "left": {
                    "type": "Literal",
                    "start": 1008,
                    "end": 1091,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr[3] === undefined. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(2.5,4); arr[3] === undefined. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1094,
                    "end": 1102,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1095,
                      "end": 1101,
                      "object": {
                        "type": "Identifier",
                        "start": 1095,
                        "end": 1098,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1099,
                        "end": 1100,
                        "value": 3,
                        "raw": "3"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}