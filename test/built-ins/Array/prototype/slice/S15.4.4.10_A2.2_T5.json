{
  "type": "Program",
  "start": 0,
  "end": 1700,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 252,
      "end": 276,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 256,
          "end": 275,
          "id": {
            "type": "Identifier",
            "start": 256,
            "end": 257,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 260,
            "end": 275,
            "elements": [
              {
                "type": "Literal",
                "start": 261,
                "end": 262,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "Literal",
                "start": 264,
                "end": 265,
                "value": 1,
                "raw": "1"
              },
              {
                "type": "Literal",
                "start": 267,
                "end": 268,
                "value": 2,
                "raw": "2"
              },
              {
                "type": "Literal",
                "start": 270,
                "end": 271,
                "value": 3,
                "raw": "3"
              },
              {
                "type": "Literal",
                "start": 273,
                "end": 274,
                "value": 4,
                "raw": "4"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 277,
      "end": 387,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 281,
          "end": 386,
          "id": {
            "type": "Identifier",
            "start": 281,
            "end": 284,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 287,
            "end": 386,
            "callee": {
              "type": "MemberExpression",
              "start": 287,
              "end": 294,
              "object": {
                "type": "Identifier",
                "start": 287,
                "end": 288,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 289,
                "end": 294,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 295,
                "end": 296,
                "value": 0,
                "raw": "0"
              },
              {
                "type": "ObjectExpression",
                "start": 298,
                "end": 385,
                "properties": [
                  {
                    "type": "Property",
                    "start": 302,
                    "end": 340,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 302,
                      "end": 309,
                      "name": "valueOf"
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "start": 311,
                      "end": 340,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 322,
                        "end": 340,
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "start": 328,
                            "end": 336,
                            "argument": {
                              "type": "Literal",
                              "start": 335,
                              "end": 336,
                              "value": 3,
                              "raw": "3"
                            }
                          }
                        ]
                      }
                    },
                    "kind": "init"
                  },
                  {
                    "type": "Property",
                    "start": 344,
                    "end": 383,
                    "method": false,
                    "shorthand": false,
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "start": 344,
                      "end": 352,
                      "name": "toString"
                    },
                    "value": {
                      "type": "FunctionExpression",
                      "start": 354,
                      "end": 383,
                      "id": null,
                      "expression": false,
                      "generator": false,
                      "async": false,
                      "params": [],
                      "body": {
                        "type": "BlockStatement",
                        "start": 365,
                        "end": 383,
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "start": 371,
                            "end": 379,
                            "argument": {
                              "type": "Literal",
                              "start": 378,
                              "end": 379,
                              "value": 0,
                              "raw": "0"
                            }
                          }
                        ]
                      }
                    },
                    "kind": "init"
                  }
                ]
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 389,
      "end": 430,
      "expression": {
        "type": "AssignmentExpression",
        "start": 389,
        "end": 429,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 389,
          "end": 401,
          "object": {
            "type": "Identifier",
            "start": 389,
            "end": 392,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 393,
            "end": 401,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 404,
          "end": 429,
          "object": {
            "type": "MemberExpression",
            "start": 404,
            "end": 420,
            "object": {
              "type": "Identifier",
              "start": 404,
              "end": 410,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 411,
              "end": 420,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 421,
            "end": 429,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 431,
      "end": 676,
      "test": {
        "type": "BinaryExpression",
        "start": 435,
        "end": 480,
        "left": {
          "type": "CallExpression",
          "start": 435,
          "end": 449,
          "callee": {
            "type": "MemberExpression",
            "start": 435,
            "end": 447,
            "object": {
              "type": "Identifier",
              "start": 435,
              "end": 438,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 439,
              "end": 447,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 454,
          "end": 480,
          "left": {
            "type": "BinaryExpression",
            "start": 454,
            "end": 474,
            "left": {
              "type": "Literal",
              "start": 454,
              "end": 464,
              "value": "[object ",
              "raw": "\"[object \""
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 467,
              "end": 474,
              "value": "Array",
              "raw": "\"Array\""
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 477,
            "end": 480,
            "value": "]",
            "raw": "\"]\""
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 482,
        "end": 676,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 486,
            "end": 674,
            "argument": {
              "type": "NewExpression",
              "start": 492,
              "end": 673,
              "callee": {
                "type": "Identifier",
                "start": 496,
                "end": 508,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 509,
                  "end": 672,
                  "left": {
                    "type": "Literal",
                    "start": 509,
                    "end": 653,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr is Array object. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 656,
                    "end": 672,
                    "expression": {
                      "type": "CallExpression",
                      "start": 657,
                      "end": 671,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 657,
                        "end": 669,
                        "object": {
                          "type": "Identifier",
                          "start": 657,
                          "end": 660,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 661,
                          "end": 669,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 678,
      "end": 887,
      "test": {
        "type": "BinaryExpression",
        "start": 682,
        "end": 698,
        "left": {
          "type": "MemberExpression",
          "start": 682,
          "end": 692,
          "object": {
            "type": "Identifier",
            "start": 682,
            "end": 685,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 686,
            "end": 692,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 697,
          "end": 698,
          "value": 3,
          "raw": "3"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 700,
        "end": 887,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 704,
            "end": 885,
            "argument": {
              "type": "NewExpression",
              "start": 710,
              "end": 884,
              "callee": {
                "type": "Identifier",
                "start": 714,
                "end": 726,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 727,
                  "end": 883,
                  "left": {
                    "type": "Literal",
                    "start": 727,
                    "end": 868,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr.length === 3. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 871,
                    "end": 883,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 872,
                      "end": 882,
                      "object": {
                        "type": "Identifier",
                        "start": 872,
                        "end": 875,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 876,
                        "end": 882,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 889,
      "end": 1086,
      "test": {
        "type": "BinaryExpression",
        "start": 893,
        "end": 905,
        "left": {
          "type": "MemberExpression",
          "start": 893,
          "end": 899,
          "object": {
            "type": "Identifier",
            "start": 893,
            "end": 896,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 897,
            "end": 898,
            "value": 0,
            "raw": "0"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 904,
          "end": 905,
          "value": 0,
          "raw": "0"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 907,
        "end": 1086,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 911,
            "end": 1084,
            "argument": {
              "type": "NewExpression",
              "start": 917,
              "end": 1083,
              "callee": {
                "type": "Identifier",
                "start": 921,
                "end": 933,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 934,
                  "end": 1082,
                  "left": {
                    "type": "Literal",
                    "start": 934,
                    "end": 1071,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[0] === 0. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1074,
                    "end": 1082,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1075,
                      "end": 1081,
                      "object": {
                        "type": "Identifier",
                        "start": 1075,
                        "end": 1078,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1079,
                        "end": 1080,
                        "value": 0,
                        "raw": "0"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1088,
      "end": 1285,
      "test": {
        "type": "BinaryExpression",
        "start": 1092,
        "end": 1104,
        "left": {
          "type": "MemberExpression",
          "start": 1092,
          "end": 1098,
          "object": {
            "type": "Identifier",
            "start": 1092,
            "end": 1095,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1096,
            "end": 1097,
            "value": 1,
            "raw": "1"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1103,
          "end": 1104,
          "value": 1,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1106,
        "end": 1285,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1110,
            "end": 1283,
            "argument": {
              "type": "NewExpression",
              "start": 1116,
              "end": 1282,
              "callee": {
                "type": "Identifier",
                "start": 1120,
                "end": 1132,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1133,
                  "end": 1281,
                  "left": {
                    "type": "Literal",
                    "start": 1133,
                    "end": 1270,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[1] === 1. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1273,
                    "end": 1281,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1274,
                      "end": 1280,
                      "object": {
                        "type": "Identifier",
                        "start": 1274,
                        "end": 1277,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1278,
                        "end": 1279,
                        "value": 1,
                        "raw": "1"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1287,
      "end": 1484,
      "test": {
        "type": "BinaryExpression",
        "start": 1291,
        "end": 1303,
        "left": {
          "type": "MemberExpression",
          "start": 1291,
          "end": 1297,
          "object": {
            "type": "Identifier",
            "start": 1291,
            "end": 1294,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1295,
            "end": 1296,
            "value": 2,
            "raw": "2"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1302,
          "end": 1303,
          "value": 2,
          "raw": "2"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1305,
        "end": 1484,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1309,
            "end": 1482,
            "argument": {
              "type": "NewExpression",
              "start": 1315,
              "end": 1481,
              "callee": {
                "type": "Identifier",
                "start": 1319,
                "end": 1331,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1332,
                  "end": 1480,
                  "left": {
                    "type": "Literal",
                    "start": 1332,
                    "end": 1469,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[2] === 2. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1472,
                    "end": 1480,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1473,
                      "end": 1479,
                      "object": {
                        "type": "Identifier",
                        "start": 1473,
                        "end": 1476,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1477,
                        "end": 1478,
                        "value": 2,
                        "raw": "2"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1486,
      "end": 1699,
      "test": {
        "type": "BinaryExpression",
        "start": 1490,
        "end": 1510,
        "left": {
          "type": "MemberExpression",
          "start": 1490,
          "end": 1496,
          "object": {
            "type": "Identifier",
            "start": 1490,
            "end": 1493,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1494,
            "end": 1495,
            "value": 3,
            "raw": "3"
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1501,
          "end": 1510,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1512,
        "end": 1699,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1516,
            "end": 1697,
            "argument": {
              "type": "NewExpression",
              "start": 1522,
              "end": 1696,
              "callee": {
                "type": "Identifier",
                "start": 1526,
                "end": 1538,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1539,
                  "end": 1695,
                  "left": {
                    "type": "Literal",
                    "start": 1539,
                    "end": 1684,
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[3] === undefined. Actual: '"
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1687,
                    "end": 1695,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1688,
                      "end": 1694,
                      "object": {
                        "type": "Identifier",
                        "start": 1688,
                        "end": 1691,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1692,
                        "end": 1693,
                        "value": 3,
                        "raw": "3"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}