{
  "type": "Program",
  "start": 0,
  "end": 910,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 245,
      "end": 269,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 249,
          "end": 268,
          "id": {
            "type": "Identifier",
            "start": 249,
            "end": 250,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 253,
            "end": 268,
            "elements": [
              {
                "type": "Literal",
                "start": 254,
                "end": 255,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 257,
                "end": 258,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 260,
                "end": 261,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 263,
                "end": 264,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 266,
                "end": 267,
                "value": 4,
                "raw": "4",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 270,
      "end": 317,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 274,
          "end": 316,
          "id": {
            "type": "Identifier",
            "start": 274,
            "end": 277,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 280,
            "end": 316,
            "callee": {
              "type": "MemberExpression",
              "start": 280,
              "end": 287,
              "object": {
                "type": "Identifier",
                "start": 280,
                "end": 281,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 282,
                "end": 287,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 288,
                "end": 289,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "MemberExpression",
                "start": 291,
                "end": 315,
                "object": {
                  "type": "Identifier",
                  "start": 291,
                  "end": 297,
                  "name": "Number"
                },
                "property": {
                  "type": "Identifier",
                  "start": 298,
                  "end": 315,
                  "name": "NEGATIVE_INFINITY"
                },
                "computed": false,
                "optional": false
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 319,
      "end": 360,
      "expression": {
        "type": "AssignmentExpression",
        "start": 319,
        "end": 359,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 319,
          "end": 331,
          "object": {
            "type": "Identifier",
            "start": 319,
            "end": 322,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 323,
            "end": 331,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 334,
          "end": 359,
          "object": {
            "type": "MemberExpression",
            "start": 334,
            "end": 350,
            "object": {
              "type": "Identifier",
              "start": 334,
              "end": 340,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 341,
              "end": 350,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 351,
            "end": 359,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 361,
      "end": 565,
      "test": {
        "type": "BinaryExpression",
        "start": 365,
        "end": 410,
        "left": {
          "type": "CallExpression",
          "start": 365,
          "end": 379,
          "callee": {
            "type": "MemberExpression",
            "start": 365,
            "end": 377,
            "object": {
              "type": "Identifier",
              "start": 365,
              "end": 368,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 369,
              "end": 377,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 384,
          "end": 410,
          "left": {
            "type": "BinaryExpression",
            "start": 384,
            "end": 404,
            "left": {
              "type": "Literal",
              "start": 384,
              "end": 394,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 397,
              "end": 404,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 407,
            "end": 410,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 412,
        "end": 565,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 416,
            "end": 563,
            "argument": {
              "type": "NewExpression",
              "start": 422,
              "end": 562,
              "callee": {
                "type": "Identifier",
                "start": 426,
                "end": 438,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 439,
                  "end": 561,
                  "left": {
                    "type": "Literal",
                    "start": 439,
                    "end": 542,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.NEGATIVE_INFINITY); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.NEGATIVE_INFINITY); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 545,
                    "end": 561,
                    "expression": {
                      "type": "CallExpression",
                      "start": 546,
                      "end": 560,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 546,
                        "end": 558,
                        "object": {
                          "type": "Identifier",
                          "start": 546,
                          "end": 549,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 550,
                          "end": 558,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 567,
      "end": 735,
      "test": {
        "type": "BinaryExpression",
        "start": 571,
        "end": 587,
        "left": {
          "type": "MemberExpression",
          "start": 571,
          "end": 581,
          "object": {
            "type": "Identifier",
            "start": 571,
            "end": 574,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 575,
            "end": 581,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 586,
          "end": 587,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 589,
        "end": 735,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 593,
            "end": 733,
            "argument": {
              "type": "NewExpression",
              "start": 599,
              "end": 732,
              "callee": {
                "type": "Identifier",
                "start": 603,
                "end": 615,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 616,
                  "end": 731,
                  "left": {
                    "type": "Literal",
                    "start": 616,
                    "end": 716,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.NEGATIVE_INFINITY); arr.length === 0. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.NEGATIVE_INFINITY); arr.length === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 719,
                    "end": 731,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 720,
                      "end": 730,
                      "object": {
                        "type": "Identifier",
                        "start": 720,
                        "end": 723,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 724,
                        "end": 730,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 737,
      "end": 909,
      "test": {
        "type": "BinaryExpression",
        "start": 741,
        "end": 761,
        "left": {
          "type": "MemberExpression",
          "start": 741,
          "end": 747,
          "object": {
            "type": "Identifier",
            "start": 741,
            "end": 744,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 745,
            "end": 746,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 752,
          "end": 761,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 763,
        "end": 909,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 767,
            "end": 907,
            "argument": {
              "type": "NewExpression",
              "start": 773,
              "end": 906,
              "callee": {
                "type": "Identifier",
                "start": 777,
                "end": 789,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 790,
                  "end": 905,
                  "left": {
                    "type": "Literal",
                    "start": 790,
                    "end": 894,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.NEGATIVE_INFINITY); arr[0] === undefined. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(0,Number.NEGATIVE_INFINITY); arr[0] === undefined. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 897,
                    "end": 905,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 898,
                      "end": 904,
                      "object": {
                        "type": "Identifier",
                        "start": 898,
                        "end": 901,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 902,
                        "end": 903,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}