{
  "type": "Program",
  "start": 0,
  "end": 1320,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 328,
      "end": 352,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 332,
          "end": 351,
          "id": {
            "type": "Identifier",
            "start": 332,
            "end": 333,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 336,
            "end": 351,
            "elements": [
              {
                "type": "Literal",
                "start": 337,
                "end": 338,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 340,
                "end": 341,
                "value": 1,
                "raw": "1",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 343,
                "end": 344,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 346,
                "end": 347,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 349,
                "end": 350,
                "value": 4,
                "raw": "4",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "start": 353,
      "end": 379,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 357,
          "end": 378,
          "id": {
            "type": "Identifier",
            "start": 357,
            "end": 360,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 363,
            "end": 378,
            "callee": {
              "type": "MemberExpression",
              "start": 363,
              "end": 370,
              "object": {
                "type": "Identifier",
                "start": 363,
                "end": 364,
                "name": "x"
              },
              "property": {
                "type": "Identifier",
                "start": 365,
                "end": 370,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 371,
                "end": 373,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 372,
                  "end": 373,
                  "value": 5,
                  "raw": "5",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "UnaryExpression",
                "start": 375,
                "end": 377,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 376,
                  "end": 377,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 381,
      "end": 422,
      "expression": {
        "type": "AssignmentExpression",
        "start": 381,
        "end": 421,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 381,
          "end": 393,
          "object": {
            "type": "Identifier",
            "start": 381,
            "end": 384,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 385,
            "end": 393,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 396,
          "end": 421,
          "object": {
            "type": "MemberExpression",
            "start": 396,
            "end": 412,
            "object": {
              "type": "Identifier",
              "start": 396,
              "end": 402,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 403,
              "end": 412,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 413,
            "end": 421,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 423,
      "end": 606,
      "test": {
        "type": "BinaryExpression",
        "start": 427,
        "end": 472,
        "left": {
          "type": "CallExpression",
          "start": 427,
          "end": 441,
          "callee": {
            "type": "MemberExpression",
            "start": 427,
            "end": 439,
            "object": {
              "type": "Identifier",
              "start": 427,
              "end": 430,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 431,
              "end": 439,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 446,
          "end": 472,
          "left": {
            "type": "BinaryExpression",
            "start": 446,
            "end": 466,
            "left": {
              "type": "Literal",
              "start": 446,
              "end": 456,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 459,
              "end": 466,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 469,
            "end": 472,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 474,
        "end": 606,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 478,
            "end": 604,
            "argument": {
              "type": "NewExpression",
              "start": 484,
              "end": 603,
              "callee": {
                "type": "Identifier",
                "start": 488,
                "end": 500,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 501,
                  "end": 602,
                  "left": {
                    "type": "Literal",
                    "start": 501,
                    "end": 583,
                    "value": "#1: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr is Array object. Actual: ",
                    "raw": "'#1: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 586,
                    "end": 602,
                    "expression": {
                      "type": "CallExpression",
                      "start": 587,
                      "end": 601,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 587,
                        "end": 599,
                        "object": {
                          "type": "Identifier",
                          "start": 587,
                          "end": 590,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 591,
                          "end": 599,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 608,
      "end": 755,
      "test": {
        "type": "BinaryExpression",
        "start": 612,
        "end": 628,
        "left": {
          "type": "MemberExpression",
          "start": 612,
          "end": 622,
          "object": {
            "type": "Identifier",
            "start": 612,
            "end": 615,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 616,
            "end": 622,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 627,
          "end": 628,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 630,
        "end": 755,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 634,
            "end": 753,
            "argument": {
              "type": "NewExpression",
              "start": 640,
              "end": 752,
              "callee": {
                "type": "Identifier",
                "start": 644,
                "end": 656,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 657,
                  "end": 751,
                  "left": {
                    "type": "Literal",
                    "start": 657,
                    "end": 736,
                    "value": "#2: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr.length === 3. Actual: ",
                    "raw": "'#2: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr.length === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 739,
                    "end": 751,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 740,
                      "end": 750,
                      "object": {
                        "type": "Identifier",
                        "start": 740,
                        "end": 743,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 744,
                        "end": 750,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 757,
      "end": 892,
      "test": {
        "type": "BinaryExpression",
        "start": 761,
        "end": 773,
        "left": {
          "type": "MemberExpression",
          "start": 761,
          "end": 767,
          "object": {
            "type": "Identifier",
            "start": 761,
            "end": 764,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 765,
            "end": 766,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 772,
          "end": 773,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 775,
        "end": 892,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 779,
            "end": 890,
            "argument": {
              "type": "NewExpression",
              "start": 785,
              "end": 889,
              "callee": {
                "type": "Identifier",
                "start": 789,
                "end": 801,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 802,
                  "end": 888,
                  "left": {
                    "type": "Literal",
                    "start": 802,
                    "end": 877,
                    "value": "#3: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[0] === 0. Actual: ",
                    "raw": "'#3: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 880,
                    "end": 888,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 881,
                      "end": 887,
                      "object": {
                        "type": "Identifier",
                        "start": 881,
                        "end": 884,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 885,
                        "end": 886,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 894,
      "end": 1029,
      "test": {
        "type": "BinaryExpression",
        "start": 898,
        "end": 910,
        "left": {
          "type": "MemberExpression",
          "start": 898,
          "end": 904,
          "object": {
            "type": "Identifier",
            "start": 898,
            "end": 901,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 902,
            "end": 903,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 909,
          "end": 910,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 912,
        "end": 1029,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 916,
            "end": 1027,
            "argument": {
              "type": "NewExpression",
              "start": 922,
              "end": 1026,
              "callee": {
                "type": "Identifier",
                "start": 926,
                "end": 938,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 939,
                  "end": 1025,
                  "left": {
                    "type": "Literal",
                    "start": 939,
                    "end": 1014,
                    "value": "#4: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[1] === 1. Actual: ",
                    "raw": "'#4: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1017,
                    "end": 1025,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1018,
                      "end": 1024,
                      "object": {
                        "type": "Identifier",
                        "start": 1018,
                        "end": 1021,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1022,
                        "end": 1023,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1031,
      "end": 1166,
      "test": {
        "type": "BinaryExpression",
        "start": 1035,
        "end": 1047,
        "left": {
          "type": "MemberExpression",
          "start": 1035,
          "end": 1041,
          "object": {
            "type": "Identifier",
            "start": 1035,
            "end": 1038,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1039,
            "end": 1040,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1046,
          "end": 1047,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1049,
        "end": 1166,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1053,
            "end": 1164,
            "argument": {
              "type": "NewExpression",
              "start": 1059,
              "end": 1163,
              "callee": {
                "type": "Identifier",
                "start": 1063,
                "end": 1075,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1076,
                  "end": 1162,
                  "left": {
                    "type": "Literal",
                    "start": 1076,
                    "end": 1151,
                    "value": "#5: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[2] === 2. Actual: ",
                    "raw": "'#5: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[2] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1154,
                    "end": 1162,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1155,
                      "end": 1161,
                      "object": {
                        "type": "Identifier",
                        "start": 1155,
                        "end": 1158,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1159,
                        "end": 1160,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1168,
      "end": 1319,
      "test": {
        "type": "BinaryExpression",
        "start": 1172,
        "end": 1192,
        "left": {
          "type": "MemberExpression",
          "start": 1172,
          "end": 1178,
          "object": {
            "type": "Identifier",
            "start": 1172,
            "end": 1175,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1176,
            "end": 1177,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1183,
          "end": 1192,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1194,
        "end": 1319,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1198,
            "end": 1317,
            "argument": {
              "type": "NewExpression",
              "start": 1204,
              "end": 1316,
              "callee": {
                "type": "Identifier",
                "start": 1208,
                "end": 1220,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1221,
                  "end": 1315,
                  "left": {
                    "type": "Literal",
                    "start": 1221,
                    "end": 1304,
                    "value": "#6: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var x = [0,1,2,3,4]; var arr = x.slice(-5,-2); arr[3] === undefined. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1307,
                    "end": 1315,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1308,
                      "end": 1314,
                      "object": {
                        "type": "Identifier",
                        "start": 1308,
                        "end": 1311,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1312,
                        "end": 1313,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}