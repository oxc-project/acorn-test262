{
  "type": "Program",
  "start": 0,
  "end": 2125,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 409,
      "end": 422,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 413,
          "end": 421,
          "id": {
            "type": "Identifier",
            "start": 413,
            "end": 416,
            "name": "obj"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 419,
            "end": 421,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 423,
      "end": 457,
      "expression": {
        "type": "AssignmentExpression",
        "start": 423,
        "end": 456,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 423,
          "end": 432,
          "object": {
            "type": "Identifier",
            "start": 423,
            "end": 426,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 427,
            "end": 432,
            "name": "slice"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 435,
          "end": 456,
          "object": {
            "type": "MemberExpression",
            "start": 435,
            "end": 450,
            "object": {
              "type": "Identifier",
              "start": 435,
              "end": 440,
              "name": "Array"
            },
            "property": {
              "type": "Identifier",
              "start": 441,
              "end": 450,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 451,
            "end": 456,
            "name": "slice"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 458,
      "end": 469,
      "expression": {
        "type": "AssignmentExpression",
        "start": 458,
        "end": 468,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 458,
          "end": 464,
          "object": {
            "type": "Identifier",
            "start": 458,
            "end": 461,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 462,
            "end": 463,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 467,
          "end": 468,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 470,
      "end": 481,
      "expression": {
        "type": "AssignmentExpression",
        "start": 470,
        "end": 480,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 470,
          "end": 476,
          "object": {
            "type": "Identifier",
            "start": 470,
            "end": 473,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 474,
            "end": 475,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 479,
          "end": 480,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 482,
      "end": 493,
      "expression": {
        "type": "AssignmentExpression",
        "start": 482,
        "end": 492,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 482,
          "end": 488,
          "object": {
            "type": "Identifier",
            "start": 482,
            "end": 485,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 486,
            "end": 487,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 491,
          "end": 492,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 494,
      "end": 505,
      "expression": {
        "type": "AssignmentExpression",
        "start": 494,
        "end": 504,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 494,
          "end": 500,
          "object": {
            "type": "Identifier",
            "start": 494,
            "end": 497,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 498,
            "end": 499,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 503,
          "end": 504,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 506,
      "end": 517,
      "expression": {
        "type": "AssignmentExpression",
        "start": 506,
        "end": 516,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 506,
          "end": 512,
          "object": {
            "type": "Identifier",
            "start": 506,
            "end": 509,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 510,
            "end": 511,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 515,
          "end": 516,
          "value": 4,
          "raw": "4",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 518,
      "end": 533,
      "expression": {
        "type": "AssignmentExpression",
        "start": 518,
        "end": 532,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 518,
          "end": 528,
          "object": {
            "type": "Identifier",
            "start": 518,
            "end": 521,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 522,
            "end": 528,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 531,
          "end": 532,
          "value": 5,
          "raw": "5",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 534,
      "end": 560,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 538,
          "end": 559,
          "id": {
            "type": "Identifier",
            "start": 538,
            "end": 541,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 544,
            "end": 559,
            "callee": {
              "type": "MemberExpression",
              "start": 544,
              "end": 553,
              "object": {
                "type": "Identifier",
                "start": 544,
                "end": 547,
                "name": "obj"
              },
              "property": {
                "type": "Identifier",
                "start": 548,
                "end": 553,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 554,
                "end": 555,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 557,
                "end": 558,
                "value": 3,
                "raw": "3",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 562,
      "end": 603,
      "expression": {
        "type": "AssignmentExpression",
        "start": 562,
        "end": 602,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 562,
          "end": 574,
          "object": {
            "type": "Identifier",
            "start": 562,
            "end": 565,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 566,
            "end": 574,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 577,
          "end": 602,
          "object": {
            "type": "MemberExpression",
            "start": 577,
            "end": 593,
            "object": {
              "type": "Identifier",
              "start": 577,
              "end": 583,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 584,
              "end": 593,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 594,
            "end": 602,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 604,
      "end": 891,
      "test": {
        "type": "BinaryExpression",
        "start": 608,
        "end": 653,
        "left": {
          "type": "CallExpression",
          "start": 608,
          "end": 622,
          "callee": {
            "type": "MemberExpression",
            "start": 608,
            "end": 620,
            "object": {
              "type": "Identifier",
              "start": 608,
              "end": 611,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 612,
              "end": 620,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 627,
          "end": 653,
          "left": {
            "type": "BinaryExpression",
            "start": 627,
            "end": 647,
            "left": {
              "type": "Literal",
              "start": 627,
              "end": 637,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 640,
              "end": 647,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 650,
            "end": 653,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 655,
        "end": 891,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 659,
            "end": 889,
            "argument": {
              "type": "NewExpression",
              "start": 665,
              "end": 888,
              "callee": {
                "type": "Identifier",
                "start": 669,
                "end": 681,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 682,
                  "end": 887,
                  "left": {
                    "type": "Literal",
                    "start": 682,
                    "end": 868,
                    "value": "#1: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr is Array object. Actual: ",
                    "raw": "'#1: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 871,
                    "end": 887,
                    "expression": {
                      "type": "CallExpression",
                      "start": 872,
                      "end": 886,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 872,
                        "end": 884,
                        "object": {
                          "type": "Identifier",
                          "start": 872,
                          "end": 875,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 876,
                          "end": 884,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 893,
      "end": 1144,
      "test": {
        "type": "BinaryExpression",
        "start": 897,
        "end": 913,
        "left": {
          "type": "MemberExpression",
          "start": 897,
          "end": 907,
          "object": {
            "type": "Identifier",
            "start": 897,
            "end": 900,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 901,
            "end": 907,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 912,
          "end": 913,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 915,
        "end": 1144,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 919,
            "end": 1142,
            "argument": {
              "type": "NewExpression",
              "start": 925,
              "end": 1141,
              "callee": {
                "type": "Identifier",
                "start": 929,
                "end": 941,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 942,
                  "end": 1140,
                  "left": {
                    "type": "Literal",
                    "start": 942,
                    "end": 1125,
                    "value": "#2: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr.length === 3. Actual: ",
                    "raw": "'#2: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr.length === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1128,
                    "end": 1140,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1129,
                      "end": 1139,
                      "object": {
                        "type": "Identifier",
                        "start": 1129,
                        "end": 1132,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1133,
                        "end": 1139,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1146,
      "end": 1385,
      "test": {
        "type": "BinaryExpression",
        "start": 1150,
        "end": 1162,
        "left": {
          "type": "MemberExpression",
          "start": 1150,
          "end": 1156,
          "object": {
            "type": "Identifier",
            "start": 1150,
            "end": 1153,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1154,
            "end": 1155,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1161,
          "end": 1162,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1164,
        "end": 1385,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1168,
            "end": 1383,
            "argument": {
              "type": "NewExpression",
              "start": 1174,
              "end": 1382,
              "callee": {
                "type": "Identifier",
                "start": 1178,
                "end": 1190,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1191,
                  "end": 1381,
                  "left": {
                    "type": "Literal",
                    "start": 1191,
                    "end": 1370,
                    "value": "#3: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[0] === 0. Actual: ",
                    "raw": "'#3: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1373,
                    "end": 1381,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1374,
                      "end": 1380,
                      "object": {
                        "type": "Identifier",
                        "start": 1374,
                        "end": 1377,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1378,
                        "end": 1379,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1387,
      "end": 1626,
      "test": {
        "type": "BinaryExpression",
        "start": 1391,
        "end": 1403,
        "left": {
          "type": "MemberExpression",
          "start": 1391,
          "end": 1397,
          "object": {
            "type": "Identifier",
            "start": 1391,
            "end": 1394,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1395,
            "end": 1396,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1402,
          "end": 1403,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1405,
        "end": 1626,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1409,
            "end": 1624,
            "argument": {
              "type": "NewExpression",
              "start": 1415,
              "end": 1623,
              "callee": {
                "type": "Identifier",
                "start": 1419,
                "end": 1431,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1432,
                  "end": 1622,
                  "left": {
                    "type": "Literal",
                    "start": 1432,
                    "end": 1611,
                    "value": "#4: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[1] === 1. Actual: ",
                    "raw": "'#4: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1614,
                    "end": 1622,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1615,
                      "end": 1621,
                      "object": {
                        "type": "Identifier",
                        "start": 1615,
                        "end": 1618,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1619,
                        "end": 1620,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1628,
      "end": 1867,
      "test": {
        "type": "BinaryExpression",
        "start": 1632,
        "end": 1644,
        "left": {
          "type": "MemberExpression",
          "start": 1632,
          "end": 1638,
          "object": {
            "type": "Identifier",
            "start": 1632,
            "end": 1635,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1636,
            "end": 1637,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1643,
          "end": 1644,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1646,
        "end": 1867,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1650,
            "end": 1865,
            "argument": {
              "type": "NewExpression",
              "start": 1656,
              "end": 1864,
              "callee": {
                "type": "Identifier",
                "start": 1660,
                "end": 1672,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1673,
                  "end": 1863,
                  "left": {
                    "type": "Literal",
                    "start": 1673,
                    "end": 1852,
                    "value": "#5: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[2] === 2. Actual: ",
                    "raw": "'#5: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[2] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1855,
                    "end": 1863,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1856,
                      "end": 1862,
                      "object": {
                        "type": "Identifier",
                        "start": 1856,
                        "end": 1859,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1860,
                        "end": 1861,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1869,
      "end": 2124,
      "test": {
        "type": "BinaryExpression",
        "start": 1873,
        "end": 1893,
        "left": {
          "type": "MemberExpression",
          "start": 1873,
          "end": 1879,
          "object": {
            "type": "Identifier",
            "start": 1873,
            "end": 1876,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1877,
            "end": 1878,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1884,
          "end": 1893,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1895,
        "end": 2124,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1899,
            "end": 2122,
            "argument": {
              "type": "NewExpression",
              "start": 1905,
              "end": 2121,
              "callee": {
                "type": "Identifier",
                "start": 1909,
                "end": 1921,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1922,
                  "end": 2120,
                  "left": {
                    "type": "Literal",
                    "start": 1922,
                    "end": 2109,
                    "value": "#6: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(0,3); arr[3] === undefined. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2112,
                    "end": 2120,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 2113,
                      "end": 2119,
                      "object": {
                        "type": "Identifier",
                        "start": 2113,
                        "end": 2116,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 2117,
                        "end": 2118,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}