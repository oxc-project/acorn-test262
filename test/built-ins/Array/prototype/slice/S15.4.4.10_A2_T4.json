{
  "type": "Program",
  "start": 0,
  "end": 2147,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 417,
      "end": 430,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 421,
          "end": 429,
          "id": {
            "type": "Identifier",
            "start": 421,
            "end": 424,
            "name": "obj"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 427,
            "end": 429,
            "properties": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 431,
      "end": 465,
      "expression": {
        "type": "AssignmentExpression",
        "start": 431,
        "end": 464,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 431,
          "end": 440,
          "object": {
            "type": "Identifier",
            "start": 431,
            "end": 434,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 435,
            "end": 440,
            "name": "slice"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 443,
          "end": 464,
          "object": {
            "type": "MemberExpression",
            "start": 443,
            "end": 458,
            "object": {
              "type": "Identifier",
              "start": 443,
              "end": 448,
              "name": "Array"
            },
            "property": {
              "type": "Identifier",
              "start": 449,
              "end": 458,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 459,
            "end": 464,
            "name": "slice"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 466,
      "end": 477,
      "expression": {
        "type": "AssignmentExpression",
        "start": 466,
        "end": 476,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 466,
          "end": 472,
          "object": {
            "type": "Identifier",
            "start": 466,
            "end": 469,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 470,
            "end": 471,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 475,
          "end": 476,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 478,
      "end": 489,
      "expression": {
        "type": "AssignmentExpression",
        "start": 478,
        "end": 488,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 478,
          "end": 484,
          "object": {
            "type": "Identifier",
            "start": 478,
            "end": 481,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 482,
            "end": 483,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 487,
          "end": 488,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 490,
      "end": 501,
      "expression": {
        "type": "AssignmentExpression",
        "start": 490,
        "end": 500,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 490,
          "end": 496,
          "object": {
            "type": "Identifier",
            "start": 490,
            "end": 493,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 494,
            "end": 495,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 499,
          "end": 500,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 502,
      "end": 513,
      "expression": {
        "type": "AssignmentExpression",
        "start": 502,
        "end": 512,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 502,
          "end": 508,
          "object": {
            "type": "Identifier",
            "start": 502,
            "end": 505,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 506,
            "end": 507,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 511,
          "end": 512,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 514,
      "end": 525,
      "expression": {
        "type": "AssignmentExpression",
        "start": 514,
        "end": 524,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 514,
          "end": 520,
          "object": {
            "type": "Identifier",
            "start": 514,
            "end": 517,
            "name": "obj"
          },
          "property": {
            "type": "Literal",
            "start": 518,
            "end": 519,
            "value": 4,
            "raw": "4",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 523,
          "end": 524,
          "value": 4,
          "raw": "4",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 526,
      "end": 541,
      "expression": {
        "type": "AssignmentExpression",
        "start": 526,
        "end": 540,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 526,
          "end": 536,
          "object": {
            "type": "Identifier",
            "start": 526,
            "end": 529,
            "name": "obj"
          },
          "property": {
            "type": "Identifier",
            "start": 530,
            "end": 536,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 539,
          "end": 540,
          "value": 5,
          "raw": "5",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 542,
      "end": 570,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 546,
          "end": 569,
          "id": {
            "type": "Identifier",
            "start": 546,
            "end": 549,
            "name": "arr"
          },
          "init": {
            "type": "CallExpression",
            "start": 552,
            "end": 569,
            "callee": {
              "type": "MemberExpression",
              "start": 552,
              "end": 561,
              "object": {
                "type": "Identifier",
                "start": 552,
                "end": 555,
                "name": "obj"
              },
              "property": {
                "type": "Identifier",
                "start": 556,
                "end": 561,
                "name": "slice"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "start": 562,
                "end": 564,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 563,
                  "end": 564,
                  "value": 5,
                  "raw": "5",
                  "regex": null,
                  "bigint": null
                }
              },
              {
                "type": "UnaryExpression",
                "start": 566,
                "end": 568,
                "operator": "-",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "start": 567,
                  "end": 568,
                  "value": 2,
                  "raw": "2",
                  "regex": null,
                  "bigint": null
                }
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 572,
      "end": 613,
      "expression": {
        "type": "AssignmentExpression",
        "start": 572,
        "end": 612,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 572,
          "end": 584,
          "object": {
            "type": "Identifier",
            "start": 572,
            "end": 575,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 576,
            "end": 584,
            "name": "getClass"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "MemberExpression",
          "start": 587,
          "end": 612,
          "object": {
            "type": "MemberExpression",
            "start": 587,
            "end": 603,
            "object": {
              "type": "Identifier",
              "start": 587,
              "end": 593,
              "name": "Object"
            },
            "property": {
              "type": "Identifier",
              "start": 594,
              "end": 603,
              "name": "prototype"
            },
            "computed": false,
            "optional": false
          },
          "property": {
            "type": "Identifier",
            "start": 604,
            "end": 612,
            "name": "toString"
          },
          "computed": false,
          "optional": false
        }
      }
    },
    {
      "type": "IfStatement",
      "start": 614,
      "end": 903,
      "test": {
        "type": "BinaryExpression",
        "start": 618,
        "end": 663,
        "left": {
          "type": "CallExpression",
          "start": 618,
          "end": 632,
          "callee": {
            "type": "MemberExpression",
            "start": 618,
            "end": 630,
            "object": {
              "type": "Identifier",
              "start": 618,
              "end": 621,
              "name": "arr"
            },
            "property": {
              "type": "Identifier",
              "start": 622,
              "end": 630,
              "name": "getClass"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "BinaryExpression",
          "start": 637,
          "end": 663,
          "left": {
            "type": "BinaryExpression",
            "start": 637,
            "end": 657,
            "left": {
              "type": "Literal",
              "start": 637,
              "end": 647,
              "value": "[object ",
              "raw": "\"[object \"",
              "regex": null,
              "bigint": null
            },
            "operator": "+",
            "right": {
              "type": "Literal",
              "start": 650,
              "end": 657,
              "value": "Array",
              "raw": "\"Array\"",
              "regex": null,
              "bigint": null
            }
          },
          "operator": "+",
          "right": {
            "type": "Literal",
            "start": 660,
            "end": 663,
            "value": "]",
            "raw": "\"]\"",
            "regex": null,
            "bigint": null
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 665,
        "end": 903,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 669,
            "end": 901,
            "argument": {
              "type": "NewExpression",
              "start": 675,
              "end": 900,
              "callee": {
                "type": "Identifier",
                "start": 679,
                "end": 691,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 692,
                  "end": 899,
                  "left": {
                    "type": "Literal",
                    "start": 692,
                    "end": 880,
                    "value": "#1: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr is Array object. Actual: ",
                    "raw": "'#1: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr is Array object. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 883,
                    "end": 899,
                    "expression": {
                      "type": "CallExpression",
                      "start": 884,
                      "end": 898,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 884,
                        "end": 896,
                        "object": {
                          "type": "Identifier",
                          "start": 884,
                          "end": 887,
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 888,
                          "end": 896,
                          "name": "getClass"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 905,
      "end": 1158,
      "test": {
        "type": "BinaryExpression",
        "start": 909,
        "end": 925,
        "left": {
          "type": "MemberExpression",
          "start": 909,
          "end": 919,
          "object": {
            "type": "Identifier",
            "start": 909,
            "end": 912,
            "name": "arr"
          },
          "property": {
            "type": "Identifier",
            "start": 913,
            "end": 919,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 924,
          "end": 925,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 927,
        "end": 1158,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 931,
            "end": 1156,
            "argument": {
              "type": "NewExpression",
              "start": 937,
              "end": 1155,
              "callee": {
                "type": "Identifier",
                "start": 941,
                "end": 953,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 954,
                  "end": 1154,
                  "left": {
                    "type": "Literal",
                    "start": 954,
                    "end": 1139,
                    "value": "#2: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr.length === 3. Actual: ",
                    "raw": "'#2: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr.length === 3. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1142,
                    "end": 1154,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1143,
                      "end": 1153,
                      "object": {
                        "type": "Identifier",
                        "start": 1143,
                        "end": 1146,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1147,
                        "end": 1153,
                        "name": "length"
                      },
                      "computed": false,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1160,
      "end": 1401,
      "test": {
        "type": "BinaryExpression",
        "start": 1164,
        "end": 1176,
        "left": {
          "type": "MemberExpression",
          "start": 1164,
          "end": 1170,
          "object": {
            "type": "Identifier",
            "start": 1164,
            "end": 1167,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1168,
            "end": 1169,
            "value": 0,
            "raw": "0",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1175,
          "end": 1176,
          "value": 0,
          "raw": "0",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1178,
        "end": 1401,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1182,
            "end": 1399,
            "argument": {
              "type": "NewExpression",
              "start": 1188,
              "end": 1398,
              "callee": {
                "type": "Identifier",
                "start": 1192,
                "end": 1204,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1205,
                  "end": 1397,
                  "left": {
                    "type": "Literal",
                    "start": 1205,
                    "end": 1386,
                    "value": "#3: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[0] === 0. Actual: ",
                    "raw": "'#3: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[0] === 0. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1389,
                    "end": 1397,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1390,
                      "end": 1396,
                      "object": {
                        "type": "Identifier",
                        "start": 1390,
                        "end": 1393,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1394,
                        "end": 1395,
                        "value": 0,
                        "raw": "0",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1403,
      "end": 1644,
      "test": {
        "type": "BinaryExpression",
        "start": 1407,
        "end": 1419,
        "left": {
          "type": "MemberExpression",
          "start": 1407,
          "end": 1413,
          "object": {
            "type": "Identifier",
            "start": 1407,
            "end": 1410,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1411,
            "end": 1412,
            "value": 1,
            "raw": "1",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1418,
          "end": 1419,
          "value": 1,
          "raw": "1",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1421,
        "end": 1644,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1425,
            "end": 1642,
            "argument": {
              "type": "NewExpression",
              "start": 1431,
              "end": 1641,
              "callee": {
                "type": "Identifier",
                "start": 1435,
                "end": 1447,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1448,
                  "end": 1640,
                  "left": {
                    "type": "Literal",
                    "start": 1448,
                    "end": 1629,
                    "value": "#4: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[1] === 1. Actual: ",
                    "raw": "'#4: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[1] === 1. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1632,
                    "end": 1640,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1633,
                      "end": 1639,
                      "object": {
                        "type": "Identifier",
                        "start": 1633,
                        "end": 1636,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1637,
                        "end": 1638,
                        "value": 1,
                        "raw": "1",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1646,
      "end": 1887,
      "test": {
        "type": "BinaryExpression",
        "start": 1650,
        "end": 1662,
        "left": {
          "type": "MemberExpression",
          "start": 1650,
          "end": 1656,
          "object": {
            "type": "Identifier",
            "start": 1650,
            "end": 1653,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1654,
            "end": 1655,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Literal",
          "start": 1661,
          "end": 1662,
          "value": 2,
          "raw": "2",
          "regex": null,
          "bigint": null
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1664,
        "end": 1887,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1668,
            "end": 1885,
            "argument": {
              "type": "NewExpression",
              "start": 1674,
              "end": 1884,
              "callee": {
                "type": "Identifier",
                "start": 1678,
                "end": 1690,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1691,
                  "end": 1883,
                  "left": {
                    "type": "Literal",
                    "start": 1691,
                    "end": 1872,
                    "value": "#5: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[2] === 2. Actual: ",
                    "raw": "'#5: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[2] === 2. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1875,
                    "end": 1883,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 1876,
                      "end": 1882,
                      "object": {
                        "type": "Identifier",
                        "start": 1876,
                        "end": 1879,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 1880,
                        "end": 1881,
                        "value": 2,
                        "raw": "2",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "start": 1889,
      "end": 2146,
      "test": {
        "type": "BinaryExpression",
        "start": 1893,
        "end": 1913,
        "left": {
          "type": "MemberExpression",
          "start": 1893,
          "end": 1899,
          "object": {
            "type": "Identifier",
            "start": 1893,
            "end": 1896,
            "name": "arr"
          },
          "property": {
            "type": "Literal",
            "start": 1897,
            "end": 1898,
            "value": 3,
            "raw": "3",
            "regex": null,
            "bigint": null
          },
          "computed": true,
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "Identifier",
          "start": 1904,
          "end": 1913,
          "name": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1915,
        "end": 2146,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1919,
            "end": 2144,
            "argument": {
              "type": "NewExpression",
              "start": 1925,
              "end": 2143,
              "callee": {
                "type": "Identifier",
                "start": 1929,
                "end": 1941,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1942,
                  "end": 2142,
                  "left": {
                    "type": "Literal",
                    "start": 1942,
                    "end": 2131,
                    "value": "#6: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[3] === undefined. Actual: ",
                    "raw": "'#6: var obj = {}; obj.slice = Array.prototype.slice; obj[0] = 0; obj[1] = 1; obj[2] = 2; obj[3] = 3; obj[4] = 4; obj.length = 5; var arr = obj.slice(-5,-2); arr[3] === undefined. Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2134,
                    "end": 2142,
                    "expression": {
                      "type": "MemberExpression",
                      "start": 2135,
                      "end": 2141,
                      "object": {
                        "type": "Identifier",
                        "start": 2135,
                        "end": 2138,
                        "name": "arr"
                      },
                      "property": {
                        "type": "Literal",
                        "start": 2139,
                        "end": 2140,
                        "value": 3,
                        "raw": "3",
                        "regex": null,
                        "bigint": null
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "sourceType": "script",
  "hashbang": null
}