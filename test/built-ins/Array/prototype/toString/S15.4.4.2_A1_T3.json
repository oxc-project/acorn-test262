{
  "type": "Program",
  "start": 0,
  "end": 3840,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 400,
      "end": 430,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 404,
          "end": 429,
          "id": {
            "type": "Identifier",
            "start": 404,
            "end": 405,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 408,
            "end": 429,
            "callee": {
              "type": "Identifier",
              "start": 412,
              "end": 417,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 418,
                "end": 420,
                "value": "",
                "raw": "\"\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 422,
                "end": 424,
                "value": "",
                "raw": "\"\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 426,
                "end": 428,
                "value": "",
                "raw": "\"\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 431,
      "end": 741,
      "test": {
        "type": "BinaryExpression",
        "start": 435,
        "end": 460,
        "left": {
          "type": "CallExpression",
          "start": 435,
          "end": 447,
          "callee": {
            "type": "MemberExpression",
            "start": 435,
            "end": 445,
            "object": {
              "type": "Identifier",
              "start": 435,
              "end": 436,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 437,
              "end": 445,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 452,
          "end": 460,
          "callee": {
            "type": "MemberExpression",
            "start": 452,
            "end": 458,
            "object": {
              "type": "Identifier",
              "start": 452,
              "end": 453,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 454,
              "end": 458,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 462,
        "end": 582,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 466,
            "end": 580,
            "argument": {
              "type": "NewExpression",
              "start": 472,
              "end": 579,
              "callee": {
                "type": "Identifier",
                "start": 476,
                "end": 488,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 489,
                  "end": 578,
                  "left": {
                    "type": "Literal",
                    "start": 489,
                    "end": 561,
                    "value": "#0.1: var x = new Array(\"\",\"\",\"\"); x.toString() === x.join(). Actual: ",
                    "raw": "'#0.1: var x = new Array(\"\",\"\",\"\"); x.toString() === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 564,
                    "end": 578,
                    "expression": {
                      "type": "CallExpression",
                      "start": 565,
                      "end": 577,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 565,
                        "end": 575,
                        "object": {
                          "type": "Identifier",
                          "start": 565,
                          "end": 566,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 567,
                          "end": 575,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 588,
        "end": 741,
        "body": [
          {
            "type": "IfStatement",
            "start": 592,
            "end": 739,
            "test": {
              "type": "BinaryExpression",
              "start": 596,
              "end": 617,
              "left": {
                "type": "CallExpression",
                "start": 596,
                "end": 608,
                "callee": {
                  "type": "MemberExpression",
                  "start": 596,
                  "end": 606,
                  "object": {
                    "type": "Identifier",
                    "start": 596,
                    "end": 597,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 598,
                    "end": 606,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 613,
                "end": 617,
                "value": ",,",
                "raw": "\",,\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 619,
              "end": 739,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 625,
                  "end": 735,
                  "argument": {
                    "type": "NewExpression",
                    "start": 631,
                    "end": 734,
                    "callee": {
                      "type": "Identifier",
                      "start": 635,
                      "end": 647,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 648,
                        "end": 733,
                        "left": {
                          "type": "Literal",
                          "start": 648,
                          "end": 716,
                          "value": "#0.2: var x = new Array(\"\",\"\",\"\"); x.toString() === \",,\". Actual: ",
                          "raw": "'#0.2: var x = new Array(\"\",\"\",\"\"); x.toString() === \",,\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 719,
                          "end": 733,
                          "expression": {
                            "type": "CallExpression",
                            "start": 720,
                            "end": 732,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 720,
                              "end": 730,
                              "object": {
                                "type": "Identifier",
                                "start": 720,
                                "end": 721,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 722,
                                "end": 730,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 743,
      "end": 779,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 747,
          "end": 778,
          "id": {
            "type": "Identifier",
            "start": 747,
            "end": 748,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 751,
            "end": 778,
            "callee": {
              "type": "Identifier",
              "start": 755,
              "end": 760,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 761,
                "end": 765,
                "value": "\\",
                "raw": "\"\\\\\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 767,
                "end": 771,
                "value": "\\",
                "raw": "\"\\\\\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 773,
                "end": 777,
                "value": "\\",
                "raw": "\"\\\\\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 780,
      "end": 1114,
      "test": {
        "type": "BinaryExpression",
        "start": 784,
        "end": 809,
        "left": {
          "type": "CallExpression",
          "start": 784,
          "end": 796,
          "callee": {
            "type": "MemberExpression",
            "start": 784,
            "end": 794,
            "object": {
              "type": "Identifier",
              "start": 784,
              "end": 785,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 786,
              "end": 794,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 801,
          "end": 809,
          "callee": {
            "type": "MemberExpression",
            "start": 801,
            "end": 807,
            "object": {
              "type": "Identifier",
              "start": 801,
              "end": 802,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 803,
              "end": 807,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 811,
        "end": 937,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 815,
            "end": 935,
            "argument": {
              "type": "NewExpression",
              "start": 821,
              "end": 934,
              "callee": {
                "type": "Identifier",
                "start": 825,
                "end": 837,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 838,
                  "end": 933,
                  "left": {
                    "type": "Literal",
                    "start": 838,
                    "end": 916,
                    "value": "#1.1: var x = new Array(\"\\\",\"\\\",\"\\\"); x.toString() === x.join(). Actual: ",
                    "raw": "'#1.1: var x = new Array(\"\\\\\",\"\\\\\",\"\\\\\"); x.toString() === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 919,
                    "end": 933,
                    "expression": {
                      "type": "CallExpression",
                      "start": 920,
                      "end": 932,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 920,
                        "end": 930,
                        "object": {
                          "type": "Identifier",
                          "start": 920,
                          "end": 921,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 922,
                          "end": 930,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 943,
        "end": 1114,
        "body": [
          {
            "type": "IfStatement",
            "start": 947,
            "end": 1112,
            "test": {
              "type": "BinaryExpression",
              "start": 951,
              "end": 978,
              "left": {
                "type": "CallExpression",
                "start": 951,
                "end": 963,
                "callee": {
                  "type": "MemberExpression",
                  "start": 951,
                  "end": 961,
                  "object": {
                    "type": "Identifier",
                    "start": 951,
                    "end": 952,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 953,
                    "end": 961,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 968,
                "end": 978,
                "value": "\\,\\,\\",
                "raw": "\"\\\\,\\\\,\\\\\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 980,
              "end": 1112,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 986,
                  "end": 1108,
                  "argument": {
                    "type": "NewExpression",
                    "start": 992,
                    "end": 1107,
                    "callee": {
                      "type": "Identifier",
                      "start": 996,
                      "end": 1008,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1009,
                        "end": 1106,
                        "left": {
                          "type": "Literal",
                          "start": 1009,
                          "end": 1089,
                          "value": "#1.2: var x = new Array(\"\\\",\"\\\",\"\\\"); x.toString() === \"\\,\\,\\\". Actual: ",
                          "raw": "'#1.2: var x = new Array(\"\\\\\",\"\\\\\",\"\\\\\"); x.toString() === \"\\\\,\\\\,\\\\\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 1092,
                          "end": 1106,
                          "expression": {
                            "type": "CallExpression",
                            "start": 1093,
                            "end": 1105,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 1093,
                              "end": 1103,
                              "object": {
                                "type": "Identifier",
                                "start": 1093,
                                "end": 1094,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 1095,
                                "end": 1103,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1116,
      "end": 1149,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1120,
          "end": 1148,
          "id": {
            "type": "Identifier",
            "start": 1120,
            "end": 1121,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 1124,
            "end": 1148,
            "callee": {
              "type": "Identifier",
              "start": 1128,
              "end": 1133,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1134,
                "end": 1137,
                "value": "&",
                "raw": "\"&\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1139,
                "end": 1142,
                "value": "&",
                "raw": "\"&\"",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1144,
                "end": 1147,
                "value": "&",
                "raw": "\"&\"",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 1150,
      "end": 1476,
      "test": {
        "type": "BinaryExpression",
        "start": 1154,
        "end": 1179,
        "left": {
          "type": "CallExpression",
          "start": 1154,
          "end": 1166,
          "callee": {
            "type": "MemberExpression",
            "start": 1154,
            "end": 1164,
            "object": {
              "type": "Identifier",
              "start": 1154,
              "end": 1155,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1156,
              "end": 1164,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 1171,
          "end": 1179,
          "callee": {
            "type": "MemberExpression",
            "start": 1171,
            "end": 1177,
            "object": {
              "type": "Identifier",
              "start": 1171,
              "end": 1172,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1173,
              "end": 1177,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1181,
        "end": 1306,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1185,
            "end": 1304,
            "argument": {
              "type": "NewExpression",
              "start": 1191,
              "end": 1303,
              "callee": {
                "type": "Identifier",
                "start": 1195,
                "end": 1207,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1208,
                  "end": 1302,
                  "left": {
                    "type": "Literal",
                    "start": 1208,
                    "end": 1285,
                    "value": "#2.1: var x = new Array(\"&\", \"&\", \"&\"); x.toString() === x.join(). Actual: ",
                    "raw": "'#2.1: var x = new Array(\"&\", \"&\", \"&\"); x.toString() === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1288,
                    "end": 1302,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1289,
                      "end": 1301,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1289,
                        "end": 1299,
                        "object": {
                          "type": "Identifier",
                          "start": 1289,
                          "end": 1290,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1291,
                          "end": 1299,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1312,
        "end": 1476,
        "body": [
          {
            "type": "IfStatement",
            "start": 1316,
            "end": 1474,
            "test": {
              "type": "BinaryExpression",
              "start": 1320,
              "end": 1344,
              "left": {
                "type": "CallExpression",
                "start": 1320,
                "end": 1332,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1320,
                  "end": 1330,
                  "object": {
                    "type": "Identifier",
                    "start": 1320,
                    "end": 1321,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1322,
                    "end": 1330,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 1337,
                "end": 1344,
                "value": "&,&,&",
                "raw": "\"&,&,&\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1346,
              "end": 1474,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1352,
                  "end": 1470,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1358,
                    "end": 1469,
                    "callee": {
                      "type": "Identifier",
                      "start": 1362,
                      "end": 1374,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1375,
                        "end": 1468,
                        "left": {
                          "type": "Literal",
                          "start": 1375,
                          "end": 1451,
                          "value": "#2.2: var x = new Array(\"&\", \"&\", \"&\"); x.toString() === \"&,&,&\". Actual: ",
                          "raw": "'#2.2: var x = new Array(\"&\", \"&\", \"&\"); x.toString() === \"&,&,&\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 1454,
                          "end": 1468,
                          "expression": {
                            "type": "CallExpression",
                            "start": 1455,
                            "end": 1467,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 1455,
                              "end": 1465,
                              "object": {
                                "type": "Identifier",
                                "start": 1455,
                                "end": 1456,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 1457,
                                "end": 1465,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1478,
      "end": 1514,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1482,
          "end": 1513,
          "id": {
            "type": "Identifier",
            "start": 1482,
            "end": 1483,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 1486,
            "end": 1513,
            "callee": {
              "type": "Identifier",
              "start": 1490,
              "end": 1495,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1496,
                "end": 1500,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1502,
                "end": 1506,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1508,
                "end": 1512,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 1515,
      "end": 1921,
      "test": {
        "type": "BinaryExpression",
        "start": 1519,
        "end": 1544,
        "left": {
          "type": "CallExpression",
          "start": 1519,
          "end": 1531,
          "callee": {
            "type": "MemberExpression",
            "start": 1519,
            "end": 1529,
            "object": {
              "type": "Identifier",
              "start": 1519,
              "end": 1520,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1521,
              "end": 1529,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 1536,
          "end": 1544,
          "callee": {
            "type": "MemberExpression",
            "start": 1536,
            "end": 1542,
            "object": {
              "type": "Identifier",
              "start": 1536,
              "end": 1537,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1538,
              "end": 1542,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1546,
        "end": 1702,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1550,
            "end": 1700,
            "argument": {
              "type": "NewExpression",
              "start": 1556,
              "end": 1699,
              "callee": {
                "type": "Identifier",
                "start": 1560,
                "end": 1572,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 1573,
                  "end": 1698,
                  "left": {
                    "type": "Literal",
                    "start": 1573,
                    "end": 1665,
                    "value": "#3.1: var x = new Array(true,true,true); x.toString(true,true,true) === x.join(). Actual: ",
                    "raw": "'#3.1: var x = new Array(true,true,true); x.toString(true,true,true) === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 1668,
                    "end": 1698,
                    "expression": {
                      "type": "CallExpression",
                      "start": 1669,
                      "end": 1697,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1669,
                        "end": 1679,
                        "object": {
                          "type": "Identifier",
                          "start": 1669,
                          "end": 1670,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1671,
                          "end": 1679,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 1680,
                          "end": 1684,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        },
                        {
                          "type": "Literal",
                          "start": 1686,
                          "end": 1690,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        },
                        {
                          "type": "Literal",
                          "start": 1692,
                          "end": 1696,
                          "value": true,
                          "raw": "true",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 1708,
        "end": 1921,
        "body": [
          {
            "type": "IfStatement",
            "start": 1712,
            "end": 1919,
            "test": {
              "type": "BinaryExpression",
              "start": 1716,
              "end": 1749,
              "left": {
                "type": "CallExpression",
                "start": 1716,
                "end": 1728,
                "callee": {
                  "type": "MemberExpression",
                  "start": 1716,
                  "end": 1726,
                  "object": {
                    "type": "Identifier",
                    "start": 1716,
                    "end": 1717,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 1718,
                    "end": 1726,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 1733,
                "end": 1749,
                "value": "true,true,true",
                "raw": "\"true,true,true\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 1751,
              "end": 1919,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 1757,
                  "end": 1915,
                  "argument": {
                    "type": "NewExpression",
                    "start": 1763,
                    "end": 1914,
                    "callee": {
                      "type": "Identifier",
                      "start": 1767,
                      "end": 1779,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 1780,
                        "end": 1913,
                        "left": {
                          "type": "Literal",
                          "start": 1780,
                          "end": 1880,
                          "value": "#3.2: var x = new Array(true,true,true); x.toString(true,true,true) === \"true,true,true\". Actual: ",
                          "raw": "'#3.2: var x = new Array(true,true,true); x.toString(true,true,true) === \"true,true,true\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 1883,
                          "end": 1913,
                          "expression": {
                            "type": "CallExpression",
                            "start": 1884,
                            "end": 1912,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 1884,
                              "end": 1894,
                              "object": {
                                "type": "Identifier",
                                "start": 1884,
                                "end": 1885,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 1886,
                                "end": 1894,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "start": 1895,
                                "end": 1899,
                                "value": true,
                                "raw": "true",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1901,
                                "end": 1905,
                                "value": true,
                                "raw": "true",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 1907,
                                "end": 1911,
                                "value": true,
                                "raw": "true",
                                "regex": null,
                                "bigint": null
                              }
                            ],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 1923,
      "end": 1959,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 1927,
          "end": 1958,
          "id": {
            "type": "Identifier",
            "start": 1927,
            "end": 1928,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 1931,
            "end": 1958,
            "callee": {
              "type": "Identifier",
              "start": 1935,
              "end": 1940,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1941,
                "end": 1945,
                "value": null,
                "raw": "null",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1947,
                "end": 1951,
                "value": null,
                "raw": "null",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1953,
                "end": 1957,
                "value": null,
                "raw": "null",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 1960,
      "end": 2342,
      "test": {
        "type": "BinaryExpression",
        "start": 1964,
        "end": 1989,
        "left": {
          "type": "CallExpression",
          "start": 1964,
          "end": 1976,
          "callee": {
            "type": "MemberExpression",
            "start": 1964,
            "end": 1974,
            "object": {
              "type": "Identifier",
              "start": 1964,
              "end": 1965,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1966,
              "end": 1974,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 1981,
          "end": 1989,
          "callee": {
            "type": "MemberExpression",
            "start": 1981,
            "end": 1987,
            "object": {
              "type": "Identifier",
              "start": 1981,
              "end": 1982,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 1983,
              "end": 1987,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 1991,
        "end": 2147,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 1995,
            "end": 2145,
            "argument": {
              "type": "NewExpression",
              "start": 2001,
              "end": 2144,
              "callee": {
                "type": "Identifier",
                "start": 2005,
                "end": 2017,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2018,
                  "end": 2143,
                  "left": {
                    "type": "Literal",
                    "start": 2018,
                    "end": 2110,
                    "value": "#4.1: var x = new Array(null,null,null); x.toString(null,null,null) === x.join(). Actual: ",
                    "raw": "'#4.1: var x = new Array(null,null,null); x.toString(null,null,null) === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2113,
                    "end": 2143,
                    "expression": {
                      "type": "CallExpression",
                      "start": 2114,
                      "end": 2142,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 2114,
                        "end": 2124,
                        "object": {
                          "type": "Identifier",
                          "start": 2114,
                          "end": 2115,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2116,
                          "end": 2124,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "start": 2125,
                          "end": 2129,
                          "value": null,
                          "raw": "null",
                          "regex": null,
                          "bigint": null
                        },
                        {
                          "type": "Literal",
                          "start": 2131,
                          "end": 2135,
                          "value": null,
                          "raw": "null",
                          "regex": null,
                          "bigint": null
                        },
                        {
                          "type": "Literal",
                          "start": 2137,
                          "end": 2141,
                          "value": null,
                          "raw": "null",
                          "regex": null,
                          "bigint": null
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 2153,
        "end": 2342,
        "body": [
          {
            "type": "IfStatement",
            "start": 2157,
            "end": 2340,
            "test": {
              "type": "BinaryExpression",
              "start": 2161,
              "end": 2182,
              "left": {
                "type": "CallExpression",
                "start": 2161,
                "end": 2173,
                "callee": {
                  "type": "MemberExpression",
                  "start": 2161,
                  "end": 2171,
                  "object": {
                    "type": "Identifier",
                    "start": 2161,
                    "end": 2162,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 2163,
                    "end": 2171,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 2178,
                "end": 2182,
                "value": ",,",
                "raw": "\",,\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 2184,
              "end": 2340,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 2190,
                  "end": 2336,
                  "argument": {
                    "type": "NewExpression",
                    "start": 2196,
                    "end": 2335,
                    "callee": {
                      "type": "Identifier",
                      "start": 2200,
                      "end": 2212,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 2213,
                        "end": 2334,
                        "left": {
                          "type": "Literal",
                          "start": 2213,
                          "end": 2301,
                          "value": "#4.2: var x = new Array(null,null,null); x.toString(null,null,null) === \",,\". Actual: ",
                          "raw": "'#4.2: var x = new Array(null,null,null); x.toString(null,null,null) === \",,\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 2304,
                          "end": 2334,
                          "expression": {
                            "type": "CallExpression",
                            "start": 2305,
                            "end": 2333,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 2305,
                              "end": 2315,
                              "object": {
                                "type": "Identifier",
                                "start": 2305,
                                "end": 2306,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 2307,
                                "end": 2315,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "start": 2316,
                                "end": 2320,
                                "value": null,
                                "raw": "null",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 2322,
                                "end": 2326,
                                "value": null,
                                "raw": "null",
                                "regex": null,
                                "bigint": null
                              },
                              {
                                "type": "Literal",
                                "start": 2328,
                                "end": 2332,
                                "value": null,
                                "raw": "null",
                                "regex": null,
                                "bigint": null
                              }
                            ],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 2344,
      "end": 2395,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2348,
          "end": 2394,
          "id": {
            "type": "Identifier",
            "start": 2348,
            "end": 2349,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 2352,
            "end": 2394,
            "callee": {
              "type": "Identifier",
              "start": 2356,
              "end": 2361,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 2362,
                "end": 2371,
                "name": "undefined"
              },
              {
                "type": "Identifier",
                "start": 2373,
                "end": 2382,
                "name": "undefined"
              },
              {
                "type": "Identifier",
                "start": 2384,
                "end": 2393,
                "name": "undefined"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 2396,
      "end": 2868,
      "test": {
        "type": "BinaryExpression",
        "start": 2400,
        "end": 2425,
        "left": {
          "type": "CallExpression",
          "start": 2400,
          "end": 2412,
          "callee": {
            "type": "MemberExpression",
            "start": 2400,
            "end": 2410,
            "object": {
              "type": "Identifier",
              "start": 2400,
              "end": 2401,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 2402,
              "end": 2410,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 2417,
          "end": 2425,
          "callee": {
            "type": "MemberExpression",
            "start": 2417,
            "end": 2423,
            "object": {
              "type": "Identifier",
              "start": 2417,
              "end": 2418,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 2419,
              "end": 2423,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2427,
        "end": 2628,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2431,
            "end": 2626,
            "argument": {
              "type": "NewExpression",
              "start": 2437,
              "end": 2625,
              "callee": {
                "type": "Identifier",
                "start": 2441,
                "end": 2453,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2454,
                  "end": 2624,
                  "left": {
                    "type": "Literal",
                    "start": 2454,
                    "end": 2576,
                    "value": "#5.1: var x = new Array(undefined,undefined,undefined); x.toString(undefined,undefined,undefined) === x.join(). Actual: ",
                    "raw": "'#5.1: var x = new Array(undefined,undefined,undefined); x.toString(undefined,undefined,undefined) === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 2579,
                    "end": 2624,
                    "expression": {
                      "type": "CallExpression",
                      "start": 2580,
                      "end": 2623,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 2580,
                        "end": 2590,
                        "object": {
                          "type": "Identifier",
                          "start": 2580,
                          "end": 2581,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2582,
                          "end": 2590,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 2591,
                          "end": 2600,
                          "name": "undefined"
                        },
                        {
                          "type": "Identifier",
                          "start": 2602,
                          "end": 2611,
                          "name": "undefined"
                        },
                        {
                          "type": "Identifier",
                          "start": 2613,
                          "end": 2622,
                          "name": "undefined"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 2634,
        "end": 2868,
        "body": [
          {
            "type": "IfStatement",
            "start": 2638,
            "end": 2866,
            "test": {
              "type": "BinaryExpression",
              "start": 2642,
              "end": 2663,
              "left": {
                "type": "CallExpression",
                "start": 2642,
                "end": 2654,
                "callee": {
                  "type": "MemberExpression",
                  "start": 2642,
                  "end": 2652,
                  "object": {
                    "type": "Identifier",
                    "start": 2642,
                    "end": 2643,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 2644,
                    "end": 2652,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 2659,
                "end": 2663,
                "value": ",,",
                "raw": "\",,\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 2665,
              "end": 2866,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 2671,
                  "end": 2862,
                  "argument": {
                    "type": "NewExpression",
                    "start": 2677,
                    "end": 2861,
                    "callee": {
                      "type": "Identifier",
                      "start": 2681,
                      "end": 2693,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 2694,
                        "end": 2860,
                        "left": {
                          "type": "Literal",
                          "start": 2694,
                          "end": 2812,
                          "value": "#5.2: var x = new Array(undefined,undefined,undefined); x.toString(undefined,undefined,undefined) === \",,\". Actual: ",
                          "raw": "'#5.2: var x = new Array(undefined,undefined,undefined); x.toString(undefined,undefined,undefined) === \",,\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 2815,
                          "end": 2860,
                          "expression": {
                            "type": "CallExpression",
                            "start": 2816,
                            "end": 2859,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 2816,
                              "end": 2826,
                              "object": {
                                "type": "Identifier",
                                "start": 2816,
                                "end": 2817,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 2818,
                                "end": 2826,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "start": 2827,
                                "end": 2836,
                                "name": "undefined"
                              },
                              {
                                "type": "Identifier",
                                "start": 2838,
                                "end": 2847,
                                "name": "undefined"
                              },
                              {
                                "type": "Identifier",
                                "start": 2849,
                                "end": 2858,
                                "name": "undefined"
                              }
                            ],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 2870,
      "end": 2918,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 2874,
          "end": 2917,
          "id": {
            "type": "Identifier",
            "start": 2874,
            "end": 2875,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 2878,
            "end": 2917,
            "callee": {
              "type": "Identifier",
              "start": 2882,
              "end": 2887,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 2888,
                "end": 2896,
                "name": "Infinity"
              },
              {
                "type": "Identifier",
                "start": 2898,
                "end": 2906,
                "name": "Infinity"
              },
              {
                "type": "Identifier",
                "start": 2908,
                "end": 2916,
                "name": "Infinity"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 2919,
      "end": 3421,
      "test": {
        "type": "BinaryExpression",
        "start": 2923,
        "end": 2948,
        "left": {
          "type": "CallExpression",
          "start": 2923,
          "end": 2935,
          "callee": {
            "type": "MemberExpression",
            "start": 2923,
            "end": 2933,
            "object": {
              "type": "Identifier",
              "start": 2923,
              "end": 2924,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 2925,
              "end": 2933,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 2940,
          "end": 2948,
          "callee": {
            "type": "MemberExpression",
            "start": 2940,
            "end": 2946,
            "object": {
              "type": "Identifier",
              "start": 2940,
              "end": 2941,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 2942,
              "end": 2946,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 2950,
        "end": 3142,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 2954,
            "end": 3140,
            "argument": {
              "type": "NewExpression",
              "start": 2960,
              "end": 3139,
              "callee": {
                "type": "Identifier",
                "start": 2964,
                "end": 2976,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 2977,
                  "end": 3138,
                  "left": {
                    "type": "Literal",
                    "start": 2977,
                    "end": 3093,
                    "value": "#6.1: var x = new Array(Infinity,Infinity,Infinity); x.toString(Infinity,Infinity,Infinity) === x.join(). Actual: ",
                    "raw": "'#6.1: var x = new Array(Infinity,Infinity,Infinity); x.toString(Infinity,Infinity,Infinity) === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3096,
                    "end": 3138,
                    "expression": {
                      "type": "CallExpression",
                      "start": 3097,
                      "end": 3137,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 3097,
                        "end": 3107,
                        "object": {
                          "type": "Identifier",
                          "start": 3097,
                          "end": 3098,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 3099,
                          "end": 3107,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 3108,
                          "end": 3116,
                          "name": "Infinity"
                        },
                        {
                          "type": "Identifier",
                          "start": 3118,
                          "end": 3126,
                          "name": "Infinity"
                        },
                        {
                          "type": "Identifier",
                          "start": 3128,
                          "end": 3136,
                          "name": "Infinity"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 3148,
        "end": 3421,
        "body": [
          {
            "type": "IfStatement",
            "start": 3152,
            "end": 3419,
            "test": {
              "type": "BinaryExpression",
              "start": 3156,
              "end": 3201,
              "left": {
                "type": "CallExpression",
                "start": 3156,
                "end": 3168,
                "callee": {
                  "type": "MemberExpression",
                  "start": 3156,
                  "end": 3166,
                  "object": {
                    "type": "Identifier",
                    "start": 3156,
                    "end": 3157,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 3158,
                    "end": 3166,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 3173,
                "end": 3201,
                "value": "Infinity,Infinity,Infinity",
                "raw": "\"Infinity,Infinity,Infinity\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 3203,
              "end": 3419,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 3209,
                  "end": 3415,
                  "argument": {
                    "type": "NewExpression",
                    "start": 3215,
                    "end": 3414,
                    "callee": {
                      "type": "Identifier",
                      "start": 3219,
                      "end": 3231,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 3232,
                        "end": 3413,
                        "left": {
                          "type": "Literal",
                          "start": 3232,
                          "end": 3368,
                          "value": "#6.2: var x = new Array(Infinity,Infinity,Infinity); x.toString(Infinity,Infinity,Infinity) === \"Infinity,Infinity,Infinity\". Actual: ",
                          "raw": "'#6.2: var x = new Array(Infinity,Infinity,Infinity); x.toString(Infinity,Infinity,Infinity) === \"Infinity,Infinity,Infinity\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 3371,
                          "end": 3413,
                          "expression": {
                            "type": "CallExpression",
                            "start": 3372,
                            "end": 3412,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 3372,
                              "end": 3382,
                              "object": {
                                "type": "Identifier",
                                "start": 3372,
                                "end": 3373,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 3374,
                                "end": 3382,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "start": 3383,
                                "end": 3391,
                                "name": "Infinity"
                              },
                              {
                                "type": "Identifier",
                                "start": 3393,
                                "end": 3401,
                                "name": "Infinity"
                              },
                              {
                                "type": "Identifier",
                                "start": 3403,
                                "end": 3411,
                                "name": "Infinity"
                              }
                            ],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 3423,
      "end": 3456,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 3427,
          "end": 3455,
          "id": {
            "type": "Identifier",
            "start": 3427,
            "end": 3428,
            "name": "x"
          },
          "init": {
            "type": "NewExpression",
            "start": 3431,
            "end": 3455,
            "callee": {
              "type": "Identifier",
              "start": 3435,
              "end": 3440,
              "name": "Array"
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 3441,
                "end": 3444,
                "name": "NaN"
              },
              {
                "type": "Identifier",
                "start": 3446,
                "end": 3449,
                "name": "NaN"
              },
              {
                "type": "Identifier",
                "start": 3451,
                "end": 3454,
                "name": "NaN"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "start": 3457,
      "end": 3839,
      "test": {
        "type": "BinaryExpression",
        "start": 3461,
        "end": 3486,
        "left": {
          "type": "CallExpression",
          "start": 3461,
          "end": 3473,
          "callee": {
            "type": "MemberExpression",
            "start": 3461,
            "end": 3471,
            "object": {
              "type": "Identifier",
              "start": 3461,
              "end": 3462,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 3463,
              "end": 3471,
              "name": "toString"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        },
        "operator": "!==",
        "right": {
          "type": "CallExpression",
          "start": 3478,
          "end": 3486,
          "callee": {
            "type": "MemberExpression",
            "start": 3478,
            "end": 3484,
            "object": {
              "type": "Identifier",
              "start": 3478,
              "end": 3479,
              "name": "x"
            },
            "property": {
              "type": "Identifier",
              "start": 3480,
              "end": 3484,
              "name": "join"
            },
            "computed": false,
            "optional": false
          },
          "arguments": [],
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "start": 3488,
        "end": 3635,
        "body": [
          {
            "type": "ThrowStatement",
            "start": 3492,
            "end": 3633,
            "argument": {
              "type": "NewExpression",
              "start": 3498,
              "end": 3632,
              "callee": {
                "type": "Identifier",
                "start": 3502,
                "end": 3514,
                "name": "Test262Error"
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "start": 3515,
                  "end": 3631,
                  "left": {
                    "type": "Literal",
                    "start": 3515,
                    "end": 3601,
                    "value": "#7.1: var x = new Array(NaN,NaN,NaN); x.toString(NaN,NaN,NaN) === x.join(). Actual: ",
                    "raw": "'#7.1: var x = new Array(NaN,NaN,NaN); x.toString(NaN,NaN,NaN) === x.join(). Actual: '",
                    "regex": null,
                    "bigint": null
                  },
                  "operator": "+",
                  "right": {
                    "type": "ParenthesizedExpression",
                    "start": 3604,
                    "end": 3631,
                    "expression": {
                      "type": "CallExpression",
                      "start": 3605,
                      "end": 3630,
                      "callee": {
                        "type": "MemberExpression",
                        "start": 3605,
                        "end": 3615,
                        "object": {
                          "type": "Identifier",
                          "start": 3605,
                          "end": 3606,
                          "name": "x"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 3607,
                          "end": 3615,
                          "name": "toString"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 3616,
                          "end": 3619,
                          "name": "NaN"
                        },
                        {
                          "type": "Identifier",
                          "start": 3621,
                          "end": 3624,
                          "name": "NaN"
                        },
                        {
                          "type": "Identifier",
                          "start": 3626,
                          "end": 3629,
                          "name": "NaN"
                        }
                      ],
                      "optional": false
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "alternate": {
        "type": "BlockStatement",
        "start": 3641,
        "end": 3839,
        "body": [
          {
            "type": "IfStatement",
            "start": 3645,
            "end": 3837,
            "test": {
              "type": "BinaryExpression",
              "start": 3649,
              "end": 3679,
              "left": {
                "type": "CallExpression",
                "start": 3649,
                "end": 3661,
                "callee": {
                  "type": "MemberExpression",
                  "start": 3649,
                  "end": 3659,
                  "object": {
                    "type": "Identifier",
                    "start": 3649,
                    "end": 3650,
                    "name": "x"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 3651,
                    "end": 3659,
                    "name": "toString"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [],
                "optional": false
              },
              "operator": "!==",
              "right": {
                "type": "Literal",
                "start": 3666,
                "end": 3679,
                "value": "NaN,NaN,NaN",
                "raw": "\"NaN,NaN,NaN\"",
                "regex": null,
                "bigint": null
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 3681,
              "end": 3837,
              "body": [
                {
                  "type": "ThrowStatement",
                  "start": 3687,
                  "end": 3833,
                  "argument": {
                    "type": "NewExpression",
                    "start": 3693,
                    "end": 3832,
                    "callee": {
                      "type": "Identifier",
                      "start": 3697,
                      "end": 3709,
                      "name": "Test262Error"
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "start": 3710,
                        "end": 3831,
                        "left": {
                          "type": "Literal",
                          "start": 3710,
                          "end": 3801,
                          "value": "#7.2: var x = new Array(NaN,NaN,NaN); x.toString(NaN,NaN,NaN) === \"NaN,NaN,NaN\". Actual: ",
                          "raw": "'#7.2: var x = new Array(NaN,NaN,NaN); x.toString(NaN,NaN,NaN) === \"NaN,NaN,NaN\". Actual: '",
                          "regex": null,
                          "bigint": null
                        },
                        "operator": "+",
                        "right": {
                          "type": "ParenthesizedExpression",
                          "start": 3804,
                          "end": 3831,
                          "expression": {
                            "type": "CallExpression",
                            "start": 3805,
                            "end": 3830,
                            "callee": {
                              "type": "MemberExpression",
                              "start": 3805,
                              "end": 3815,
                              "object": {
                                "type": "Identifier",
                                "start": 3805,
                                "end": 3806,
                                "name": "x"
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 3807,
                                "end": 3815,
                                "name": "toString"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "start": 3816,
                                "end": 3819,
                                "name": "NaN"
                              },
                              {
                                "type": "Identifier",
                                "start": 3821,
                                "end": 3824,
                                "name": "NaN"
                              },
                              {
                                "type": "Identifier",
                                "start": 3826,
                                "end": 3829,
                                "name": "NaN"
                              }
                            ],
                            "optional": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}