{
  "type": "Program",
  "start": 0,
  "end": 552,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 259,
      "end": 280,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 263,
          "end": 279,
          "id": {
            "type": "Identifier",
            "start": 263,
            "end": 271,
            "name": "accessed"
          },
          "init": {
            "type": "Literal",
            "start": 274,
            "end": 279,
            "value": false,
            "raw": "false",
            "regex": null,
            "bigint": null
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "start": 282,
      "end": 358,
      "id": {
        "type": "Identifier",
        "start": 291,
        "end": 301,
        "name": "callbackfn"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 302,
          "end": 305,
          "name": "val"
        },
        {
          "type": "Identifier",
          "start": 307,
          "end": 310,
          "name": "idx"
        },
        {
          "type": "Identifier",
          "start": 312,
          "end": 315,
          "name": "obj"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 317,
        "end": 358,
        "body": [
          {
            "type": "ExpressionStatement",
            "start": 321,
            "end": 337,
            "expression": {
              "type": "AssignmentExpression",
              "start": 321,
              "end": 336,
              "operator": "=",
              "left": {
                "type": "Identifier",
                "start": 321,
                "end": 329,
                "name": "accessed"
              },
              "right": {
                "type": "Literal",
                "start": 332,
                "end": 336,
                "value": true,
                "raw": "true",
                "regex": null,
                "bigint": null
              }
            }
          },
          {
            "type": "ReturnStatement",
            "start": 340,
            "end": 356,
            "argument": {
              "type": "BinaryExpression",
              "start": 347,
              "end": 355,
              "left": {
                "type": "Identifier",
                "start": 347,
                "end": 350,
                "name": "val"
              },
              "operator": ">",
              "right": {
                "type": "Literal",
                "start": 353,
                "end": 355,
                "value": 10,
                "raw": "10",
                "regex": null,
                "bigint": null
              }
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 360,
      "end": 404,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 364,
          "end": 403,
          "id": {
            "type": "Identifier",
            "start": 364,
            "end": 367,
            "name": "obj"
          },
          "init": {
            "type": "ObjectExpression",
            "start": 370,
            "end": 403,
            "properties": [
              {
                "type": "Property",
                "start": 374,
                "end": 379,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Literal",
                  "start": 374,
                  "end": 375,
                  "value": 0,
                  "raw": "0",
                  "regex": null,
                  "bigint": null
                },
                "value": {
                  "type": "Literal",
                  "start": 377,
                  "end": 379,
                  "value": 12,
                  "raw": "12",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 383,
                "end": 401,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 383,
                  "end": 389,
                  "name": "length"
                },
                "value": {
                  "type": "Literal",
                  "start": 391,
                  "end": 401,
                  "value": 4294967296,
                  "raw": "4294967296",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 406,
      "end": 512,
      "expression": {
        "type": "CallExpression",
        "start": 406,
        "end": 511,
        "callee": {
          "type": "Identifier",
          "start": 406,
          "end": 412,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 413,
            "end": 455,
            "callee": {
              "type": "MemberExpression",
              "start": 413,
              "end": 438,
              "object": {
                "type": "MemberExpression",
                "start": 413,
                "end": 433,
                "object": {
                  "type": "MemberExpression",
                  "start": 413,
                  "end": 428,
                  "object": {
                    "type": "Identifier",
                    "start": 413,
                    "end": 418,
                    "name": "Array"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 419,
                    "end": 428,
                    "name": "prototype"
                  },
                  "computed": false,
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "start": 429,
                  "end": 433,
                  "name": "some"
                },
                "computed": false,
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "start": 434,
                "end": 438,
                "name": "call"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Identifier",
                "start": 439,
                "end": 442,
                "name": "obj"
              },
              {
                "type": "Identifier",
                "start": 444,
                "end": 454,
                "name": "callbackfn"
              }
            ],
            "optional": false
          },
          {
            "type": "Literal",
            "start": 457,
            "end": 510,
            "value": "Array.prototype.some.call(obj, callbackfn) !== true",
            "raw": "'Array.prototype.some.call(obj, callbackfn) !== true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 513,
      "end": 551,
      "expression": {
        "type": "CallExpression",
        "start": 513,
        "end": 550,
        "callee": {
          "type": "Identifier",
          "start": 513,
          "end": 519,
          "name": "assert"
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 520,
            "end": 528,
            "name": "accessed"
          },
          {
            "type": "Literal",
            "start": 530,
            "end": 549,
            "value": "accessed !== true",
            "raw": "'accessed !== true'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}