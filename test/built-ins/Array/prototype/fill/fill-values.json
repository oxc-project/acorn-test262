{
  "type": "Program",
  "start": 0,
  "end": 1175,
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 898,
      "end": 963,
      "expression": {
        "type": "CallExpression",
        "start": 898,
        "end": 962,
        "callee": {
          "type": "MemberExpression",
          "start": 898,
          "end": 917,
          "object": {
            "type": "Identifier",
            "start": 898,
            "end": 904,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 905,
            "end": 917,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 918,
            "end": 928,
            "callee": {
              "type": "MemberExpression",
              "start": 918,
              "end": 925,
              "object": {
                "type": "ArrayExpression",
                "start": 918,
                "end": 920,
                "elements": []
              },
              "property": {
                "type": "Identifier",
                "start": 921,
                "end": 925,
                "name": "fill"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 926,
                "end": 927,
                "value": 8,
                "raw": "8",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 930,
            "end": 932,
            "elements": []
          },
          {
            "type": "Literal",
            "start": 934,
            "end": 961,
            "value": "[].fill(8) must return []",
            "raw": "'[].fill(8) must return []'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 965,
      "end": 1076,
      "expression": {
        "type": "CallExpression",
        "start": 965,
        "end": 1075,
        "callee": {
          "type": "MemberExpression",
          "start": 965,
          "end": 984,
          "object": {
            "type": "Identifier",
            "start": 965,
            "end": 971,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 972,
            "end": 984,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 985,
            "end": 998,
            "callee": {
              "type": "MemberExpression",
              "start": 985,
              "end": 996,
              "object": {
                "type": "ArrayExpression",
                "start": 985,
                "end": 991,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 986,
                    "end": 987,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 989,
                    "end": 990,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "start": 992,
                "end": 996,
                "name": "fill"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 1000,
            "end": 1022,
            "elements": [
              {
                "type": "Identifier",
                "start": 1001,
                "end": 1010,
                "name": "undefined"
              },
              {
                "type": "Identifier",
                "start": 1012,
                "end": 1021,
                "name": "undefined"
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1024,
            "end": 1074,
            "value": "[0, 0].fill() must return [undefined, undefined]",
            "raw": "'[0, 0].fill() must return [undefined, undefined]'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 1078,
      "end": 1174,
      "expression": {
        "type": "CallExpression",
        "start": 1078,
        "end": 1173,
        "callee": {
          "type": "MemberExpression",
          "start": 1078,
          "end": 1097,
          "object": {
            "type": "Identifier",
            "start": 1078,
            "end": 1084,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 1085,
            "end": 1097,
            "name": "compareArray"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "CallExpression",
            "start": 1098,
            "end": 1115,
            "callee": {
              "type": "MemberExpression",
              "start": 1098,
              "end": 1112,
              "object": {
                "type": "ArrayExpression",
                "start": 1098,
                "end": 1107,
                "elements": [
                  {
                    "type": "Literal",
                    "start": 1099,
                    "end": 1100,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 1102,
                    "end": 1103,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  },
                  {
                    "type": "Literal",
                    "start": 1105,
                    "end": 1106,
                    "value": 0,
                    "raw": "0",
                    "regex": null,
                    "bigint": null
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "start": 1108,
                "end": 1112,
                "name": "fill"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 1113,
                "end": 1114,
                "value": 8,
                "raw": "8",
                "regex": null,
                "bigint": null
              }
            ],
            "optional": false
          },
          {
            "type": "ArrayExpression",
            "start": 1117,
            "end": 1126,
            "elements": [
              {
                "type": "Literal",
                "start": 1118,
                "end": 1119,
                "value": 8,
                "raw": "8",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1121,
                "end": 1122,
                "value": 8,
                "raw": "8",
                "regex": null,
                "bigint": null
              },
              {
                "type": "Literal",
                "start": 1124,
                "end": 1125,
                "value": 8,
                "raw": "8",
                "regex": null,
                "bigint": null
              }
            ]
          },
          {
            "type": "Literal",
            "start": 1130,
            "end": 1171,
            "value": "[0, 0, 0].fill(8) must return [8, 8, 8]",
            "raw": "'[0, 0, 0].fill(8) must return [8, 8, 8]'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}