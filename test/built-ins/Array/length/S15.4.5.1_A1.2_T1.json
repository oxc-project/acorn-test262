{
  "type": "Program",
  "start": 0,
  "end": 792,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 498,
      "end": 520,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 502,
          "end": 519,
          "id": {
            "type": "Identifier",
            "start": 502,
            "end": 503,
            "name": "x"
          },
          "init": {
            "type": "ArrayExpression",
            "start": 506,
            "end": 519,
            "elements": [
              {
                "type": "Literal",
                "start": 507,
                "end": 508,
                "value": 0,
                "raw": "0",
                "regex": null,
                "bigint": null
              },
              null,
              {
                "type": "Literal",
                "start": 512,
                "end": 513,
                "value": 2,
                "raw": "2",
                "regex": null,
                "bigint": null
              },
              null,
              {
                "type": "Literal",
                "start": 517,
                "end": 518,
                "value": 4,
                "raw": "4",
                "regex": null,
                "bigint": null
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "start": 521,
      "end": 534,
      "expression": {
        "type": "AssignmentExpression",
        "start": 521,
        "end": 533,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 521,
          "end": 529,
          "object": {
            "type": "Identifier",
            "start": 521,
            "end": 522,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 523,
            "end": 529,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 532,
          "end": 533,
          "value": 4,
          "raw": "4",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 535,
      "end": 621,
      "expression": {
        "type": "CallExpression",
        "start": 535,
        "end": 620,
        "callee": {
          "type": "MemberExpression",
          "start": 535,
          "end": 551,
          "object": {
            "type": "Identifier",
            "start": 535,
            "end": 541,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 542,
            "end": 551,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 552,
            "end": 556,
            "object": {
              "type": "Identifier",
              "start": 552,
              "end": 553,
              "name": "x"
            },
            "property": {
              "type": "Literal",
              "start": 554,
              "end": 555,
              "value": 4,
              "raw": "4",
              "regex": null,
              "bigint": null
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 558,
            "end": 567,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 569,
            "end": 619,
            "value": "The value of x[4] is expected to equal undefined",
            "raw": "'The value of x[4] is expected to equal undefined'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 623,
      "end": 636,
      "expression": {
        "type": "AssignmentExpression",
        "start": 623,
        "end": 635,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 623,
          "end": 631,
          "object": {
            "type": "Identifier",
            "start": 623,
            "end": 624,
            "name": "x"
          },
          "property": {
            "type": "Identifier",
            "start": 625,
            "end": 631,
            "name": "length"
          },
          "computed": false,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 634,
          "end": 635,
          "value": 3,
          "raw": "3",
          "regex": null,
          "bigint": null
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 637,
      "end": 723,
      "expression": {
        "type": "CallExpression",
        "start": 637,
        "end": 722,
        "callee": {
          "type": "MemberExpression",
          "start": 637,
          "end": 653,
          "object": {
            "type": "Identifier",
            "start": 637,
            "end": 643,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 644,
            "end": 653,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 654,
            "end": 658,
            "object": {
              "type": "Identifier",
              "start": 654,
              "end": 655,
              "name": "x"
            },
            "property": {
              "type": "Literal",
              "start": 656,
              "end": 657,
              "value": 3,
              "raw": "3",
              "regex": null,
              "bigint": null
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Identifier",
            "start": 660,
            "end": 669,
            "name": "undefined"
          },
          {
            "type": "Literal",
            "start": 671,
            "end": 721,
            "value": "The value of x[3] is expected to equal undefined",
            "raw": "'The value of x[3] is expected to equal undefined'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 724,
      "end": 791,
      "expression": {
        "type": "CallExpression",
        "start": 724,
        "end": 790,
        "callee": {
          "type": "MemberExpression",
          "start": 724,
          "end": 740,
          "object": {
            "type": "Identifier",
            "start": 724,
            "end": 730,
            "name": "assert"
          },
          "property": {
            "type": "Identifier",
            "start": 731,
            "end": 740,
            "name": "sameValue"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 741,
            "end": 745,
            "object": {
              "type": "Identifier",
              "start": 741,
              "end": 742,
              "name": "x"
            },
            "property": {
              "type": "Literal",
              "start": 743,
              "end": 744,
              "value": 2,
              "raw": "2",
              "regex": null,
              "bigint": null
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 747,
            "end": 748,
            "value": 2,
            "raw": "2",
            "regex": null,
            "bigint": null
          },
          {
            "type": "Literal",
            "start": 750,
            "end": 789,
            "value": "The value of x[2] is expected to be 2",
            "raw": "'The value of x[2] is expected to be 2'",
            "regex": null,
            "bigint": null
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}