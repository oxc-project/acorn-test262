{
  "type": "Program",
  "start": 0,
  "end": 1182,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 927,
      "end": 1025,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 933,
          "end": 1024,
          "id": {
            "type": "Identifier",
            "start": 933,
            "end": 950,
            "name": "IteratorPrototype"
          },
          "init": {
            "type": "CallExpression",
            "start": 953,
            "end": 1024,
            "callee": {
              "type": "MemberExpression",
              "start": 953,
              "end": 974,
              "object": {
                "type": "Identifier",
                "start": 953,
                "end": 959,
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "start": 960,
                "end": 974,
                "name": "getPrototypeOf"
              },
              "computed": false,
              "optional": false
            },
            "arguments": [
              {
                "type": "CallExpression",
                "start": 978,
                "end": 1022,
                "callee": {
                  "type": "MemberExpression",
                  "start": 978,
                  "end": 999,
                  "object": {
                    "type": "Identifier",
                    "start": 978,
                    "end": 984,
                    "name": "Object"
                  },
                  "property": {
                    "type": "Identifier",
                    "start": 985,
                    "end": 999,
                    "name": "getPrototypeOf"
                  },
                  "computed": false,
                  "optional": false
                },
                "arguments": [
                  {
                    "type": "CallExpression",
                    "start": 1000,
                    "end": 1021,
                    "callee": {
                      "type": "MemberExpression",
                      "start": 1000,
                      "end": 1019,
                      "object": {
                        "type": "ArrayExpression",
                        "start": 1000,
                        "end": 1002,
                        "elements": []
                      },
                      "property": {
                        "type": "MemberExpression",
                        "start": 1003,
                        "end": 1018,
                        "object": {
                          "type": "Identifier",
                          "start": 1003,
                          "end": 1009,
                          "name": "Symbol"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1010,
                          "end": 1018,
                          "name": "iterator"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "computed": true,
                      "optional": false
                    },
                    "arguments": [],
                    "optional": false
                  }
                ],
                "optional": false
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "start": 1027,
      "end": 1181,
      "expression": {
        "type": "CallExpression",
        "start": 1027,
        "end": 1180,
        "callee": {
          "type": "Identifier",
          "start": 1027,
          "end": 1041,
          "name": "verifyProperty"
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "start": 1042,
            "end": 1075,
            "object": {
              "type": "Identifier",
              "start": 1042,
              "end": 1059,
              "name": "IteratorPrototype"
            },
            "property": {
              "type": "MemberExpression",
              "start": 1060,
              "end": 1074,
              "object": {
                "type": "Identifier",
                "start": 1060,
                "end": 1066,
                "name": "Symbol"
              },
              "property": {
                "type": "Identifier",
                "start": 1067,
                "end": 1074,
                "name": "dispose"
              },
              "computed": false,
              "optional": false
            },
            "computed": true,
            "optional": false
          },
          {
            "type": "Literal",
            "start": 1077,
            "end": 1083,
            "value": "name",
            "raw": "'name'",
            "regex": null,
            "bigint": null
          },
          {
            "type": "ObjectExpression",
            "start": 1085,
            "end": 1179,
            "properties": [
              {
                "type": "Property",
                "start": 1089,
                "end": 1114,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1089,
                  "end": 1094,
                  "name": "value"
                },
                "value": {
                  "type": "Literal",
                  "start": 1096,
                  "end": 1114,
                  "value": "[Symbol.dispose]",
                  "raw": "'[Symbol.dispose]'",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 1118,
                "end": 1133,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1118,
                  "end": 1126,
                  "name": "writable"
                },
                "value": {
                  "type": "Literal",
                  "start": 1128,
                  "end": 1133,
                  "value": false,
                  "raw": "false",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 1137,
                "end": 1154,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1137,
                  "end": 1147,
                  "name": "enumerable"
                },
                "value": {
                  "type": "Literal",
                  "start": 1149,
                  "end": 1154,
                  "value": false,
                  "raw": "false",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "start": 1158,
                "end": 1176,
                "method": false,
                "shorthand": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1158,
                  "end": 1170,
                  "name": "configurable"
                },
                "value": {
                  "type": "Literal",
                  "start": 1172,
                  "end": 1176,
                  "value": true,
                  "raw": "true",
                  "regex": null,
                  "bigint": null
                },
                "kind": "init"
              }
            ]
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script",
  "hashbang": null
}