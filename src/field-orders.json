{
  "AccessorProperty": ["decorators", "key", "typeAnnotation", "value", "computed", "static", "override", "definite", "accessibility", "declare", "optional", "readonly"],
  "ArrayExpression": ["elements"],
  "ArrayPattern": ["decorators", "elements", "optional", "typeAnnotation"],
  "ArrowFunctionExpression": ["expression", "async", "typeParameters", "params", "returnType", "body", "id", "generator"],
  "AssignmentExpression": ["operator", "left", "right"],
  "AssignmentPattern": ["decorators", "left", "right", "optional", "typeAnnotation"],
  "AwaitExpression": ["argument"],
  "BinaryExpression": ["left", "operator", "right"],
  "BindingPattern": ["kind", "typeAnnotation", "optional"],
  "BlockStatement": ["body"],
  "BreakStatement": ["label"],
  "CallExpression": ["callee", "typeArguments", "arguments", "optional"],
  "CatchClause": ["param", "body"],
  "CatchParameter": ["pattern"],
  "ChainExpression": ["expression"],
  "ClassBody": ["body"],
  "ClassDeclaration": ["decorators", "id", "typeParameters", "superClass", "superTypeArguments", "implements", "body", "abstract", "declare"],
  "ClassExpression": ["decorators", "id", "typeParameters", "superClass", "superTypeArguments", "implements", "body", "abstract", "declare"],
  "ConditionalExpression": ["test", "consequent", "alternate"],
  "ContinueStatement": ["label"],
  "DebuggerStatement": [],
  "Decorator": ["expression"],
  "DoWhileStatement": ["body", "test"],
  "Elision": [],
  "EmptyStatement": [],
  "ExportAllDeclaration": ["exported", "source", "attributes", "exportKind"],
  "ExportDefaultDeclaration": ["declaration", "exportKind"],
  "ExportNamedDeclaration": ["declaration", "specifiers", "source", "exportKind", "attributes"],
  "ExportSpecifier": ["local", "exported", "exportKind"],
  "ExpressionStatement": ["expression", "directive"],
  "ForInStatement": ["left", "right", "body"],
  "ForOfStatement": ["await", "left", "right", "body"],
  "ForStatement": ["init", "test", "update", "body"],
  "FormalParameter": ["decorators", "pattern"],
  "FormalParameters": ["kind", "items"],
  "FunctionDeclaration": ["id", "generator", "async", "declare", "typeParameters", "params", "returnType", "body", "expression"],
  "FunctionExpression": ["id", "generator", "async", "declare", "typeParameters", "params", "returnType", "body", "expression"],
  "Hashbang": ["value"],
  "Identifier": ["decorators", "name", "optional", "typeAnnotation"],
  "IfStatement": ["test", "consequent", "alternate"],
  "ImportAttribute": ["key", "value"],
  "ImportDeclaration": ["specifiers", "source", "phase", "attributes", "importKind"],
  "ImportDefaultSpecifier": ["local"],
  "ImportExpression": ["source", "options", "phase"],
  "ImportNamespaceSpecifier": ["local"],
  "ImportSpecifier": ["imported", "local", "importKind"],
  "JSXAttribute": ["name", "value"],
  "JSXClosingElement": ["name"],
  "JSXClosingFragment": [],
  "JSXElement": ["openingElement", "children", "closingElement"],
  "JSXEmptyExpression": [],
  "JSXExpressionContainer": ["expression"],
  "JSXFragment": ["openingFragment", "children", "closingFragment"],
  "JSXIdentifier": ["name"],
  "JSXMemberExpression": ["object", "property"],
  "JSXNamespacedName": ["namespace", "name"],
  "JSXOpeningElement": ["name", "typeArguments", "attributes", "selfClosing"],
  "JSXOpeningFragment": ["attributes", "selfClosing"],
  "JSXSpreadAttribute": ["argument"],
  "JSXSpreadChild": ["expression"],
  "JSXText": ["value", "raw"],
  "LabeledStatement": ["label", "body"],
  "Literal": ["value", "raw", "bigint", "regex"],
  "LogicalExpression": ["left", "operator", "right"],
  "MemberExpression": ["object", "property", "optional", "computed"],
  "MetaProperty": ["meta", "property"],
  "MethodDefinition": ["decorators", "key", "value", "kind", "computed", "static", "override", "optional", "accessibility"],
  "NewExpression": ["callee", "typeArguments", "arguments"],
  "ObjectExpression": ["properties"],
  "ObjectPattern": ["decorators", "properties", "optional", "typeAnnotation"],
  "ParenthesizedExpression": ["expression"],
  "PrivateIdentifier": ["name"],
  "Program": ["body", "sourceType", "hashbang"],
  "Property": ["kind", "key", "value", "method", "shorthand", "computed", "optional"],
  "PropertyDefinition": ["decorators", "key", "typeAnnotation", "value", "computed", "static", "declare", "override", "optional", "definite", "readonly", "accessibility"],
  "RegExp": ["pattern", "flags"],
  "RegExpPattern": ["pattern"],
  "RestElement": ["decorators", "argument", "optional", "typeAnnotation", "value"],
  "ReturnStatement": ["argument"],
  "SequenceExpression": ["expressions"],
  "SpreadElement": ["argument"],
  "StaticBlock": ["body"],
  "Super": [],
  "SwitchCase": ["test", "consequent"],
  "SwitchStatement": ["discriminant", "cases"],
  "TSAbstractAccessorProperty": ["decorators", "key", "typeAnnotation", "value", "computed", "static", "override", "definite", "accessibility", "declare", "optional", "readonly"],
  "TSAbstractMethodDefinition": ["decorators", "key", "value", "kind", "computed", "static", "override", "optional", "accessibility"],
  "TSAbstractPropertyDefinition": ["decorators", "key", "typeAnnotation", "value", "computed", "static", "declare", "override", "optional", "definite", "readonly", "accessibility"],
  "TSAnyKeyword": [],
  "TSArrayType": ["elementType"],
  "TSAsExpression": ["expression", "typeAnnotation"],
  "TSBigIntKeyword": [],
  "TSBooleanKeyword": [],
  "TSCallSignatureDeclaration": ["typeParameters", "params", "returnType"],
  "TSClassImplements": ["expression", "typeArguments"],
  "TSConditionalType": ["checkType", "extendsType", "trueType", "falseType"],
  "TSConstructSignatureDeclaration": ["typeParameters", "params", "returnType"],
  "TSConstructorType": ["abstract", "typeParameters", "params", "returnType"],
  "TSDeclareFunction": ["id", "generator", "async", "declare", "typeParameters", "params", "returnType", "body", "expression"],
  "TSEmptyBodyFunctionExpression": ["id", "generator", "async", "declare", "typeParameters", "params", "returnType", "body", "expression"],
  "TSEnumBody": ["members"],
  "TSEnumDeclaration": ["id", "body", "const", "declare"],
  "TSEnumMember": ["id", "initializer", "computed"],
  "TSExportAssignment": ["expression"],
  "TSExternalModuleReference": ["expression"],
  "TSFunctionType": ["typeParameters", "params", "returnType"],
  "TSImportEqualsDeclaration": ["id", "moduleReference", "importKind"],
  "TSImportType": ["argument", "options", "qualifier", "typeArguments"],
  "TSIndexSignature": ["parameters", "typeAnnotation", "readonly", "static", "accessibility"],
  "TSIndexedAccessType": ["objectType", "indexType"],
  "TSInferType": ["typeParameter"],
  "TSInstantiationExpression": ["expression", "typeArguments"],
  "TSInterfaceBody": ["body"],
  "TSInterfaceDeclaration": ["id", "typeParameters", "extends", "body", "declare"],
  "TSInterfaceHeritage": ["expression", "typeArguments"],
  "TSIntersectionType": ["types"],
  "TSIntrinsicKeyword": [],
  "TSJSDocNonNullableType": ["typeAnnotation", "postfix"],
  "TSJSDocNullableType": ["typeAnnotation", "postfix"],
  "TSJSDocUnknownType": [],
  "TSLiteralType": ["literal"],
  "TSMappedType": ["key", "constraint", "nameType", "typeAnnotation", "optional", "readonly"],
  "TSMethodSignature": ["key", "computed", "optional", "kind", "typeParameters", "params", "returnType", "accessibility", "readonly", "static"],
  "TSModuleBlock": ["body"],
  "TSModuleDeclaration": ["id", "body", "kind", "declare", "global"],
  "TSNamedTupleMember": ["label", "elementType", "optional"],
  "TSNamespaceExportDeclaration": ["id"],
  "TSNeverKeyword": [],
  "TSNonNullExpression": ["expression"],
  "TSNullKeyword": [],
  "TSNumberKeyword": [],
  "TSObjectKeyword": [],
  "TSOptionalType": ["typeAnnotation"],
  "TSParenthesizedType": ["typeAnnotation"],
  "TSPropertySignature": ["computed", "optional", "readonly", "key", "typeAnnotation", "accessibility", "static"],
  "TSQualifiedName": ["left", "right"],
  "TSRestType": ["typeAnnotation"],
  "TSSatisfiesExpression": ["expression", "typeAnnotation"],
  "TSStringKeyword": [],
  "TSSymbolKeyword": [],
  "TSTemplateLiteralType": ["quasis", "types"],
  "TSThisType": [],
  "TSTupleType": ["elementTypes"],
  "TSTypeAliasDeclaration": ["id", "typeParameters", "typeAnnotation", "declare"],
  "TSTypeAnnotation": ["typeAnnotation"],
  "TSTypeAssertion": ["typeAnnotation", "expression"],
  "TSTypeLiteral": ["members"],
  "TSTypeOperator": ["operator", "typeAnnotation"],
  "TSTypeParameter": ["name", "constraint", "default", "in", "out", "const"],
  "TSTypeParameterDeclaration": ["params"],
  "TSTypeParameterInstantiation": ["params"],
  "TSTypePredicate": ["parameterName", "asserts", "typeAnnotation"],
  "TSTypeQuery": ["exprName", "typeArguments"],
  "TSTypeReference": ["typeName", "typeArguments"],
  "TSUndefinedKeyword": [],
  "TSUnionType": ["types"],
  "TSUnknownKeyword": [],
  "TSVoidKeyword": [],
  "TaggedTemplateExpression": ["tag", "typeArguments", "quasi"],
  "TemplateElement": ["value", "tail"],
  "TemplateElementValue": ["raw", "cooked"],
  "TemplateLiteral": ["quasis", "expressions"],
  "ThisExpression": [],
  "ThrowStatement": ["argument"],
  "TryStatement": ["block", "handler", "finalizer"],
  "UnaryExpression": ["operator", "argument", "prefix"],
  "UpdateExpression": ["operator", "prefix", "argument"],
  "V8IntrinsicExpression": ["name", "arguments"],
  "VariableDeclaration": ["kind", "declarations", "declare"],
  "VariableDeclarator": ["id", "init", "definite"],
  "WhileStatement": ["test", "body"],
  "WithClause": ["attributes"],
  "WithStatement": ["object", "body"],
  "YieldExpression": ["delegate", "argument"]
}
